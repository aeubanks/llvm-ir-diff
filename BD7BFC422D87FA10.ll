; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/siod/slib.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/siod/slib.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.ucontext_t = type { i64, ptr, %struct.stack_t, %struct.mcontext_t, %struct.__sigset_t, %struct._libc_fpstate, [4 x i64] }
%struct.stack_t = type { ptr, i32, i64 }
%struct.mcontext_t = type { [23 x i64], ptr, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%struct.obj = type { i16, i16, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { ptr, ptr }
%struct.catch_frame = type { ptr, ptr, [1 x %struct.__jmp_buf_tag], ptr }
%struct.repl_hooks = type { ptr, ptr, ptr, ptr }
%struct.gen_printio = type { ptr, ptr, ptr }
%struct.timeval = type { i64, i64 }
%struct.tms = type { i64, i64, i64, i64 }
%struct.rcsp_puts = type { ptr, ptr }
%struct.user_type_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.gc_protected = type { ptr, i64, ptr }
%struct.gen_readio = type { ptr, ptr, ptr }

@.str = private unnamed_addr constant [13 x i8] c"3.5 5-MAY-97\00", align 1
@nheaps = dso_local local_unnamed_addr global i64 2, align 8
@heap_size = dso_local local_unnamed_addr global i64 5000, align 8
@gc_status_flag = dso_local local_unnamed_addr global i64 1, align 8
@init_file = dso_local local_unnamed_addr global ptr null, align 8
@tkbuffer = dso_local local_unnamed_addr global ptr null, align 8
@gc_kind_copying = dso_local local_unnamed_addr global i64 0, align 8
@gc_cells_allocated = dso_local local_unnamed_addr global i64 0, align 8
@stack_start_ptr = dso_local local_unnamed_addr global ptr null, align 8
@errjmp_ok = dso_local local_unnamed_addr global i64 0, align 8
@nointerrupt = dso_local local_unnamed_addr global i64 1, align 8
@interrupt_differed = dso_local local_unnamed_addr global i64 0, align 8
@oblistvar = dso_local global ptr null, align 8
@sym_t = dso_local global ptr null, align 8
@eof_val = dso_local global ptr null, align 8
@sym_errobj = dso_local global ptr null, align 8
@sym_catchall = dso_local global ptr null, align 8
@sym_progn = dso_local global ptr null, align 8
@sym_lambda = dso_local global ptr null, align 8
@sym_quote = dso_local global ptr null, align 8
@sym_dot = dso_local global ptr null, align 8
@sym_after_gc = dso_local global ptr null, align 8
@sym_eval_history_ptr = dso_local global ptr null, align 8
@unbound_marker = dso_local global ptr null, align 8
@obarray_dim = dso_local local_unnamed_addr global i64 100, align 8
@catch_framep = dso_local local_unnamed_addr global ptr null, align 8
@repl_puts = dso_local local_unnamed_addr global ptr null, align 8
@repl_read = dso_local local_unnamed_addr global ptr null, align 8
@repl_eval = dso_local local_unnamed_addr global ptr null, align 8
@repl_print = dso_local local_unnamed_addr global ptr null, align 8
@inums_dim = dso_local local_unnamed_addr global i64 256, align 8
@user_types = dso_local local_unnamed_addr global ptr null, align 8
@user_tc_next = dso_local local_unnamed_addr global i64 50, align 8
@protected_registers = dso_local local_unnamed_addr global ptr null, align 8
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@user_ch_readm = dso_local local_unnamed_addr global ptr @.str.1, align 8
@user_te_readm = dso_local local_unnamed_addr global ptr @.str.1, align 8
@user_readm = dso_local local_unnamed_addr global ptr null, align 8
@user_readt = dso_local local_unnamed_addr global ptr null, align 8
@fatal_exit_hook = dso_local local_unnamed_addr global ptr null, align 8
@stack_limit_ptr = dso_local local_unnamed_addr global ptr null, align 8
@stack_size = dso_local local_unnamed_addr global i64 50000, align 8
@siod_verbose_level = dso_local local_unnamed_addr global i64 4, align 8
@.str.2 = private unnamed_addr constant [20 x i8] c"/usr/local/lib/siod\00", align 1
@siod_lib = dso_local local_unnamed_addr global ptr @.str.2, align 8
@process_cla.siod_lib_set = internal unnamed_addr global i1 false, align 4
@.str.3 = private unnamed_addr constant [9 x i8] c"SIOD_LIB\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"bad arg: %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"Welcome to SIOD, Scheme In One Defun, Version %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [61 x i8] c"%ld heaps. size = %ld cells, %ld bytes. %ld inums. GC is %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"stop and copy\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"mark and sweep\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"heaps[0] at %p, heaps[1] at %p\0A\00", align 1
@heaps = dso_local local_unnamed_addr global ptr null, align 8
@.str.11 = private unnamed_addr constant [16 x i8] c"heaps[0] at %p\0A\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"floating point exception\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"control-c interrupt\00", align 1
@repl_driver.osigint = internal unnamed_addr global ptr null, align 8
@repl_driver.osigfpe = internal unnamed_addr global ptr null, align 8
@errjmp = dso_local global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16
@repl_c_string_print_len = internal unnamed_addr global i64 0, align 8
@repl_c_string_out = internal unnamed_addr global ptr null, align 8
@repl_c_string_arg = internal unnamed_addr global ptr null, align 8
@repl_c_string_flag = internal unnamed_addr global i1 false, align 8
@stdout = external local_unnamed_addr global ptr, align 8
@heap = dso_local local_unnamed_addr global ptr null, align 8
@heap_end = dso_local local_unnamed_addr global ptr null, align 8
@.str.15 = private unnamed_addr constant [53 x i8] c"GC took %g seconds, %ld compressed to %ld, %ld free\0A\00", align 1
@old_heap_used = dso_local local_unnamed_addr global i64 0, align 8
@heap_org = dso_local local_unnamed_addr global ptr null, align 8
@.str.16 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@gc_time_taken = dso_local local_unnamed_addr global double 0.000000e+00, align 8
@inside_err = internal unnamed_addr global i1 false, align 8
@.str.17 = private unnamed_addr constant [11 x i8] c"ERROR: %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"ERROR: %s (errobj %s)\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"ERROR: %s (see errobj)\0A\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"BUG. Reached impossible case\00", align 1
@.str.23 = private unnamed_addr constant [52 x i8] c"the currently assigned stack limit has been exceded\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"Stack_size = %ld bytes, [%p,%p]\0A\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"not a symbol or string\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"ran out of storage\00", align 1
@freelist = dso_local local_unnamed_addr global ptr null, align 8
@.str.27 = private unnamed_addr constant [11 x i8] c"wta to car\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"wta to cdr\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"wta to setcar\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"wta to setcdr\00", align 1
@inums = dso_local local_unnamed_addr global ptr null, align 8
@.str.31 = private unnamed_addr constant [17 x i8] c"wta(1st) to plus\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"wta(2nd) to plus\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"wta(1st) to times\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"wta(2nd) to times\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"wta(1st) to difference\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"wta(2nd) to difference\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"wta(1st) to quotient\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"wta(2nd) to quotient\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"wta to abs\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"wta to sqrt\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"wta(1st) to greaterp\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"wta(2nd) to greaterp\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"wta(1st) to lessp\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"wta(2nd) to lessp\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"wta(1st) to max\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"wta(2nd) to max\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"wta(1st) to min\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"wta(2nd) to min\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"unbound variable\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"not a symbol\00", align 1
@.str.51 = private unnamed_addr constant [39 x i8] c"failed to allocate storage from system\00", align 1
@obarray = dso_local local_unnamed_addr global ptr null, align 8
@.str.52 = private unnamed_addr constant [24 x i8] c"invalid number of heaps\00", align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"**unbound-marker**\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"eof\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"let-internal-macro\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"let*\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"let*-macro\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"letrec\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"letrec-macro\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"errobj\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"begin\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"lambda\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.68 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"*after-gc*\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"*eval-history-ptr*\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"improper list to assq\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"type number out of range\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"ran out of user type codes\00", align 1
@.str.74 = private unnamed_addr constant [23 x i8] c"[allocating heap %ld]\0A\00", align 1
@save_regs_gc_mark = dso_local global %struct.ucontext_t zeroinitializer, align 8
@gc_rt = dso_local local_unnamed_addr global double 0.000000e+00, align 8
@gc_cells_collected = dso_local local_unnamed_addr global i64 0, align 8
@.str.76 = private unnamed_addr constant [47 x i8] c"[GC took %g cpu seconds, %ld cells collected]\0A\00", align 1
@.str.77 = private unnamed_addr constant [62 x i8] c"cannot perform operation with stop-and-copy GC mode. Use -g0\0A\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"garbage collection is on\0A\00", align 1
@.str.79 = private unnamed_addr constant [27 x i8] c"garbage collection is off\0A\00", align 1
@.str.80 = private unnamed_addr constant [24 x i8] c"%ld allocated %ld free\0A\00", align 1
@.str.81 = private unnamed_addr constant [28 x i8] c"garbage collection verbose\0A\00", align 1
@.str.82 = private unnamed_addr constant [27 x i8] c"garbage collection silent\0A\00", align 1
@.str.83 = private unnamed_addr constant [39 x i8] c"%ld/%ld heaps, %ld allocated %ld free\0A\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"bad syntax argument list\00", align 1
@.str.85 = private unnamed_addr constant [14 x i8] c"damaged frame\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"too few arguments\00", align 1
@.str.87 = private unnamed_addr constant [12 x i8] c"damaged env\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"closure code type not valid\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"bad function\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c"cannot be applied\00", align 1
@.str.91 = private unnamed_addr constant [27 x i8] c"have eval, dont know apply\00", align 1
@.str.92 = private unnamed_addr constant [26 x i8] c"wta(non-symbol) to setvar\00", align 1
@.str.93 = private unnamed_addr constant [26 x i8] c"wta(non-symbol) to define\00", align 1
@.str.94 = private unnamed_addr constant [30 x i8] c"no *catch found with this tag\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"set!\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"let-internal\00", align 1
@.str.97 = private unnamed_addr constant [30 x i8] c"wta(non-symbol) to symbolconc\00", align 1
@.str.98 = private unnamed_addr constant [27 x i8] c"symbolconc buffer overflow\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"subr_0\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"subr_1\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"subr_2\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"subr_2n\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"subr_3\00", align 1
@.str.104 = private unnamed_addr constant [7 x i8] c"subr_4\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"subr_5\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"lsubr\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"fsubr\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"msubr\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.110 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str.111 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.112 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c" . \00", align 1
@.str.114 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"#<%s \00", align 1
@.str.118 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.119 = private unnamed_addr constant [11 x i8] c"#<CLOSURE \00", align 1
@.str.120 = private unnamed_addr constant [17 x i8] c"#<UNKNOWN %d %p>\00", align 1
@stdin = external local_unnamed_addr global ptr, align 8
@.str.122 = private unnamed_addr constant [24 x i8] c"end of file inside read\00", align 1
@.str.123 = private unnamed_addr constant [23 x i8] c"unexpected close paren\00", align 1
@.str.124 = private unnamed_addr constant [20 x i8] c"+internal-backquote\00", align 1
@.str.125 = private unnamed_addr constant [23 x i8] c"+internal-comma-atsign\00", align 1
@.str.126 = private unnamed_addr constant [20 x i8] c"+internal-comma-dot\00", align 1
@.str.127 = private unnamed_addr constant [16 x i8] c"+internal-comma\00", align 1
@.str.128 = private unnamed_addr constant [8 x i8] c"()'`,;\22\00", align 1
@.str.129 = private unnamed_addr constant [28 x i8] c"token larger than TKBUFFERN\00", align 1
@.str.130 = private unnamed_addr constant [24 x i8] c"end of file inside list\00", align 1
@.str.131 = private unnamed_addr constant [20 x i8] c"missing close paren\00", align 1
@.str.132 = private unnamed_addr constant [16 x i8] c"could not open \00", align 1
@.str.133 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.134 = private unnamed_addr constant [11 x i8] c"not a file\00", align 1
@.str.135 = private unnamed_addr constant [8 x i8] c"parser:\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c".scm\00", align 1
@.str.137 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.138 = private unnamed_addr constant [9 x i8] c"loading \00", align 1
@.str.139 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"done.\0A\00", align 1
@.str.141 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"-loaded*\00", align 1
@.str.143 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.144 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.145 = private unnamed_addr constant [27 x i8] c"bad argument to save-forms\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"appending\00", align 1
@.str.147 = private unnamed_addr constant [7 x i8] c"saving\00", align 1
@.str.148 = private unnamed_addr constant [11 x i8] c" forms to \00", align 1
@.str.149 = private unnamed_addr constant [8 x i8] c"#<FILE \00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c" %p\00", align 1
@.str.151 = private unnamed_addr constant [15 x i8] c"file is closed\00", align 1
@last_c_errmsg.serrmsg = internal global [100 x i8] zeroinitializer, align 16
@.str.152 = private unnamed_addr constant [9 x i8] c"errno %d\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"cons\00", align 1
@.str.154 = private unnamed_addr constant [4 x i8] c"car\00", align 1
@.str.155 = private unnamed_addr constant [4 x i8] c"cdr\00", align 1
@.str.156 = private unnamed_addr constant [9 x i8] c"set-car!\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c"set-cdr!\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.159 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.162 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.164 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.165 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.167 = private unnamed_addr constant [4 x i8] c"eq?\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"eqv?\00", align 1
@.str.169 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"assq\00", align 1
@.str.171 = private unnamed_addr constant [5 x i8] c"delq\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.173 = private unnamed_addr constant [12 x i8] c"parser_read\00", align 1
@.str.174 = private unnamed_addr constant [25 x i8] c"*parser_read.scm-loaded*\00", align 1
@.str.175 = private unnamed_addr constant [8 x i8] c"eof-val\00", align 1
@.str.176 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"prin1\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"apply\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"define\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.182 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.184 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.185 = private unnamed_addr constant [7 x i8] c"*catch\00", align 1
@.str.186 = private unnamed_addr constant [7 x i8] c"*throw\00", align 1
@.str.187 = private unnamed_addr constant [8 x i8] c"apropos\00", align 1
@.str.188 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.189 = private unnamed_addr constant [10 x i8] c"copy-list\00", align 1
@.str.190 = private unnamed_addr constant [10 x i8] c"gc-status\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"gc\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"pair?\00", align 1
@.str.195 = private unnamed_addr constant [8 x i8] c"symbol?\00", align 1
@.str.196 = private unnamed_addr constant [8 x i8] c"number?\00", align 1
@.str.197 = private unnamed_addr constant [14 x i8] c"symbol-bound?\00", align 1
@.str.198 = private unnamed_addr constant [13 x i8] c"symbol-value\00", align 1
@.str.199 = private unnamed_addr constant [18 x i8] c"set-symbol-value!\00", align 1
@.str.200 = private unnamed_addr constant [16 x i8] c"the-environment\00", align 1
@.str.201 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.202 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.203 = private unnamed_addr constant [6 x i8] c"null?\00", align 1
@.str.204 = private unnamed_addr constant [11 x i8] c"env-lookup\00", align 1
@.str.205 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.206 = private unnamed_addr constant [11 x i8] c"symbolconc\00", align 1
@.str.207 = private unnamed_addr constant [11 x i8] c"save-forms\00", align 1
@.str.208 = private unnamed_addr constant [6 x i8] c"fopen\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"fclose\00", align 1
@.str.210 = private unnamed_addr constant [5 x i8] c"getc\00", align 1
@.str.211 = private unnamed_addr constant [7 x i8] c"ungetc\00", align 1
@.str.212 = private unnamed_addr constant [5 x i8] c"putc\00", align 1
@.str.213 = private unnamed_addr constant [5 x i8] c"puts\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"ftell\00", align 1
@.str.215 = private unnamed_addr constant [6 x i8] c"fseek\00", align 1
@.str.216 = private unnamed_addr constant [13 x i8] c"parse-number\00", align 1
@.str.217 = private unnamed_addr constant [14 x i8] c"%%stack-limit\00", align 1
@.str.218 = private unnamed_addr constant [7 x i8] c"intern\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"%%closure\00", align 1
@.str.220 = private unnamed_addr constant [15 x i8] c"%%closure-code\00", align 1
@.str.221 = private unnamed_addr constant [14 x i8] c"%%closure-env\00", align 1
@.str.222 = private unnamed_addr constant [9 x i8] c"nreverse\00", align 1
@.str.223 = private unnamed_addr constant [14 x i8] c"allocate-heap\00", align 1
@.str.224 = private unnamed_addr constant [8 x i8] c"gc-info\00", align 1
@.str.225 = private unnamed_addr constant [8 x i8] c"runtime\00", align 1
@.str.226 = private unnamed_addr constant [9 x i8] c"realtime\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"caar\00", align 1
@.str.228 = private unnamed_addr constant [5 x i8] c"cadr\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"cdar\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"cddr\00", align 1
@.str.231 = private unnamed_addr constant [5 x i8] c"rand\00", align 1
@.str.232 = private unnamed_addr constant [6 x i8] c"srand\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"last-c-error\00", align 1
@.str.234 = private unnamed_addr constant [18 x i8] c"os-classification\00", align 1
@.str.235 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.236 = private unnamed_addr constant [9 x i8] c"invalid\0A\00", align 1
@.str.237 = private unnamed_addr constant [29 x i8] c"repl_c_string_print overflow\00", align 1
@.str.238 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.239 = private unnamed_addr constant [15 x i8] c"*slib-version*\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"$Id$\00", align 1
@str = private unnamed_addr constant [49 x i8] c"(C) Copyright 1988-1994 Paradigm Associates Inc.\00", align 1
@str.241 = private unnamed_addr constant [14 x i8] c"[starting GC]\00", align 1
@str.242 = private unnamed_addr constant [52 x i8] c"FATAL ERROR DURING STARTUP OR CRITICAL CODE SECTION\00", align 1
@switch.table.lprin1g = private unnamed_addr constant [18 x ptr] [ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.103, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.104, ptr @.str.105, ptr @.str.102], align 8

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local nonnull ptr @siod_version() local_unnamed_addr #0 {
entry:
  ret ptr @.str
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @process_cla(i32 noundef %argc, ptr nocapture noundef readonly %argv, i32 noundef %warnflag) local_unnamed_addr #1 {
entry:
  %.b = load i1, ptr @process_cla.siod_lib_set, align 4
  br i1 %.b, label %if.end4, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call ptr @getenv(ptr noundef nonnull @.str.3) #33
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.then
  store ptr %call, ptr @siod_lib, align 8, !tbaa !5
  store i1 true, ptr @process_cla.siod_lib_set, align 4
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.then2, %entry
  %cmp113 = icmp sgt i32 %argc, 1
  br i1 %cmp113, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end4
  %tobool15.not = icmp eq i32 %warnflag, 0
  %wide.trip.count = zext i32 %argc to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds ptr, ptr %argv, i64 %indvars.iv
  %0 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %call5 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #34
  %cmp6 = icmp ult i64 %call5, 2
  br i1 %cmp6, label %for.inc, label %if.end8

if.end8:                                          ; preds = %for.body
  %1 = load i8, ptr %0, align 1, !tbaa !9
  %cmp12.not = icmp eq i8 %1, 45
  br i1 %cmp12.not, label %if.end21, label %if.then14

if.then14:                                        ; preds = %if.end8
  br i1 %tobool15.not, label %for.inc, label %if.then16

if.then16:                                        ; preds = %if.then14
  %call19 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4, ptr noundef nonnull %0)
  br label %for.inc

if.end21:                                         ; preds = %if.end8
  %arrayidx24 = getelementptr inbounds i8, ptr %0, i64 1
  %2 = load i8, ptr %arrayidx24, align 1, !tbaa !9
  %conv25 = sext i8 %2 to i32
  switch i32 %conv25, label %sw.default [
    i32 108, label %sw.bb
    i32 104, label %sw.bb29
    i32 111, label %sw.bb43
    i32 105, label %sw.bb48
    i32 110, label %sw.bb52
    i32 103, label %sw.bb57
    i32 115, label %sw.bb62
    i32 118, label %sw.bb67
  ]

sw.bb:                                            ; preds = %if.end21
  %arrayidx28 = getelementptr inbounds i8, ptr %0, i64 2
  store ptr %arrayidx28, ptr @siod_lib, align 8, !tbaa !5
  br label %for.inc

sw.bb29:                                          ; preds = %if.end21
  %arrayidx32 = getelementptr inbounds i8, ptr %0, i64 2
  %call.i = tail call i64 @strtol(ptr nocapture noundef nonnull %arrayidx32, ptr noundef null, i32 noundef 10) #33
  store i64 %call.i, ptr @heap_size, align 8, !tbaa !10
  %3 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx36 = getelementptr inbounds i8, ptr %3, i64 2
  %call37 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %arrayidx36, i32 noundef 58) #34
  %tobool38.not = icmp eq ptr %call37, null
  br i1 %tobool38.not, label %for.inc, label %if.then39

if.then39:                                        ; preds = %sw.bb29
  %arrayidx40 = getelementptr inbounds i8, ptr %call37, i64 1
  %call.i107 = tail call i64 @strtol(ptr nocapture noundef nonnull %arrayidx40, ptr noundef null, i32 noundef 10) #33
  store i64 %call.i107, ptr @nheaps, align 8, !tbaa !10
  br label %for.inc

sw.bb43:                                          ; preds = %if.end21
  %arrayidx46 = getelementptr inbounds i8, ptr %0, i64 2
  %call.i108 = tail call i64 @strtol(ptr nocapture noundef nonnull %arrayidx46, ptr noundef null, i32 noundef 10) #33
  store i64 %call.i108, ptr @obarray_dim, align 8, !tbaa !10
  br label %for.inc

sw.bb48:                                          ; preds = %if.end21
  %arrayidx51 = getelementptr inbounds i8, ptr %0, i64 2
  store ptr %arrayidx51, ptr @init_file, align 8, !tbaa !5
  br label %for.inc

sw.bb52:                                          ; preds = %if.end21
  %arrayidx55 = getelementptr inbounds i8, ptr %0, i64 2
  %call.i109 = tail call i64 @strtol(ptr nocapture noundef nonnull %arrayidx55, ptr noundef null, i32 noundef 10) #33
  store i64 %call.i109, ptr @inums_dim, align 8, !tbaa !10
  br label %for.inc

sw.bb57:                                          ; preds = %if.end21
  %arrayidx60 = getelementptr inbounds i8, ptr %0, i64 2
  %call.i110 = tail call i64 @strtol(ptr nocapture noundef nonnull %arrayidx60, ptr noundef null, i32 noundef 10) #33
  store i64 %call.i110, ptr @gc_kind_copying, align 8, !tbaa !10
  br label %for.inc

sw.bb62:                                          ; preds = %if.end21
  %arrayidx65 = getelementptr inbounds i8, ptr %0, i64 2
  %call.i111 = tail call i64 @strtol(ptr nocapture noundef nonnull %arrayidx65, ptr noundef null, i32 noundef 10) #33
  store i64 %call.i111, ptr @stack_size, align 8, !tbaa !10
  br label %for.inc

sw.bb67:                                          ; preds = %if.end21
  %arrayidx70 = getelementptr inbounds i8, ptr %0, i64 2
  %call.i112 = tail call i64 @strtol(ptr nocapture noundef nonnull %arrayidx70, ptr noundef null, i32 noundef 10) #33
  store i64 %call.i112, ptr @siod_verbose_level, align 8, !tbaa !10
  br label %for.inc

sw.default:                                       ; preds = %if.end21
  br i1 %tobool15.not, label %for.inc, label %if.then73

if.then73:                                        ; preds = %sw.default
  %call76 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4, ptr noundef nonnull %0)
  br label %for.inc

for.inc:                                          ; preds = %sw.bb, %sw.bb43, %sw.bb48, %sw.bb52, %sw.bb57, %sw.bb62, %sw.bb67, %if.then39, %sw.bb29, %if.then73, %sw.default, %if.then14, %if.then16, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !12

for.end:                                          ; preds = %for.inc, %if.end4
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind memory(read)
declare noundef ptr @getenv(ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind uwtable
define dso_local void @print_welcome() local_unnamed_addr #1 {
entry:
  %0 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp = icmp sgt i64 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, ptr noundef nonnull @.str)
  %puts = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @print_hs_1() local_unnamed_addr #1 {
entry:
  %0 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp = icmp sgt i64 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64, ptr @nheaps, align 8, !tbaa !10
  %2 = load i64, ptr @heap_size, align 8, !tbaa !10
  %mul = mul i64 %2, 24
  %3 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp1 = icmp eq i64 %4, 1
  %cond = select i1 %cmp1, ptr @.str.8, ptr @.str.9
  %call = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7, i64 noundef %1, i64 noundef %2, i64 noundef %mul, i64 noundef %3, ptr noundef nonnull %cond)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @print_hs_2() local_unnamed_addr #1 {
entry:
  %0 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp = icmp sgt i64 %0, 1
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %1 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp1 = icmp eq i64 %1, 1
  %2 = load ptr, ptr @heaps, align 8, !tbaa !5
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %arrayidx3 = getelementptr inbounds ptr, ptr %2, i64 1
  %4 = load ptr, ptr %arrayidx3, align 8, !tbaa !5
  %call = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10, ptr noundef %3, ptr noundef %4)
  br label %if.end6

if.else:                                          ; preds = %if.then
  %call5 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.11, ptr noundef %3)
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.else, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i64 @no_interrupt(i64 noundef %n) local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 %n, ptr @nointerrupt, align 8, !tbaa !10
  %cmp = icmp eq i64 %n, 0
  %1 = load i64, ptr @interrupt_differed, align 8
  %cmp1 = icmp eq i64 %1, 1
  %or.cond = select i1 %cmp, i1 %cmp1, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 %0
}

; Function Attrs: nounwind uwtable
define dso_local void @err_ctrl_c() local_unnamed_addr #6 {
entry:
  %call = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @handle_sigfpe(i32 %sig) #6 {
entry:
  %call = tail call ptr @signal(i32 noundef 8, ptr noundef nonnull @handle_sigfpe) #33
  %call1 = tail call ptr @err(ptr noundef nonnull @.str.12, ptr noundef null)
  ret void
}

; Function Attrs: nounwind
declare ptr @signal(i32 noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define dso_local ptr @err(ptr noundef %message, ptr noundef %x) local_unnamed_addr #6 {
entry:
  %.b = load i1, ptr @inside_err, align 8
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %tobool.not = icmp eq ptr %message, null
  br i1 %tobool.not, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.end44, label %cond.end

cond.end:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp2 = icmp eq i16 %0, 1
  br i1 %cmp2, label %land.lhs.true4, label %cond.false.i118

land.lhs.true4:                                   ; preds = %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %cmp5 = icmp eq ptr %1, null
  br i1 %cmp5, label %if.end44, label %cond.end13

cond.end13:                                       ; preds = %land.lhs.true4
  %type11 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type11, align 2, !tbaa !14
  %cmp15 = icmp eq i16 %2, 13
  br i1 %cmp15, label %get_c_string.exit, label %if.end44

get_c_string.exit:                                ; preds = %cond.end13
  %data.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %data.i, align 8, !tbaa !9
  %cdr = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %cdr, align 8, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %entry, %get_c_string.exit
  %retval1.0 = phi ptr [ %x, %get_c_string.exit ], [ null, %entry ]
  %nx.0 = phi ptr [ %4, %get_c_string.exit ], [ %x, %entry ]
  %msg.0 = phi ptr [ %3, %get_c_string.exit ], [ %message, %entry ]
  %cmp.i116 = icmp eq ptr %nx.0, null
  br i1 %cmp.i116, label %if.end26.thread184, label %if.end.cond.false.i118_crit_edge

if.end.cond.false.i118_crit_edge:                 ; preds = %if.end
  %type.i117.phi.trans.insert = getelementptr inbounds %struct.obj, ptr %nx.0, i64 0, i32 1
  %.pre = load i16, ptr %type.i117.phi.trans.insert, align 2, !tbaa !14
  br label %cond.false.i118

cond.false.i118:                                  ; preds = %if.end.cond.false.i118_crit_edge, %cond.end
  %5 = phi i16 [ %.pre, %if.end.cond.false.i118_crit_edge ], [ %0, %cond.end ]
  %msg.0137 = phi ptr [ %msg.0, %if.end.cond.false.i118_crit_edge ], [ null, %cond.end ]
  %nx.0135 = phi ptr [ %nx.0, %if.end.cond.false.i118_crit_edge ], [ %x, %cond.end ]
  %retval1.0133 = phi ptr [ %retval1.0, %if.end.cond.false.i118_crit_edge ], [ null, %cond.end ]
  switch i16 %5, label %if.end26 [
    i16 3, label %if.then.i120
    i16 13, label %if.then13.i122
  ]

if.then.i120:                                     ; preds = %cond.false.i118
  %storage_as.i119 = getelementptr inbounds %struct.obj, ptr %nx.0135, i64 0, i32 2
  br label %try_get_c_string.exit

if.then13.i122:                                   ; preds = %cond.false.i118
  %data.i121 = getelementptr inbounds %struct.obj, ptr %nx.0135, i64 0, i32 2, i32 0, i32 1
  br label %try_get_c_string.exit

try_get_c_string.exit:                            ; preds = %if.then.i120, %if.then13.i122
  %data.sink.i = phi ptr [ %data.i121, %if.then13.i122 ], [ %storage_as.i119, %if.then.i120 ]
  %6 = load ptr, ptr %data.sink.i, align 8, !tbaa !9
  %tobool21.not = icmp eq ptr %6, null
  br i1 %tobool21.not, label %if.end26, label %land.lhs.true22

land.lhs.true22:                                  ; preds = %try_get_c_string.exit
  %call23 = tail call ptr @memchr(ptr noundef nonnull dereferenceable(1) %6, i32 noundef 0, i64 noundef 80) #34
  %tobool24.not = icmp eq ptr %call23, null
  %spec.store.select = select i1 %tobool24.not, ptr null, ptr %6
  br label %if.end26

if.end26:                                         ; preds = %cond.false.i118, %land.lhs.true22, %try_get_c_string.exit
  %eobj.0 = phi ptr [ %spec.store.select, %land.lhs.true22 ], [ null, %try_get_c_string.exit ], [ null, %cond.false.i118 ]
  %7 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp27 = icmp sgt i64 %7, 0
  %tobool30 = icmp ne ptr %msg.0137, null
  %or.cond = select i1 %cmp27, i1 %tobool30, i1 false
  br i1 %or.cond, label %if.else36, label %if.end44

if.end26.thread184:                               ; preds = %if.end
  %8 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp27190 = icmp sgt i64 %8, 0
  %tobool30191 = icmp ne ptr %msg.0, null
  %or.cond192 = select i1 %cmp27190, i1 %tobool30191, i1 false
  br i1 %or.cond192, label %if.then34, label %if.end44

if.then34:                                        ; preds = %if.end26.thread184
  %call35 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.17, ptr noundef nonnull %msg.0)
  br label %if.end44

if.else36:                                        ; preds = %if.end26
  %tobool37.not = icmp eq ptr %eobj.0, null
  br i1 %tobool37.not, label %if.else40, label %if.then38

if.then38:                                        ; preds = %if.else36
  %call39 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.18, ptr noundef nonnull %msg.0137, ptr noundef nonnull %eobj.0)
  br label %if.end44

if.else40:                                        ; preds = %if.else36
  %call41 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.19, ptr noundef nonnull %msg.0137)
  br label %if.end44

if.end44:                                         ; preds = %cond.end13, %land.lhs.true4, %if.end26.thread184, %land.lhs.true, %if.then34, %if.else40, %if.then38, %if.end26
  %tobool30167 = phi i1 [ true, %if.then34 ], [ true, %if.else40 ], [ true, %if.then38 ], [ %tobool30, %if.end26 ], [ false, %land.lhs.true ], [ %tobool30191, %if.end26.thread184 ], [ false, %land.lhs.true4 ], [ false, %cond.end13 ]
  %msg.0138153166 = phi ptr [ %msg.0, %if.then34 ], [ %msg.0137, %if.else40 ], [ %msg.0137, %if.then38 ], [ %msg.0137, %if.end26 ], [ null, %land.lhs.true ], [ %msg.0, %if.end26.thread184 ], [ null, %land.lhs.true4 ], [ null, %cond.end13 ]
  %nx.0136154165 = phi ptr [ null, %if.then34 ], [ %nx.0135, %if.else40 ], [ %nx.0135, %if.then38 ], [ %nx.0135, %if.end26 ], [ null, %land.lhs.true ], [ null, %if.end26.thread184 ], [ %x, %land.lhs.true4 ], [ %x, %cond.end13 ]
  %retval1.0134155164 = phi ptr [ %retval1.0, %if.then34 ], [ %retval1.0133, %if.else40 ], [ %retval1.0133, %if.then38 ], [ %retval1.0133, %if.end26 ], [ null, %land.lhs.true ], [ %retval1.0, %if.end26.thread184 ], [ null, %land.lhs.true4 ], [ null, %cond.end13 ]
  %9 = load i64, ptr @errjmp_ok, align 8, !tbaa !10
  %cmp45 = icmp eq i64 %9, 1
  br i1 %cmp45, label %if.then47, label %if.end77

if.then47:                                        ; preds = %if.end44
  store i1 true, ptr @inside_err, align 8
  %10 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %call48 = tail call ptr @setvar(ptr noundef %10, ptr noundef %nx.0136154165, ptr noundef null)
  %l.0169 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %tobool49.not170 = icmp eq ptr %l.0169, null
  br i1 %tobool49.not170, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then47
  %11 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %12 = load ptr, ptr @sym_catchall, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %l.0171 = phi ptr [ %l.0169, %for.body.lr.ph ], [ %l.0, %for.inc ]
  %13 = load ptr, ptr %l.0171, align 8, !tbaa !17
  %cmp50 = icmp eq ptr %13, %11
  %cmp53 = icmp eq ptr %13, %12
  %or.cond124 = select i1 %cmp50, i1 true, i1 %cmp53
  br i1 %or.cond124, label %if.then55, label %for.inc

if.then55:                                        ; preds = %for.body
  %cmp59.not = icmp ne ptr %retval1.0134155164, null
  %brmerge = select i1 %cmp59.not, i1 true, i1 %.b
  br i1 %brmerge, label %cond.end71, label %cond.false65

cond.false65:                                     ; preds = %if.then55
  %spec.store.select87 = select i1 %tobool30167, ptr %msg.0138153166, ptr @.str.20
  %call66 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %spec.store.select87) #34
  %call67 = tail call ptr @strcons(i64 noundef %call66, ptr noundef %spec.store.select87) #33
  %call68 = tail call ptr @cons(ptr noundef %call67, ptr noundef %nx.0136154165)
  br label %cond.end71

cond.end71:                                       ; preds = %if.then55, %cond.false65
  %cond72 = phi ptr [ %call68, %cond.false65 ], [ %retval1.0134155164, %if.then55 ]
  %retval73 = getelementptr inbounds %struct.catch_frame, ptr %l.0171, i64 0, i32 1
  store ptr %cond72, ptr %retval73, align 8, !tbaa !19
  store i64 0, ptr @nointerrupt, align 8, !tbaa !10
  store i1 false, ptr @inside_err, align 8
  %cframe = getelementptr inbounds %struct.catch_frame, ptr %l.0171, i64 0, i32 2
  tail call void @longjmp(ptr noundef nonnull %cframe, i32 noundef 2) #35
  unreachable

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.catch_frame, ptr %l.0171, i64 0, i32 3
  %l.0 = load ptr, ptr %next, align 8, !tbaa !5
  %tobool49.not = icmp eq ptr %l.0, null
  br i1 %tobool49.not, label %for.end, label %for.body, !llvm.loop !20

for.end:                                          ; preds = %for.inc, %if.then47
  store i1 false, ptr @inside_err, align 8
  %cond76 = select i1 %tobool30167, i32 1, i32 2
  tail call void @longjmp(ptr noundef nonnull @errjmp, i32 noundef %cond76) #35
  unreachable

if.end77:                                         ; preds = %if.end44
  %14 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp78 = icmp sgt i64 %14, 0
  br i1 %cmp78, label %if.then80, label %if.end82

if.then80:                                        ; preds = %if.end77
  %puts = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.242)
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %if.end77
  %15 = load ptr, ptr @fatal_exit_hook, align 8, !tbaa !5
  %tobool83.not = icmp eq ptr %15, null
  br i1 %tobool83.not, label %if.else85, label %if.then84

if.then84:                                        ; preds = %if.end82
  tail call void %15() #33
  ret ptr null

if.else85:                                        ; preds = %if.end82
  tail call void @exit(i32 noundef 10) #35
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @handle_sigint(i32 %sig) #6 {
entry:
  %call = tail call ptr @signal(i32 noundef 2, ptr noundef nonnull @handle_sigint) #33
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i64 1, ptr @interrupt_differed, align 8, !tbaa !10
  br label %if.end

if.else:                                          ; preds = %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @get_eof_val() #8 {
entry:
  %0 = load ptr, ptr @eof_val, align 8, !tbaa !5
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local i64 @repl_driver(i64 noundef %want_sigint, i64 noundef %want_init, ptr noundef readonly %h) local_unnamed_addr #6 {
entry:
  %hd = alloca %struct.repl_hooks, align 8
  %stack_start = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %hd) #33
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %stack_start) #33
  store ptr %stack_start, ptr @stack_start_ptr, align 8, !tbaa !5
  %0 = load i64, ptr @stack_size, align 8, !tbaa !10
  %idx.neg = sub i64 0, %0
  %add.ptr = getelementptr inbounds i8, ptr %stack_start, i64 %idx.neg
  store ptr %add.ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %call = call i32 @_setjmp(ptr noundef nonnull @errjmp) #36
  %cmp = icmp eq i32 %call, 2
  %tobool.not = icmp eq i64 %want_sigint, 0
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  br i1 %tobool.not, label %cleanup, label %cleanup.sink.split

if.end4:                                          ; preds = %entry
  br i1 %tobool.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end4
  %call7 = call ptr @signal(i32 noundef 2, ptr noundef nonnull @handle_sigint) #33
  store ptr %call7, ptr @repl_driver.osigint, align 8, !tbaa !5
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end4
  %call9 = call ptr @signal(i32 noundef 8, ptr noundef nonnull @handle_sigfpe) #33
  store ptr %call9, ptr @repl_driver.osigfpe, align 8, !tbaa !5
  store ptr null, ptr @catch_framep, align 8, !tbaa !5
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  store i64 0, ptr @nointerrupt, align 8, !tbaa !10
  %tobool10 = icmp ne i64 %want_init, 0
  %1 = load ptr, ptr @init_file, align 8
  %tobool11 = icmp ne ptr %1, null
  %or.cond = select i1 %tobool10, i1 %tobool11, i1 false
  %cmp13 = icmp eq i32 %call, 0
  %or.cond30 = and i1 %cmp13, %or.cond
  br i1 %or.cond30, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end8
  %call15 = call ptr @vload(ptr noundef nonnull %1, i64 noundef 0, i64 noundef 1)
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end8
  %tobool17.not = icmp eq ptr %h, null
  br i1 %tobool17.not, label %if.then18, label %if.end21

if.then18:                                        ; preds = %if.end16
  %2 = load ptr, ptr @repl_puts, align 8, !tbaa !5
  store ptr %2, ptr %hd, align 8, !tbaa !21
  %3 = load ptr, ptr @repl_read, align 8, !tbaa !5
  %repl_read = getelementptr inbounds %struct.repl_hooks, ptr %hd, i64 0, i32 1
  store ptr %3, ptr %repl_read, align 8, !tbaa !23
  %4 = load ptr, ptr @repl_eval, align 8, !tbaa !5
  %repl_eval = getelementptr inbounds %struct.repl_hooks, ptr %hd, i64 0, i32 2
  store ptr %4, ptr %repl_eval, align 8, !tbaa !24
  %5 = load ptr, ptr @repl_print, align 8, !tbaa !5
  %repl_print = getelementptr inbounds %struct.repl_hooks, ptr %hd, i64 0, i32 3
  store ptr %5, ptr %repl_print, align 8, !tbaa !25
  br label %if.end21

if.end21:                                         ; preds = %if.end16, %if.then18
  %h.sink = phi ptr [ %hd, %if.then18 ], [ %h, %if.end16 ]
  %call20 = call i64 @repl(ptr noundef nonnull %h.sink)
  br i1 %tobool.not, label %cleanup, label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end21, %if.then
  %retval.0.ph = phi i64 [ 2, %if.then ], [ 0, %if.end21 ]
  %6 = load ptr, ptr @repl_driver.osigint, align 8, !tbaa !5
  %call24 = call ptr @signal(i32 noundef 2, ptr noundef %6) #33
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end21, %if.then
  %retval.0 = phi i64 [ 2, %if.then ], [ 0, %if.end21 ], [ %retval.0.ph, %cleanup.sink.split ]
  %7 = load ptr, ptr @repl_driver.osigfpe, align 8, !tbaa !5
  %call26 = call ptr @signal(i32 noundef 8, ptr noundef %7) #33
  store ptr null, ptr @stack_start_ptr, align 8, !tbaa !5
  store ptr null, ptr @stack_limit_ptr, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %stack_start) #33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %hd) #33
  ret i64 %retval.0
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(ptr noundef) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define dso_local ptr @vload(ptr noundef %ofname, i64 noundef %cflag, i64 noundef %rflag) local_unnamed_addr #6 {
entry:
  %s.i.i = alloca %struct.gen_printio, align 8
  %buffer = alloca [512 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %buffer) #33
  %call = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %ofname, i32 noundef 124) #34
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call i64 @strtol(ptr nocapture noundef nonnull %ofname, ptr noundef null, i32 noundef 10) #33
  %arrayidx = getelementptr inbounds i8, ptr %call, i64 1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %len.0 = phi i64 [ %call.i, %if.then ], [ 0, %entry ]
  %fname.0 = phi ptr [ %arrayidx, %if.then ], [ %ofname, %entry ]
  %tobool2.not = icmp eq i64 %rflag, 0
  br i1 %tobool2.not, label %if.end35, label %if.then3

if.then3:                                         ; preds = %if.end
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %call5 = tail call noalias ptr @fopen(ptr noundef %fname.0, ptr noundef nonnull @.str.133)
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %if.else9, label %if.then7

if.then7:                                         ; preds = %if.then3
  %call8 = tail call i32 @fclose(ptr noundef nonnull %call5)
  br label %if.end32

if.else9:                                         ; preds = %if.then3
  %1 = load i8, ptr %fname.0, align 1, !tbaa !9
  %cmp.not = icmp eq i8 %1, 47
  br i1 %cmp.not, label %if.end32, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else9
  %2 = load ptr, ptr @siod_lib, align 8, !tbaa !5
  %call13 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #34
  %call14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %fname.0) #34
  %add = add i64 %call13, 1
  %add15 = add i64 %add, %call14
  %cmp16 = icmp ult i64 %add15, 512
  br i1 %cmp16, label %if.then18, label %if.end32

if.then18:                                        ; preds = %land.lhs.true
  %call19 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %buffer, ptr noundef nonnull dereferenceable(1) %2) #33
  %strlen269 = call i64 @strlen(ptr nonnull dereferenceable(1) %buffer)
  %endptr270 = getelementptr inbounds i8, ptr %buffer, i64 %strlen269
  store i16 47, ptr %endptr270, align 1
  %call23 = call ptr @strcat(ptr noundef nonnull dereferenceable(1) %buffer, ptr noundef nonnull dereferenceable(1) %fname.0) #33
  %call25 = call noalias ptr @fopen(ptr noundef nonnull %buffer, ptr noundef nonnull @.str.133)
  %tobool26.not = icmp eq ptr %call25, null
  br i1 %tobool26.not, label %if.end32, label %if.then27

if.then27:                                        ; preds = %if.then18
  %call29 = call i32 @fclose(ptr noundef nonnull %call25)
  br label %if.end32

if.end32:                                         ; preds = %if.else9, %land.lhs.true, %if.then27, %if.then18, %if.then7
  %fname.1 = phi ptr [ %fname.0, %if.then7 ], [ %buffer, %if.then27 ], [ %fname.0, %if.then18 ], [ %fname.0, %land.lhs.true ], [ %fname.0, %if.else9 ]
  %sext = shl i64 %0, 32
  %conv33 = ashr exact i64 %sext, 32
  store i64 %conv33, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %sext, 0
  %3 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i200 = icmp eq i64 %3, 1
  %or.cond.i = select i1 %cmp.i, i1 %cmp1.i200, i1 false
  br i1 %or.cond.i, label %if.then.i, label %if.end35

if.then.i:                                        ; preds = %if.end32
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end35

if.end35:                                         ; preds = %if.then.i, %if.end32, %if.end
  %fname.2 = phi ptr [ %fname.0, %if.end ], [ %fname.1, %if.end32 ], [ %fname.1, %if.then.i ]
  %4 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp36 = icmp sgt i64 %4, 2
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end35
  %5 = load ptr, ptr @stdout, align 8, !tbaa !5
  %6 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %7 = call i64 @fwrite(ptr nonnull @.str.138, i64 8, i64 1, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i = icmp eq i64 %6, 0
  %8 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i = icmp eq i64 %8, 1
  %or.cond.i.i.i = select i1 %cmp.i.i.i, i1 %cmp1.i3.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %put_st.exit

if.then.i.i.i:                                    ; preds = %if.then38
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %.pre = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %put_st.exit

put_st.exit:                                      ; preds = %if.then38, %if.then.i.i.i
  %9 = phi i64 [ %6, %if.then38 ], [ %.pre, %if.then.i.i.i ]
  %10 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i201 = call i32 @fputs(ptr %fname.2, ptr %10)
  store i64 %9, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i202 = icmp eq i64 %9, 0
  %11 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i203 = icmp eq i64 %11, 1
  %or.cond.i.i.i204 = select i1 %cmp.i.i.i202, i1 %cmp1.i3.i.i203, i1 false
  br i1 %or.cond.i.i.i204, label %if.then.i.i.i206, label %put_st.exit207

if.then.i.i.i206:                                 ; preds = %put_st.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i205 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %.pre282 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %put_st.exit207

put_st.exit207:                                   ; preds = %put_st.exit, %if.then.i.i.i206
  %12 = phi i64 [ %9, %put_st.exit ], [ %.pre282, %if.then.i.i.i206 ]
  %13 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputc268 = call i32 @fputc(i32 10, ptr %13)
  store i64 %12, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i209 = icmp eq i64 %12, 0
  %14 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i210 = icmp eq i64 %14, 1
  %or.cond.i.i.i211 = select i1 %cmp.i.i.i209, i1 %cmp1.i3.i.i210, i1 false
  br i1 %or.cond.i.i.i211, label %if.then.i.i.i213, label %if.end39

if.then.i.i.i213:                                 ; preds = %put_st.exit207
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i212 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end39

if.end39:                                         ; preds = %if.then.i.i.i213, %put_st.exit207, %if.end35
  %tobool40.not = icmp eq i64 %len.0, 0
  %cond = select i1 %tobool40.not, ptr @.str.133, ptr @.str.139
  %call.i215 = call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %fname.2, ptr noundef nonnull %cond)
  %storage_as = getelementptr inbounds %struct.obj, ptr %call.i215, i64 0, i32 2
  %15 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %cmp43274 = icmp sgt i64 %len.0, 0
  br i1 %cmp43274, label %for.body, label %for.end

for.body:                                         ; preds = %if.end39, %for.body
  %j.0275 = phi i64 [ %inc, %for.body ], [ 0, %if.end39 ]
  %call45 = call i32 @getc(ptr noundef %15)
  %inc = add nuw nsw i64 %j.0275, 1
  %exitcond.not = icmp eq i64 %inc, %len.0
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !26

for.end:                                          ; preds = %for.body, %if.end39
  store i8 0, ptr %buffer, align 16, !tbaa !9
  br label %while.cond.sink.split

while.cond.sink.split:                            ; preds = %for.end, %if.then70
  %j.1.ph = phi i64 [ %j.2.ph, %if.then70 ], [ 0, %for.end ]
  %call71 = call i32 @getc(ptr noundef %15)
  br label %while.cond

while.cond:                                       ; preds = %while.cond52, %while.cond.sink.split
  %c.0 = phi i32 [ %call71, %while.cond.sink.split ], [ %call53, %while.cond52 ]
  %j.1 = phi i64 [ %j.1.ph, %while.cond.sink.split ], [ %j.2.ph, %while.cond52 ]
  switch i32 %c.0, label %if.then76 [
    i32 59, label %while.cond52.preheader
    i32 35, label %while.cond52.preheader
    i32 -1, label %if.end78
  ]

while.cond52.preheader:                           ; preds = %while.cond, %while.cond
  br label %while.cond52.outer

while.cond52.outer:                               ; preds = %while.cond52.preheader, %if.then62
  %j.2.ph = phi i64 [ %j.1, %while.cond52.preheader ], [ %add59, %if.then62 ]
  %add59 = add nsw i64 %j.2.ph, 1
  %cmp60 = icmp ult i64 %add59, 512
  br label %while.cond52

while.cond52:                                     ; preds = %while.cond52.outer, %while.body58
  %call53 = call i32 @getc(ptr noundef %15)
  switch i32 %call53, label %while.body58 [
    i32 10, label %if.then70
    i32 -1, label %while.cond
  ], !llvm.loop !27

while.body58:                                     ; preds = %while.cond52
  br i1 %cmp60, label %if.then62, label %while.cond52, !llvm.loop !28

if.then62:                                        ; preds = %while.body58
  %conv63 = trunc i32 %call53 to i8
  %arrayidx64 = getelementptr inbounds [512 x i8], ptr %buffer, i64 0, i64 %j.2.ph
  store i8 %conv63, ptr %arrayidx64, align 1, !tbaa !9
  %arrayidx66 = getelementptr inbounds [512 x i8], ptr %buffer, i64 0, i64 %add59
  store i8 0, ptr %arrayidx66, align 1, !tbaa !9
  br label %while.cond52.outer, !llvm.loop !28

if.then70:                                        ; preds = %while.cond52
  br label %while.cond.sink.split, !llvm.loop !27

if.then76:                                        ; preds = %while.cond
  %call77 = call i32 @ungetc(i32 noundef %c.0, ptr noundef %15)
  br label %if.end78

if.end78:                                         ; preds = %while.cond, %if.then76
  %call80 = call ptr @strstr(ptr noundef nonnull dereferenceable(1) %buffer, ptr noundef nonnull dereferenceable(1) @.str.135) #34
  %tobool81.not = icmp eq ptr %call80, null
  br i1 %tobool81.not, label %if.end117, label %if.then82

if.then82:                                        ; preds = %if.end78
  %arrayidx84 = getelementptr inbounds i8, ptr %call80, i64 7
  %16 = load i8, ptr %arrayidx84, align 1, !tbaa !9
  %tobool87.not276 = icmp eq i8 %16, 0
  br i1 %tobool87.not276, label %for.end97, label %land.rhs88.lr.ph

land.rhs88.lr.ph:                                 ; preds = %if.then82
  %call89 = tail call ptr @__ctype_b_loc() #37
  %17 = load ptr, ptr %call89, align 8, !tbaa !5
  br label %land.rhs88

land.rhs88:                                       ; preds = %land.rhs88.lr.ph, %for.inc96
  %18 = phi i8 [ %16, %land.rhs88.lr.ph ], [ %21, %for.inc96 ]
  %end.0277 = phi ptr [ %arrayidx84, %land.rhs88.lr.ph ], [ %incdec.ptr, %for.inc96 ]
  %idxprom = sext i8 %18 to i64
  %arrayidx91 = getelementptr inbounds i16, ptr %17, i64 %idxprom
  %19 = load i16, ptr %arrayidx91, align 2, !tbaa !29
  %20 = and i16 %19, 8
  %tobool93.not = icmp eq i16 %20, 0
  br i1 %tobool93.not, label %for.end97, label %for.inc96

for.inc96:                                        ; preds = %land.rhs88
  %incdec.ptr = getelementptr inbounds i8, ptr %end.0277, i64 1
  %21 = load i8, ptr %incdec.ptr, align 1, !tbaa !9
  %tobool87.not = icmp eq i8 %21, 0
  br i1 %tobool87.not, label %for.end97, label %land.rhs88, !llvm.loop !30

for.end97:                                        ; preds = %land.rhs88, %for.inc96, %if.then82
  %end.0.lcssa = phi ptr [ %arrayidx84, %if.then82 ], [ %incdec.ptr, %for.inc96 ], [ %end.0277, %land.rhs88 ]
  %sub.ptr.lhs.cast = ptrtoint ptr %end.0.lcssa to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %call80 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 16 %buffer, ptr nonnull align 1 %call80, i64 %sub.ptr.sub, i1 false)
  %arrayidx100 = getelementptr inbounds [512 x i8], ptr %buffer, i64 0, i64 6
  store i8 95, ptr %arrayidx100, align 2, !tbaa !9
  %arrayidx101 = getelementptr inbounds [512 x i8], ptr %buffer, i64 0, i64 %sub.ptr.sub
  store i8 0, ptr %arrayidx101, align 1, !tbaa !9
  %strlen = call i64 @strlen(ptr nonnull dereferenceable(1) %buffer)
  %endptr = getelementptr inbounds i8, ptr %buffer, i64 %strlen
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(5) %endptr, ptr noundef nonnull align 1 dereferenceable(5) @.str.136, i64 5, i1 false)
  %call105 = call ptr @strcons(i64 noundef -1, ptr noundef nonnull %buffer) #33
  %call106 = call ptr @require(ptr noundef %call105)
  store i8 0, ptr %arrayidx101, align 1, !tbaa !9
  %call.i216 = call ptr @gen_intern(ptr noundef nonnull %buffer, i64 noundef 1)
  %call110 = call ptr @leval(ptr noundef %call.i216, ptr noundef null)
  %call111 = call ptr @funcall1(ptr noundef %call110, ptr noundef %call.i216) #33
  %22 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp112 = icmp sgt i64 %22, 4
  br i1 %cmp112, label %if.then114, label %if.end117

if.then114:                                       ; preds = %for.end97
  %23 = load ptr, ptr @stdout, align 8, !tbaa !5
  %24 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %25 = call i64 @fwrite(ptr nonnull @.str.135, i64 7, i64 1, ptr %23)
  store i64 %24, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i218 = icmp eq i64 %24, 0
  %26 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i219 = icmp eq i64 %26, 1
  %or.cond.i.i.i220 = select i1 %cmp.i.i.i218, i1 %cmp1.i3.i.i219, i1 false
  br i1 %or.cond.i.i.i220, label %if.then.i.i.i222, label %put_st.exit223

if.then.i.i.i222:                                 ; preds = %if.then114
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i221 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %put_st.exit223

put_st.exit223:                                   ; preds = %if.then114, %if.then.i.i.i222
  %27 = load ptr, ptr @stdout, align 8, !tbaa !5
  %tobool.i.i.not = icmp eq ptr %27, null
  br i1 %tobool.i.i.not, label %if.end.i.i, label %lprin1.exit

if.end.i.i:                                       ; preds = %put_st.exit223
  %call.i.i224 = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef null)
  %28 = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  %tobool6.not.i.i = icmp eq ptr %28, null
  br i1 %tobool6.not.i.i, label %if.then7.i.i, label %lprin1.exit

if.then7.i.i:                                     ; preds = %if.end.i.i
  %call8.i.i = call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull null)
  %.pre.i.i = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  br label %lprin1.exit

lprin1.exit:                                      ; preds = %put_st.exit223, %if.end.i.i, %if.then7.i.i
  %retval.0.i.i = phi ptr [ %27, %put_st.exit223 ], [ %.pre.i.i, %if.then7.i.i ], [ %28, %if.end.i.i ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %s.i.i) #33
  store ptr null, ptr %s.i.i, align 8, !tbaa !31
  %puts_fcn.i.i = getelementptr inbounds %struct.gen_printio, ptr %s.i.i, i64 0, i32 1
  store ptr @fputs_fcn, ptr %puts_fcn.i.i, align 8, !tbaa !33
  %cb_argument.i.i = getelementptr inbounds %struct.gen_printio, ptr %s.i.i, i64 0, i32 2
  store ptr %retval.0.i.i, ptr %cb_argument.i.i, align 8, !tbaa !34
  %call.i2.i = call ptr @lprin1g(ptr noundef %call111, ptr noundef nonnull %s.i.i)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %s.i.i) #33
  %29 = load ptr, ptr @stdout, align 8, !tbaa !5
  %30 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputc = call i32 @fputc(i32 10, ptr %29)
  store i64 %30, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i226 = icmp eq i64 %30, 0
  %31 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i227 = icmp eq i64 %31, 1
  %or.cond.i.i.i228 = select i1 %cmp.i.i.i226, i1 %cmp1.i3.i.i227, i1 false
  br i1 %or.cond.i.i.i228, label %if.then.i.i.i230, label %if.end117

if.then.i.i.i230:                                 ; preds = %lprin1.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i229 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end117

if.end117:                                        ; preds = %if.then.i.i.i230, %lprin1.exit, %for.end97, %if.end78
  %reader.0 = phi ptr [ %call111, %for.end97 ], [ null, %if.end78 ], [ %call111, %lprin1.exit ], [ %call111, %if.then.i.i.i230 ]
  %cmp120 = icmp eq ptr %reader.0, null
  %cmp.i.i = icmp eq ptr %call.i215, null
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i215, i64 0, i32 1
  %tobool134.not = icmp eq i64 %cflag, 0
  br label %while.cond118.outer.outer

while.cond118.outer.outer:                        ; preds = %cons.exit, %if.end117
  %result.0.ph.ph = phi ptr [ null, %if.end117 ], [ %z.0.i, %cons.exit ]
  %cmp137 = icmp eq ptr %result.0.ph.ph, null
  br label %while.cond118.outer

while.cond118.outer:                              ; preds = %while.cond118.outer.outer, %setcdr.exit
  %tail.0.ph = phi ptr [ %z.0.i, %setcdr.exit ], [ %result.0.ph.ph, %while.cond118.outer.outer ]
  br label %while.cond118

while.cond118:                                    ; preds = %while.cond118.outer, %if.else143
  br i1 %cmp120, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.cond118
  %32 = load ptr, ptr @stdin, align 8, !tbaa !5
  %tobool.i.i232 = icmp ne ptr %32, null
  %or.cond.i.i = and i1 %cmp.i.i, %tobool.i.i232
  br i1 %or.cond.i.i, label %lread.exit, label %if.end.i.i233

if.end.i.i233:                                    ; preds = %cond.true
  br i1 %cmp.i.i, label %if.then4.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end.i.i233
  %33 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 17
  br i1 %34, label %if.end5.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %cond.false.i.i, %if.end.i.i233
  %call.i.i234 = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %call.i215)
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %cond.false.i.i
  %35 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %tobool6.not.i.i235 = icmp eq ptr %35, null
  br i1 %tobool6.not.i.i235, label %if.then7.i.i238, label %lread.exit

if.then7.i.i238:                                  ; preds = %if.end5.i.i
  %call8.i.i236 = call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %call.i215)
  %.pre.i.i237 = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %lread.exit

lread.exit:                                       ; preds = %cond.true, %if.end5.i.i, %if.then7.i.i238
  %retval.0.i.i239 = phi ptr [ %32, %cond.true ], [ %.pre.i.i237, %if.then7.i.i238 ], [ %35, %if.end5.i.i ]
  %call1.i = call ptr @lreadf(ptr noundef %retval.0.i.i239)
  br label %cond.end

cond.false:                                       ; preds = %while.cond118
  %call123 = call ptr @funcall1(ptr noundef nonnull %reader.0, ptr noundef %call.i215) #33
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %lread.exit
  %cond124 = phi ptr [ %call1.i, %lread.exit ], [ %call123, %cond.false ]
  %36 = load ptr, ptr @eof_val, align 8, !tbaa !5
  %cmp125 = icmp eq ptr %cond124, %36
  br i1 %cmp125, label %while.end146, label %if.end128

if.end128:                                        ; preds = %cond.end
  %37 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp129 = icmp sgt i64 %37, 4
  br i1 %cmp129, label %if.then131, label %if.end133

if.then131:                                       ; preds = %if.end128
  %call132 = call ptr @lprint(ptr noundef %cond124, ptr noundef null)
  br label %if.end133

if.end133:                                        ; preds = %if.then131, %if.end128
  br i1 %tobool134.not, label %if.else143, label %if.then135

if.then135:                                       ; preds = %if.end133
  %38 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i240 = icmp eq i64 %38, 1
  br i1 %cmp.i240, label %if.then.i241, label %if.else.i

if.then.i241:                                     ; preds = %if.then135
  %39 = load ptr, ptr @heap, align 8, !tbaa !5
  %40 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %39, %40
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i241
  %call.i.i242 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i241
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %39, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %if.then135
  %41 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %41, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %42 = phi ptr [ %.pre.i, %if.then4.i ], [ %41, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %42, i64 0, i32 2, i32 0, i32 1
  %43 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %43, ptr @freelist, align 8, !tbaa !5
  %44 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %44, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %39, %if.end.i ], [ %42, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %cond124, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  br i1 %cmp137, label %while.cond118.outer.outer, label %if.else140

if.else140:                                       ; preds = %cons.exit
  %cmp.i243 = icmp eq ptr %tail.0.ph, null
  br i1 %cmp.i243, label %if.then.i246, label %cond.false.i

cond.false.i:                                     ; preds = %if.else140
  %type.i244 = getelementptr inbounds %struct.obj, ptr %tail.0.ph, i64 0, i32 1
  %45 = load i16, ptr %type.i244, align 2, !tbaa !14
  %46 = icmp eq i16 %45, 1
  br i1 %46, label %setcdr.exit, label %if.then.i246

if.then.i246:                                     ; preds = %cond.false.i, %if.else140
  %call.i245 = call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %tail.0.ph)
  br label %setcdr.exit

setcdr.exit:                                      ; preds = %cond.false.i, %if.then.i246
  %cdr.i247 = getelementptr inbounds %struct.obj, ptr %tail.0.ph, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i, ptr %cdr.i247, align 8, !tbaa !9
  br label %while.cond118.outer

if.else143:                                       ; preds = %if.end133
  %call144 = call ptr @leval(ptr noundef %cond124, ptr noundef null)
  br label %while.cond118

while.end146:                                     ; preds = %cond.end
  %47 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  br i1 %cmp.i.i, label %if.then.i252, label %cond.false.i251

cond.false.i251:                                  ; preds = %while.end146
  %48 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %49 = icmp eq i16 %48, 17
  br i1 %49, label %if.end.i254, label %if.then.i252

if.then.i252:                                     ; preds = %cond.false.i251, %while.end146
  %call3.i = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %call.i215)
  br label %if.end.i254

if.end.i254:                                      ; preds = %if.then.i252, %cond.false.i251
  %50 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %tobool.not.i.i = icmp eq ptr %50, null
  br i1 %tobool.not.i.i, label %if.end.i.i257, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i254
  %call.i.i255 = call i32 @fclose(ptr noundef nonnull %50)
  store ptr null, ptr %storage_as, align 8, !tbaa !9
  br label %if.end.i.i257

if.end.i.i257:                                    ; preds = %if.then.i.i, %if.end.i254
  %name.i.i = getelementptr inbounds %struct.obj, ptr %call.i215, i64 0, i32 2, i32 0, i32 1
  %51 = load ptr, ptr %name.i.i, align 8, !tbaa !9
  %tobool6.not.i.i256 = icmp eq ptr %51, null
  br i1 %tobool6.not.i.i256, label %file_gc_free.exit.i, label %if.then7.i.i258

if.then7.i.i258:                                  ; preds = %if.end.i.i257
  call void @free(ptr noundef nonnull %51) #33
  store ptr null, ptr %name.i.i, align 8, !tbaa !9
  br label %file_gc_free.exit.i

file_gc_free.exit.i:                              ; preds = %if.then7.i.i258, %if.end.i.i257
  store i64 %47, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i259 = icmp eq i64 %47, 0
  %52 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i8.i = icmp eq i64 %52, 1
  %or.cond.i.i260 = select i1 %cmp.i.i259, i1 %cmp1.i8.i, i1 false
  br i1 %or.cond.i.i260, label %if.then.i9.i, label %fclose_l.exit

if.then.i9.i:                                     ; preds = %file_gc_free.exit.i
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %fclose_l.exit

fclose_l.exit:                                    ; preds = %file_gc_free.exit.i, %if.then.i9.i
  %53 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp148 = icmp sgt i64 %53, 2
  br i1 %cmp148, label %if.then150, label %if.end151

if.then150:                                       ; preds = %fclose_l.exit
  %54 = load ptr, ptr @stdout, align 8, !tbaa !5
  %55 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %56 = call i64 @fwrite(ptr nonnull @.str.140, i64 6, i64 1, ptr %54)
  store i64 %55, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i262 = icmp eq i64 %55, 0
  %57 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i263 = icmp eq i64 %57, 1
  %or.cond.i.i.i264 = select i1 %cmp.i.i.i262, i1 %cmp1.i3.i.i263, i1 false
  br i1 %or.cond.i.i.i264, label %if.then.i.i.i266, label %if.end151

if.then.i.i.i266:                                 ; preds = %if.then150
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i265 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end151

if.end151:                                        ; preds = %if.then.i.i.i266, %if.then150, %fclose_l.exit
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %buffer) #33
  ret ptr %result.0.ph.ph
}

; Function Attrs: nounwind uwtable
define dso_local i64 @repl(ptr nocapture noundef readonly %h) local_unnamed_addr #6 {
entry:
  %x.i = alloca %struct.timeval, align 8
  %b.i79 = alloca %struct.tms, align 8
  %b.i59 = alloca %struct.tms, align 8
  %b.i = alloca %struct.tms, align 8
  %tms_stime.i = getelementptr inbounds %struct.tms, ptr %b.i, i64 0, i32 1
  %tms_stime.i62 = getelementptr inbounds %struct.tms, ptr %b.i59, i64 0, i32 1
  %repl_read = getelementptr inbounds %struct.repl_hooks, ptr %h, i64 0, i32 1
  %repl_eval = getelementptr inbounds %struct.repl_hooks, ptr %h, i64 0, i32 2
  %repl_print = getelementptr inbounds %struct.repl_hooks, ptr %h, i64 0, i32 3
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %while.cond
  %1 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %tobool.not = icmp eq i64 %1, 0
  br i1 %tobool.not, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load ptr, ptr @heap, align 8, !tbaa !5
  %3 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not = icmp ult ptr %2, %3
  br i1 %cmp1.not, label %if.end10, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i) #33
  %call.i = call i64 @times(ptr noundef nonnull %b.i) #33
  %4 = load i64, ptr %b.i, align 8, !tbaa !36
  %5 = load i64, ptr %tms_stime.i, align 8, !tbaa !38
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i) #33
  tail call void @gc_stop_and_copy()
  %6 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp2 = icmp sgt i64 %6, 1
  br i1 %cmp2, label %if.then3, label %if.end14

if.then3:                                         ; preds = %if.then
  %conv.i = sitofp i64 %4 to double
  %conv1.i = sitofp i64 %5 to double
  %add.i = fadd double %conv.i, %conv1.i
  %div.i = fdiv double %add.i, 6.000000e+01
  %7 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i59) #33
  %call.i60 = call i64 @times(ptr noundef nonnull %b.i59) #33
  %8 = load i64, ptr %b.i59, align 8, !tbaa !36
  %conv.i61 = sitofp i64 %8 to double
  %9 = load i64, ptr %tms_stime.i62, align 8, !tbaa !38
  %conv1.i63 = sitofp i64 %9 to double
  %add.i64 = fadd double %conv.i61, %conv1.i63
  %div.i65 = fdiv double %add.i64, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i59) #33
  %sub = fsub double %div.i65, %div.i
  %10 = load i64, ptr @old_heap_used, align 8, !tbaa !10
  %11 = load ptr, ptr @heap, align 8, !tbaa !5
  %12 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint ptr %11 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24
  %13 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %sub.ptr.lhs.cast5 = ptrtoint ptr %13 to i64
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.lhs.cast
  %sub.ptr.div8 = sdiv exact i64 %sub.ptr.sub7, 24
  %call9 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %7, ptr noundef nonnull dereferenceable(1) @.str.15, double noundef %sub, i64 noundef %10, i64 noundef %sub.ptr.div, i64 noundef %sub.ptr.div8) #33
  %14 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %15 = load ptr, ptr %h, align 8, !tbaa !21
  %cmp.i = icmp eq ptr %15, null
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then3
  %16 = load ptr, ptr @stdout, align 8, !tbaa !5
  %17 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i.i = tail call i32 @fputs(ptr %14, ptr %16)
  store i64 %17, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i.i = icmp eq i64 %17, 0
  %18 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i.i = icmp eq i64 %18, 1
  %or.cond.i.i.i.i = select i1 %cmp.i.i.i.i, i1 %cmp1.i3.i.i.i, i1 false
  br i1 %or.cond.i.i.i.i, label %if.then.i.i.i.i, label %put_st.exit.i

if.then.i.i.i.i:                                  ; preds = %if.then.i
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %put_st.exit.i

put_st.exit.i:                                    ; preds = %if.then.i.i.i.i, %if.then.i
  %19 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call.i66 = tail call i32 @fflush(ptr noundef %19)
  br label %if.end10

if.else.i:                                        ; preds = %if.then3
  tail call void %15(ptr noundef %14) #33
  br label %if.end10

if.end10:                                         ; preds = %if.else.i, %put_st.exit.i, %lor.lhs.false, %while.cond
  %.pr = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp11 = icmp sgt i64 %.pr, 1
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  %20 = load ptr, ptr %h, align 8, !tbaa !21
  %cmp.i67 = icmp eq ptr %20, null
  br i1 %cmp.i67, label %if.then.i72, label %if.else.i77

if.then.i72:                                      ; preds = %if.then12
  %21 = load ptr, ptr @stdout, align 8, !tbaa !5
  %22 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %23 = tail call i64 @fwrite(ptr nonnull @.str.16, i64 2, i64 1, ptr %21)
  store i64 %22, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i.i69 = icmp eq i64 %22, 0
  %24 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i.i70 = icmp eq i64 %24, 1
  %or.cond.i.i.i.i71 = select i1 %cmp.i.i.i.i69, i1 %cmp1.i3.i.i.i70, i1 false
  br i1 %or.cond.i.i.i.i71, label %if.then.i.i.i.i74, label %put_st.exit.i76

if.then.i.i.i.i74:                                ; preds = %if.then.i72
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i.i73 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %put_st.exit.i76

put_st.exit.i76:                                  ; preds = %if.then.i.i.i.i74, %if.then.i72
  %25 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call.i75 = tail call i32 @fflush(ptr noundef %25)
  br label %if.end14

if.else.i77:                                      ; preds = %if.then12
  tail call void %20(ptr noundef nonnull @.str.16) #33
  br label %if.end14

if.end14:                                         ; preds = %if.then, %if.else.i77, %put_st.exit.i76, %if.end10
  %26 = load ptr, ptr %repl_read, align 8, !tbaa !23
  %cmp15 = icmp eq ptr %26, null
  br i1 %cmp15, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end14
  %27 = load ptr, ptr @stdin, align 8, !tbaa !5
  %tobool.i.i.not = icmp eq ptr %27, null
  br i1 %tobool.i.i.not, label %if.end.i.i, label %lread.exit

if.end.i.i:                                       ; preds = %if.then16
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef null)
  %28 = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  %tobool6.not.i.i = icmp eq ptr %28, null
  br i1 %tobool6.not.i.i, label %if.then7.i.i, label %lread.exit

if.then7.i.i:                                     ; preds = %if.end.i.i
  %call8.i.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull null)
  %.pre.i.i = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  br label %lread.exit

lread.exit:                                       ; preds = %if.then16, %if.end.i.i, %if.then7.i.i
  %retval.0.i.i = phi ptr [ %27, %if.then16 ], [ %.pre.i.i, %if.then7.i.i ], [ %28, %if.end.i.i ]
  %call1.i = tail call ptr @lreadf(ptr noundef %retval.0.i.i)
  br label %if.end20

if.else:                                          ; preds = %if.end14
  %call19 = tail call ptr %26() #33
  br label %if.end20

if.end20:                                         ; preds = %if.else, %lread.exit
  %x.0 = phi ptr [ %call1.i, %lread.exit ], [ %call19, %if.else ]
  %29 = load ptr, ptr @eof_val, align 8, !tbaa !5
  %cmp21 = icmp eq ptr %x.0, %29
  br i1 %cmp21, label %while.end, label %if.end23

if.end23:                                         ; preds = %if.end20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i79) #33
  %call.i80 = call i64 @times(ptr noundef nonnull %b.i79) #33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i79) #33
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x.i) #33
  %call.i86 = call i32 @gettimeofday(ptr noundef nonnull %x.i, ptr noundef null) #33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x.i) #33
  %30 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp26 = icmp eq i64 %30, 1
  br i1 %cmp26, label %if.end29, label %if.else28

if.else28:                                        ; preds = %if.end23
  store i64 0, ptr @gc_cells_allocated, align 8, !tbaa !10
  store double 0.000000e+00, ptr @gc_time_taken, align 8, !tbaa !39
  br label %if.end29

if.end29:                                         ; preds = %if.end23, %if.else28
  %31 = load ptr, ptr %repl_eval, align 8, !tbaa !24
  %cmp30 = icmp eq ptr %31, null
  br i1 %cmp30, label %if.then31, label %if.else33

if.then31:                                        ; preds = %if.end29
  %call32 = tail call ptr @leval(ptr noundef %x.0, ptr noundef null)
  br label %if.end36

if.else33:                                        ; preds = %if.end29
  %call35 = tail call ptr %31(ptr noundef %x.0) #33
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then31
  %x.1 = phi ptr [ %call32, %if.then31 ], [ %call35, %if.else33 ]
  %32 = load ptr, ptr %repl_print, align 8, !tbaa !25
  %cmp37 = icmp eq ptr %32, null
  br i1 %cmp37, label %if.then38, label %if.else43

if.then38:                                        ; preds = %if.end36
  %33 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp39 = icmp sgt i64 %33, 1
  br i1 %cmp39, label %if.then40, label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then38, %if.then40, %if.else43
  br label %while.cond

if.then40:                                        ; preds = %if.then38
  %call41 = tail call ptr @lprint(ptr noundef %x.1, ptr noundef null)
  br label %while.cond.backedge

if.else43:                                        ; preds = %if.end36
  tail call void %32(ptr noundef %x.1) #33
  br label %while.cond.backedge

while.end:                                        ; preds = %if.end20
  ret i64 0
}

; Function Attrs: nounwind uwtable
define dso_local i64 @repl_c_string(ptr noundef %str, i64 noundef %want_sigint, i64 noundef %want_init, i64 noundef %want_print) local_unnamed_addr #6 {
entry:
  %h = alloca %struct.repl_hooks, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %h) #33
  %repl_read = getelementptr inbounds %struct.repl_hooks, ptr %h, i64 0, i32 1
  store ptr @repl_c_string_read, ptr %repl_read, align 8, !tbaa !23
  %repl_eval = getelementptr inbounds %struct.repl_hooks, ptr %h, i64 0, i32 2
  store ptr null, ptr %repl_eval, align 8, !tbaa !24
  %cmp = icmp sgt i64 %want_print, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store ptr @ignore_puts, ptr %h, align 8, !tbaa !21
  br label %if.end8

if.else:                                          ; preds = %entry
  %tobool.not = icmp eq i64 %want_print, 0
  br i1 %tobool.not, label %if.else5, label %if.then2

if.then2:                                         ; preds = %if.else
  store ptr @noprompt_puts, ptr %h, align 8, !tbaa !21
  br label %if.end8

if.else5:                                         ; preds = %if.else
  store ptr @ignore_puts, ptr %h, align 8, !tbaa !21
  br label %if.end8

if.end8:                                          ; preds = %if.then2, %if.else5, %if.then
  %not_ignore_print.sink = phi ptr [ @not_ignore_print, %if.then2 ], [ @ignore_print, %if.else5 ], [ @repl_c_string_print, %if.then ]
  %.sink20 = phi i64 [ 0, %if.then2 ], [ 0, %if.else5 ], [ %want_print, %if.then ]
  %.sink = phi ptr [ null, %if.then2 ], [ null, %if.else5 ], [ %str, %if.then ]
  %repl_print = getelementptr inbounds %struct.repl_hooks, ptr %h, i64 0, i32 3
  store ptr %not_ignore_print.sink, ptr %repl_print, align 8, !tbaa !25
  store i64 %.sink20, ptr @repl_c_string_print_len, align 8, !tbaa !10
  store ptr %.sink, ptr @repl_c_string_out, align 8, !tbaa !5
  store ptr %str, ptr @repl_c_string_arg, align 8, !tbaa !5
  store i1 false, ptr @repl_c_string_flag, align 8
  %call = call i64 @repl_driver(i64 noundef %want_sigint, i64 noundef %want_init, ptr noundef nonnull %h), !range !41
  %cmp9.not = icmp eq i64 %call, 0
  %.b = load i1, ptr @repl_c_string_flag, align 8
  %. = select i1 %.b, i64 0, i64 2
  %retval.0 = select i1 %cmp9.not, i64 %., i64 %call
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %h) #33
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal ptr @repl_c_string_read() #6 {
entry:
  %0 = load ptr, ptr @repl_c_string_arg, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @eof_val, align 8, !tbaa !5
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #34
  %call2 = tail call ptr @strcons(i64 noundef %call1, ptr noundef nonnull %0) #33
  store ptr null, ptr @repl_c_string_arg, align 8, !tbaa !5
  %2 = load ptr, ptr @repl_c_string_out, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  store i8 0, ptr %2, align 1, !tbaa !9
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %call5 = tail call ptr @read_from_string(ptr noundef %call2) #33
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then
  %retval.0 = phi ptr [ %1, %if.then ], [ %call5, %if.end4 ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal void @ignore_puts(ptr nocapture %st) #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @repl_c_string_print(ptr noundef %x) #6 {
entry:
  %s = alloca %struct.gen_printio, align 8
  %p = alloca %struct.rcsp_puts, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %s) #33
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %p) #33
  store ptr null, ptr %s, align 8, !tbaa !31
  %puts_fcn = getelementptr inbounds %struct.gen_printio, ptr %s, i64 0, i32 1
  store ptr @rcsp_puts, ptr %puts_fcn, align 8, !tbaa !33
  %0 = load ptr, ptr @repl_c_string_out, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !42
  %1 = load i64, ptr @repl_c_string_print_len, align 8, !tbaa !10
  %sub = add nsw i64 %1, -1
  %arrayidx = getelementptr inbounds i8, ptr %0, i64 %sub
  %end = getelementptr inbounds %struct.rcsp_puts, ptr %p, i64 0, i32 1
  store ptr %arrayidx, ptr %end, align 8, !tbaa !44
  %cb_argument = getelementptr inbounds %struct.gen_printio, ptr %s, i64 0, i32 2
  store ptr %p, ptr %cb_argument, align 8, !tbaa !34
  %call = call ptr @lprin1g(ptr noundef %x, ptr noundef nonnull %s)
  store i1 true, ptr @repl_c_string_flag, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %p) #33
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %s) #33
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @noprompt_puts(ptr nocapture noundef readonly %st) #6 {
entry:
  %call = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %st, ptr noundef nonnull dereferenceable(3) @.str.16) #34
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %1 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i = tail call i32 @fputs(ptr %st, ptr %0)
  store i64 %1, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i = icmp eq i64 %1, 0
  %2 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i = icmp eq i64 %2, 1
  %or.cond.i.i.i = select i1 %cmp.i.i.i, i1 %cmp1.i3.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %if.end

if.then.i.i.i:                                    ; preds = %if.then
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then.i.i.i, %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @not_ignore_print(ptr noundef %x) #6 {
entry:
  store i1 true, ptr @repl_c_string_flag, align 8
  %call = tail call ptr @lprint(ptr noundef %x, ptr noundef null)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @ignore_print(ptr nocapture readnone %x) #10 {
entry:
  store i1 true, ptr @repl_c_string_flag, align 8
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local double @myruntime() local_unnamed_addr #1 {
entry:
  %b = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b) #33
  %call = call i64 @times(ptr noundef nonnull %b) #33
  %0 = load i64, ptr %b, align 8, !tbaa !36
  %conv = sitofp i64 %0 to double
  %tms_stime = getelementptr inbounds %struct.tms, ptr %b, i64 0, i32 1
  %1 = load i64, ptr %tms_stime, align 8, !tbaa !38
  %conv1 = sitofp i64 %1 to double
  %add = fadd double %conv, %conv1
  %div = fdiv double %add, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b) #33
  ret double %div
}

; Function Attrs: nofree nounwind
declare noundef i64 @times(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind uwtable
define dso_local double @myrealtime() local_unnamed_addr #1 {
entry:
  %x = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x) #33
  %call = call i32 @gettimeofday(ptr noundef nonnull %x, ptr noundef null) #33
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %0 = load i64, ptr %x, align 8, !tbaa !45
  %conv = sitofp i64 %0 to double
  %tv_usec = getelementptr inbounds %struct.timeval, ptr %x, i64 0, i32 1
  %1 = load i64, ptr %tv_usec, align 8, !tbaa !47
  %conv1 = sitofp i64 %1 to double
  %2 = tail call double @llvm.fmuladd.f64(double %conv1, double 0x3EB0C6F7A0B5ED8D, double %conv)
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi double [ %2, %if.end ], [ 0.000000e+00, %entry ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x) #33
  ret double %retval.0
}

; Function Attrs: nofree nounwind
declare noundef i32 @gettimeofday(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #11

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @set_repl_hooks(ptr noundef %puts_f, ptr noundef %read_f, ptr noundef %eval_f, ptr noundef %print_f) local_unnamed_addr #10 {
entry:
  store ptr %puts_f, ptr @repl_puts, align 8, !tbaa !5
  store ptr %read_f, ptr @repl_read, align 8, !tbaa !5
  store ptr %eval_f, ptr @repl_eval, align 8, !tbaa !5
  store ptr %print_f, ptr @repl_print, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gput_st(ptr nocapture noundef readonly %f, ptr noundef %st) local_unnamed_addr #6 {
entry:
  %puts_fcn = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %0 = load ptr, ptr %puts_fcn, align 8, !tbaa !33
  %cb_argument = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %1 = load ptr, ptr %cb_argument, align 8, !tbaa !34
  %call = tail call i32 %0(ptr noundef %st, ptr noundef %1) #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @fput_st(ptr nocapture noundef %f, ptr nocapture noundef readonly %st) local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs = tail call i32 @fputs(ptr %st, ptr %f)
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 0
  %1 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3 = icmp eq i64 %1, 1
  %or.cond.i = select i1 %cmp.i, i1 %cmp1.i3, i1 false
  br i1 %or.cond.i, label %if.then.i, label %no_interrupt.exit

if.then.i:                                        ; preds = %entry
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %entry, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @fputs_fcn(ptr nocapture noundef readonly %st, ptr nocapture noundef %cb) #6 {
entry:
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i = tail call i32 @fputs(ptr %st, ptr %cb)
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 0
  %1 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i = icmp eq i64 %1, 1
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp1.i3.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %fput_st.exit

if.then.i.i:                                      ; preds = %entry
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %fput_st.exit

fput_st.exit:                                     ; preds = %entry, %if.then.i.i
  ret i32 1
}

; Function Attrs: nounwind uwtable
define dso_local void @put_st(ptr nocapture noundef readonly %st) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %1 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i = tail call i32 @fputs(ptr %st, ptr %0)
  store i64 %1, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %1, 0
  %2 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i = icmp eq i64 %2, 1
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp1.i3.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %fput_st.exit

if.then.i.i:                                      ; preds = %entry
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %fput_st.exit

fput_st.exit:                                     ; preds = %entry, %if.then.i.i
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @grepl_puts(ptr noundef %st, ptr noundef readonly %repl_puts) local_unnamed_addr #6 {
entry:
  %cmp = icmp eq ptr %repl_puts, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %1 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i = tail call i32 @fputs(ptr %st, ptr %0)
  store i64 %1, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i = icmp eq i64 %1, 0
  %2 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i = icmp eq i64 %2, 1
  %or.cond.i.i.i = select i1 %cmp.i.i.i, i1 %cmp1.i3.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %put_st.exit

if.then.i.i.i:                                    ; preds = %if.then
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %put_st.exit

put_st.exit:                                      ; preds = %if.then, %if.then.i.i.i
  %3 = load ptr, ptr @stdout, align 8, !tbaa !5
  %call = tail call i32 @fflush(ptr noundef %3)
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void %repl_puts(ptr noundef %st) #33
  br label %if.end

if.end:                                           ; preds = %if.else, %put_st.exit
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @gc_stop_and_copy() local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  store i64 0, ptr @errjmp_ok, align 8, !tbaa !10
  %1 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %2 = load ptr, ptr @heap, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint ptr %2 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24
  store i64 %sub.ptr.div, ptr @old_heap_used, align 8, !tbaa !10
  %3 = load ptr, ptr @heaps, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %1, %4
  br i1 %cmp.i, label %if.then.i, label %get_newspace.exit

if.then.i:                                        ; preds = %entry
  %arrayidx1.i = getelementptr inbounds ptr, ptr %3, i64 1
  %5 = load ptr, ptr %arrayidx1.i, align 8, !tbaa !5
  br label %get_newspace.exit

get_newspace.exit:                                ; preds = %entry, %if.then.i
  %newspace.0.i = phi ptr [ %5, %if.then.i ], [ %4, %entry ]
  store ptr %newspace.0.i, ptr @heap, align 8, !tbaa !5
  store ptr %newspace.0.i, ptr @heap_org, align 8, !tbaa !5
  %6 = load i64, ptr @heap_size, align 8, !tbaa !10
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %newspace.0.i, i64 %6
  store ptr %add.ptr.i, ptr @heap_end, align 8, !tbaa !5
  tail call void @scan_registers()
  tail call void @scan_newspace(ptr noundef %newspace.0.i)
  %cmp26.i = icmp ult ptr %1, %2
  br i1 %cmp26.i, label %for.body.i, label %free_oldspace.exit

for.body.i:                                       ; preds = %get_newspace.exit, %for.inc.i
  %ptr.027.i = phi ptr [ %incdec.ptr.i, %for.inc.i ], [ %1, %get_newspace.exit ]
  %7 = load i16, ptr %ptr.027.i, align 8, !tbaa !35
  %cmp1.i5 = icmp eq i16 %7, 0
  br i1 %cmp1.i5, label %cond.false.i, label %for.inc.i

cond.false.i:                                     ; preds = %for.body.i
  %type.i = getelementptr inbounds %struct.obj, ptr %ptr.027.i, i64 0, i32 1
  %8 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv5.i = sext i16 %8 to i32
  switch i32 %conv5.i, label %cond.end12.i [
    i32 1, label %for.inc.i
    i32 11, label %for.inc.i
    i32 3, label %for.inc.i
    i32 2, label %for.inc.i
    i32 4, label %for.inc.i
    i32 5, label %for.inc.i
    i32 6, label %for.inc.i
    i32 21, label %for.inc.i
    i32 7, label %for.inc.i
    i32 19, label %for.inc.i
    i32 20, label %for.inc.i
    i32 8, label %for.inc.i
    i32 9, label %for.inc.i
    i32 10, label %for.inc.i
  ]

cond.end12.i:                                     ; preds = %cond.false.i
  %conv14.i = sext i16 %8 to i64
  %9 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i.i = icmp eq ptr %9, null
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %cond.end12.i
  %calloc.i.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i.i = icmp eq ptr %calloc.i.i, null
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %must_malloc.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %call1.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i.i

must_malloc.exit.i.i:                             ; preds = %if.then.i.i.i, %if.then.i.i
  store ptr %calloc.i.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %must_malloc.exit.i.i, %cond.end12.i
  %10 = phi ptr [ %calloc.i.i, %must_malloc.exit.i.i ], [ %9, %cond.end12.i ]
  %or.cond.i.i = icmp ult i16 %8, 100
  br i1 %or.cond.i.i, label %if.then3.i.i, label %if.else.i.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  %gc_free.i = getelementptr inbounds %struct.user_type_hooks, ptr %10, i64 %conv14.i, i32 3
  %11 = load ptr, ptr %gc_free.i, align 8, !tbaa !48
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %for.inc.i, label %if.then15.i

if.else.i.i:                                      ; preds = %if.end.i.i
  %call4.i.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then15.i:                                      ; preds = %if.then3.i.i
  tail call void %11(ptr noundef nonnull %ptr.027.i) #33
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then15.i, %if.then3.i.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %for.body.i
  %incdec.ptr.i = getelementptr inbounds %struct.obj, ptr %ptr.027.i, i64 1
  %cmp.i6 = icmp ult ptr %incdec.ptr.i, %2
  br i1 %cmp.i6, label %for.body.i, label %free_oldspace.exit, !llvm.loop !50

free_oldspace.exit:                               ; preds = %for.inc.i, %get_newspace.exit
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i7 = icmp eq i64 %0, 0
  %12 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i8 = icmp eq i64 %12, 1
  %or.cond.i = select i1 %cmp.i7, i1 %cmp1.i8, i1 false
  br i1 %or.cond.i, label %if.then.i9, label %no_interrupt.exit

if.then.i9:                                       ; preds = %free_oldspace.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %free_oldspace.exit, %if.then.i9
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local ptr @lread(ptr noundef %f) #6 {
entry:
  %0 = load ptr, ptr @stdin, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %f, null
  %tobool.i = icmp ne ptr %0, null
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %get_c_file.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %f, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %if.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %f)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %f, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %3, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %f)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %entry, %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %0, %entry ], [ %.pre.i, %if.then7.i ], [ %3, %if.end5.i ]
  %call1 = tail call ptr @lreadf(ptr noundef %retval.0.i)
  ret ptr %call1
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval(ptr noundef %x, ptr noundef %env) #6 {
entry:
  %x.addr = alloca ptr, align 8
  %env.addr = alloca ptr, align 8
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  store ptr %env, ptr %env.addr, align 8, !tbaa !5
  %0 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %cmp = icmp ult ptr %x.addr, %0
  br i1 %cmp, label %if.then, label %loop.preheader

if.then:                                          ; preds = %entry
  %call.i = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  br label %loop.preheader

loop.preheader:                                   ; preds = %if.then, %entry
  br label %loop

loop:                                             ; preds = %loop.backedge, %loop.preheader
  %1 = load ptr, ptr @sym_eval_history_ptr, align 8, !tbaa !5
  %vcell = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %2 = load ptr, ptr %vcell, align 8, !tbaa !9
  %cmp1 = icmp eq ptr %2, null
  br i1 %cmp1, label %if.end9, label %cond.end

cond.end:                                         ; preds = %loop
  %type = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 1
  %3 = load i16, ptr %type, align 2, !tbaa !14
  %cmp2 = icmp eq i16 %3, 1
  br i1 %cmp2, label %if.then4, label %if.end9

if.then4:                                         ; preds = %cond.end
  %4 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %storage_as5 = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 2
  store ptr %4, ptr %storage_as5, align 8, !tbaa !9
  %cdr = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %5, ptr %vcell, align 8, !tbaa !9
  br label %if.end9

if.end9:                                          ; preds = %loop, %if.then4, %cond.end
  %6 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp10 = icmp eq ptr %6, null
  br i1 %cmp10, label %sw.default397, label %cond.end16

cond.end16:                                       ; preds = %if.end9
  %type14 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 1
  %7 = load i16, ptr %type14, align 2, !tbaa !14
  %conv15 = sext i16 %7 to i32
  switch i32 %conv15, label %sw.default397 [
    i32 3, label %sw.bb
    i32 1, label %sw.bb31
  ]

sw.bb:                                            ; preds = %cond.end16
  %8 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call = call ptr @envlookup(ptr noundef nonnull %6, ptr noundef %8)
  %cmp18.not = icmp eq ptr %call, null
  br i1 %cmp18.not, label %if.end23, label %if.then20

if.then20:                                        ; preds = %sw.bb
  %storage_as21 = getelementptr inbounds %struct.obj, ptr %call, i64 0, i32 2
  %9 = load ptr, ptr %storage_as21, align 8, !tbaa !9
  br label %cleanup

if.end23:                                         ; preds = %sw.bb
  %10 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %vcell25 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %vcell25, align 8, !tbaa !9
  %12 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %cmp26 = icmp eq ptr %11, %12
  br i1 %cmp26, label %if.then28, label %cleanup

if.then28:                                        ; preds = %if.end23
  %call.i475 = call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %10)
  br label %cleanup

sw.bb31:                                          ; preds = %cond.end16
  %storage_as32 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2
  %13 = load ptr, ptr %storage_as32, align 8, !tbaa !9
  %cmp34 = icmp eq ptr %13, null
  br i1 %cmp34, label %cond.end384, label %cond.end40

cond.end40:                                       ; preds = %sw.bb31
  %type38 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 1
  %14 = load i16, ptr %type38, align 2, !tbaa !14
  %conv39 = sext i16 %14 to i32
  switch i32 %conv39, label %cond.end69 [
    i32 3, label %sw.bb42
    i32 1, label %sw.bb61
  ]

sw.bb42:                                          ; preds = %cond.end40
  %15 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call43 = call ptr @envlookup(ptr noundef nonnull %13, ptr noundef %15)
  %cmp44.not = icmp eq ptr %call43, null
  br i1 %cmp44.not, label %if.end49, label %if.then46

if.then46:                                        ; preds = %sw.bb42
  %storage_as47 = getelementptr inbounds %struct.obj, ptr %call43, i64 0, i32 2
  %16 = load ptr, ptr %storage_as47, align 8, !tbaa !9
  br label %sw.epilog

if.end49:                                         ; preds = %sw.bb42
  %17 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %storage_as50 = getelementptr inbounds %struct.obj, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %storage_as50, align 8, !tbaa !9
  %vcell53 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %vcell53, align 8, !tbaa !9
  %20 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %cmp54 = icmp eq ptr %19, %20
  br i1 %cmp54, label %if.then56, label %sw.epilog

if.then56:                                        ; preds = %if.end49
  %call.i476 = call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %18)
  br label %sw.epilog

sw.bb61:                                          ; preds = %cond.end40
  %21 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call62 = call ptr @leval(ptr noundef nonnull %13, ptr noundef %21)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end49, %if.then56, %sw.bb61, %if.then46
  %tmp.0 = phi ptr [ %call62, %sw.bb61 ], [ %16, %if.then46 ], [ %19, %if.then56 ], [ %19, %if.end49 ]
  %cmp63 = icmp eq ptr %tmp.0, null
  br i1 %cmp63, label %cond.end384, label %sw.epilog.cond.end69_crit_edge

sw.epilog.cond.end69_crit_edge:                   ; preds = %sw.epilog
  %type67.phi.trans.insert = getelementptr inbounds %struct.obj, ptr %tmp.0, i64 0, i32 1
  %.pre = load i16, ptr %type67.phi.trans.insert, align 2, !tbaa !14
  br label %cond.end69

cond.end69:                                       ; preds = %sw.epilog.cond.end69_crit_edge, %cond.end40
  %22 = phi i16 [ %.pre, %sw.epilog.cond.end69_crit_edge ], [ %14, %cond.end40 ]
  %tmp.01253 = phi ptr [ %tmp.0, %sw.epilog.cond.end69_crit_edge ], [ %13, %cond.end40 ]
  %conv68 = sext i16 %22 to i32
  switch i32 %conv68, label %cond.false381 [
    i32 4, label %sw.bb71
    i32 5, label %sw.bb74
    i32 6, label %sw.bb82
    i32 21, label %sw.bb100
    i32 7, label %sw.bb137
    i32 19, label %sw.bb158
    i32 20, label %sw.bb183
    i32 8, label %sw.bb213
    i32 9, label %sw.bb220
    i32 10, label %sw.bb226
    i32 11, label %sw.bb234
    i32 3, label %sw.bb371
  ]

sw.bb71:                                          ; preds = %cond.end69
  %f = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %f, align 8, !tbaa !9
  %call73 = call ptr %23() #33
  br label %cleanup

sw.bb74:                                          ; preds = %cond.end69
  %f76 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %f76, align 8, !tbaa !9
  %25 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr78 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  %26 = load ptr, ptr %cdr78, align 8, !tbaa !9
  %cmp.i = icmp eq ptr %26, null
  br i1 %cmp.i, label %car.exit, label %cond.end.i

cond.end.i:                                       ; preds = %sw.bb74
  %type.i = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  %27 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %27 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  %28 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i477 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %26)
  br label %car.exit

car.exit:                                         ; preds = %sw.bb74, %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %28, %sw.bb1.i ], [ null, %cond.end.i ], [ null, %sw.bb74 ]
  %29 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call80 = call ptr @leval(ptr noundef %retval.0.i, ptr noundef %29)
  %call81 = call ptr %24(ptr noundef %call80) #33
  br label %cleanup

sw.bb82:                                          ; preds = %cond.end69
  %30 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr84 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2, i32 0, i32 1
  %31 = load ptr, ptr %cdr84, align 8, !tbaa !9
  store ptr %31, ptr %x.addr, align 8, !tbaa !5
  %cmp.i478 = icmp eq ptr %31, null
  br i1 %cmp.i478, label %car.exit490, label %cond.end.i483

cond.end.i483:                                    ; preds = %sw.bb82
  %type.i479 = getelementptr inbounds %struct.obj, ptr %31, i64 0, i32 1
  %32 = load i16, ptr %type.i479, align 2, !tbaa !14
  %conv.i480 = sext i16 %32 to i32
  switch i32 %conv.i480, label %sw.default.i488 [
    i32 0, label %car.exit490
    i32 1, label %sw.bb1.i486
  ]

sw.bb1.i486:                                      ; preds = %cond.end.i483
  %storage_as.i485 = getelementptr inbounds %struct.obj, ptr %31, i64 0, i32 2
  %33 = load ptr, ptr %storage_as.i485, align 8, !tbaa !9
  br label %car.exit490

sw.default.i488:                                  ; preds = %cond.end.i483
  %call.i487 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %31)
  br label %car.exit490

car.exit490:                                      ; preds = %sw.bb82, %cond.end.i483, %sw.bb1.i486, %sw.default.i488
  %retval.0.i489 = phi ptr [ null, %sw.default.i488 ], [ %33, %sw.bb1.i486 ], [ null, %cond.end.i483 ], [ null, %sw.bb82 ]
  %34 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call86 = call ptr @leval(ptr noundef %retval.0.i489, ptr noundef %34)
  %35 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp87 = icmp eq ptr %35, null
  br i1 %cmp87, label %cond.end93.thread, label %cond.end93

cond.end93.thread:                                ; preds = %car.exit490
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %f961263 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %36 = load ptr, ptr %f961263, align 8, !tbaa !9
  br label %car.exit503

cond.end93:                                       ; preds = %car.exit490
  %cdr92 = getelementptr inbounds %struct.obj, ptr %35, i64 0, i32 2, i32 0, i32 1
  %37 = load ptr, ptr %cdr92, align 8, !tbaa !9
  store ptr %37, ptr %x.addr, align 8, !tbaa !5
  %f96 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %38 = load ptr, ptr %f96, align 8, !tbaa !9
  %cmp.i491 = icmp eq ptr %37, null
  br i1 %cmp.i491, label %car.exit503, label %cond.end.i496

cond.end.i496:                                    ; preds = %cond.end93
  %type.i492 = getelementptr inbounds %struct.obj, ptr %37, i64 0, i32 1
  %39 = load i16, ptr %type.i492, align 2, !tbaa !14
  %conv.i493 = sext i16 %39 to i32
  switch i32 %conv.i493, label %sw.default.i501 [
    i32 0, label %car.exit503
    i32 1, label %sw.bb1.i499
  ]

sw.bb1.i499:                                      ; preds = %cond.end.i496
  %storage_as.i498 = getelementptr inbounds %struct.obj, ptr %37, i64 0, i32 2
  %40 = load ptr, ptr %storage_as.i498, align 8, !tbaa !9
  br label %car.exit503

sw.default.i501:                                  ; preds = %cond.end.i496
  %call.i500 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %37)
  br label %car.exit503

car.exit503:                                      ; preds = %cond.end93.thread, %cond.end93, %cond.end.i496, %sw.bb1.i499, %sw.default.i501
  %41 = phi ptr [ %38, %sw.default.i501 ], [ %38, %sw.bb1.i499 ], [ %38, %cond.end.i496 ], [ %36, %cond.end93.thread ], [ %38, %cond.end93 ]
  %retval.0.i502 = phi ptr [ null, %sw.default.i501 ], [ %40, %sw.bb1.i499 ], [ null, %cond.end.i496 ], [ null, %cond.end93.thread ], [ null, %cond.end93 ]
  %42 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call98 = call ptr @leval(ptr noundef %retval.0.i502, ptr noundef %42)
  %call99 = call ptr %41(ptr noundef %call86, ptr noundef %call98) #33
  br label %cleanup

sw.bb100:                                         ; preds = %cond.end69
  %43 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr102 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2, i32 0, i32 1
  %44 = load ptr, ptr %cdr102, align 8, !tbaa !9
  store ptr %44, ptr %x.addr, align 8, !tbaa !5
  %cmp.i504 = icmp eq ptr %44, null
  br i1 %cmp.i504, label %car.exit516, label %cond.end.i509

cond.end.i509:                                    ; preds = %sw.bb100
  %type.i505 = getelementptr inbounds %struct.obj, ptr %44, i64 0, i32 1
  %45 = load i16, ptr %type.i505, align 2, !tbaa !14
  %conv.i506 = sext i16 %45 to i32
  switch i32 %conv.i506, label %sw.default.i514 [
    i32 0, label %car.exit516
    i32 1, label %sw.bb1.i512
  ]

sw.bb1.i512:                                      ; preds = %cond.end.i509
  %storage_as.i511 = getelementptr inbounds %struct.obj, ptr %44, i64 0, i32 2
  %46 = load ptr, ptr %storage_as.i511, align 8, !tbaa !9
  br label %car.exit516

sw.default.i514:                                  ; preds = %cond.end.i509
  %call.i513 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %44)
  br label %car.exit516

car.exit516:                                      ; preds = %sw.bb100, %cond.end.i509, %sw.bb1.i512, %sw.default.i514
  %retval.0.i515 = phi ptr [ null, %sw.default.i514 ], [ %46, %sw.bb1.i512 ], [ null, %cond.end.i509 ], [ null, %sw.bb100 ]
  %47 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call104 = call ptr @leval(ptr noundef %retval.0.i515, ptr noundef %47)
  %48 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp105 = icmp eq ptr %48, null
  br i1 %cmp105, label %cond.end111.thread, label %cond.end111

cond.end111.thread:                               ; preds = %car.exit516
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %f1141270 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %49 = load ptr, ptr %f1141270, align 8, !tbaa !9
  br label %car.exit529

cond.end111:                                      ; preds = %car.exit516
  %cdr110 = getelementptr inbounds %struct.obj, ptr %48, i64 0, i32 2, i32 0, i32 1
  %50 = load ptr, ptr %cdr110, align 8, !tbaa !9
  store ptr %50, ptr %x.addr, align 8, !tbaa !5
  %f114 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %51 = load ptr, ptr %f114, align 8, !tbaa !9
  %cmp.i517 = icmp eq ptr %50, null
  br i1 %cmp.i517, label %car.exit529, label %cond.end.i522

cond.end.i522:                                    ; preds = %cond.end111
  %type.i518 = getelementptr inbounds %struct.obj, ptr %50, i64 0, i32 1
  %52 = load i16, ptr %type.i518, align 2, !tbaa !14
  %conv.i519 = sext i16 %52 to i32
  switch i32 %conv.i519, label %sw.default.i527 [
    i32 0, label %car.exit529
    i32 1, label %sw.bb1.i525
  ]

sw.bb1.i525:                                      ; preds = %cond.end.i522
  %storage_as.i524 = getelementptr inbounds %struct.obj, ptr %50, i64 0, i32 2
  %53 = load ptr, ptr %storage_as.i524, align 8, !tbaa !9
  br label %car.exit529

sw.default.i527:                                  ; preds = %cond.end.i522
  %call.i526 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %50)
  br label %car.exit529

car.exit529:                                      ; preds = %cond.end111.thread, %cond.end111, %cond.end.i522, %sw.bb1.i525, %sw.default.i527
  %f11412731278 = phi ptr [ %f114, %sw.default.i527 ], [ %f114, %sw.bb1.i525 ], [ %f114, %cond.end.i522 ], [ %f1141270, %cond.end111.thread ], [ %f114, %cond.end111 ]
  %54 = phi ptr [ %51, %sw.default.i527 ], [ %51, %sw.bb1.i525 ], [ %51, %cond.end.i522 ], [ %49, %cond.end111.thread ], [ %51, %cond.end111 ]
  %retval.0.i528 = phi ptr [ null, %sw.default.i527 ], [ %53, %sw.bb1.i525 ], [ null, %cond.end.i522 ], [ null, %cond.end111.thread ], [ null, %cond.end111 ]
  %55 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call116 = call ptr @leval(ptr noundef %retval.0.i528, ptr noundef %55)
  %call117 = call ptr %54(ptr noundef %call104, ptr noundef %call116) #33
  %56 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i530 = icmp eq ptr %56, null
  br i1 %cmp.i530, label %cleanup, label %cond.end.i535

cond.end.i535:                                    ; preds = %car.exit529
  %type.i531 = getelementptr inbounds %struct.obj, ptr %56, i64 0, i32 1
  %57 = load i16, ptr %type.i531, align 2, !tbaa !14
  %conv.i532 = sext i16 %57 to i32
  switch i32 %conv.i532, label %sw.default.i540 [
    i32 0, label %cleanup
    i32 1, label %cdr.exit
  ]

sw.default.i540:                                  ; preds = %cond.end.i535
  %call.i539 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %56)
  br label %cleanup

cdr.exit:                                         ; preds = %cond.end.i535
  %cdr.i = getelementptr inbounds %struct.obj, ptr %56, i64 0, i32 2, i32 0, i32 1
  %58 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %58, ptr %x.addr, align 8, !tbaa !5
  %cmp1191478 = icmp eq ptr %58, null
  br i1 %cmp1191478, label %cleanup, label %cond.end125

cond.end125:                                      ; preds = %cdr.exit, %for.body
  %arg1.01480 = phi ptr [ %call134, %for.body ], [ %call117, %cdr.exit ]
  %storemerge1479 = phi ptr [ %64, %for.body ], [ %58, %cdr.exit ]
  %type123 = getelementptr inbounds %struct.obj, ptr %storemerge1479, i64 0, i32 1
  %59 = load i16, ptr %type123, align 2, !tbaa !14
  %cmp127 = icmp eq i16 %59, 1
  br i1 %cmp127, label %for.body, label %cleanup

for.body:                                         ; preds = %cond.end125
  %60 = load ptr, ptr %f11412731278, align 8, !tbaa !9
  %storage_as131 = getelementptr inbounds %struct.obj, ptr %storemerge1479, i64 0, i32 2
  %61 = load ptr, ptr %storage_as131, align 8, !tbaa !9
  %62 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call133 = call ptr @leval(ptr noundef %61, ptr noundef %62)
  %call134 = call ptr %60(ptr noundef %arg1.01480, ptr noundef %call133) #33
  %63 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr136 = getelementptr inbounds %struct.obj, ptr %63, i64 0, i32 2, i32 0, i32 1
  %64 = load ptr, ptr %cdr136, align 8, !tbaa !9
  store ptr %64, ptr %x.addr, align 8, !tbaa !5
  %cmp119 = icmp eq ptr %64, null
  br i1 %cmp119, label %cleanup, label %cond.end125, !llvm.loop !51

sw.bb137:                                         ; preds = %cond.end69
  %65 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr139 = getelementptr inbounds %struct.obj, ptr %65, i64 0, i32 2, i32 0, i32 1
  %66 = load ptr, ptr %cdr139, align 8, !tbaa !9
  store ptr %66, ptr %x.addr, align 8, !tbaa !5
  %cmp.i542 = icmp eq ptr %66, null
  br i1 %cmp.i542, label %car.exit554, label %cond.end.i547

cond.end.i547:                                    ; preds = %sw.bb137
  %type.i543 = getelementptr inbounds %struct.obj, ptr %66, i64 0, i32 1
  %67 = load i16, ptr %type.i543, align 2, !tbaa !14
  %conv.i544 = sext i16 %67 to i32
  switch i32 %conv.i544, label %sw.default.i552 [
    i32 0, label %car.exit554
    i32 1, label %sw.bb1.i550
  ]

sw.bb1.i550:                                      ; preds = %cond.end.i547
  %storage_as.i549 = getelementptr inbounds %struct.obj, ptr %66, i64 0, i32 2
  %68 = load ptr, ptr %storage_as.i549, align 8, !tbaa !9
  br label %car.exit554

sw.default.i552:                                  ; preds = %cond.end.i547
  %call.i551 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %66)
  br label %car.exit554

car.exit554:                                      ; preds = %sw.bb137, %cond.end.i547, %sw.bb1.i550, %sw.default.i552
  %retval.0.i553 = phi ptr [ null, %sw.default.i552 ], [ %68, %sw.bb1.i550 ], [ null, %cond.end.i547 ], [ null, %sw.bb137 ]
  %69 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call141 = call ptr @leval(ptr noundef %retval.0.i553, ptr noundef %69)
  %70 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp142 = icmp eq ptr %70, null
  br i1 %cmp142, label %cond.end148.thread, label %cond.end148

cond.end148.thread:                               ; preds = %car.exit554
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %f1511284 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %71 = load ptr, ptr %f1511284, align 8, !tbaa !9
  br label %car.exit567

cond.end148:                                      ; preds = %car.exit554
  %cdr147 = getelementptr inbounds %struct.obj, ptr %70, i64 0, i32 2, i32 0, i32 1
  %72 = load ptr, ptr %cdr147, align 8, !tbaa !9
  store ptr %72, ptr %x.addr, align 8, !tbaa !5
  %f151 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %73 = load ptr, ptr %f151, align 8, !tbaa !9
  %cmp.i555 = icmp eq ptr %72, null
  br i1 %cmp.i555, label %car.exit567, label %cond.end.i560

cond.end.i560:                                    ; preds = %cond.end148
  %type.i556 = getelementptr inbounds %struct.obj, ptr %72, i64 0, i32 1
  %74 = load i16, ptr %type.i556, align 2, !tbaa !14
  %conv.i557 = sext i16 %74 to i32
  switch i32 %conv.i557, label %sw.default.i565 [
    i32 0, label %car.exit567
    i32 1, label %sw.bb1.i563
  ]

sw.bb1.i563:                                      ; preds = %cond.end.i560
  %storage_as.i562 = getelementptr inbounds %struct.obj, ptr %72, i64 0, i32 2
  %75 = load ptr, ptr %storage_as.i562, align 8, !tbaa !9
  br label %car.exit567

sw.default.i565:                                  ; preds = %cond.end.i560
  %call.i564 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %72)
  br label %car.exit567

car.exit567:                                      ; preds = %cond.end148.thread, %cond.end148, %cond.end.i560, %sw.bb1.i563, %sw.default.i565
  %76 = phi ptr [ %73, %sw.default.i565 ], [ %73, %sw.bb1.i563 ], [ %73, %cond.end.i560 ], [ %71, %cond.end148.thread ], [ %73, %cond.end148 ]
  %retval.0.i566 = phi ptr [ null, %sw.default.i565 ], [ %75, %sw.bb1.i563 ], [ null, %cond.end.i560 ], [ null, %cond.end148.thread ], [ null, %cond.end148 ]
  %77 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call153 = call ptr @leval(ptr noundef %retval.0.i566, ptr noundef %77)
  %78 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i568 = icmp eq ptr %78, null
  br i1 %cmp.i568, label %car.exit594, label %cond.end.i573

cond.end.i573:                                    ; preds = %car.exit567
  %type.i569 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 1
  %79 = load i16, ptr %type.i569, align 2, !tbaa !14
  %conv.i570 = sext i16 %79 to i32
  switch i32 %conv.i570, label %sw.default.i579 [
    i32 0, label %car.exit594
    i32 1, label %cdr.exit581
  ]

sw.default.i579:                                  ; preds = %cond.end.i573
  %call.i578 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %78)
  br label %car.exit594

cdr.exit581:                                      ; preds = %cond.end.i573
  %cdr.i576 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 2, i32 0, i32 1
  %80 = load ptr, ptr %cdr.i576, align 8, !tbaa !9
  %cmp.i582 = icmp eq ptr %80, null
  br i1 %cmp.i582, label %car.exit594, label %cond.end.i587

cond.end.i587:                                    ; preds = %cdr.exit581
  %type.i583 = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 1
  %81 = load i16, ptr %type.i583, align 2, !tbaa !14
  %conv.i584 = sext i16 %81 to i32
  switch i32 %conv.i584, label %sw.default.i592 [
    i32 0, label %car.exit594
    i32 1, label %sw.bb1.i590
  ]

sw.bb1.i590:                                      ; preds = %cond.end.i587
  %storage_as.i589 = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 2
  %82 = load ptr, ptr %storage_as.i589, align 8, !tbaa !9
  br label %car.exit594

sw.default.i592:                                  ; preds = %cond.end.i587
  %call.i591 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %80)
  br label %car.exit594

car.exit594:                                      ; preds = %car.exit567, %cond.end.i573, %sw.default.i579, %cdr.exit581, %cond.end.i587, %sw.bb1.i590, %sw.default.i592
  %retval.0.i593 = phi ptr [ null, %sw.default.i592 ], [ %82, %sw.bb1.i590 ], [ null, %cond.end.i587 ], [ null, %cdr.exit581 ], [ null, %sw.default.i579 ], [ null, %cond.end.i573 ], [ null, %car.exit567 ]
  %83 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call156 = call ptr @leval(ptr noundef %retval.0.i593, ptr noundef %83)
  %call157 = call ptr %76(ptr noundef %call141, ptr noundef %call153, ptr noundef %call156) #33
  br label %cleanup

sw.bb158:                                         ; preds = %cond.end69
  %84 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr160 = getelementptr inbounds %struct.obj, ptr %84, i64 0, i32 2, i32 0, i32 1
  %85 = load ptr, ptr %cdr160, align 8, !tbaa !9
  store ptr %85, ptr %x.addr, align 8, !tbaa !5
  %cmp.i595 = icmp eq ptr %85, null
  br i1 %cmp.i595, label %car.exit607, label %cond.end.i600

cond.end.i600:                                    ; preds = %sw.bb158
  %type.i596 = getelementptr inbounds %struct.obj, ptr %85, i64 0, i32 1
  %86 = load i16, ptr %type.i596, align 2, !tbaa !14
  %conv.i597 = sext i16 %86 to i32
  switch i32 %conv.i597, label %sw.default.i605 [
    i32 0, label %car.exit607
    i32 1, label %sw.bb1.i603
  ]

sw.bb1.i603:                                      ; preds = %cond.end.i600
  %storage_as.i602 = getelementptr inbounds %struct.obj, ptr %85, i64 0, i32 2
  %87 = load ptr, ptr %storage_as.i602, align 8, !tbaa !9
  br label %car.exit607

sw.default.i605:                                  ; preds = %cond.end.i600
  %call.i604 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %85)
  br label %car.exit607

car.exit607:                                      ; preds = %sw.bb158, %cond.end.i600, %sw.bb1.i603, %sw.default.i605
  %retval.0.i606 = phi ptr [ null, %sw.default.i605 ], [ %87, %sw.bb1.i603 ], [ null, %cond.end.i600 ], [ null, %sw.bb158 ]
  %88 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call162 = call ptr @leval(ptr noundef %retval.0.i606, ptr noundef %88)
  %89 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp163 = icmp eq ptr %89, null
  br i1 %cmp163, label %cond.end169.thread, label %cond.end169

cond.end169.thread:                               ; preds = %car.exit607
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %f1721298 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %90 = load ptr, ptr %f1721298, align 8, !tbaa !9
  br label %car.exit620

cond.end169:                                      ; preds = %car.exit607
  %cdr168 = getelementptr inbounds %struct.obj, ptr %89, i64 0, i32 2, i32 0, i32 1
  %91 = load ptr, ptr %cdr168, align 8, !tbaa !9
  store ptr %91, ptr %x.addr, align 8, !tbaa !5
  %f172 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %92 = load ptr, ptr %f172, align 8, !tbaa !9
  %cmp.i608 = icmp eq ptr %91, null
  br i1 %cmp.i608, label %car.exit620, label %cond.end.i613

cond.end.i613:                                    ; preds = %cond.end169
  %type.i609 = getelementptr inbounds %struct.obj, ptr %91, i64 0, i32 1
  %93 = load i16, ptr %type.i609, align 2, !tbaa !14
  %conv.i610 = sext i16 %93 to i32
  switch i32 %conv.i610, label %sw.default.i618 [
    i32 0, label %car.exit620
    i32 1, label %sw.bb1.i616
  ]

sw.bb1.i616:                                      ; preds = %cond.end.i613
  %storage_as.i615 = getelementptr inbounds %struct.obj, ptr %91, i64 0, i32 2
  %94 = load ptr, ptr %storage_as.i615, align 8, !tbaa !9
  br label %car.exit620

sw.default.i618:                                  ; preds = %cond.end.i613
  %call.i617 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %91)
  br label %car.exit620

car.exit620:                                      ; preds = %cond.end169.thread, %cond.end169, %cond.end.i613, %sw.bb1.i616, %sw.default.i618
  %95 = phi ptr [ %92, %sw.default.i618 ], [ %92, %sw.bb1.i616 ], [ %92, %cond.end.i613 ], [ %90, %cond.end169.thread ], [ %92, %cond.end169 ]
  %retval.0.i619 = phi ptr [ null, %sw.default.i618 ], [ %94, %sw.bb1.i616 ], [ null, %cond.end.i613 ], [ null, %cond.end169.thread ], [ null, %cond.end169 ]
  %96 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call174 = call ptr @leval(ptr noundef %retval.0.i619, ptr noundef %96)
  %97 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i621 = icmp eq ptr %97, null
  br i1 %cmp.i621, label %car.exit647, label %cond.end.i626

cond.end.i626:                                    ; preds = %car.exit620
  %type.i622 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 1
  %98 = load i16, ptr %type.i622, align 2, !tbaa !14
  %conv.i623 = sext i16 %98 to i32
  switch i32 %conv.i623, label %sw.default.i632 [
    i32 0, label %car.exit647
    i32 1, label %cdr.exit634
  ]

sw.default.i632:                                  ; preds = %cond.end.i626
  %call.i631 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %97)
  br label %car.exit647

cdr.exit634:                                      ; preds = %cond.end.i626
  %cdr.i629 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 2, i32 0, i32 1
  %99 = load ptr, ptr %cdr.i629, align 8, !tbaa !9
  %cmp.i635 = icmp eq ptr %99, null
  br i1 %cmp.i635, label %car.exit647, label %cond.end.i640

cond.end.i640:                                    ; preds = %cdr.exit634
  %type.i636 = getelementptr inbounds %struct.obj, ptr %99, i64 0, i32 1
  %100 = load i16, ptr %type.i636, align 2, !tbaa !14
  %conv.i637 = sext i16 %100 to i32
  switch i32 %conv.i637, label %sw.default.i645 [
    i32 0, label %car.exit647
    i32 1, label %sw.bb1.i643
  ]

sw.bb1.i643:                                      ; preds = %cond.end.i640
  %storage_as.i642 = getelementptr inbounds %struct.obj, ptr %99, i64 0, i32 2
  %101 = load ptr, ptr %storage_as.i642, align 8, !tbaa !9
  br label %car.exit647

sw.default.i645:                                  ; preds = %cond.end.i640
  %call.i644 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %99)
  br label %car.exit647

car.exit647:                                      ; preds = %car.exit620, %cond.end.i626, %sw.default.i632, %cdr.exit634, %cond.end.i640, %sw.bb1.i643, %sw.default.i645
  %retval.0.i646 = phi ptr [ null, %sw.default.i645 ], [ %101, %sw.bb1.i643 ], [ null, %cond.end.i640 ], [ null, %cdr.exit634 ], [ null, %sw.default.i632 ], [ null, %cond.end.i626 ], [ null, %car.exit620 ]
  %102 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call177 = call ptr @leval(ptr noundef %retval.0.i646, ptr noundef %102)
  %103 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i648 = icmp eq ptr %103, null
  br i1 %cmp.i648, label %car.exit688, label %cond.end.i653

cond.end.i653:                                    ; preds = %car.exit647
  %type.i649 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 1
  %104 = load i16, ptr %type.i649, align 2, !tbaa !14
  %conv.i650 = sext i16 %104 to i32
  switch i32 %conv.i650, label %sw.default.i659 [
    i32 0, label %car.exit688
    i32 1, label %cdr.exit661
  ]

sw.default.i659:                                  ; preds = %cond.end.i653
  %call.i658 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %103)
  br label %car.exit688

cdr.exit661:                                      ; preds = %cond.end.i653
  %cdr.i656 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 2, i32 0, i32 1
  %105 = load ptr, ptr %cdr.i656, align 8, !tbaa !9
  %cmp.i662 = icmp eq ptr %105, null
  br i1 %cmp.i662, label %car.exit688, label %cond.end.i667

cond.end.i667:                                    ; preds = %cdr.exit661
  %type.i663 = getelementptr inbounds %struct.obj, ptr %105, i64 0, i32 1
  %106 = load i16, ptr %type.i663, align 2, !tbaa !14
  %conv.i664 = sext i16 %106 to i32
  switch i32 %conv.i664, label %sw.default.i673 [
    i32 0, label %car.exit688
    i32 1, label %cdr.exit675
  ]

sw.default.i673:                                  ; preds = %cond.end.i667
  %call.i672 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %105)
  br label %car.exit688

cdr.exit675:                                      ; preds = %cond.end.i667
  %cdr.i670 = getelementptr inbounds %struct.obj, ptr %105, i64 0, i32 2, i32 0, i32 1
  %107 = load ptr, ptr %cdr.i670, align 8, !tbaa !9
  %cmp.i676 = icmp eq ptr %107, null
  br i1 %cmp.i676, label %car.exit688, label %cond.end.i681

cond.end.i681:                                    ; preds = %cdr.exit675
  %type.i677 = getelementptr inbounds %struct.obj, ptr %107, i64 0, i32 1
  %108 = load i16, ptr %type.i677, align 2, !tbaa !14
  %conv.i678 = sext i16 %108 to i32
  switch i32 %conv.i678, label %sw.default.i686 [
    i32 0, label %car.exit688
    i32 1, label %sw.bb1.i684
  ]

sw.bb1.i684:                                      ; preds = %cond.end.i681
  %storage_as.i683 = getelementptr inbounds %struct.obj, ptr %107, i64 0, i32 2
  %109 = load ptr, ptr %storage_as.i683, align 8, !tbaa !9
  br label %car.exit688

sw.default.i686:                                  ; preds = %cond.end.i681
  %call.i685 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %107)
  br label %car.exit688

car.exit688:                                      ; preds = %car.exit647, %cond.end.i653, %sw.default.i659, %cdr.exit661, %cond.end.i667, %sw.default.i673, %cdr.exit675, %cond.end.i681, %sw.bb1.i684, %sw.default.i686
  %retval.0.i687 = phi ptr [ null, %sw.default.i686 ], [ %109, %sw.bb1.i684 ], [ null, %cond.end.i681 ], [ null, %cdr.exit675 ], [ null, %sw.default.i673 ], [ null, %cond.end.i667 ], [ null, %cdr.exit661 ], [ null, %sw.default.i659 ], [ null, %cond.end.i653 ], [ null, %car.exit647 ]
  %110 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call181 = call ptr @leval(ptr noundef %retval.0.i687, ptr noundef %110)
  %call182 = call ptr %95(ptr noundef %call162, ptr noundef %call174, ptr noundef %call177, ptr noundef %call181) #33
  br label %cleanup

sw.bb183:                                         ; preds = %cond.end69
  %111 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr185 = getelementptr inbounds %struct.obj, ptr %111, i64 0, i32 2, i32 0, i32 1
  %112 = load ptr, ptr %cdr185, align 8, !tbaa !9
  store ptr %112, ptr %x.addr, align 8, !tbaa !5
  %cmp.i689 = icmp eq ptr %112, null
  br i1 %cmp.i689, label %car.exit701, label %cond.end.i694

cond.end.i694:                                    ; preds = %sw.bb183
  %type.i690 = getelementptr inbounds %struct.obj, ptr %112, i64 0, i32 1
  %113 = load i16, ptr %type.i690, align 2, !tbaa !14
  %conv.i691 = sext i16 %113 to i32
  switch i32 %conv.i691, label %sw.default.i699 [
    i32 0, label %car.exit701
    i32 1, label %sw.bb1.i697
  ]

sw.bb1.i697:                                      ; preds = %cond.end.i694
  %storage_as.i696 = getelementptr inbounds %struct.obj, ptr %112, i64 0, i32 2
  %114 = load ptr, ptr %storage_as.i696, align 8, !tbaa !9
  br label %car.exit701

sw.default.i699:                                  ; preds = %cond.end.i694
  %call.i698 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %112)
  br label %car.exit701

car.exit701:                                      ; preds = %sw.bb183, %cond.end.i694, %sw.bb1.i697, %sw.default.i699
  %retval.0.i700 = phi ptr [ null, %sw.default.i699 ], [ %114, %sw.bb1.i697 ], [ null, %cond.end.i694 ], [ null, %sw.bb183 ]
  %115 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call187 = call ptr @leval(ptr noundef %retval.0.i700, ptr noundef %115)
  %116 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp188 = icmp eq ptr %116, null
  br i1 %cmp188, label %cond.end194.thread, label %cond.end194

cond.end194.thread:                               ; preds = %car.exit701
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %f1971323 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %117 = load ptr, ptr %f1971323, align 8, !tbaa !9
  br label %car.exit714

cond.end194:                                      ; preds = %car.exit701
  %cdr193 = getelementptr inbounds %struct.obj, ptr %116, i64 0, i32 2, i32 0, i32 1
  %118 = load ptr, ptr %cdr193, align 8, !tbaa !9
  store ptr %118, ptr %x.addr, align 8, !tbaa !5
  %f197 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %119 = load ptr, ptr %f197, align 8, !tbaa !9
  %cmp.i702 = icmp eq ptr %118, null
  br i1 %cmp.i702, label %car.exit714, label %cond.end.i707

cond.end.i707:                                    ; preds = %cond.end194
  %type.i703 = getelementptr inbounds %struct.obj, ptr %118, i64 0, i32 1
  %120 = load i16, ptr %type.i703, align 2, !tbaa !14
  %conv.i704 = sext i16 %120 to i32
  switch i32 %conv.i704, label %sw.default.i712 [
    i32 0, label %car.exit714
    i32 1, label %sw.bb1.i710
  ]

sw.bb1.i710:                                      ; preds = %cond.end.i707
  %storage_as.i709 = getelementptr inbounds %struct.obj, ptr %118, i64 0, i32 2
  %121 = load ptr, ptr %storage_as.i709, align 8, !tbaa !9
  br label %car.exit714

sw.default.i712:                                  ; preds = %cond.end.i707
  %call.i711 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %118)
  br label %car.exit714

car.exit714:                                      ; preds = %cond.end194.thread, %cond.end194, %cond.end.i707, %sw.bb1.i710, %sw.default.i712
  %122 = phi ptr [ %119, %sw.default.i712 ], [ %119, %sw.bb1.i710 ], [ %119, %cond.end.i707 ], [ %117, %cond.end194.thread ], [ %119, %cond.end194 ]
  %retval.0.i713 = phi ptr [ null, %sw.default.i712 ], [ %121, %sw.bb1.i710 ], [ null, %cond.end.i707 ], [ null, %cond.end194.thread ], [ null, %cond.end194 ]
  %123 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call199 = call ptr @leval(ptr noundef %retval.0.i713, ptr noundef %123)
  %124 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i715 = icmp eq ptr %124, null
  br i1 %cmp.i715, label %car.exit741, label %cond.end.i720

cond.end.i720:                                    ; preds = %car.exit714
  %type.i716 = getelementptr inbounds %struct.obj, ptr %124, i64 0, i32 1
  %125 = load i16, ptr %type.i716, align 2, !tbaa !14
  %conv.i717 = sext i16 %125 to i32
  switch i32 %conv.i717, label %sw.default.i726 [
    i32 0, label %car.exit741
    i32 1, label %cdr.exit728
  ]

sw.default.i726:                                  ; preds = %cond.end.i720
  %call.i725 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %124)
  br label %car.exit741

cdr.exit728:                                      ; preds = %cond.end.i720
  %cdr.i723 = getelementptr inbounds %struct.obj, ptr %124, i64 0, i32 2, i32 0, i32 1
  %126 = load ptr, ptr %cdr.i723, align 8, !tbaa !9
  %cmp.i729 = icmp eq ptr %126, null
  br i1 %cmp.i729, label %car.exit741, label %cond.end.i734

cond.end.i734:                                    ; preds = %cdr.exit728
  %type.i730 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 1
  %127 = load i16, ptr %type.i730, align 2, !tbaa !14
  %conv.i731 = sext i16 %127 to i32
  switch i32 %conv.i731, label %sw.default.i739 [
    i32 0, label %car.exit741
    i32 1, label %sw.bb1.i737
  ]

sw.bb1.i737:                                      ; preds = %cond.end.i734
  %storage_as.i736 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 2
  %128 = load ptr, ptr %storage_as.i736, align 8, !tbaa !9
  br label %car.exit741

sw.default.i739:                                  ; preds = %cond.end.i734
  %call.i738 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %126)
  br label %car.exit741

car.exit741:                                      ; preds = %car.exit714, %cond.end.i720, %sw.default.i726, %cdr.exit728, %cond.end.i734, %sw.bb1.i737, %sw.default.i739
  %retval.0.i740 = phi ptr [ null, %sw.default.i739 ], [ %128, %sw.bb1.i737 ], [ null, %cond.end.i734 ], [ null, %cdr.exit728 ], [ null, %sw.default.i726 ], [ null, %cond.end.i720 ], [ null, %car.exit714 ]
  %129 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call202 = call ptr @leval(ptr noundef %retval.0.i740, ptr noundef %129)
  %130 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i742 = icmp eq ptr %130, null
  br i1 %cmp.i742, label %car.exit782, label %cond.end.i747

cond.end.i747:                                    ; preds = %car.exit741
  %type.i743 = getelementptr inbounds %struct.obj, ptr %130, i64 0, i32 1
  %131 = load i16, ptr %type.i743, align 2, !tbaa !14
  %conv.i744 = sext i16 %131 to i32
  switch i32 %conv.i744, label %sw.default.i753 [
    i32 0, label %car.exit782
    i32 1, label %cdr.exit755
  ]

sw.default.i753:                                  ; preds = %cond.end.i747
  %call.i752 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %130)
  br label %car.exit782

cdr.exit755:                                      ; preds = %cond.end.i747
  %cdr.i750 = getelementptr inbounds %struct.obj, ptr %130, i64 0, i32 2, i32 0, i32 1
  %132 = load ptr, ptr %cdr.i750, align 8, !tbaa !9
  %cmp.i756 = icmp eq ptr %132, null
  br i1 %cmp.i756, label %car.exit782, label %cond.end.i761

cond.end.i761:                                    ; preds = %cdr.exit755
  %type.i757 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 1
  %133 = load i16, ptr %type.i757, align 2, !tbaa !14
  %conv.i758 = sext i16 %133 to i32
  switch i32 %conv.i758, label %sw.default.i767 [
    i32 0, label %car.exit782
    i32 1, label %cdr.exit769
  ]

sw.default.i767:                                  ; preds = %cond.end.i761
  %call.i766 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %132)
  br label %car.exit782

cdr.exit769:                                      ; preds = %cond.end.i761
  %cdr.i764 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 2, i32 0, i32 1
  %134 = load ptr, ptr %cdr.i764, align 8, !tbaa !9
  %cmp.i770 = icmp eq ptr %134, null
  br i1 %cmp.i770, label %car.exit782, label %cond.end.i775

cond.end.i775:                                    ; preds = %cdr.exit769
  %type.i771 = getelementptr inbounds %struct.obj, ptr %134, i64 0, i32 1
  %135 = load i16, ptr %type.i771, align 2, !tbaa !14
  %conv.i772 = sext i16 %135 to i32
  switch i32 %conv.i772, label %sw.default.i780 [
    i32 0, label %car.exit782
    i32 1, label %sw.bb1.i778
  ]

sw.bb1.i778:                                      ; preds = %cond.end.i775
  %storage_as.i777 = getelementptr inbounds %struct.obj, ptr %134, i64 0, i32 2
  %136 = load ptr, ptr %storage_as.i777, align 8, !tbaa !9
  br label %car.exit782

sw.default.i780:                                  ; preds = %cond.end.i775
  %call.i779 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %134)
  br label %car.exit782

car.exit782:                                      ; preds = %car.exit741, %cond.end.i747, %sw.default.i753, %cdr.exit755, %cond.end.i761, %sw.default.i767, %cdr.exit769, %cond.end.i775, %sw.bb1.i778, %sw.default.i780
  %retval.0.i781 = phi ptr [ null, %sw.default.i780 ], [ %136, %sw.bb1.i778 ], [ null, %cond.end.i775 ], [ null, %cdr.exit769 ], [ null, %sw.default.i767 ], [ null, %cond.end.i761 ], [ null, %cdr.exit755 ], [ null, %sw.default.i753 ], [ null, %cond.end.i747 ], [ null, %car.exit741 ]
  %137 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call206 = call ptr @leval(ptr noundef %retval.0.i781, ptr noundef %137)
  %138 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i783 = icmp eq ptr %138, null
  br i1 %cmp.i783, label %car.exit837, label %cond.end.i788

cond.end.i788:                                    ; preds = %car.exit782
  %type.i784 = getelementptr inbounds %struct.obj, ptr %138, i64 0, i32 1
  %139 = load i16, ptr %type.i784, align 2, !tbaa !14
  %conv.i785 = sext i16 %139 to i32
  switch i32 %conv.i785, label %sw.default.i794 [
    i32 0, label %car.exit837
    i32 1, label %cdr.exit796
  ]

sw.default.i794:                                  ; preds = %cond.end.i788
  %call.i793 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %138)
  br label %car.exit837

cdr.exit796:                                      ; preds = %cond.end.i788
  %cdr.i791 = getelementptr inbounds %struct.obj, ptr %138, i64 0, i32 2, i32 0, i32 1
  %140 = load ptr, ptr %cdr.i791, align 8, !tbaa !9
  %cmp.i797 = icmp eq ptr %140, null
  br i1 %cmp.i797, label %car.exit837, label %cond.end.i802

cond.end.i802:                                    ; preds = %cdr.exit796
  %type.i798 = getelementptr inbounds %struct.obj, ptr %140, i64 0, i32 1
  %141 = load i16, ptr %type.i798, align 2, !tbaa !14
  %conv.i799 = sext i16 %141 to i32
  switch i32 %conv.i799, label %sw.default.i808 [
    i32 0, label %car.exit837
    i32 1, label %cdr.exit810
  ]

sw.default.i808:                                  ; preds = %cond.end.i802
  %call.i807 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %140)
  br label %car.exit837

cdr.exit810:                                      ; preds = %cond.end.i802
  %cdr.i805 = getelementptr inbounds %struct.obj, ptr %140, i64 0, i32 2, i32 0, i32 1
  %142 = load ptr, ptr %cdr.i805, align 8, !tbaa !9
  %cmp.i811 = icmp eq ptr %142, null
  br i1 %cmp.i811, label %car.exit837, label %cond.end.i816

cond.end.i816:                                    ; preds = %cdr.exit810
  %type.i812 = getelementptr inbounds %struct.obj, ptr %142, i64 0, i32 1
  %143 = load i16, ptr %type.i812, align 2, !tbaa !14
  %conv.i813 = sext i16 %143 to i32
  switch i32 %conv.i813, label %sw.default.i822 [
    i32 0, label %car.exit837
    i32 1, label %cdr.exit824
  ]

sw.default.i822:                                  ; preds = %cond.end.i816
  %call.i821 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %142)
  br label %car.exit837

cdr.exit824:                                      ; preds = %cond.end.i816
  %cdr.i819 = getelementptr inbounds %struct.obj, ptr %142, i64 0, i32 2, i32 0, i32 1
  %144 = load ptr, ptr %cdr.i819, align 8, !tbaa !9
  %cmp.i825 = icmp eq ptr %144, null
  br i1 %cmp.i825, label %car.exit837, label %cond.end.i830

cond.end.i830:                                    ; preds = %cdr.exit824
  %type.i826 = getelementptr inbounds %struct.obj, ptr %144, i64 0, i32 1
  %145 = load i16, ptr %type.i826, align 2, !tbaa !14
  %conv.i827 = sext i16 %145 to i32
  switch i32 %conv.i827, label %sw.default.i835 [
    i32 0, label %car.exit837
    i32 1, label %sw.bb1.i833
  ]

sw.bb1.i833:                                      ; preds = %cond.end.i830
  %storage_as.i832 = getelementptr inbounds %struct.obj, ptr %144, i64 0, i32 2
  %146 = load ptr, ptr %storage_as.i832, align 8, !tbaa !9
  br label %car.exit837

sw.default.i835:                                  ; preds = %cond.end.i830
  %call.i834 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %144)
  br label %car.exit837

car.exit837:                                      ; preds = %car.exit782, %cond.end.i788, %sw.default.i794, %cdr.exit796, %cond.end.i802, %sw.default.i808, %cdr.exit810, %cond.end.i816, %sw.default.i822, %cdr.exit824, %cond.end.i830, %sw.bb1.i833, %sw.default.i835
  %retval.0.i836 = phi ptr [ null, %sw.default.i835 ], [ %146, %sw.bb1.i833 ], [ null, %cond.end.i830 ], [ null, %cdr.exit824 ], [ null, %sw.default.i822 ], [ null, %cond.end.i816 ], [ null, %cdr.exit810 ], [ null, %sw.default.i808 ], [ null, %cond.end.i802 ], [ null, %cdr.exit796 ], [ null, %sw.default.i794 ], [ null, %cond.end.i788 ], [ null, %car.exit782 ]
  %147 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call211 = call ptr @leval(ptr noundef %retval.0.i836, ptr noundef %147)
  %call212 = call ptr %122(ptr noundef %call187, ptr noundef %call199, ptr noundef %call202, ptr noundef %call206, ptr noundef %call211) #33
  br label %cleanup

sw.bb213:                                         ; preds = %cond.end69
  %f215 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %148 = load ptr, ptr %f215, align 8, !tbaa !9
  %149 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr217 = getelementptr inbounds %struct.obj, ptr %149, i64 0, i32 2, i32 0, i32 1
  %150 = load ptr, ptr %cdr217, align 8, !tbaa !9
  %151 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call218 = call ptr @leval_args(ptr noundef %150, ptr noundef %151)
  %call219 = call ptr %148(ptr noundef %call218) #33
  br label %cleanup

sw.bb220:                                         ; preds = %cond.end69
  %f222 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %152 = load ptr, ptr %f222, align 8, !tbaa !9
  %153 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr224 = getelementptr inbounds %struct.obj, ptr %153, i64 0, i32 2, i32 0, i32 1
  %154 = load ptr, ptr %cdr224, align 8, !tbaa !9
  %155 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call225 = call ptr %152(ptr noundef %154, ptr noundef %155) #33
  br label %cleanup

sw.bb226:                                         ; preds = %cond.end69
  %f228 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %156 = load ptr, ptr %f228, align 8, !tbaa !9
  %call229 = call ptr %156(ptr noundef nonnull %x.addr, ptr noundef nonnull %env.addr) #33
  %cmp230 = icmp eq ptr %call229, null
  br i1 %cmp230, label %if.then232, label %loop.backedge

if.then232:                                       ; preds = %sw.bb226
  %157 = load ptr, ptr %x.addr, align 8, !tbaa !5
  br label %cleanup

sw.bb234:                                         ; preds = %cond.end69
  %storage_as235 = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2
  %code = getelementptr inbounds %struct.obj, ptr %tmp.01253, i64 0, i32 2, i32 0, i32 1
  %158 = load ptr, ptr %code, align 8, !tbaa !9
  %cmp236 = icmp eq ptr %158, null
  br i1 %cmp236, label %sw.default, label %cond.end244

cond.end244:                                      ; preds = %sw.bb234
  %type242 = getelementptr inbounds %struct.obj, ptr %158, i64 0, i32 1
  %159 = load i16, ptr %type242, align 2, !tbaa !14
  %conv243 = sext i16 %159 to i32
  switch i32 %conv243, label %sw.default [
    i32 1, label %sw.bb246
    i32 5, label %sw.bb261
    i32 6, label %sw.bb269
    i32 7, label %sw.bb281
    i32 19, label %sw.bb303
    i32 20, label %sw.bb328
    i32 8, label %sw.bb357
  ]

sw.bb246:                                         ; preds = %cond.end244
  %160 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr248 = getelementptr inbounds %struct.obj, ptr %160, i64 0, i32 2, i32 0, i32 1
  %161 = load ptr, ptr %cdr248, align 8, !tbaa !9
  %162 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call249 = call ptr @leval_args(ptr noundef %161, ptr noundef %162)
  %163 = load ptr, ptr %code, align 8, !tbaa !9
  %storage_as252 = getelementptr inbounds %struct.obj, ptr %163, i64 0, i32 2
  %164 = load ptr, ptr %storage_as252, align 8, !tbaa !9
  %165 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  %cmp.i838 = icmp eq ptr %164, null
  br i1 %cmp.i838, label %if.end.i, label %cond.end.i843

cond.end.i843:                                    ; preds = %sw.bb246
  %type.i839 = getelementptr inbounds %struct.obj, ptr %164, i64 0, i32 1
  %166 = load i16, ptr %type.i839, align 2, !tbaa !14
  %cmp1.i = icmp eq i16 %166, 3
  br i1 %cmp1.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end.i843
  %167 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1219 = icmp eq i64 %167, 1
  br i1 %cmp.i1219, label %if.then.i1221, label %if.else.i1227

if.then.i1221:                                    ; preds = %if.then.i
  %168 = load ptr, ptr @heap, align 8, !tbaa !5
  %169 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1220.not = icmp ult ptr %168, %169
  br i1 %cmp1.i1220.not, label %if.end.i1225, label %if.then2.i1223

if.then2.i1223:                                   ; preds = %if.then.i1221
  %call.i.i1222 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1225

if.end.i1225:                                     ; preds = %if.then2.i1223, %if.then.i1221
  %add.ptr.i1224 = getelementptr inbounds %struct.obj, ptr %168, i64 1
  store ptr %add.ptr.i1224, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1237

if.else.i1227:                                    ; preds = %if.then.i
  %170 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1226 = icmp eq ptr %170, null
  br i1 %cmp3.i1226, label %if.then4.i1228, label %if.end5.i1232

if.then4.i1228:                                   ; preds = %if.else.i1227
  call void @gc_for_newcell()
  %.pre1545 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1232

if.end5.i1232:                                    ; preds = %if.then4.i1228, %if.else.i1227
  %171 = phi ptr [ %.pre1545, %if.then4.i1228 ], [ %170, %if.else.i1227 ]
  %cdr.i1230 = getelementptr inbounds %struct.obj, ptr %171, i64 0, i32 2, i32 0, i32 1
  %172 = load ptr, ptr %cdr.i1230, align 8, !tbaa !9
  store ptr %172, ptr @freelist, align 8, !tbaa !5
  %173 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1231 = add nsw i64 %173, 1
  store i64 %inc.i1231, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1237

cons.exit1237:                                    ; preds = %if.end.i1225, %if.end5.i1232
  %z.0.i1233 = phi ptr [ %168, %if.end.i1225 ], [ %171, %if.end5.i1232 ]
  store i16 0, ptr %z.0.i1233, align 8, !tbaa !35
  %type.i1234 = getelementptr inbounds %struct.obj, ptr %z.0.i1233, i64 0, i32 1
  store i16 1, ptr %type.i1234, align 2, !tbaa !14
  %storage_as7.i1235 = getelementptr inbounds %struct.obj, ptr %z.0.i1233, i64 0, i32 2
  store ptr %164, ptr %storage_as7.i1235, align 8, !tbaa !9
  %cdr9.i1236 = getelementptr inbounds %struct.obj, ptr %z.0.i1233, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i1236, align 8, !tbaa !9
  %174 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1200 = icmp eq i64 %174, 1
  br i1 %cmp.i1200, label %if.then.i1202, label %if.else.i1208

if.then.i1202:                                    ; preds = %cons.exit1237
  %175 = load ptr, ptr @heap, align 8, !tbaa !5
  %176 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1201.not = icmp ult ptr %175, %176
  br i1 %cmp1.i1201.not, label %if.end.i1206, label %if.then2.i1204

if.then2.i1204:                                   ; preds = %if.then.i1202
  %call.i.i1203 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1206

if.end.i1206:                                     ; preds = %if.then2.i1204, %if.then.i1202
  %add.ptr.i1205 = getelementptr inbounds %struct.obj, ptr %175, i64 1
  store ptr %add.ptr.i1205, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1218

if.else.i1208:                                    ; preds = %cons.exit1237
  %177 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1207 = icmp eq ptr %177, null
  br i1 %cmp3.i1207, label %if.then4.i1209, label %if.end5.i1213

if.then4.i1209:                                   ; preds = %if.else.i1208
  call void @gc_for_newcell()
  %.pre1546 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1213

if.end5.i1213:                                    ; preds = %if.then4.i1209, %if.else.i1208
  %178 = phi ptr [ %.pre1546, %if.then4.i1209 ], [ %177, %if.else.i1208 ]
  %cdr.i1211 = getelementptr inbounds %struct.obj, ptr %178, i64 0, i32 2, i32 0, i32 1
  %179 = load ptr, ptr %cdr.i1211, align 8, !tbaa !9
  store ptr %179, ptr @freelist, align 8, !tbaa !5
  %180 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1212 = add nsw i64 %180, 1
  store i64 %inc.i1212, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1218

cons.exit1218:                                    ; preds = %if.end.i1206, %if.end5.i1213
  %z.0.i1214 = phi ptr [ %175, %if.end.i1206 ], [ %178, %if.end5.i1213 ]
  store i16 0, ptr %z.0.i1214, align 8, !tbaa !35
  %type.i1215 = getelementptr inbounds %struct.obj, ptr %z.0.i1214, i64 0, i32 1
  store i16 1, ptr %type.i1215, align 2, !tbaa !14
  %storage_as7.i1216 = getelementptr inbounds %struct.obj, ptr %z.0.i1214, i64 0, i32 2
  store ptr %call249, ptr %storage_as7.i1216, align 8, !tbaa !9
  %cdr9.i1217 = getelementptr inbounds %struct.obj, ptr %z.0.i1214, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i1217, align 8, !tbaa !9
  %181 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1181 = icmp eq i64 %181, 1
  br i1 %cmp.i1181, label %if.then.i1183, label %if.else.i1189

if.then.i1183:                                    ; preds = %cons.exit1218
  %182 = load ptr, ptr @heap, align 8, !tbaa !5
  %183 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1182.not = icmp ult ptr %182, %183
  br i1 %cmp1.i1182.not, label %if.end.i1187, label %if.then2.i1185

if.then2.i1185:                                   ; preds = %if.then.i1183
  %call.i.i1184 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1187

if.end.i1187:                                     ; preds = %if.then2.i1185, %if.then.i1183
  %add.ptr.i1186 = getelementptr inbounds %struct.obj, ptr %182, i64 1
  store ptr %add.ptr.i1186, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1199

if.else.i1189:                                    ; preds = %cons.exit1218
  %184 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1188 = icmp eq ptr %184, null
  br i1 %cmp3.i1188, label %if.then4.i1190, label %if.end5.i1194

if.then4.i1190:                                   ; preds = %if.else.i1189
  call void @gc_for_newcell()
  %.pre1547 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1194

if.end5.i1194:                                    ; preds = %if.then4.i1190, %if.else.i1189
  %185 = phi ptr [ %.pre1547, %if.then4.i1190 ], [ %184, %if.else.i1189 ]
  %cdr.i1192 = getelementptr inbounds %struct.obj, ptr %185, i64 0, i32 2, i32 0, i32 1
  %186 = load ptr, ptr %cdr.i1192, align 8, !tbaa !9
  store ptr %186, ptr @freelist, align 8, !tbaa !5
  %187 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1193 = add nsw i64 %187, 1
  store i64 %inc.i1193, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1199

cons.exit1199:                                    ; preds = %if.end.i1187, %if.end5.i1194
  %z.0.i1195 = phi ptr [ %182, %if.end.i1187 ], [ %185, %if.end5.i1194 ]
  store i16 0, ptr %z.0.i1195, align 8, !tbaa !35
  %type.i1196 = getelementptr inbounds %struct.obj, ptr %z.0.i1195, i64 0, i32 1
  store i16 1, ptr %type.i1196, align 2, !tbaa !14
  %storage_as7.i1197 = getelementptr inbounds %struct.obj, ptr %z.0.i1195, i64 0, i32 2
  store ptr %z.0.i1233, ptr %storage_as7.i1197, align 8, !tbaa !9
  %cdr9.i1198 = getelementptr inbounds %struct.obj, ptr %z.0.i1195, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i1214, ptr %cdr9.i1198, align 8, !tbaa !9
  %188 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1162 = icmp eq i64 %188, 1
  br i1 %cmp.i1162, label %if.then.i1164, label %if.else.i1170

if.then.i1164:                                    ; preds = %cons.exit1199
  %189 = load ptr, ptr @heap, align 8, !tbaa !5
  %190 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1163.not = icmp ult ptr %189, %190
  br i1 %cmp1.i1163.not, label %if.end.i1168, label %if.then2.i1166

if.then2.i1166:                                   ; preds = %if.then.i1164
  %call.i.i1165 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1168

if.end.i1168:                                     ; preds = %if.then2.i1166, %if.then.i1164
  %add.ptr.i1167 = getelementptr inbounds %struct.obj, ptr %189, i64 1
  store ptr %add.ptr.i1167, ptr @heap, align 8, !tbaa !5
  br label %extend_env.exit

if.else.i1170:                                    ; preds = %cons.exit1199
  %191 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1169 = icmp eq ptr %191, null
  br i1 %cmp3.i1169, label %if.then4.i1171, label %if.end5.i1175

if.then4.i1171:                                   ; preds = %if.else.i1170
  call void @gc_for_newcell()
  %.pre1548 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1175

if.end5.i1175:                                    ; preds = %if.then4.i1171, %if.else.i1170
  %192 = phi ptr [ %.pre1548, %if.then4.i1171 ], [ %191, %if.else.i1170 ]
  %cdr.i1173 = getelementptr inbounds %struct.obj, ptr %192, i64 0, i32 2, i32 0, i32 1
  %193 = load ptr, ptr %cdr.i1173, align 8, !tbaa !9
  store ptr %193, ptr @freelist, align 8, !tbaa !5
  %194 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1174 = add nsw i64 %194, 1
  store i64 %inc.i1174, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %extend_env.exit

if.end.i:                                         ; preds = %sw.bb246, %cond.end.i843
  %195 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1143 = icmp eq i64 %195, 1
  br i1 %cmp.i1143, label %if.then.i1145, label %if.else.i1151

if.then.i1145:                                    ; preds = %if.end.i
  %196 = load ptr, ptr @heap, align 8, !tbaa !5
  %197 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1144.not = icmp ult ptr %196, %197
  br i1 %cmp1.i1144.not, label %if.end.i1149, label %if.then2.i1147

if.then2.i1147:                                   ; preds = %if.then.i1145
  %call.i.i1146 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1149

if.end.i1149:                                     ; preds = %if.then2.i1147, %if.then.i1145
  %add.ptr.i1148 = getelementptr inbounds %struct.obj, ptr %196, i64 1
  store ptr %add.ptr.i1148, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1161

if.else.i1151:                                    ; preds = %if.end.i
  %198 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1150 = icmp eq ptr %198, null
  br i1 %cmp3.i1150, label %if.then4.i1152, label %if.end5.i1156

if.then4.i1152:                                   ; preds = %if.else.i1151
  call void @gc_for_newcell()
  %.pre1549 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1156

if.end5.i1156:                                    ; preds = %if.then4.i1152, %if.else.i1151
  %199 = phi ptr [ %.pre1549, %if.then4.i1152 ], [ %198, %if.else.i1151 ]
  %cdr.i1154 = getelementptr inbounds %struct.obj, ptr %199, i64 0, i32 2, i32 0, i32 1
  %200 = load ptr, ptr %cdr.i1154, align 8, !tbaa !9
  store ptr %200, ptr @freelist, align 8, !tbaa !5
  %201 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1155 = add nsw i64 %201, 1
  store i64 %inc.i1155, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1161

cons.exit1161:                                    ; preds = %if.end.i1149, %if.end5.i1156
  %z.0.i1157 = phi ptr [ %196, %if.end.i1149 ], [ %199, %if.end5.i1156 ]
  store i16 0, ptr %z.0.i1157, align 8, !tbaa !35
  %type.i1158 = getelementptr inbounds %struct.obj, ptr %z.0.i1157, i64 0, i32 1
  store i16 1, ptr %type.i1158, align 2, !tbaa !14
  %storage_as7.i1159 = getelementptr inbounds %struct.obj, ptr %z.0.i1157, i64 0, i32 2
  store ptr %164, ptr %storage_as7.i1159, align 8, !tbaa !9
  %cdr9.i1160 = getelementptr inbounds %struct.obj, ptr %z.0.i1157, i64 0, i32 2, i32 0, i32 1
  store ptr %call249, ptr %cdr9.i1160, align 8, !tbaa !9
  %202 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1124 = icmp eq i64 %202, 1
  br i1 %cmp.i1124, label %if.then.i1126, label %if.else.i1132

if.then.i1126:                                    ; preds = %cons.exit1161
  %203 = load ptr, ptr @heap, align 8, !tbaa !5
  %204 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1125.not = icmp ult ptr %203, %204
  br i1 %cmp1.i1125.not, label %if.end.i1130, label %if.then2.i1128

if.then2.i1128:                                   ; preds = %if.then.i1126
  %call.i.i1127 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1130

if.end.i1130:                                     ; preds = %if.then2.i1128, %if.then.i1126
  %add.ptr.i1129 = getelementptr inbounds %struct.obj, ptr %203, i64 1
  store ptr %add.ptr.i1129, ptr @heap, align 8, !tbaa !5
  br label %extend_env.exit

if.else.i1132:                                    ; preds = %cons.exit1161
  %205 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1131 = icmp eq ptr %205, null
  br i1 %cmp3.i1131, label %if.then4.i1133, label %if.end5.i1137

if.then4.i1133:                                   ; preds = %if.else.i1132
  call void @gc_for_newcell()
  %.pre1550 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1137

if.end5.i1137:                                    ; preds = %if.then4.i1133, %if.else.i1132
  %206 = phi ptr [ %.pre1550, %if.then4.i1133 ], [ %205, %if.else.i1132 ]
  %cdr.i1135 = getelementptr inbounds %struct.obj, ptr %206, i64 0, i32 2, i32 0, i32 1
  %207 = load ptr, ptr %cdr.i1135, align 8, !tbaa !9
  store ptr %207, ptr @freelist, align 8, !tbaa !5
  %208 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1136 = add nsw i64 %208, 1
  store i64 %inc.i1136, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %extend_env.exit

extend_env.exit:                                  ; preds = %if.end5.i1137, %if.end.i1130, %if.end5.i1175, %if.end.i1168
  %z.0.i1176.sink1613 = phi ptr [ %189, %if.end.i1168 ], [ %192, %if.end5.i1175 ], [ %203, %if.end.i1130 ], [ %206, %if.end5.i1137 ]
  %z.0.i1195.sink = phi ptr [ %z.0.i1195, %if.end.i1168 ], [ %z.0.i1195, %if.end5.i1175 ], [ %z.0.i1157, %if.end.i1130 ], [ %z.0.i1157, %if.end5.i1137 ]
  store i16 0, ptr %z.0.i1176.sink1613, align 8, !tbaa !35
  %type.i1177 = getelementptr inbounds %struct.obj, ptr %z.0.i1176.sink1613, i64 0, i32 1
  store i16 1, ptr %type.i1177, align 2, !tbaa !14
  %storage_as7.i1178 = getelementptr inbounds %struct.obj, ptr %z.0.i1176.sink1613, i64 0, i32 2
  store ptr %z.0.i1195.sink, ptr %storage_as7.i1178, align 8, !tbaa !9
  %cdr9.i1179 = getelementptr inbounds %struct.obj, ptr %z.0.i1176.sink1613, i64 0, i32 2, i32 0, i32 1
  store ptr %165, ptr %cdr9.i1179, align 8, !tbaa !9
  store ptr %z.0.i1176.sink1613, ptr %env.addr, align 8, !tbaa !5
  %209 = load ptr, ptr %code, align 8, !tbaa !9
  %cdr260 = getelementptr inbounds %struct.obj, ptr %209, i64 0, i32 2, i32 0, i32 1
  %210 = load ptr, ptr %cdr260, align 8, !tbaa !9
  store ptr %210, ptr %x.addr, align 8, !tbaa !5
  br label %loop.backedge

loop.backedge:                                    ; preds = %extend_env.exit, %cons.exit1115, %sw.bb226, %if.then388
  br label %loop

sw.bb261:                                         ; preds = %cond.end244
  %f265 = getelementptr inbounds %struct.obj, ptr %158, i64 0, i32 2, i32 0, i32 1
  %211 = load ptr, ptr %f265, align 8, !tbaa !9
  %212 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  %call268 = call ptr %211(ptr noundef %212) #33
  br label %cleanup

sw.bb269:                                         ; preds = %cond.end244
  %213 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr271 = getelementptr inbounds %struct.obj, ptr %213, i64 0, i32 2, i32 0, i32 1
  %214 = load ptr, ptr %cdr271, align 8, !tbaa !9
  store ptr %214, ptr %x.addr, align 8, !tbaa !5
  %cmp.i846 = icmp eq ptr %214, null
  br i1 %cmp.i846, label %car.exit858, label %cond.end.i851

cond.end.i851:                                    ; preds = %sw.bb269
  %type.i847 = getelementptr inbounds %struct.obj, ptr %214, i64 0, i32 1
  %215 = load i16, ptr %type.i847, align 2, !tbaa !14
  %conv.i848 = sext i16 %215 to i32
  switch i32 %conv.i848, label %sw.default.i856 [
    i32 0, label %car.exit858
    i32 1, label %sw.bb1.i854
  ]

sw.bb1.i854:                                      ; preds = %cond.end.i851
  %storage_as.i853 = getelementptr inbounds %struct.obj, ptr %214, i64 0, i32 2
  %216 = load ptr, ptr %storage_as.i853, align 8, !tbaa !9
  br label %car.exit858

sw.default.i856:                                  ; preds = %cond.end.i851
  %call.i855 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %214)
  br label %car.exit858

car.exit858:                                      ; preds = %sw.bb269, %cond.end.i851, %sw.bb1.i854, %sw.default.i856
  %retval.0.i857 = phi ptr [ null, %sw.default.i856 ], [ %216, %sw.bb1.i854 ], [ null, %cond.end.i851 ], [ null, %sw.bb269 ]
  %217 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call273 = call ptr @leval(ptr noundef %retval.0.i857, ptr noundef %217)
  %218 = load ptr, ptr %code, align 8, !tbaa !9
  %f277 = getelementptr inbounds %struct.obj, ptr %218, i64 0, i32 2, i32 0, i32 1
  %219 = load ptr, ptr %f277, align 8, !tbaa !9
  %220 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  %call280 = call ptr %219(ptr noundef %220, ptr noundef %call273) #33
  br label %cleanup

sw.bb281:                                         ; preds = %cond.end244
  %221 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr283 = getelementptr inbounds %struct.obj, ptr %221, i64 0, i32 2, i32 0, i32 1
  %222 = load ptr, ptr %cdr283, align 8, !tbaa !9
  store ptr %222, ptr %x.addr, align 8, !tbaa !5
  %cmp.i859 = icmp eq ptr %222, null
  br i1 %cmp.i859, label %car.exit871, label %cond.end.i864

cond.end.i864:                                    ; preds = %sw.bb281
  %type.i860 = getelementptr inbounds %struct.obj, ptr %222, i64 0, i32 1
  %223 = load i16, ptr %type.i860, align 2, !tbaa !14
  %conv.i861 = sext i16 %223 to i32
  switch i32 %conv.i861, label %sw.default.i869 [
    i32 0, label %car.exit871
    i32 1, label %sw.bb1.i867
  ]

sw.bb1.i867:                                      ; preds = %cond.end.i864
  %storage_as.i866 = getelementptr inbounds %struct.obj, ptr %222, i64 0, i32 2
  %224 = load ptr, ptr %storage_as.i866, align 8, !tbaa !9
  br label %car.exit871

sw.default.i869:                                  ; preds = %cond.end.i864
  %call.i868 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %222)
  br label %car.exit871

car.exit871:                                      ; preds = %sw.bb281, %cond.end.i864, %sw.bb1.i867, %sw.default.i869
  %retval.0.i870 = phi ptr [ null, %sw.default.i869 ], [ %224, %sw.bb1.i867 ], [ null, %cond.end.i864 ], [ null, %sw.bb281 ]
  %225 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call285 = call ptr @leval(ptr noundef %retval.0.i870, ptr noundef %225)
  %226 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp286 = icmp eq ptr %226, null
  br i1 %cmp286, label %cond.end292.thread, label %cond.end292

cond.end292.thread:                               ; preds = %car.exit871
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %227 = load ptr, ptr %code, align 8, !tbaa !9
  %f2971368 = getelementptr inbounds %struct.obj, ptr %227, i64 0, i32 2, i32 0, i32 1
  %228 = load ptr, ptr %f2971368, align 8, !tbaa !9
  %229 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  br label %car.exit884

cond.end292:                                      ; preds = %car.exit871
  %cdr291 = getelementptr inbounds %struct.obj, ptr %226, i64 0, i32 2, i32 0, i32 1
  %230 = load ptr, ptr %cdr291, align 8, !tbaa !9
  store ptr %230, ptr %x.addr, align 8, !tbaa !5
  %231 = load ptr, ptr %code, align 8, !tbaa !9
  %f297 = getelementptr inbounds %struct.obj, ptr %231, i64 0, i32 2, i32 0, i32 1
  %232 = load ptr, ptr %f297, align 8, !tbaa !9
  %233 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  %cmp.i872 = icmp eq ptr %230, null
  br i1 %cmp.i872, label %car.exit884, label %cond.end.i877

cond.end.i877:                                    ; preds = %cond.end292
  %type.i873 = getelementptr inbounds %struct.obj, ptr %230, i64 0, i32 1
  %234 = load i16, ptr %type.i873, align 2, !tbaa !14
  %conv.i874 = sext i16 %234 to i32
  switch i32 %conv.i874, label %sw.default.i882 [
    i32 0, label %car.exit884
    i32 1, label %sw.bb1.i880
  ]

sw.bb1.i880:                                      ; preds = %cond.end.i877
  %storage_as.i879 = getelementptr inbounds %struct.obj, ptr %230, i64 0, i32 2
  %235 = load ptr, ptr %storage_as.i879, align 8, !tbaa !9
  br label %car.exit884

sw.default.i882:                                  ; preds = %cond.end.i877
  %call.i881 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %230)
  br label %car.exit884

car.exit884:                                      ; preds = %cond.end292.thread, %cond.end292, %cond.end.i877, %sw.bb1.i880, %sw.default.i882
  %236 = phi ptr [ %232, %sw.default.i882 ], [ %232, %sw.bb1.i880 ], [ %232, %cond.end.i877 ], [ %228, %cond.end292.thread ], [ %232, %cond.end292 ]
  %237 = phi ptr [ %233, %sw.default.i882 ], [ %233, %sw.bb1.i880 ], [ %233, %cond.end.i877 ], [ %229, %cond.end292.thread ], [ %233, %cond.end292 ]
  %retval.0.i883 = phi ptr [ null, %sw.default.i882 ], [ %235, %sw.bb1.i880 ], [ null, %cond.end.i877 ], [ null, %cond.end292.thread ], [ null, %cond.end292 ]
  %238 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call301 = call ptr @leval(ptr noundef %retval.0.i883, ptr noundef %238)
  %call302 = call ptr %236(ptr noundef %237, ptr noundef %call285, ptr noundef %call301) #33
  br label %cleanup

sw.bb303:                                         ; preds = %cond.end244
  %239 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr305 = getelementptr inbounds %struct.obj, ptr %239, i64 0, i32 2, i32 0, i32 1
  %240 = load ptr, ptr %cdr305, align 8, !tbaa !9
  store ptr %240, ptr %x.addr, align 8, !tbaa !5
  %cmp.i885 = icmp eq ptr %240, null
  br i1 %cmp.i885, label %car.exit897, label %cond.end.i890

cond.end.i890:                                    ; preds = %sw.bb303
  %type.i886 = getelementptr inbounds %struct.obj, ptr %240, i64 0, i32 1
  %241 = load i16, ptr %type.i886, align 2, !tbaa !14
  %conv.i887 = sext i16 %241 to i32
  switch i32 %conv.i887, label %sw.default.i895 [
    i32 0, label %car.exit897
    i32 1, label %sw.bb1.i893
  ]

sw.bb1.i893:                                      ; preds = %cond.end.i890
  %storage_as.i892 = getelementptr inbounds %struct.obj, ptr %240, i64 0, i32 2
  %242 = load ptr, ptr %storage_as.i892, align 8, !tbaa !9
  br label %car.exit897

sw.default.i895:                                  ; preds = %cond.end.i890
  %call.i894 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %240)
  br label %car.exit897

car.exit897:                                      ; preds = %sw.bb303, %cond.end.i890, %sw.bb1.i893, %sw.default.i895
  %retval.0.i896 = phi ptr [ null, %sw.default.i895 ], [ %242, %sw.bb1.i893 ], [ null, %cond.end.i890 ], [ null, %sw.bb303 ]
  %243 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call307 = call ptr @leval(ptr noundef %retval.0.i896, ptr noundef %243)
  %244 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp308 = icmp eq ptr %244, null
  br i1 %cmp308, label %cond.end314.thread, label %cond.end314

cond.end314.thread:                               ; preds = %car.exit897
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %245 = load ptr, ptr %code, align 8, !tbaa !9
  %f3191377 = getelementptr inbounds %struct.obj, ptr %245, i64 0, i32 2, i32 0, i32 1
  %246 = load ptr, ptr %f3191377, align 8, !tbaa !9
  %247 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  br label %car.exit910

cond.end314:                                      ; preds = %car.exit897
  %cdr313 = getelementptr inbounds %struct.obj, ptr %244, i64 0, i32 2, i32 0, i32 1
  %248 = load ptr, ptr %cdr313, align 8, !tbaa !9
  store ptr %248, ptr %x.addr, align 8, !tbaa !5
  %249 = load ptr, ptr %code, align 8, !tbaa !9
  %f319 = getelementptr inbounds %struct.obj, ptr %249, i64 0, i32 2, i32 0, i32 1
  %250 = load ptr, ptr %f319, align 8, !tbaa !9
  %251 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  %cmp.i898 = icmp eq ptr %248, null
  br i1 %cmp.i898, label %car.exit910, label %cond.end.i903

cond.end.i903:                                    ; preds = %cond.end314
  %type.i899 = getelementptr inbounds %struct.obj, ptr %248, i64 0, i32 1
  %252 = load i16, ptr %type.i899, align 2, !tbaa !14
  %conv.i900 = sext i16 %252 to i32
  switch i32 %conv.i900, label %sw.default.i908 [
    i32 0, label %car.exit910
    i32 1, label %sw.bb1.i906
  ]

sw.bb1.i906:                                      ; preds = %cond.end.i903
  %storage_as.i905 = getelementptr inbounds %struct.obj, ptr %248, i64 0, i32 2
  %253 = load ptr, ptr %storage_as.i905, align 8, !tbaa !9
  br label %car.exit910

sw.default.i908:                                  ; preds = %cond.end.i903
  %call.i907 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %248)
  br label %car.exit910

car.exit910:                                      ; preds = %cond.end314.thread, %cond.end314, %cond.end.i903, %sw.bb1.i906, %sw.default.i908
  %254 = phi ptr [ %250, %sw.default.i908 ], [ %250, %sw.bb1.i906 ], [ %250, %cond.end.i903 ], [ %246, %cond.end314.thread ], [ %250, %cond.end314 ]
  %255 = phi ptr [ %251, %sw.default.i908 ], [ %251, %sw.bb1.i906 ], [ %251, %cond.end.i903 ], [ %247, %cond.end314.thread ], [ %251, %cond.end314 ]
  %retval.0.i909 = phi ptr [ null, %sw.default.i908 ], [ %253, %sw.bb1.i906 ], [ null, %cond.end.i903 ], [ null, %cond.end314.thread ], [ null, %cond.end314 ]
  %256 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call323 = call ptr @leval(ptr noundef %retval.0.i909, ptr noundef %256)
  %257 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i911 = icmp eq ptr %257, null
  br i1 %cmp.i911, label %car.exit937, label %cond.end.i916

cond.end.i916:                                    ; preds = %car.exit910
  %type.i912 = getelementptr inbounds %struct.obj, ptr %257, i64 0, i32 1
  %258 = load i16, ptr %type.i912, align 2, !tbaa !14
  %conv.i913 = sext i16 %258 to i32
  switch i32 %conv.i913, label %sw.default.i922 [
    i32 0, label %car.exit937
    i32 1, label %cdr.exit924
  ]

sw.default.i922:                                  ; preds = %cond.end.i916
  %call.i921 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %257)
  br label %car.exit937

cdr.exit924:                                      ; preds = %cond.end.i916
  %cdr.i919 = getelementptr inbounds %struct.obj, ptr %257, i64 0, i32 2, i32 0, i32 1
  %259 = load ptr, ptr %cdr.i919, align 8, !tbaa !9
  %cmp.i925 = icmp eq ptr %259, null
  br i1 %cmp.i925, label %car.exit937, label %cond.end.i930

cond.end.i930:                                    ; preds = %cdr.exit924
  %type.i926 = getelementptr inbounds %struct.obj, ptr %259, i64 0, i32 1
  %260 = load i16, ptr %type.i926, align 2, !tbaa !14
  %conv.i927 = sext i16 %260 to i32
  switch i32 %conv.i927, label %sw.default.i935 [
    i32 0, label %car.exit937
    i32 1, label %sw.bb1.i933
  ]

sw.bb1.i933:                                      ; preds = %cond.end.i930
  %storage_as.i932 = getelementptr inbounds %struct.obj, ptr %259, i64 0, i32 2
  %261 = load ptr, ptr %storage_as.i932, align 8, !tbaa !9
  br label %car.exit937

sw.default.i935:                                  ; preds = %cond.end.i930
  %call.i934 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %259)
  br label %car.exit937

car.exit937:                                      ; preds = %car.exit910, %cond.end.i916, %sw.default.i922, %cdr.exit924, %cond.end.i930, %sw.bb1.i933, %sw.default.i935
  %retval.0.i936 = phi ptr [ null, %sw.default.i935 ], [ %261, %sw.bb1.i933 ], [ null, %cond.end.i930 ], [ null, %cdr.exit924 ], [ null, %sw.default.i922 ], [ null, %cond.end.i916 ], [ null, %car.exit910 ]
  %262 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call326 = call ptr @leval(ptr noundef %retval.0.i936, ptr noundef %262)
  %call327 = call ptr %254(ptr noundef %255, ptr noundef %call307, ptr noundef %call323, ptr noundef %call326) #33
  br label %cleanup

sw.bb328:                                         ; preds = %cond.end244
  %263 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr330 = getelementptr inbounds %struct.obj, ptr %263, i64 0, i32 2, i32 0, i32 1
  %264 = load ptr, ptr %cdr330, align 8, !tbaa !9
  store ptr %264, ptr %x.addr, align 8, !tbaa !5
  %cmp.i938 = icmp eq ptr %264, null
  br i1 %cmp.i938, label %car.exit950, label %cond.end.i943

cond.end.i943:                                    ; preds = %sw.bb328
  %type.i939 = getelementptr inbounds %struct.obj, ptr %264, i64 0, i32 1
  %265 = load i16, ptr %type.i939, align 2, !tbaa !14
  %conv.i940 = sext i16 %265 to i32
  switch i32 %conv.i940, label %sw.default.i948 [
    i32 0, label %car.exit950
    i32 1, label %sw.bb1.i946
  ]

sw.bb1.i946:                                      ; preds = %cond.end.i943
  %storage_as.i945 = getelementptr inbounds %struct.obj, ptr %264, i64 0, i32 2
  %266 = load ptr, ptr %storage_as.i945, align 8, !tbaa !9
  br label %car.exit950

sw.default.i948:                                  ; preds = %cond.end.i943
  %call.i947 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %264)
  br label %car.exit950

car.exit950:                                      ; preds = %sw.bb328, %cond.end.i943, %sw.bb1.i946, %sw.default.i948
  %retval.0.i949 = phi ptr [ null, %sw.default.i948 ], [ %266, %sw.bb1.i946 ], [ null, %cond.end.i943 ], [ null, %sw.bb328 ]
  %267 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call332 = call ptr @leval(ptr noundef %retval.0.i949, ptr noundef %267)
  %268 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp333 = icmp eq ptr %268, null
  br i1 %cmp333, label %cond.end339.thread, label %cond.end339

cond.end339.thread:                               ; preds = %car.exit950
  store ptr null, ptr %x.addr, align 8, !tbaa !5
  %269 = load ptr, ptr %code, align 8, !tbaa !9
  %f3441392 = getelementptr inbounds %struct.obj, ptr %269, i64 0, i32 2, i32 0, i32 1
  %270 = load ptr, ptr %f3441392, align 8, !tbaa !9
  %271 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  br label %car.exit963

cond.end339:                                      ; preds = %car.exit950
  %cdr338 = getelementptr inbounds %struct.obj, ptr %268, i64 0, i32 2, i32 0, i32 1
  %272 = load ptr, ptr %cdr338, align 8, !tbaa !9
  store ptr %272, ptr %x.addr, align 8, !tbaa !5
  %273 = load ptr, ptr %code, align 8, !tbaa !9
  %f344 = getelementptr inbounds %struct.obj, ptr %273, i64 0, i32 2, i32 0, i32 1
  %274 = load ptr, ptr %f344, align 8, !tbaa !9
  %275 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  %cmp.i951 = icmp eq ptr %272, null
  br i1 %cmp.i951, label %car.exit963, label %cond.end.i956

cond.end.i956:                                    ; preds = %cond.end339
  %type.i952 = getelementptr inbounds %struct.obj, ptr %272, i64 0, i32 1
  %276 = load i16, ptr %type.i952, align 2, !tbaa !14
  %conv.i953 = sext i16 %276 to i32
  switch i32 %conv.i953, label %sw.default.i961 [
    i32 0, label %car.exit963
    i32 1, label %sw.bb1.i959
  ]

sw.bb1.i959:                                      ; preds = %cond.end.i956
  %storage_as.i958 = getelementptr inbounds %struct.obj, ptr %272, i64 0, i32 2
  %277 = load ptr, ptr %storage_as.i958, align 8, !tbaa !9
  br label %car.exit963

sw.default.i961:                                  ; preds = %cond.end.i956
  %call.i960 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %272)
  br label %car.exit963

car.exit963:                                      ; preds = %cond.end339.thread, %cond.end339, %cond.end.i956, %sw.bb1.i959, %sw.default.i961
  %278 = phi ptr [ %274, %sw.default.i961 ], [ %274, %sw.bb1.i959 ], [ %274, %cond.end.i956 ], [ %270, %cond.end339.thread ], [ %274, %cond.end339 ]
  %279 = phi ptr [ %275, %sw.default.i961 ], [ %275, %sw.bb1.i959 ], [ %275, %cond.end.i956 ], [ %271, %cond.end339.thread ], [ %275, %cond.end339 ]
  %retval.0.i962 = phi ptr [ null, %sw.default.i961 ], [ %277, %sw.bb1.i959 ], [ null, %cond.end.i956 ], [ null, %cond.end339.thread ], [ null, %cond.end339 ]
  %280 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call348 = call ptr @leval(ptr noundef %retval.0.i962, ptr noundef %280)
  %281 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i964 = icmp eq ptr %281, null
  br i1 %cmp.i964, label %car.exit990, label %cond.end.i969

cond.end.i969:                                    ; preds = %car.exit963
  %type.i965 = getelementptr inbounds %struct.obj, ptr %281, i64 0, i32 1
  %282 = load i16, ptr %type.i965, align 2, !tbaa !14
  %conv.i966 = sext i16 %282 to i32
  switch i32 %conv.i966, label %sw.default.i975 [
    i32 0, label %car.exit990
    i32 1, label %cdr.exit977
  ]

sw.default.i975:                                  ; preds = %cond.end.i969
  %call.i974 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %281)
  br label %car.exit990

cdr.exit977:                                      ; preds = %cond.end.i969
  %cdr.i972 = getelementptr inbounds %struct.obj, ptr %281, i64 0, i32 2, i32 0, i32 1
  %283 = load ptr, ptr %cdr.i972, align 8, !tbaa !9
  %cmp.i978 = icmp eq ptr %283, null
  br i1 %cmp.i978, label %car.exit990, label %cond.end.i983

cond.end.i983:                                    ; preds = %cdr.exit977
  %type.i979 = getelementptr inbounds %struct.obj, ptr %283, i64 0, i32 1
  %284 = load i16, ptr %type.i979, align 2, !tbaa !14
  %conv.i980 = sext i16 %284 to i32
  switch i32 %conv.i980, label %sw.default.i988 [
    i32 0, label %car.exit990
    i32 1, label %sw.bb1.i986
  ]

sw.bb1.i986:                                      ; preds = %cond.end.i983
  %storage_as.i985 = getelementptr inbounds %struct.obj, ptr %283, i64 0, i32 2
  %285 = load ptr, ptr %storage_as.i985, align 8, !tbaa !9
  br label %car.exit990

sw.default.i988:                                  ; preds = %cond.end.i983
  %call.i987 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %283)
  br label %car.exit990

car.exit990:                                      ; preds = %car.exit963, %cond.end.i969, %sw.default.i975, %cdr.exit977, %cond.end.i983, %sw.bb1.i986, %sw.default.i988
  %retval.0.i989 = phi ptr [ null, %sw.default.i988 ], [ %285, %sw.bb1.i986 ], [ null, %cond.end.i983 ], [ null, %cdr.exit977 ], [ null, %sw.default.i975 ], [ null, %cond.end.i969 ], [ null, %car.exit963 ]
  %286 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call351 = call ptr @leval(ptr noundef %retval.0.i989, ptr noundef %286)
  %287 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i991 = icmp eq ptr %287, null
  br i1 %cmp.i991, label %car.exit1031, label %cond.end.i996

cond.end.i996:                                    ; preds = %car.exit990
  %type.i992 = getelementptr inbounds %struct.obj, ptr %287, i64 0, i32 1
  %288 = load i16, ptr %type.i992, align 2, !tbaa !14
  %conv.i993 = sext i16 %288 to i32
  switch i32 %conv.i993, label %sw.default.i1002 [
    i32 0, label %car.exit1031
    i32 1, label %cdr.exit1004
  ]

sw.default.i1002:                                 ; preds = %cond.end.i996
  %call.i1001 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %287)
  br label %car.exit1031

cdr.exit1004:                                     ; preds = %cond.end.i996
  %cdr.i999 = getelementptr inbounds %struct.obj, ptr %287, i64 0, i32 2, i32 0, i32 1
  %289 = load ptr, ptr %cdr.i999, align 8, !tbaa !9
  %cmp.i1005 = icmp eq ptr %289, null
  br i1 %cmp.i1005, label %car.exit1031, label %cond.end.i1010

cond.end.i1010:                                   ; preds = %cdr.exit1004
  %type.i1006 = getelementptr inbounds %struct.obj, ptr %289, i64 0, i32 1
  %290 = load i16, ptr %type.i1006, align 2, !tbaa !14
  %conv.i1007 = sext i16 %290 to i32
  switch i32 %conv.i1007, label %sw.default.i1016 [
    i32 0, label %car.exit1031
    i32 1, label %cdr.exit1018
  ]

sw.default.i1016:                                 ; preds = %cond.end.i1010
  %call.i1015 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %289)
  br label %car.exit1031

cdr.exit1018:                                     ; preds = %cond.end.i1010
  %cdr.i1013 = getelementptr inbounds %struct.obj, ptr %289, i64 0, i32 2, i32 0, i32 1
  %291 = load ptr, ptr %cdr.i1013, align 8, !tbaa !9
  %cmp.i1019 = icmp eq ptr %291, null
  br i1 %cmp.i1019, label %car.exit1031, label %cond.end.i1024

cond.end.i1024:                                   ; preds = %cdr.exit1018
  %type.i1020 = getelementptr inbounds %struct.obj, ptr %291, i64 0, i32 1
  %292 = load i16, ptr %type.i1020, align 2, !tbaa !14
  %conv.i1021 = sext i16 %292 to i32
  switch i32 %conv.i1021, label %sw.default.i1029 [
    i32 0, label %car.exit1031
    i32 1, label %sw.bb1.i1027
  ]

sw.bb1.i1027:                                     ; preds = %cond.end.i1024
  %storage_as.i1026 = getelementptr inbounds %struct.obj, ptr %291, i64 0, i32 2
  %293 = load ptr, ptr %storage_as.i1026, align 8, !tbaa !9
  br label %car.exit1031

sw.default.i1029:                                 ; preds = %cond.end.i1024
  %call.i1028 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %291)
  br label %car.exit1031

car.exit1031:                                     ; preds = %car.exit990, %cond.end.i996, %sw.default.i1002, %cdr.exit1004, %cond.end.i1010, %sw.default.i1016, %cdr.exit1018, %cond.end.i1024, %sw.bb1.i1027, %sw.default.i1029
  %retval.0.i1030 = phi ptr [ null, %sw.default.i1029 ], [ %293, %sw.bb1.i1027 ], [ null, %cond.end.i1024 ], [ null, %cdr.exit1018 ], [ null, %sw.default.i1016 ], [ null, %cond.end.i1010 ], [ null, %cdr.exit1004 ], [ null, %sw.default.i1002 ], [ null, %cond.end.i996 ], [ null, %car.exit990 ]
  %294 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call355 = call ptr @leval(ptr noundef %retval.0.i1030, ptr noundef %294)
  %call356 = call ptr %278(ptr noundef %279, ptr noundef %call332, ptr noundef %call348, ptr noundef %call351, ptr noundef %call355) #33
  br label %cleanup

sw.bb357:                                         ; preds = %cond.end244
  %f361 = getelementptr inbounds %struct.obj, ptr %158, i64 0, i32 2, i32 0, i32 1
  %295 = load ptr, ptr %f361, align 8, !tbaa !9
  %296 = load ptr, ptr %storage_as235, align 8, !tbaa !9
  %297 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cdr365 = getelementptr inbounds %struct.obj, ptr %297, i64 0, i32 2, i32 0, i32 1
  %298 = load ptr, ptr %cdr365, align 8, !tbaa !9
  %299 = load ptr, ptr %env.addr, align 8, !tbaa !5
  %call366 = call ptr @leval_args(ptr noundef %298, ptr noundef %299)
  %300 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1032 = icmp eq i64 %300, 1
  br i1 %cmp.i1032, label %if.then.i1034, label %if.else.i

if.then.i1034:                                    ; preds = %sw.bb357
  %301 = load ptr, ptr @heap, align 8, !tbaa !5
  %302 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1033.not = icmp ult ptr %301, %302
  br i1 %cmp1.i1033.not, label %if.end.i1035, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i1034
  %call.i.i = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1035

if.end.i1035:                                     ; preds = %if.then2.i, %if.then.i1034
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %301, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %sw.bb357
  %303 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %303, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  call void @gc_for_newcell()
  %.pre1544 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %304 = phi ptr [ %.pre1544, %if.then4.i ], [ %303, %if.else.i ]
  %cdr.i1037 = getelementptr inbounds %struct.obj, ptr %304, i64 0, i32 2, i32 0, i32 1
  %305 = load ptr, ptr %cdr.i1037, align 8, !tbaa !9
  store ptr %305, ptr @freelist, align 8, !tbaa !5
  %306 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %306, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i1035, %if.end5.i
  %z.0.i = phi ptr [ %301, %if.end.i1035 ], [ %304, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i1038 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i1038, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %296, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %call366, ptr %cdr9.i, align 8, !tbaa !9
  %call368 = call ptr %295(ptr noundef nonnull %z.0.i) #33
  br label %cleanup

sw.default:                                       ; preds = %sw.bb234, %cond.end244
  %call.i1039 = call ptr @err(ptr noundef nonnull @.str.88, ptr noundef nonnull %tmp.01253)
  br label %sw.default397

sw.bb371:                                         ; preds = %cond.end69
  %307 = load ptr, ptr @sym_quote, align 8, !tbaa !5
  %308 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %309 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1040 = icmp eq i64 %309, 1
  br i1 %cmp.i1040, label %if.then.i1042, label %if.else.i1048

if.then.i1042:                                    ; preds = %sw.bb371
  %310 = load ptr, ptr @heap, align 8, !tbaa !5
  %311 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1041.not = icmp ult ptr %310, %311
  br i1 %cmp1.i1041.not, label %if.end.i1046, label %if.then2.i1044

if.then2.i1044:                                   ; preds = %if.then.i1042
  %call.i.i1043 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1046

if.end.i1046:                                     ; preds = %if.then2.i1044, %if.then.i1042
  %add.ptr.i1045 = getelementptr inbounds %struct.obj, ptr %310, i64 1
  store ptr %add.ptr.i1045, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1058

if.else.i1048:                                    ; preds = %sw.bb371
  %312 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1047 = icmp eq ptr %312, null
  br i1 %cmp3.i1047, label %if.then4.i1049, label %if.end5.i1053

if.then4.i1049:                                   ; preds = %if.else.i1048
  call void @gc_for_newcell()
  %.pre1540 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1053

if.end5.i1053:                                    ; preds = %if.then4.i1049, %if.else.i1048
  %313 = phi ptr [ %.pre1540, %if.then4.i1049 ], [ %312, %if.else.i1048 ]
  %cdr.i1051 = getelementptr inbounds %struct.obj, ptr %313, i64 0, i32 2, i32 0, i32 1
  %314 = load ptr, ptr %cdr.i1051, align 8, !tbaa !9
  store ptr %314, ptr @freelist, align 8, !tbaa !5
  %315 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1052 = add nsw i64 %315, 1
  store i64 %inc.i1052, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1058

cons.exit1058:                                    ; preds = %if.end.i1046, %if.end5.i1053
  %z.0.i1054 = phi ptr [ %310, %if.end.i1046 ], [ %313, %if.end5.i1053 ]
  store i16 0, ptr %z.0.i1054, align 8, !tbaa !35
  %type.i1055 = getelementptr inbounds %struct.obj, ptr %z.0.i1054, i64 0, i32 1
  store i16 1, ptr %type.i1055, align 2, !tbaa !14
  %storage_as7.i1056 = getelementptr inbounds %struct.obj, ptr %z.0.i1054, i64 0, i32 2
  store ptr %308, ptr %storage_as7.i1056, align 8, !tbaa !9
  %cdr9.i1057 = getelementptr inbounds %struct.obj, ptr %z.0.i1054, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i1057, align 8, !tbaa !9
  %316 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1059 = icmp eq i64 %316, 1
  br i1 %cmp.i1059, label %if.then.i1061, label %if.else.i1067

if.then.i1061:                                    ; preds = %cons.exit1058
  %317 = load ptr, ptr @heap, align 8, !tbaa !5
  %318 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1060.not = icmp ult ptr %317, %318
  br i1 %cmp1.i1060.not, label %if.end.i1065, label %if.then2.i1063

if.then2.i1063:                                   ; preds = %if.then.i1061
  %call.i.i1062 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1065

if.end.i1065:                                     ; preds = %if.then2.i1063, %if.then.i1061
  %add.ptr.i1064 = getelementptr inbounds %struct.obj, ptr %317, i64 1
  store ptr %add.ptr.i1064, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1077

if.else.i1067:                                    ; preds = %cons.exit1058
  %319 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1066 = icmp eq ptr %319, null
  br i1 %cmp3.i1066, label %if.then4.i1068, label %if.end5.i1072

if.then4.i1068:                                   ; preds = %if.else.i1067
  call void @gc_for_newcell()
  %.pre1541 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1072

if.end5.i1072:                                    ; preds = %if.then4.i1068, %if.else.i1067
  %320 = phi ptr [ %.pre1541, %if.then4.i1068 ], [ %319, %if.else.i1067 ]
  %cdr.i1070 = getelementptr inbounds %struct.obj, ptr %320, i64 0, i32 2, i32 0, i32 1
  %321 = load ptr, ptr %cdr.i1070, align 8, !tbaa !9
  store ptr %321, ptr @freelist, align 8, !tbaa !5
  %322 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1071 = add nsw i64 %322, 1
  store i64 %inc.i1071, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1077

cons.exit1077:                                    ; preds = %if.end.i1065, %if.end5.i1072
  %z.0.i1073 = phi ptr [ %317, %if.end.i1065 ], [ %320, %if.end5.i1072 ]
  store i16 0, ptr %z.0.i1073, align 8, !tbaa !35
  %type.i1074 = getelementptr inbounds %struct.obj, ptr %z.0.i1073, i64 0, i32 1
  store i16 1, ptr %type.i1074, align 2, !tbaa !14
  %storage_as7.i1075 = getelementptr inbounds %struct.obj, ptr %z.0.i1073, i64 0, i32 2
  store ptr %307, ptr %storage_as7.i1075, align 8, !tbaa !9
  %cdr9.i1076 = getelementptr inbounds %struct.obj, ptr %z.0.i1073, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i1054, ptr %cdr9.i1076, align 8, !tbaa !9
  %323 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1078 = icmp eq i64 %323, 1
  br i1 %cmp.i1078, label %if.then.i1080, label %if.else.i1086

if.then.i1080:                                    ; preds = %cons.exit1077
  %324 = load ptr, ptr @heap, align 8, !tbaa !5
  %325 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1079.not = icmp ult ptr %324, %325
  br i1 %cmp1.i1079.not, label %if.end.i1084, label %if.then2.i1082

if.then2.i1082:                                   ; preds = %if.then.i1080
  %call.i.i1081 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1084

if.end.i1084:                                     ; preds = %if.then2.i1082, %if.then.i1080
  %add.ptr.i1083 = getelementptr inbounds %struct.obj, ptr %324, i64 1
  store ptr %add.ptr.i1083, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1096

if.else.i1086:                                    ; preds = %cons.exit1077
  %326 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1085 = icmp eq ptr %326, null
  br i1 %cmp3.i1085, label %if.then4.i1087, label %if.end5.i1091

if.then4.i1087:                                   ; preds = %if.else.i1086
  call void @gc_for_newcell()
  %.pre1542 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1091

if.end5.i1091:                                    ; preds = %if.then4.i1087, %if.else.i1086
  %327 = phi ptr [ %.pre1542, %if.then4.i1087 ], [ %326, %if.else.i1086 ]
  %cdr.i1089 = getelementptr inbounds %struct.obj, ptr %327, i64 0, i32 2, i32 0, i32 1
  %328 = load ptr, ptr %cdr.i1089, align 8, !tbaa !9
  store ptr %328, ptr @freelist, align 8, !tbaa !5
  %329 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1090 = add nsw i64 %329, 1
  store i64 %inc.i1090, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1096

cons.exit1096:                                    ; preds = %if.end.i1084, %if.end5.i1091
  %z.0.i1092 = phi ptr [ %324, %if.end.i1084 ], [ %327, %if.end5.i1091 ]
  store i16 0, ptr %z.0.i1092, align 8, !tbaa !35
  %type.i1093 = getelementptr inbounds %struct.obj, ptr %z.0.i1092, i64 0, i32 1
  store i16 1, ptr %type.i1093, align 2, !tbaa !14
  %storage_as7.i1094 = getelementptr inbounds %struct.obj, ptr %z.0.i1092, i64 0, i32 2
  store ptr %z.0.i1073, ptr %storage_as7.i1094, align 8, !tbaa !9
  %cdr9.i1095 = getelementptr inbounds %struct.obj, ptr %z.0.i1092, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i1095, align 8, !tbaa !9
  %330 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i1097 = icmp eq i64 %330, 1
  br i1 %cmp.i1097, label %if.then.i1099, label %if.else.i1105

if.then.i1099:                                    ; preds = %cons.exit1096
  %331 = load ptr, ptr @heap, align 8, !tbaa !5
  %332 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i1098.not = icmp ult ptr %331, %332
  br i1 %cmp1.i1098.not, label %if.end.i1103, label %if.then2.i1101

if.then2.i1101:                                   ; preds = %if.then.i1099
  %call.i.i1100 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i1103

if.end.i1103:                                     ; preds = %if.then2.i1101, %if.then.i1099
  %add.ptr.i1102 = getelementptr inbounds %struct.obj, ptr %331, i64 1
  store ptr %add.ptr.i1102, ptr @heap, align 8, !tbaa !5
  br label %cons.exit1115

if.else.i1105:                                    ; preds = %cons.exit1096
  %333 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i1104 = icmp eq ptr %333, null
  br i1 %cmp3.i1104, label %if.then4.i1106, label %if.end5.i1110

if.then4.i1106:                                   ; preds = %if.else.i1105
  call void @gc_for_newcell()
  %.pre1543 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i1110

if.end5.i1110:                                    ; preds = %if.then4.i1106, %if.else.i1105
  %334 = phi ptr [ %.pre1543, %if.then4.i1106 ], [ %333, %if.else.i1105 ]
  %cdr.i1108 = getelementptr inbounds %struct.obj, ptr %334, i64 0, i32 2, i32 0, i32 1
  %335 = load ptr, ptr %cdr.i1108, align 8, !tbaa !9
  store ptr %335, ptr @freelist, align 8, !tbaa !5
  %336 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i1109 = add nsw i64 %336, 1
  store i64 %inc.i1109, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit1115

cons.exit1115:                                    ; preds = %if.end.i1103, %if.end5.i1110
  %z.0.i1111 = phi ptr [ %331, %if.end.i1103 ], [ %334, %if.end5.i1110 ]
  store i16 0, ptr %z.0.i1111, align 8, !tbaa !35
  %type.i1112 = getelementptr inbounds %struct.obj, ptr %z.0.i1111, i64 0, i32 1
  store i16 1, ptr %type.i1112, align 2, !tbaa !14
  %storage_as7.i1113 = getelementptr inbounds %struct.obj, ptr %z.0.i1111, i64 0, i32 2
  store ptr %tmp.01253, ptr %storage_as7.i1113, align 8, !tbaa !9
  %cdr9.i1114 = getelementptr inbounds %struct.obj, ptr %z.0.i1111, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i1092, ptr %cdr9.i1114, align 8, !tbaa !9
  store ptr %z.0.i1111, ptr %x.addr, align 8, !tbaa !5
  %call376 = call ptr @leval(ptr noundef nonnull %z.0.i1111, ptr noundef null)
  store ptr %call376, ptr %x.addr, align 8, !tbaa !5
  br label %loop.backedge

cond.false381:                                    ; preds = %cond.end69
  %conv383 = sext i16 %22 to i64
  br label %cond.end384

cond.end384:                                      ; preds = %sw.epilog, %sw.bb31, %cond.false381
  %tmp.0124812591417 = phi ptr [ %tmp.01253, %cond.false381 ], [ null, %sw.bb31 ], [ null, %sw.epilog ]
  %cond385 = phi i64 [ %conv383, %cond.false381 ], [ 0, %sw.bb31 ], [ 0, %sw.epilog ]
  %337 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i1116 = icmp eq ptr %337, null
  br i1 %cmp.i1116, label %if.then.i1118, label %if.end.i1120

if.then.i1118:                                    ; preds = %cond.end384
  %call.i1238 = call noalias dereferenceable_or_null(8000) ptr @malloc(i64 noundef 8000) #39
  %cmp.i1239 = icmp eq ptr %call.i1238, null
  br i1 %cmp.i1239, label %if.then.i1240, label %must_malloc.exit

if.then.i1240:                                    ; preds = %if.then.i1118
  %call1.i = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %if.then.i1118, %if.then.i1240
  store ptr %call.i1238, ptr @user_types, align 8, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(8000) %call.i1238, i8 0, i64 8000, i1 false)
  br label %if.end.i1120

if.end.i1120:                                     ; preds = %must_malloc.exit, %cond.end384
  %338 = phi ptr [ %call.i1238, %must_malloc.exit ], [ %337, %cond.end384 ]
  %or.cond.i = icmp ult i64 %cond385, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i1122

if.then3.i:                                       ; preds = %if.end.i1120
  %leval = getelementptr inbounds %struct.user_type_hooks, ptr %338, i64 %cond385, i32 5
  %339 = load ptr, ptr %leval, align 8, !tbaa !52
  %tobool.not = icmp eq ptr %339, null
  br i1 %tobool.not, label %if.end394, label %if.then388

if.else.i1122:                                    ; preds = %if.end.i1120
  %call4.i1121 = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then388:                                       ; preds = %if.then3.i
  %call390 = call ptr %339(ptr noundef %tmp.0124812591417, ptr noundef nonnull %x.addr, ptr noundef nonnull %env.addr) #33
  %cmp391 = icmp eq ptr %call390, null
  br i1 %cmp391, label %if.then393, label %loop.backedge

if.then393:                                       ; preds = %if.then388
  %340 = load ptr, ptr %x.addr, align 8, !tbaa !5
  br label %cleanup

if.end394:                                        ; preds = %if.then3.i
  %call395 = call ptr @err(ptr noundef nonnull @.str.89, ptr noundef %tmp.0124812591417)
  br label %sw.default397

sw.default397:                                    ; preds = %if.end9, %cond.end16, %sw.default, %if.end394
  %341 = load ptr, ptr %x.addr, align 8, !tbaa !5
  br label %cleanup

cleanup:                                          ; preds = %cond.end125, %for.body, %car.exit529, %cond.end.i535, %sw.default.i540, %cdr.exit, %if.end23, %if.then28, %sw.default397, %if.then393, %cons.exit, %car.exit1031, %car.exit937, %car.exit884, %car.exit858, %sw.bb261, %if.then232, %sw.bb220, %sw.bb213, %car.exit837, %car.exit688, %car.exit594, %car.exit503, %car.exit, %sw.bb71, %if.then20
  %retval.0 = phi ptr [ %341, %sw.default397 ], [ %340, %if.then393 ], [ %call368, %cons.exit ], [ %call356, %car.exit1031 ], [ %call327, %car.exit937 ], [ %call302, %car.exit884 ], [ %call280, %car.exit858 ], [ %call268, %sw.bb261 ], [ %157, %if.then232 ], [ %call225, %sw.bb220 ], [ %call219, %sw.bb213 ], [ %call212, %car.exit837 ], [ %call182, %car.exit688 ], [ %call157, %car.exit594 ], [ %call99, %car.exit503 ], [ %call81, %car.exit ], [ %call73, %sw.bb71 ], [ %9, %if.then20 ], [ %11, %if.then28 ], [ %11, %if.end23 ], [ %call117, %cdr.exit ], [ %call117, %sw.default.i540 ], [ %call117, %cond.end.i535 ], [ %call117, %car.exit529 ], [ %arg1.01480, %cond.end125 ], [ %call134, %for.body ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lprint(ptr noundef %exp, ptr noundef %lf) #6 {
entry:
  %s.i = alloca %struct.gen_printio, align 8
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %lf, null
  %tobool.i = icmp ne ptr %0, null
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %get_c_file.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %lf, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %if.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %lf)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %lf, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %3, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %lf)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %entry, %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %0, %entry ], [ %.pre.i, %if.then7.i ], [ %3, %if.end5.i ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %s.i) #33
  store ptr null, ptr %s.i, align 8, !tbaa !31
  %puts_fcn.i = getelementptr inbounds %struct.gen_printio, ptr %s.i, i64 0, i32 1
  store ptr @fputs_fcn, ptr %puts_fcn.i, align 8, !tbaa !33
  %cb_argument.i = getelementptr inbounds %struct.gen_printio, ptr %s.i, i64 0, i32 2
  store ptr %retval.0.i, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i3 = call ptr @lprin1g(ptr noundef %exp, ptr noundef nonnull %s.i)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %s.i) #33
  %4 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputc = call i32 @fputc(i32 10, ptr %retval.0.i)
  store i64 %4, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %4, 0
  %5 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i = icmp eq i64 %5, 1
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp1.i3.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %fput_st.exit

if.then.i.i:                                      ; preds = %get_c_file.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %fput_st.exit

fput_st.exit:                                     ; preds = %get_c_file.exit, %if.then.i.i
  ret ptr null
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @set_fatal_exit_hook(ptr noundef %fcn) local_unnamed_addr #10 {
entry:
  store ptr %fcn, ptr @fatal_exit_hook, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_c_string(ptr noundef %x) local_unnamed_addr #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.else15, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  switch i16 %0, label %if.else15 [
    i16 3, label %if.then
    i16 13, label %if.then13
  ]

if.then:                                          ; preds = %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %return

if.then13:                                        ; preds = %cond.false
  %data = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %2 = load ptr, ptr %data, align 8, !tbaa !9
  br label %return

if.else15:                                        ; preds = %cond.false, %entry
  %call = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %x)
  br label %return

return:                                           ; preds = %if.else15, %if.then13, %if.then
  %retval.0 = phi ptr [ %1, %if.then ], [ %2, %if.then13 ], [ null, %if.else15 ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @try_get_c_string(ptr noundef readonly %x) local_unnamed_addr #12 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %return, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  switch i16 %0, label %return [
    i16 3, label %if.then
    i16 13, label %if.then13
  ]

if.then:                                          ; preds = %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  br label %return.sink.split

if.then13:                                        ; preds = %cond.false
  %data = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  br label %return.sink.split

return.sink.split:                                ; preds = %if.then, %if.then13
  %data.sink = phi ptr [ %data, %if.then13 ], [ %storage_as, %if.then ]
  %1 = load ptr, ptr %data.sink, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %return.sink.split, %cond.false, %entry
  %retval.0 = phi ptr [ null, %entry ], [ null, %cond.false ], [ %1, %return.sink.split ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define dso_local ptr @setvar(ptr noundef %var, ptr noundef returned %val, ptr noundef %env) #6 {
entry:
  %cmp = icmp eq ptr %var, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %var, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 3
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %var)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %call3 = tail call ptr @envlookup(ptr noundef %var, ptr noundef %env)
  %cmp4 = icmp eq ptr %call3, null
  %storage_as8 = getelementptr inbounds %struct.obj, ptr %call3, i64 0, i32 2
  %vcell = getelementptr inbounds %struct.obj, ptr %var, i64 0, i32 2, i32 0, i32 1
  %storage_as8.sink = select i1 %cmp4, ptr %vcell, ptr %storage_as8
  store ptr %val, ptr %storage_as8.sink, align 8, !tbaa !9
  ret ptr %val
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cons(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not = icmp ult ptr %1, %2
  br i1 %cmp1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %add.ptr = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr, ptr @heap, align 8, !tbaa !5
  br label %if.end6

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3 = icmp eq ptr %3, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  tail call void @gc_for_newcell()
  %.pre = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.else
  %4 = phi ptr [ %.pre, %if.then4 ], [ %3, %if.else ]
  %cdr = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc = add nsw i64 %6, 1
  store i64 %inc, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  %z.0 = phi ptr [ %1, %if.end ], [ %4, %if.end5 ]
  store i16 0, ptr %z.0, align 8, !tbaa !35
  %type = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 1
  store i16 1, ptr %type, align 2, !tbaa !14
  %storage_as7 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2
  store ptr %x, ptr %storage_as7, align 8, !tbaa !9
  %cdr9 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2, i32 0, i32 1
  store ptr %y, ptr %cdr9, align 8, !tbaa !9
  ret ptr %z.0
}

declare ptr @strcons(i64 noundef, ptr noundef) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @longjmp(ptr noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @errswitch() local_unnamed_addr #6 {
entry:
  %call = tail call ptr @err(ptr noundef nonnull @.str.22, ptr noundef null)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local void @err_stack(ptr nocapture noundef readnone %ptr) local_unnamed_addr #6 {
entry:
  %call = tail call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @stack_limit(ptr noundef %amount, ptr noundef readnone %silent) #6 {
entry:
  %cmp.not = icmp eq ptr %amount, null
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i64 @get_c_long(ptr noundef nonnull %amount) #33
  store i64 %call, ptr @stack_size, align 8, !tbaa !10
  %0 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %idx.neg = sub i64 0, %call
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 %idx.neg
  store ptr %add.ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp eq ptr %silent, null
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %1 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %2 = load i64, ptr @stack_size, align 8, !tbaa !10
  %3 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %4 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %call3 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(1) @.str.24, i64 noundef %2, ptr noundef %3, ptr noundef %4) #33
  %5 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %6 = load ptr, ptr @stdout, align 8, !tbaa !5
  %7 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i = tail call i32 @fputs(ptr %5, ptr %6)
  store i64 %7, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i = icmp eq i64 %7, 0
  %8 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i = icmp eq i64 %8, 1
  %or.cond.i.i.i = select i1 %cmp.i.i.i, i1 %cmp1.i3.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %return

if.then.i.i.i:                                    ; preds = %if.then2
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %return

if.else:                                          ; preds = %if.end
  %9 = load i64, ptr @stack_size, align 8, !tbaa !10
  %conv = sitofp i64 %9 to double
  %10 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %10, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.else
  %conv.i = fptosi double %conv to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %conv, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = icmp sgt i64 %9, -1
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %10, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %11 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %11, i64 %conv.i
  %12 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %return

if.end.i:                                         ; preds = %land.lhs.true.i, %if.else
  %13 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %13, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %14 = load ptr, ptr @heap, align 8, !tbaa !5
  %15 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %14, %15
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %14, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %16 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %16, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %17 = phi ptr [ %.pre.i, %if.then19.i ], [ %16, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %17, i64 0, i32 2, i32 0, i32 1
  %18 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %18, ptr @freelist, align 8, !tbaa !5
  %19 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %19, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %14, %if.end16.i ], [ %17, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %conv, ptr %storage_as22.i, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end21.i, %if.then.i, %if.then.i.i.i, %if.then2
  %retval.0 = phi ptr [ null, %if.then2 ], [ null, %if.then.i.i.i ], [ %12, %if.then.i ], [ %z.0.i, %if.end21.i ]
  ret ptr %retval.0
}

declare i64 @get_c_long(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @flocons(double noundef %x) local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp = icmp sgt i64 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %conv = fptosi double %x to i64
  %conv1 = sitofp i64 %conv to double
  %sub = fsub double %x, %conv1
  %cmp2 = fcmp oeq double %sub, 0.000000e+00
  %cmp5 = fcmp oge double %x, 0.000000e+00
  %or.cond = and i1 %cmp5, %cmp2
  %cmp8 = icmp sgt i64 %0, %conv
  %or.cond32 = and i1 %or.cond, %cmp8
  br i1 %or.cond32, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %1 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds ptr, ptr %1, i64 %conv
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10 = icmp eq i64 %3, 1
  br i1 %cmp10, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end
  %4 = load ptr, ptr @heap, align 8, !tbaa !5
  %5 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not = icmp ult ptr %4, %5
  br i1 %cmp13.not, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.then12
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.then12
  %add.ptr = getelementptr inbounds %struct.obj, ptr %4, i64 1
  store ptr %add.ptr, ptr @heap, align 8, !tbaa !5
  br label %if.end21

if.else:                                          ; preds = %if.end
  %6 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17 = icmp eq ptr %6, null
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.else
  tail call void @gc_for_newcell()
  %.pre = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.else
  %7 = phi ptr [ %.pre, %if.then19 ], [ %6, %if.else ]
  %cdr = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2, i32 0, i32 1
  %8 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %8, ptr @freelist, align 8, !tbaa !5
  %9 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc = add nsw i64 %9, 1
  store i64 %inc, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end16
  %z.0 = phi ptr [ %4, %if.end16 ], [ %7, %if.end20 ]
  store i16 0, ptr %z.0, align 8, !tbaa !35
  %type = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 1
  store i16 2, ptr %type, align 2, !tbaa !14
  %storage_as22 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2
  store double %x, ptr %storage_as22, align 8, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %if.then
  %retval.0 = phi ptr [ %2, %if.then ], [ %z.0, %if.end21 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_c_string_dim(ptr noundef %x, ptr nocapture noundef writeonly %len) local_unnamed_addr #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %sw.default, label %cond.end

cond.end:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %conv = sext i16 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 3, label %sw.bb
    i32 13, label %sw.bb3
    i32 18, label %sw.bb3
    i32 15, label %sw.bb6
  ]

sw.bb:                                            ; preds = %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #34
  store i64 %call, ptr %len, align 8, !tbaa !10
  %2 = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %return

sw.bb3:                                           ; preds = %cond.end, %cond.end
  %storage_as4 = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %3 = load i64, ptr %storage_as4, align 8, !tbaa !9
  store i64 %3, ptr %len, align 8, !tbaa !10
  %data = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %data, align 8, !tbaa !9
  br label %return

sw.bb6:                                           ; preds = %cond.end
  %storage_as7 = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %5 = load i64, ptr %storage_as7, align 8, !tbaa !9
  %mul = shl i64 %5, 3
  store i64 %mul, ptr %len, align 8, !tbaa !10
  %data10 = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %data10, align 8, !tbaa !9
  br label %return

sw.default:                                       ; preds = %entry, %cond.end
  %call11 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %x)
  br label %return

return:                                           ; preds = %sw.default, %sw.bb6, %sw.bb3, %sw.bb
  %retval.0 = phi ptr [ null, %sw.default ], [ %6, %sw.bb6 ], [ %4, %sw.bb3 ], [ %2, %sw.bb ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lerr(ptr noundef %message, ptr noundef %x) #6 {
entry:
  %cmp = icmp eq ptr %message, null
  br i1 %cmp, label %if.else15.i, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %message, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  switch i16 %0, label %if.else15.i [
    i16 1, label %land.lhs.true
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

land.lhs.true:                                    ; preds = %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %message, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %cmp3 = icmp eq ptr %1, null
  br i1 %cmp3, label %if.else15.i, label %cond.false6

cond.false6:                                      ; preds = %land.lhs.true
  %type9 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type9, align 2, !tbaa !14
  %3 = icmp eq i16 %2, 13
  br i1 %3, label %if.then, label %if.else15.i

if.then:                                          ; preds = %cond.false6
  %call = tail call ptr @err(ptr noundef null, ptr noundef nonnull %message)
  br label %if.end

if.then.i:                                        ; preds = %cond.false
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %message, i64 0, i32 2
  %4 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false
  %data.i = getelementptr inbounds %struct.obj, ptr %message, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false, %land.lhs.true, %cond.false6, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %message)
  br label %get_c_string.exit

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i, %if.else15.i
  %retval.0.i = phi ptr [ %4, %if.then.i ], [ %5, %if.then13.i ], [ null, %if.else15.i ]
  %call16 = tail call ptr @err(ptr noundef %retval.0.i, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %get_c_string.exit, %if.then
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_fatal_error() local_unnamed_addr #6 {
entry:
  %call = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @newcell(i64 noundef %type) local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not = icmp ult ptr %1, %2
  br i1 %cmp1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %add.ptr = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr, ptr @heap, align 8, !tbaa !5
  br label %if.end6

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3 = icmp eq ptr %3, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  tail call void @gc_for_newcell()
  %.pre = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.else
  %4 = phi ptr [ %.pre, %if.then4 ], [ %3, %if.else ]
  %cdr = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc = add nsw i64 %6, 1
  store i64 %inc, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  %z.0 = phi ptr [ %1, %if.end ], [ %4, %if.end5 ]
  store i16 0, ptr %z.0, align 8, !tbaa !35
  %conv = trunc i64 %type to i16
  %type7 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 1
  store i16 %conv, ptr %type7, align 2, !tbaa !14
  ret ptr %z.0
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_for_newcell() local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @heap, align 8, !tbaa !5
  %1 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp = icmp ult ptr %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr %0, ptr @freelist, align 8, !tbaa !5
  %cdr = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr, align 8, !tbaa !9
  %incdec.ptr = getelementptr inbounds %struct.obj, ptr %0, i64 1
  store ptr %incdec.ptr, ptr @heap, align 8, !tbaa !5
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load i64, ptr @errjmp_ok, align 8, !tbaa !10
  %cmp1 = icmp eq i64 %2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  store i64 0, ptr @errjmp_ok, align 8, !tbaa !10
  tail call void @gc_mark_and_sweep()
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 %3, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %3, 0
  %4 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i31 = icmp eq i64 %4, 1
  %or.cond.i = select i1 %cmp.i, i1 %cmp1.i31, i1 false
  br i1 %or.cond.i, label %if.then.i, label %no_interrupt.exit

if.then.i:                                        ; preds = %if.end3
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %if.end3, %if.then.i
  %l.033 = load ptr, ptr @freelist, align 8, !tbaa !9
  %cmp634.not = icmp eq ptr %l.033, null
  br i1 %cmp634.not, label %if.then10, label %for.body

for.body:                                         ; preds = %no_interrupt.exit, %for.body
  %l.036 = phi ptr [ %l.0, %for.body ], [ %l.033, %no_interrupt.exit ]
  %n.035 = phi i64 [ %inc, %for.body ], [ 0, %no_interrupt.exit ]
  %cdr8 = getelementptr inbounds %struct.obj, ptr %l.036, i64 0, i32 2, i32 0, i32 1
  %inc = add nuw nsw i64 %n.035, 1
  %l.0 = load ptr, ptr %cdr8, align 8, !tbaa !9
  %cmp5 = icmp ult i64 %n.035, 99
  %cmp6 = icmp ne ptr %l.0, null
  %5 = select i1 %cmp5, i1 %cmp6, i1 false
  br i1 %5, label %for.body, label %if.else, !llvm.loop !53

if.then10:                                        ; preds = %no_interrupt.exit
  %call11 = tail call ptr @allocate_aheap()
  %cmp12 = icmp eq ptr %call11, null
  br i1 %cmp12, label %if.then13, label %cleanup

if.then13:                                        ; preds = %if.then10
  %call.i32 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %cleanup

if.else:                                          ; preds = %for.body
  %cmp15 = icmp eq i64 %inc, 100
  %6 = load ptr, ptr @sym_after_gc, align 8
  %cmp16 = icmp ne ptr %6, null
  %or.cond = select i1 %cmp15, i1 %cmp16, i1 false
  br i1 %or.cond, label %if.then17, label %if.else20

if.then17:                                        ; preds = %if.else
  %call18 = tail call ptr @leval(ptr noundef nonnull %6, ptr noundef null)
  %call19 = tail call ptr @leval(ptr noundef %call18, ptr noundef null)
  br label %cleanup

if.else20:                                        ; preds = %if.else
  %call21 = tail call ptr @allocate_aheap()
  br label %cleanup

cleanup:                                          ; preds = %if.then13, %if.then10, %if.else20, %if.then17, %if.then
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @consp(ptr noundef readonly %x) #12 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %return, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 1
  %2 = load ptr, ptr @sym_t, align 8
  %spec.select = select i1 %1, ptr %2, ptr null
  br label %return

return:                                           ; preds = %cond.false, %entry
  %retval.0 = phi ptr [ null, %entry ], [ %spec.select, %cond.false ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @car(ptr noundef %x) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %return, label %cond.end

cond.end:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %conv = sext i16 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 0, label %return
    i32 1, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %return

sw.default:                                       ; preds = %cond.end
  %call = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %x)
  br label %return

return:                                           ; preds = %entry, %cond.end, %sw.default, %sw.bb1
  %retval.0 = phi ptr [ null, %sw.default ], [ %1, %sw.bb1 ], [ null, %cond.end ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cdr(ptr noundef %x) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %return, label %cond.end

cond.end:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %conv = sext i16 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 0, label %return
    i32 1, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %cond.end
  %cdr = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr, align 8, !tbaa !9
  br label %return

sw.default:                                       ; preds = %cond.end
  %call = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %x)
  br label %return

return:                                           ; preds = %entry, %cond.end, %sw.default, %sw.bb1
  %retval.0 = phi ptr [ null, %sw.default ], [ %1, %sw.bb1 ], [ null, %cond.end ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @setcar(ptr noundef %cell, ptr noundef returned %value) #6 {
entry:
  %cmp = icmp eq ptr %cell, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %cell, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 1
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef %cell)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %cell, i64 0, i32 2
  store ptr %value, ptr %storage_as, align 8, !tbaa !9
  ret ptr %value
}

; Function Attrs: nounwind uwtable
define dso_local ptr @setcdr(ptr noundef %cell, ptr noundef returned %value) #6 {
entry:
  %cmp = icmp eq ptr %cell, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %cell, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 1
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %cell)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %cdr = getelementptr inbounds %struct.obj, ptr %cell, i64 0, i32 2, i32 0, i32 1
  store ptr %value, ptr %cdr, align 8, !tbaa !9
  ret ptr %value
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @numberp(ptr noundef readonly %x) #12 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %return, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  %2 = load ptr, ptr @sym_t, align 8
  %spec.select = select i1 %1, ptr %2, ptr null
  br label %return

return:                                           ; preds = %cond.false, %entry
  %retval.0 = phi ptr [ null, %entry ], [ %spec.select, %cond.false ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @plus(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %y, null
  %cmp1 = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br i1 %cmp1, label %cond.true, label %return

cond.true:                                        ; preds = %if.then
  %0 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %0, 0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.true
  %1 = load ptr, ptr @inums, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  br label %return

if.end.i:                                         ; preds = %cond.true
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %3, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %4 = load ptr, ptr @heap, align 8, !tbaa !5
  %5 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %4, %5
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %4, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %6 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %6, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %7 = phi ptr [ %.pre.i, %if.then19.i ], [ %6, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2, i32 0, i32 1
  %8 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %8, ptr @freelist, align 8, !tbaa !5
  %9 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %9, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %4, %if.end16.i ], [ %7, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double 0.000000e+00, ptr %storage_as22.i, align 8, !tbaa !9
  br label %return

if.end:                                           ; preds = %entry
  br i1 %cmp1, label %if.then9, label %cond.false4

cond.false4:                                      ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %10 = load i16, ptr %type, align 2, !tbaa !14
  %11 = icmp eq i16 %10, 2
  br i1 %11, label %cond.end18, label %if.then9

if.then9:                                         ; preds = %if.end, %cond.false4
  %call10 = tail call ptr @err(ptr noundef nonnull @.str.31, ptr noundef %x)
  br label %cond.end18

cond.end18:                                       ; preds = %if.then9, %cond.false4
  %type16 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %12 = load i16, ptr %type16, align 2, !tbaa !14
  %cmp20.not = icmp eq i16 %12, 2
  br i1 %cmp20.not, label %if.end24, label %if.then22

if.then22:                                        ; preds = %cond.end18
  %call23 = tail call ptr @err(ptr noundef nonnull @.str.32, ptr noundef nonnull %y)
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %cond.end18
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %13 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as25 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %14 = load double, ptr %storage_as25, align 8, !tbaa !9
  %add = fadd double %13, %14
  %15 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i37 = icmp sgt i64 %15, 0
  br i1 %cmp.i37, label %land.lhs.true.i39, label %if.end.i42

land.lhs.true.i39:                                ; preds = %if.end24
  %conv.i = fptosi double %add to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %add, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %add, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i38 = icmp sgt i64 %15, %conv.i
  %or.cond32.i = and i1 %cmp8.i38, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i40, label %if.end.i42

if.then.i40:                                      ; preds = %land.lhs.true.i39
  %16 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %16, i64 %conv.i
  %17 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %return

if.end.i42:                                       ; preds = %land.lhs.true.i39, %if.end24
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i41 = icmp eq i64 %18, 1
  br i1 %cmp10.i41, label %if.then12.i44, label %if.else.i50

if.then12.i44:                                    ; preds = %if.end.i42
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i43 = icmp ult ptr %19, %20
  br i1 %cmp13.not.i43, label %if.end16.i48, label %if.then15.i46

if.then15.i46:                                    ; preds = %if.then12.i44
  %call.i.i45 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i48

if.end16.i48:                                     ; preds = %if.then15.i46, %if.then12.i44
  %add.ptr.i47 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %add.ptr.i47, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i59

if.else.i50:                                      ; preds = %if.end.i42
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i49 = icmp eq ptr %21, null
  br i1 %cmp17.i49, label %if.then19.i52, label %if.end20.i55

if.then19.i52:                                    ; preds = %if.else.i50
  tail call void @gc_for_newcell()
  %.pre.i51 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i55

if.end20.i55:                                     ; preds = %if.then19.i52, %if.else.i50
  %22 = phi ptr [ %.pre.i51, %if.then19.i52 ], [ %21, %if.else.i50 ]
  %cdr.i53 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i53, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i54 = add nsw i64 %24, 1
  store i64 %inc.i54, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i59

if.end21.i59:                                     ; preds = %if.end20.i55, %if.end16.i48
  %z.0.i56 = phi ptr [ %19, %if.end16.i48 ], [ %22, %if.end20.i55 ]
  store i16 0, ptr %z.0.i56, align 8, !tbaa !35
  %type.i57 = getelementptr inbounds %struct.obj, ptr %z.0.i56, i64 0, i32 1
  store i16 2, ptr %type.i57, align 2, !tbaa !14
  %storage_as22.i58 = getelementptr inbounds %struct.obj, ptr %z.0.i56, i64 0, i32 2
  store double %add, ptr %storage_as22.i58, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end21.i59, %if.then.i40, %if.then.i, %if.end21.i, %if.then
  %retval.0 = phi ptr [ %2, %if.then.i ], [ %z.0.i, %if.end21.i ], [ %x, %if.then ], [ %17, %if.then.i40 ], [ %z.0.i56, %if.end21.i59 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @ltimes(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %y, null
  %cmp1 = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br i1 %cmp1, label %cond.true, label %return

cond.true:                                        ; preds = %if.then
  %0 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %or.cond = icmp slt i64 %0, 2
  br i1 %or.cond, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %cond.true
  %1 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 1
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %return

if.end.i:                                         ; preds = %cond.true
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %3, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %4 = load ptr, ptr @heap, align 8, !tbaa !5
  %5 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %4, %5
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %4, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %6 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %6, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %7 = phi ptr [ %.pre.i, %if.then19.i ], [ %6, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2, i32 0, i32 1
  %8 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %8, ptr @freelist, align 8, !tbaa !5
  %9 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %9, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %4, %if.end16.i ], [ %7, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double 1.000000e+00, ptr %storage_as22.i, align 8, !tbaa !9
  br label %return

if.end:                                           ; preds = %entry
  br i1 %cmp1, label %if.then9, label %cond.false4

cond.false4:                                      ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %10 = load i16, ptr %type, align 2, !tbaa !14
  %11 = icmp eq i16 %10, 2
  br i1 %11, label %cond.end18, label %if.then9

if.then9:                                         ; preds = %if.end, %cond.false4
  %call10 = tail call ptr @err(ptr noundef nonnull @.str.33, ptr noundef %x)
  br label %cond.end18

cond.end18:                                       ; preds = %if.then9, %cond.false4
  %type16 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %12 = load i16, ptr %type16, align 2, !tbaa !14
  %cmp20.not = icmp eq i16 %12, 2
  br i1 %cmp20.not, label %if.end24, label %if.then22

if.then22:                                        ; preds = %cond.end18
  %call23 = tail call ptr @err(ptr noundef nonnull @.str.34, ptr noundef nonnull %y)
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %cond.end18
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %13 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as25 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %14 = load double, ptr %storage_as25, align 8, !tbaa !9
  %mul = fmul double %13, %14
  %15 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i37 = icmp sgt i64 %15, 0
  br i1 %cmp.i37, label %land.lhs.true.i39, label %if.end.i43

land.lhs.true.i39:                                ; preds = %if.end24
  %conv.i = fptosi double %mul to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %mul, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %mul, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i38 = icmp sgt i64 %15, %conv.i
  %or.cond32.i = and i1 %cmp8.i38, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i41, label %if.end.i43

if.then.i41:                                      ; preds = %land.lhs.true.i39
  %16 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i40 = getelementptr inbounds ptr, ptr %16, i64 %conv.i
  %17 = load ptr, ptr %arrayidx.i40, align 8, !tbaa !5
  br label %return

if.end.i43:                                       ; preds = %land.lhs.true.i39, %if.end24
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i42 = icmp eq i64 %18, 1
  br i1 %cmp10.i42, label %if.then12.i45, label %if.else.i51

if.then12.i45:                                    ; preds = %if.end.i43
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i44 = icmp ult ptr %19, %20
  br i1 %cmp13.not.i44, label %if.end16.i49, label %if.then15.i47

if.then15.i47:                                    ; preds = %if.then12.i45
  %call.i.i46 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i49

if.end16.i49:                                     ; preds = %if.then15.i47, %if.then12.i45
  %add.ptr.i48 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %add.ptr.i48, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i60

if.else.i51:                                      ; preds = %if.end.i43
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i50 = icmp eq ptr %21, null
  br i1 %cmp17.i50, label %if.then19.i53, label %if.end20.i56

if.then19.i53:                                    ; preds = %if.else.i51
  tail call void @gc_for_newcell()
  %.pre.i52 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i56

if.end20.i56:                                     ; preds = %if.then19.i53, %if.else.i51
  %22 = phi ptr [ %.pre.i52, %if.then19.i53 ], [ %21, %if.else.i51 ]
  %cdr.i54 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i54, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i55 = add nsw i64 %24, 1
  store i64 %inc.i55, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i60

if.end21.i60:                                     ; preds = %if.end20.i56, %if.end16.i49
  %z.0.i57 = phi ptr [ %19, %if.end16.i49 ], [ %22, %if.end20.i56 ]
  store i16 0, ptr %z.0.i57, align 8, !tbaa !35
  %type.i58 = getelementptr inbounds %struct.obj, ptr %z.0.i57, i64 0, i32 1
  store i16 2, ptr %type.i58, align 2, !tbaa !14
  %storage_as22.i59 = getelementptr inbounds %struct.obj, ptr %z.0.i57, i64 0, i32 2
  store double %mul, ptr %storage_as22.i59, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end21.i60, %if.then.i41, %if.then.i, %if.end21.i, %if.then
  %retval.0 = phi ptr [ %2, %if.then.i ], [ %z.0.i, %if.end21.i ], [ %x, %if.then ], [ %17, %if.then.i41 ], [ %z.0.i57, %if.end21.i60 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @difference(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.end

cond.end:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp1.not = icmp eq i16 %0, 2
  br i1 %cmp1.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.end
  %call = tail call ptr @err(ptr noundef nonnull @.str.35, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %cmp3 = icmp eq ptr %y, null
  br i1 %cmp3, label %if.then5, label %cond.end13

if.then5:                                         ; preds = %if.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load double, ptr %storage_as, align 8, !tbaa !9
  %fneg = fneg double %1
  %2 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %2, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then5
  %conv.i = fptosi double %fneg to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %fneg, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp ole double %1, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %2, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %3 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %3, i64 %conv.i
  %4 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %return

if.end.i:                                         ; preds = %land.lhs.true.i, %if.then5
  %5 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %5, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %6 = load ptr, ptr @heap, align 8, !tbaa !5
  %7 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %6, %7
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %6, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %8 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %8, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %9 = phi ptr [ %.pre.i, %if.then19.i ], [ %8, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %9, i64 0, i32 2, i32 0, i32 1
  %10 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %10, ptr @freelist, align 8, !tbaa !5
  %11 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %11, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %6, %if.end16.i ], [ %9, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %fneg, ptr %storage_as22.i, align 8, !tbaa !9
  br label %return

cond.end13:                                       ; preds = %if.end
  %type11 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %12 = load i16, ptr %type11, align 2, !tbaa !14
  %cmp15.not = icmp eq i16 %12, 2
  br i1 %cmp15.not, label %if.end19, label %if.then17

if.then17:                                        ; preds = %cond.end13
  %call18 = tail call ptr @err(ptr noundef nonnull @.str.36, ptr noundef nonnull %y)
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %cond.end13
  %storage_as20 = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %13 = load double, ptr %storage_as20, align 8, !tbaa !9
  %storage_as22 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %14 = load double, ptr %storage_as22, align 8, !tbaa !9
  %sub = fsub double %13, %14
  %15 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i33 = icmp sgt i64 %15, 0
  br i1 %cmp.i33, label %land.lhs.true.i42, label %if.end.i46

land.lhs.true.i42:                                ; preds = %if.end19
  %conv.i34 = fptosi double %sub to i64
  %conv1.i35 = sitofp i64 %conv.i34 to double
  %sub.i36 = fsub double %sub, %conv1.i35
  %cmp2.i37 = fcmp oeq double %sub.i36, 0.000000e+00
  %cmp5.i38 = fcmp oge double %sub, 0.000000e+00
  %or.cond.i39 = and i1 %cmp5.i38, %cmp2.i37
  %cmp8.i40 = icmp sgt i64 %15, %conv.i34
  %or.cond32.i41 = and i1 %cmp8.i40, %or.cond.i39
  br i1 %or.cond32.i41, label %if.then.i44, label %if.end.i46

if.then.i44:                                      ; preds = %land.lhs.true.i42
  %16 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i43 = getelementptr inbounds ptr, ptr %16, i64 %conv.i34
  %17 = load ptr, ptr %arrayidx.i43, align 8, !tbaa !5
  br label %return

if.end.i46:                                       ; preds = %land.lhs.true.i42, %if.end19
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i45 = icmp eq i64 %18, 1
  br i1 %cmp10.i45, label %if.then12.i48, label %if.else.i54

if.then12.i48:                                    ; preds = %if.end.i46
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i47 = icmp ult ptr %19, %20
  br i1 %cmp13.not.i47, label %if.end16.i52, label %if.then15.i50

if.then15.i50:                                    ; preds = %if.then12.i48
  %call.i.i49 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i52

if.end16.i52:                                     ; preds = %if.then15.i50, %if.then12.i48
  %add.ptr.i51 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %add.ptr.i51, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i63

if.else.i54:                                      ; preds = %if.end.i46
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i53 = icmp eq ptr %21, null
  br i1 %cmp17.i53, label %if.then19.i56, label %if.end20.i59

if.then19.i56:                                    ; preds = %if.else.i54
  tail call void @gc_for_newcell()
  %.pre.i55 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i59

if.end20.i59:                                     ; preds = %if.then19.i56, %if.else.i54
  %22 = phi ptr [ %.pre.i55, %if.then19.i56 ], [ %21, %if.else.i54 ]
  %cdr.i57 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i57, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i58 = add nsw i64 %24, 1
  store i64 %inc.i58, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i63

if.end21.i63:                                     ; preds = %if.end20.i59, %if.end16.i52
  %z.0.i60 = phi ptr [ %19, %if.end16.i52 ], [ %22, %if.end20.i59 ]
  store i16 0, ptr %z.0.i60, align 8, !tbaa !35
  %type.i61 = getelementptr inbounds %struct.obj, ptr %z.0.i60, i64 0, i32 1
  store i16 2, ptr %type.i61, align 2, !tbaa !14
  %storage_as22.i62 = getelementptr inbounds %struct.obj, ptr %z.0.i60, i64 0, i32 2
  store double %sub, ptr %storage_as22.i62, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end21.i63, %if.then.i44, %if.end21.i, %if.then.i
  %retval.0 = phi ptr [ %4, %if.then.i ], [ %z.0.i, %if.end21.i ], [ %17, %if.then.i44 ], [ %z.0.i60, %if.end21.i63 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @Quotient(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.end

cond.end:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp1.not = icmp eq i16 %0, 2
  br i1 %cmp1.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.end
  %call = tail call ptr @err(ptr noundef nonnull @.str.37, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %cmp3 = icmp eq ptr %y, null
  br i1 %cmp3, label %if.then5, label %cond.end13

if.then5:                                         ; preds = %if.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load double, ptr %storage_as, align 8, !tbaa !9
  %div = fdiv double 1.000000e+00, %1
  %2 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %2, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then5
  %conv.i = fptosi double %div to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %div, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %div, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %2, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %3 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %3, i64 %conv.i
  %4 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %return

if.end.i:                                         ; preds = %land.lhs.true.i, %if.then5
  %5 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %5, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %6 = load ptr, ptr @heap, align 8, !tbaa !5
  %7 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %6, %7
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %6, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %8 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %8, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %9 = phi ptr [ %.pre.i, %if.then19.i ], [ %8, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %9, i64 0, i32 2, i32 0, i32 1
  %10 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %10, ptr @freelist, align 8, !tbaa !5
  %11 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %11, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %6, %if.end16.i ], [ %9, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %div, ptr %storage_as22.i, align 8, !tbaa !9
  br label %return

cond.end13:                                       ; preds = %if.end
  %type11 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %12 = load i16, ptr %type11, align 2, !tbaa !14
  %cmp15.not = icmp eq i16 %12, 2
  br i1 %cmp15.not, label %if.end19, label %if.then17

if.then17:                                        ; preds = %cond.end13
  %call18 = tail call ptr @err(ptr noundef nonnull @.str.38, ptr noundef nonnull %y)
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %cond.end13
  %storage_as20 = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %13 = load double, ptr %storage_as20, align 8, !tbaa !9
  %storage_as22 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %14 = load double, ptr %storage_as22, align 8, !tbaa !9
  %div24 = fdiv double %13, %14
  %15 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i34 = icmp sgt i64 %15, 0
  br i1 %cmp.i34, label %land.lhs.true.i43, label %if.end.i47

land.lhs.true.i43:                                ; preds = %if.end19
  %conv.i35 = fptosi double %div24 to i64
  %conv1.i36 = sitofp i64 %conv.i35 to double
  %sub.i37 = fsub double %div24, %conv1.i36
  %cmp2.i38 = fcmp oeq double %sub.i37, 0.000000e+00
  %cmp5.i39 = fcmp oge double %div24, 0.000000e+00
  %or.cond.i40 = and i1 %cmp5.i39, %cmp2.i38
  %cmp8.i41 = icmp sgt i64 %15, %conv.i35
  %or.cond32.i42 = and i1 %cmp8.i41, %or.cond.i40
  br i1 %or.cond32.i42, label %if.then.i45, label %if.end.i47

if.then.i45:                                      ; preds = %land.lhs.true.i43
  %16 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i44 = getelementptr inbounds ptr, ptr %16, i64 %conv.i35
  %17 = load ptr, ptr %arrayidx.i44, align 8, !tbaa !5
  br label %return

if.end.i47:                                       ; preds = %land.lhs.true.i43, %if.end19
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i46 = icmp eq i64 %18, 1
  br i1 %cmp10.i46, label %if.then12.i49, label %if.else.i55

if.then12.i49:                                    ; preds = %if.end.i47
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i48 = icmp ult ptr %19, %20
  br i1 %cmp13.not.i48, label %if.end16.i53, label %if.then15.i51

if.then15.i51:                                    ; preds = %if.then12.i49
  %call.i.i50 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i53

if.end16.i53:                                     ; preds = %if.then15.i51, %if.then12.i49
  %add.ptr.i52 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %add.ptr.i52, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i64

if.else.i55:                                      ; preds = %if.end.i47
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i54 = icmp eq ptr %21, null
  br i1 %cmp17.i54, label %if.then19.i57, label %if.end20.i60

if.then19.i57:                                    ; preds = %if.else.i55
  tail call void @gc_for_newcell()
  %.pre.i56 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i60

if.end20.i60:                                     ; preds = %if.then19.i57, %if.else.i55
  %22 = phi ptr [ %.pre.i56, %if.then19.i57 ], [ %21, %if.else.i55 ]
  %cdr.i58 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i58, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i59 = add nsw i64 %24, 1
  store i64 %inc.i59, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i64

if.end21.i64:                                     ; preds = %if.end20.i60, %if.end16.i53
  %z.0.i61 = phi ptr [ %19, %if.end16.i53 ], [ %22, %if.end20.i60 ]
  store i16 0, ptr %z.0.i61, align 8, !tbaa !35
  %type.i62 = getelementptr inbounds %struct.obj, ptr %z.0.i61, i64 0, i32 1
  store i16 2, ptr %type.i62, align 2, !tbaa !14
  %storage_as22.i63 = getelementptr inbounds %struct.obj, ptr %z.0.i61, i64 0, i32 2
  store double %div24, ptr %storage_as22.i63, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end21.i64, %if.then.i45, %if.end21.i, %if.then.i
  %retval.0 = phi ptr [ %4, %if.then.i ], [ %z.0.i, %if.end21.i ], [ %17, %if.then.i45 ], [ %z.0.i61, %if.end21.i64 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lllabs(ptr noundef %x) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.39, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %2 = load double, ptr %storage_as, align 8, !tbaa !9
  %cmp3 = fcmp olt double %2, 0.000000e+00
  br i1 %cmp3, label %if.then5, label %cleanup

if.then5:                                         ; preds = %if.end
  %fneg = fneg double %2
  %3 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %3, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then5
  %conv.i = fptosi double %fneg to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %fneg, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp ole double %2, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %3, %conv.i
  %or.cond32.i = and i1 %or.cond.i, %cmp8.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %4 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %4, i64 %conv.i
  %5 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %cleanup

if.end.i:                                         ; preds = %land.lhs.true.i, %if.then5
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %6, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %7, %8
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %9 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %9, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %10 = phi ptr [ %.pre.i, %if.then19.i ], [ %9, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %11, ptr @freelist, align 8, !tbaa !5
  %12 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %12, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %7, %if.end16.i ], [ %10, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %fneg, ptr %storage_as22.i, align 8, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end21.i, %if.then.i
  %retval.0 = phi ptr [ %5, %if.then.i ], [ %z.0.i, %if.end21.i ], [ %x, %if.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lsqrt(ptr noundef %x) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.40, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %2 = load double, ptr %storage_as, align 8, !tbaa !9
  %call3 = tail call double @sqrt(double noundef %2) #33
  %3 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %3, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end
  %conv.i = fptosi double %call3 to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %call3, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %call3, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %3, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %4 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %4, i64 %conv.i
  %5 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %flocons.exit

if.end.i:                                         ; preds = %land.lhs.true.i, %if.end
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %6, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %7, %8
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %9 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %9, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %10 = phi ptr [ %.pre.i, %if.then19.i ], [ %9, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %11, ptr @freelist, align 8, !tbaa !5
  %12 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %12, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %7, %if.end16.i ], [ %10, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %call3, ptr %storage_as22.i, align 8, !tbaa !9
  br label %flocons.exit

flocons.exit:                                     ; preds = %if.then.i, %if.end21.i
  %retval.0.i = phi ptr [ %5, %if.then.i ], [ %z.0.i, %if.end21.i ]
  ret ptr %retval.0.i
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #15

; Function Attrs: nounwind uwtable
define dso_local ptr @greaterp(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.41, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %cmp3 = icmp eq ptr %y, null
  br i1 %cmp3, label %if.then13, label %cond.false6

cond.false6:                                      ; preds = %if.end
  %type7 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %2 = load i16, ptr %type7, align 2, !tbaa !14
  %3 = icmp eq i16 %2, 2
  br i1 %3, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end, %cond.false6
  %call14 = tail call ptr @err(ptr noundef nonnull @.str.42, ptr noundef %y)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %cond.false6
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %4 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as16 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %5 = load double, ptr %storage_as16, align 8, !tbaa !9
  %cmp18 = fcmp ogt double %4, %5
  %6 = load ptr, ptr @sym_t, align 8
  %retval.0 = select i1 %cmp18, ptr %6, ptr null
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lessp(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.43, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %cmp3 = icmp eq ptr %y, null
  br i1 %cmp3, label %if.then13, label %cond.false6

cond.false6:                                      ; preds = %if.end
  %type7 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %2 = load i16, ptr %type7, align 2, !tbaa !14
  %3 = icmp eq i16 %2, 2
  br i1 %3, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end, %cond.false6
  %call14 = tail call ptr @err(ptr noundef nonnull @.str.44, ptr noundef %y)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %cond.false6
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %4 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as16 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %5 = load double, ptr %storage_as16, align 8, !tbaa !9
  %cmp18 = fcmp olt double %4, %5
  %6 = load ptr, ptr @sym_t, align 8
  %retval.0 = select i1 %cmp18, ptr %6, ptr null
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @greaterEp(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.41, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %cmp3 = icmp eq ptr %y, null
  br i1 %cmp3, label %if.then13, label %cond.false6

cond.false6:                                      ; preds = %if.end
  %type7 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %2 = load i16, ptr %type7, align 2, !tbaa !14
  %3 = icmp eq i16 %2, 2
  br i1 %3, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end, %cond.false6
  %call14 = tail call ptr @err(ptr noundef nonnull @.str.42, ptr noundef %y)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %cond.false6
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %4 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as16 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %5 = load double, ptr %storage_as16, align 8, !tbaa !9
  %cmp18 = fcmp ult double %4, %5
  %6 = load ptr, ptr @sym_t, align 8
  %retval.0 = select i1 %cmp18, ptr null, ptr %6
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lessEp(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.43, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %cmp3 = icmp eq ptr %y, null
  br i1 %cmp3, label %if.then13, label %cond.false6

cond.false6:                                      ; preds = %if.end
  %type7 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %2 = load i16, ptr %type7, align 2, !tbaa !14
  %3 = icmp eq i16 %2, 2
  br i1 %3, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end, %cond.false6
  %call14 = tail call ptr @err(ptr noundef nonnull @.str.44, ptr noundef %y)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %cond.false6
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %4 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as16 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %5 = load double, ptr %storage_as16, align 8, !tbaa !9
  %cmp18 = fcmp ugt double %4, %5
  %6 = load ptr, ptr @sym_t, align 8
  %retval.0 = select i1 %cmp18, ptr null, ptr %6
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lmax(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %y, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq ptr %x, null
  br i1 %cmp1, label %if.then4, label %cond.false

cond.false:                                       ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %cond.end12, label %if.then4

if.then4:                                         ; preds = %if.end, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.45, ptr noundef %x)
  br label %cond.end12

cond.end12:                                       ; preds = %if.then4, %cond.false
  %type10 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %2 = load i16, ptr %type10, align 2, !tbaa !14
  %cmp14.not = icmp eq i16 %2, 2
  br i1 %cmp14.not, label %if.end18, label %if.then16

if.then16:                                        ; preds = %cond.end12
  %call17 = tail call ptr @err(ptr noundef nonnull @.str.46, ptr noundef nonnull %y)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %cond.end12
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %3 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as19 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %4 = load double, ptr %storage_as19, align 8, !tbaa !9
  %cmp21 = fcmp ogt double %3, %4
  %cond26 = select i1 %cmp21, ptr %x, ptr %y
  br label %return

return:                                           ; preds = %entry, %if.end18
  %retval.0 = phi ptr [ %cond26, %if.end18 ], [ %x, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lmin(ptr noundef %x, ptr noundef %y) #6 {
entry:
  %cmp = icmp eq ptr %y, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq ptr %x, null
  br i1 %cmp1, label %if.then4, label %cond.false

cond.false:                                       ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 2
  br i1 %1, label %cond.end12, label %if.then4

if.then4:                                         ; preds = %if.end, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.47, ptr noundef %x)
  br label %cond.end12

cond.end12:                                       ; preds = %if.then4, %cond.false
  %type10 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %2 = load i16, ptr %type10, align 2, !tbaa !14
  %cmp14.not = icmp eq i16 %2, 2
  br i1 %cmp14.not, label %if.end18, label %if.then16

if.then16:                                        ; preds = %cond.end12
  %call17 = tail call ptr @err(ptr noundef nonnull @.str.48, ptr noundef nonnull %y)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %cond.end12
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %3 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as19 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %4 = load double, ptr %storage_as19, align 8, !tbaa !9
  %cmp21 = fcmp olt double %3, %4
  %cond26 = select i1 %cmp21, ptr %x, ptr %y
  br label %return

return:                                           ; preds = %entry, %if.end18
  %retval.0 = phi ptr [ %cond26, %if.end18 ], [ %x, %entry ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @eq(ptr noundef readnone %x, ptr noundef readnone %y) #8 {
entry:
  %cmp = icmp eq ptr %x, %y
  %0 = load ptr, ptr @sym_t, align 8
  %retval.0 = select i1 %cmp, ptr %0, ptr null
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @eql(ptr noundef readonly %x, ptr noundef readonly %y) #12 {
entry:
  %cmp = icmp eq ptr %x, %y
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %return

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq ptr %x, null
  br i1 %cmp1, label %return, label %cond.false

cond.false:                                       ; preds = %if.else
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %1 = load i16, ptr %type, align 2, !tbaa !14
  %2 = icmp ne i16 %1, 2
  %cmp6 = icmp eq ptr %y, null
  %or.cond = or i1 %cmp6, %2
  br i1 %or.cond, label %return, label %cond.false9

cond.false9:                                      ; preds = %cond.false
  %type10 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 1
  %3 = load i16, ptr %type10, align 2, !tbaa !14
  %4 = icmp eq i16 %3, 2
  br i1 %4, label %if.else17, label %return

if.else17:                                        ; preds = %cond.false9
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %5 = load double, ptr %storage_as, align 8, !tbaa !9
  %storage_as18 = getelementptr inbounds %struct.obj, ptr %y, i64 0, i32 2
  %6 = load double, ptr %storage_as18, align 8, !tbaa !9
  %cmp20 = fcmp oeq double %5, %6
  br i1 %cmp20, label %if.then22, label %return

if.then22:                                        ; preds = %if.else17
  %7 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %return

return:                                           ; preds = %if.else, %if.else17, %cond.false9, %cond.false, %if.then22, %if.then
  %retval.0 = phi ptr [ %0, %if.then ], [ %7, %if.then22 ], [ null, %cond.false ], [ null, %cond.false9 ], [ null, %if.else17 ], [ null, %if.else ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symcons(ptr noundef %pname, ptr noundef %vcell) local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not = icmp ult ptr %1, %2
  br i1 %cmp1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %add.ptr = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr, ptr @heap, align 8, !tbaa !5
  br label %if.end6

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3 = icmp eq ptr %3, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  tail call void @gc_for_newcell()
  %.pre = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.else
  %4 = phi ptr [ %.pre, %if.then4 ], [ %3, %if.else ]
  %cdr = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc = add nsw i64 %6, 1
  store i64 %inc, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  %z.0 = phi ptr [ %1, %if.end ], [ %4, %if.end5 ]
  store i16 0, ptr %z.0, align 8, !tbaa !35
  %type = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 1
  store i16 3, ptr %type, align 2, !tbaa !14
  %storage_as7 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2
  store ptr %pname, ptr %storage_as7, align 8, !tbaa !9
  %vcell10 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2, i32 0, i32 1
  store ptr %vcell, ptr %vcell10, align 8, !tbaa !9
  ret ptr %z.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @symbolp(ptr noundef readonly %x) #12 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %return, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 3
  %2 = load ptr, ptr @sym_t, align 8
  %spec.select = select i1 %1, ptr %2, ptr null
  br label %return

return:                                           ; preds = %cond.false, %entry
  %retval.0 = phi ptr [ null, %entry ], [ %spec.select, %cond.false ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @err_ubv(ptr noundef %v) local_unnamed_addr #6 {
entry:
  %call = tail call ptr @err(ptr noundef nonnull @.str.49, ptr noundef %v)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symbol_boundp(ptr noundef %x, ptr noundef %env) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 3
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %call3 = tail call ptr @envlookup(ptr noundef %x, ptr noundef %env)
  %cmp4.not = icmp eq ptr %call3, null
  br i1 %cmp4.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  %2 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %vcell = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %vcell, align 8, !tbaa !9
  %4 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %cmp8 = icmp eq ptr %3, %4
  %5 = load ptr, ptr @sym_t, align 8
  %spec.select = select i1 %cmp8, ptr null, ptr %5
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6
  %retval.0 = phi ptr [ %2, %if.then6 ], [ %spec.select, %if.end7 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @envlookup(ptr noundef readnone %var, ptr noundef %env) #6 {
entry:
  %cmp123 = icmp eq ptr %env, null
  br i1 %cmp123, label %cleanup, label %cond.end

cond.end:                                         ; preds = %entry, %for.inc66
  %frame.0124 = phi ptr [ %6, %for.inc66 ], [ %env, %entry ]
  %type = getelementptr inbounds %struct.obj, ptr %frame.0124, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp1 = icmp eq i16 %0, 1
  br i1 %cmp1, label %for.body, label %if.then72

for.body:                                         ; preds = %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %frame.0124, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %cmp3 = icmp eq ptr %1, null
  br i1 %cmp3, label %if.then, label %cond.end9

cond.end9:                                        ; preds = %for.body
  %type7 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type7, align 2, !tbaa !14
  %cmp11.not = icmp eq i16 %2, 1
  br i1 %cmp11.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body, %cond.end9
  %call = tail call ptr @err(ptr noundef nonnull @.str.85, ptr noundef %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end9
  %storage_as13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %fl.0118 = load ptr, ptr %storage_as13, align 8, !tbaa !9
  %cmp17120 = icmp eq ptr %fl.0118, null
  br i1 %cmp17120, label %for.inc66, label %cond.end23

cond.end23:                                       ; preds = %if.end, %for.inc
  %al.0122.pn = phi ptr [ %al.0122, %for.inc ], [ %1, %if.end ]
  %fl.0121 = phi ptr [ %fl.0, %for.inc ], [ %fl.0118, %if.end ]
  %al.0122.in = getelementptr inbounds %struct.obj, ptr %al.0122.pn, i64 0, i32 2, i32 0, i32 1
  %al.0122 = load ptr, ptr %al.0122.in, align 8, !tbaa !9
  %type21 = getelementptr inbounds %struct.obj, ptr %fl.0121, i64 0, i32 1
  %3 = load i16, ptr %type21, align 2, !tbaa !14
  %cmp25 = icmp eq i16 %3, 1
  br i1 %cmp25, label %for.body27, label %cond.end57

for.body27:                                       ; preds = %cond.end23
  %cmp28 = icmp eq ptr %al.0122, null
  br i1 %cmp28, label %if.then38, label %cond.end34

cond.end34:                                       ; preds = %for.body27
  %type32 = getelementptr inbounds %struct.obj, ptr %al.0122, i64 0, i32 1
  %4 = load i16, ptr %type32, align 2, !tbaa !14
  %cmp36.not = icmp eq i16 %4, 1
  br i1 %cmp36.not, label %if.end40, label %if.then38

if.then38:                                        ; preds = %for.body27, %cond.end34
  %call39 = tail call ptr @err(ptr noundef nonnull @.str.86, ptr noundef %1)
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %cond.end34
  %storage_as41 = getelementptr inbounds %struct.obj, ptr %fl.0121, i64 0, i32 2
  %5 = load ptr, ptr %storage_as41, align 8, !tbaa !9
  %cmp43 = icmp eq ptr %5, %var
  br i1 %cmp43, label %cleanup, label %for.inc

for.inc:                                          ; preds = %if.end40
  %cdr48 = getelementptr inbounds %struct.obj, ptr %fl.0121, i64 0, i32 2, i32 0, i32 1
  %fl.0 = load ptr, ptr %cdr48, align 8, !tbaa !9
  %cmp17 = icmp eq ptr %fl.0, null
  br i1 %cmp17, label %for.inc66, label %cond.end23, !llvm.loop !54

cond.end57:                                       ; preds = %cond.end23
  %cmp59 = icmp eq i16 %3, 3
  %cmp61 = icmp eq ptr %fl.0121, %var
  %or.cond = and i1 %cmp61, %cmp59
  br i1 %or.cond, label %if.then63, label %for.inc66

if.then63:                                        ; preds = %cond.end57
  %call64 = tail call ptr @cons(ptr noundef %al.0122, ptr noundef null)
  br label %cleanup

for.inc66:                                        ; preds = %for.inc, %if.end, %cond.end57
  %cdr68 = getelementptr inbounds %struct.obj, ptr %frame.0124, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %cdr68, align 8, !tbaa !9
  %cmp = icmp eq ptr %6, null
  br i1 %cmp, label %cleanup, label %cond.end, !llvm.loop !55

if.then72:                                        ; preds = %cond.end
  %call73 = tail call ptr @err(ptr noundef nonnull @.str.87, ptr noundef nonnull %env)
  br label %cleanup

cleanup:                                          ; preds = %for.inc66, %if.end40, %entry, %if.then72, %if.then63
  %retval.0 = phi ptr [ %call64, %if.then63 ], [ null, %if.then72 ], [ null, %entry ], [ %al.0122, %if.end40 ], [ null, %for.inc66 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symbol_value(ptr noundef %x, ptr noundef %env) #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 3
  br i1 %1, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef %x)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %call3 = tail call ptr @envlookup(ptr noundef %x, ptr noundef %env)
  %cmp4.not = icmp eq ptr %call3, null
  br i1 %cmp4.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %call3, i64 0, i32 2
  %2 = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %vcell = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %vcell, align 8, !tbaa !9
  %4 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %cmp9 = icmp eq ptr %3, %4
  br i1 %cmp9, label %if.then11, label %cleanup

if.then11:                                        ; preds = %if.end7
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %x)
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then11, %if.then6
  %retval.0 = phi ptr [ %2, %if.then6 ], [ %3, %if.then11 ], [ %3, %if.end7 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @must_malloc(i64 noundef %size) local_unnamed_addr #6 {
entry:
  %cond = tail call i64 @llvm.umax.i64(i64 %size, i64 1)
  %call = tail call noalias ptr @malloc(i64 noundef %cond) #39
  %cmp = icmp eq ptr %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret ptr %call
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #16

; Function Attrs: nounwind uwtable
define dso_local ptr @gen_intern(ptr noundef %name, i64 noundef %copyp) local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %1 = load i64, ptr @interrupt_differed, align 8
  %2 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  %cmp = icmp sgt i64 %2, 1
  br i1 %cmp, label %while.cond.preheader, label %if.end

while.cond.preheader:                             ; preds = %entry
  %3 = load i8, ptr %name, align 1, !tbaa !9
  %tobool.not101 = icmp eq i8 %3, 0
  br i1 %tobool.not101, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %4 = phi i8 [ %5, %while.body ], [ %3, %while.cond.preheader ]
  %hash.0103 = phi i64 [ %rem, %while.body ], [ 0, %while.cond.preheader ]
  %cname.0102 = phi ptr [ %incdec.ptr, %while.body ], [ %name, %while.cond.preheader ]
  %conv = sext i8 %4 to i64
  %incdec.ptr = getelementptr inbounds i8, ptr %cname.0102, i64 1
  %mul = mul nsw i64 %hash.0103, 17
  %xor = xor i64 %mul, %conv
  %rem = srem i64 %xor, %2
  %5 = load i8, ptr %incdec.ptr, align 1, !tbaa !9
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !56

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %hash.0.lcssa = phi i64 [ 0, %while.cond.preheader ], [ %rem, %while.body ]
  %6 = load ptr, ptr @obarray, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds ptr, ptr %6, i64 %hash.0.lcssa
  br label %if.end

if.end:                                           ; preds = %entry, %while.end
  %hash.1 = phi i64 [ %hash.0.lcssa, %while.end ], [ 0, %entry ]
  %sl.0.in = phi ptr [ %arrayidx, %while.end ], [ @oblistvar, %entry ]
  %sl.0 = load ptr, ptr %sl.0.in, align 8, !tbaa !5
  %cmp1.not104 = icmp eq ptr %sl.0, null
  br i1 %cmp1.not104, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %l.0105 = phi ptr [ %9, %for.inc ], [ %sl.0, %if.end ]
  %storage_as = getelementptr inbounds %struct.obj, ptr %l.0105, i64 0, i32 2
  %7 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %storage_as3 = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2
  %8 = load ptr, ptr %storage_as3, align 8, !tbaa !9
  %call4 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %name, ptr noundef nonnull dereferenceable(1) %8) #34
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then7, label %for.inc

if.then7:                                         ; preds = %for.body
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 0
  %cmp1.i52 = icmp eq i64 %1, 1
  %or.cond.i = select i1 %cmp.i, i1 %cmp1.i52, i1 false
  br i1 %or.cond.i, label %if.then.i, label %cleanup

if.then.i:                                        ; preds = %if.then7
  %storage_as.le = getelementptr inbounds %struct.obj, ptr %l.0105, i64 0, i32 2
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %.pre = load ptr, ptr %storage_as.le, align 8, !tbaa !9
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %cdr = getelementptr inbounds %struct.obj, ptr %l.0105, i64 0, i32 2, i32 0, i32 1
  %9 = load ptr, ptr %cdr, align 8, !tbaa !9
  %cmp1.not = icmp eq ptr %9, null
  br i1 %cmp1.not, label %for.end, label %for.body, !llvm.loop !57

for.end:                                          ; preds = %for.inc, %if.end
  %cmp13 = icmp eq i64 %copyp, 1
  br i1 %cmp13, label %if.then15, label %if.end20

if.then15:                                        ; preds = %for.end
  %call16 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %name) #34
  %add = add i64 %call16, 1
  %cond.i = tail call i64 @llvm.umax.i64(i64 %add, i64 1)
  %call.i = tail call noalias ptr @malloc(i64 noundef %cond.i) #39
  %cmp.i53 = icmp eq ptr %call.i, null
  br i1 %cmp.i53, label %if.then.i54, label %must_malloc.exit

if.then.i54:                                      ; preds = %if.then15
  %call1.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %if.then15, %if.then.i54
  %call18 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %call.i, ptr noundef nonnull dereferenceable(1) %name) #33
  br label %if.end20

if.end20:                                         ; preds = %for.end, %must_malloc.exit
  %cname.1 = phi ptr [ %call.i, %must_malloc.exit ], [ %name, %for.end ]
  %10 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %11 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i55 = icmp eq i64 %11, 1
  br i1 %cmp.i55, label %if.then.i56, label %if.else.i

if.then.i56:                                      ; preds = %if.end20
  %12 = load ptr, ptr @heap, align 8, !tbaa !5
  %13 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %12, %13
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i56
  %call.i.i57 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i56
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %12, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %symcons.exit

if.else.i:                                        ; preds = %if.end20
  %14 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %14, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %15 = phi ptr [ %.pre.i, %if.then4.i ], [ %14, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 2, i32 0, i32 1
  %16 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %16, ptr @freelist, align 8, !tbaa !5
  %17 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %17, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %symcons.exit

symcons.exit:                                     ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %12, %if.end.i ], [ %15, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 3, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %cname.1, ptr %storage_as7.i, align 8, !tbaa !9
  %vcell10.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %10, ptr %vcell10.i, align 8, !tbaa !9
  %18 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  %cmp22 = icmp sgt i64 %18, 1
  br i1 %cmp22, label %if.then24, label %if.end27

if.then24:                                        ; preds = %symcons.exit
  %19 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i58 = icmp eq i64 %19, 1
  br i1 %cmp.i58, label %if.then.i60, label %if.else.i66

if.then.i60:                                      ; preds = %if.then24
  %20 = load ptr, ptr @heap, align 8, !tbaa !5
  %21 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i59 = icmp ult ptr %20, %21
  br i1 %cmp1.not.i59, label %if.end.i64, label %if.then2.i62

if.then2.i62:                                     ; preds = %if.then.i60
  %call.i.i61 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i64

if.end.i64:                                       ; preds = %if.then2.i62, %if.then.i60
  %add.ptr.i63 = getelementptr inbounds %struct.obj, ptr %20, i64 1
  store ptr %add.ptr.i63, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i66:                                      ; preds = %if.then24
  %22 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i65 = icmp eq ptr %22, null
  br i1 %cmp3.i65, label %if.then4.i68, label %if.end5.i71

if.then4.i68:                                     ; preds = %if.else.i66
  tail call void @gc_for_newcell() #38
  %.pre.i67 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i71

if.end5.i71:                                      ; preds = %if.then4.i68, %if.else.i66
  %23 = phi ptr [ %.pre.i67, %if.then4.i68 ], [ %22, %if.else.i66 ]
  %cdr.i69 = getelementptr inbounds %struct.obj, ptr %23, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %cdr.i69, align 8, !tbaa !9
  store ptr %24, ptr @freelist, align 8, !tbaa !5
  %25 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i70 = add nsw i64 %25, 1
  store i64 %inc.i70, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i64, %if.end5.i71
  %z.0.i72 = phi ptr [ %20, %if.end.i64 ], [ %23, %if.end5.i71 ]
  store i16 0, ptr %z.0.i72, align 8, !tbaa !35
  %type.i73 = getelementptr inbounds %struct.obj, ptr %z.0.i72, i64 0, i32 1
  store i16 1, ptr %type.i73, align 2, !tbaa !14
  %storage_as7.i74 = getelementptr inbounds %struct.obj, ptr %z.0.i72, i64 0, i32 2
  store ptr %z.0.i, ptr %storage_as7.i74, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i72, i64 0, i32 2, i32 0, i32 1
  store ptr %sl.0, ptr %cdr9.i, align 8, !tbaa !9
  %26 = load ptr, ptr @obarray, align 8, !tbaa !5
  %arrayidx26 = getelementptr inbounds ptr, ptr %26, i64 %hash.1
  store ptr %z.0.i72, ptr %arrayidx26, align 8, !tbaa !5
  br label %if.end27

if.end27:                                         ; preds = %cons.exit, %symcons.exit
  %27 = load ptr, ptr @oblistvar, align 8, !tbaa !5
  %28 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i75 = icmp eq i64 %28, 1
  br i1 %cmp.i75, label %if.then.i77, label %if.else.i83

if.then.i77:                                      ; preds = %if.end27
  %29 = load ptr, ptr @heap, align 8, !tbaa !5
  %30 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i76 = icmp ult ptr %29, %30
  br i1 %cmp1.not.i76, label %if.end.i81, label %if.then2.i79

if.then2.i79:                                     ; preds = %if.then.i77
  %call.i.i78 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i81

if.end.i81:                                       ; preds = %if.then2.i79, %if.then.i77
  %add.ptr.i80 = getelementptr inbounds %struct.obj, ptr %29, i64 1
  store ptr %add.ptr.i80, ptr @heap, align 8, !tbaa !5
  br label %cons.exit93

if.else.i83:                                      ; preds = %if.end27
  %31 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i82 = icmp eq ptr %31, null
  br i1 %cmp3.i82, label %if.then4.i85, label %if.end5.i88

if.then4.i85:                                     ; preds = %if.else.i83
  tail call void @gc_for_newcell() #38
  %.pre.i84 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i88

if.end5.i88:                                      ; preds = %if.then4.i85, %if.else.i83
  %32 = phi ptr [ %.pre.i84, %if.then4.i85 ], [ %31, %if.else.i83 ]
  %cdr.i86 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2, i32 0, i32 1
  %33 = load ptr, ptr %cdr.i86, align 8, !tbaa !9
  store ptr %33, ptr @freelist, align 8, !tbaa !5
  %34 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i87 = add nsw i64 %34, 1
  store i64 %inc.i87, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit93

cons.exit93:                                      ; preds = %if.end.i81, %if.end5.i88
  %z.0.i89 = phi ptr [ %29, %if.end.i81 ], [ %32, %if.end5.i88 ]
  store i16 0, ptr %z.0.i89, align 8, !tbaa !35
  %type.i90 = getelementptr inbounds %struct.obj, ptr %z.0.i89, i64 0, i32 1
  store i16 1, ptr %type.i90, align 2, !tbaa !14
  %storage_as7.i91 = getelementptr inbounds %struct.obj, ptr %z.0.i89, i64 0, i32 2
  store ptr %z.0.i, ptr %storage_as7.i91, align 8, !tbaa !9
  %cdr9.i92 = getelementptr inbounds %struct.obj, ptr %z.0.i89, i64 0, i32 2, i32 0, i32 1
  store ptr %27, ptr %cdr9.i92, align 8, !tbaa !9
  store ptr %z.0.i89, ptr @oblistvar, align 8, !tbaa !5
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i94 = icmp eq i64 %0, 0
  %35 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i95 = icmp eq i64 %35, 1
  %or.cond.i96 = select i1 %cmp.i94, i1 %cmp1.i95, i1 false
  br i1 %or.cond.i96, label %if.then.i98, label %cleanup

if.then.i98:                                      ; preds = %cons.exit93
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i97 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.then7, %if.then.i98, %cons.exit93
  %retval.0 = phi ptr [ %z.0.i, %cons.exit93 ], [ %z.0.i, %if.then.i98 ], [ %7, %if.then7 ], [ %.pre, %if.then.i ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: nounwind uwtable
define dso_local ptr @cintern(ptr noundef %name) local_unnamed_addr #6 {
entry:
  %call = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define dso_local ptr @rintern(ptr noundef %name) local_unnamed_addr #6 {
entry:
  %call = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 1)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define dso_local ptr @intern(ptr noundef %name) #6 {
entry:
  %cmp.i = icmp eq ptr %name, null
  br i1 %cmp.i, label %if.else15.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %name, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  switch i16 %0, label %if.else15.i [
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then.i:                                        ; preds = %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %name, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false.i
  %data.i = getelementptr inbounds %struct.obj, ptr %name, i64 0, i32 2, i32 0, i32 1
  %2 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false.i, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %name)
  br label %get_c_string.exit

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i, %if.else15.i
  %retval.0.i = phi ptr [ %1, %if.then.i ], [ %2, %if.then13.i ], [ null, %if.else15.i ]
  %call.i2 = tail call ptr @gen_intern(ptr noundef %retval.0.i, i64 noundef 1)
  ret ptr %call.i2
}

; Function Attrs: nounwind uwtable
define dso_local ptr @subrcons(i64 noundef %type, ptr noundef %name, ptr noundef %f) local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not = icmp ult ptr %1, %2
  br i1 %cmp1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %add.ptr = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr, ptr @heap, align 8, !tbaa !5
  br label %if.end6

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3 = icmp eq ptr %3, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  tail call void @gc_for_newcell()
  %.pre = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.else
  %4 = phi ptr [ %.pre, %if.then4 ], [ %3, %if.else ]
  %cdr = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc = add nsw i64 %6, 1
  store i64 %inc, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  %z.0 = phi ptr [ %1, %if.end ], [ %4, %if.end5 ]
  store i16 0, ptr %z.0, align 8, !tbaa !35
  %conv = trunc i64 %type to i16
  %type7 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 1
  store i16 %conv, ptr %type7, align 2, !tbaa !14
  %storage_as8 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2
  store ptr %name, ptr %storage_as8, align 8, !tbaa !9
  %f11 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2, i32 0, i32 1
  store ptr %f, ptr %f11, align 8, !tbaa !9
  ret ptr %z.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @closure(ptr noundef %env, ptr noundef %code) #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not = icmp ult ptr %1, %2
  br i1 %cmp1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %add.ptr = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr, ptr @heap, align 8, !tbaa !5
  br label %if.end6

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3 = icmp eq ptr %3, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  tail call void @gc_for_newcell()
  %.pre = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.else
  %4 = phi ptr [ %.pre, %if.then4 ], [ %3, %if.else ]
  %cdr = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc = add nsw i64 %6, 1
  store i64 %inc, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  %z.0 = phi ptr [ %1, %if.end ], [ %4, %if.end5 ]
  store i16 0, ptr %z.0, align 8, !tbaa !35
  %type = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 1
  store i16 11, ptr %type, align 2, !tbaa !14
  %storage_as7 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2
  store ptr %env, ptr %storage_as7, align 8, !tbaa !9
  %code10 = getelementptr inbounds %struct.obj, ptr %z.0, i64 0, i32 2, i32 0, i32 1
  store ptr %code, ptr %code10, align 8, !tbaa !9
  ret ptr %z.0
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_protect(ptr noundef %location) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %gc_protect_n.exit

if.then.i.i:                                      ; preds = %entry
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_n.exit

gc_protect_n.exit:                                ; preds = %entry, %if.then.i.i
  store ptr %location, ptr %call.i.i, align 8, !tbaa !58
  %length.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i, i64 0, i32 1
  store i64 1, ptr %length.i, align 8, !tbaa !60
  %0 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i, i64 0, i32 2
  store ptr %0, ptr %next.i, align 8, !tbaa !61
  store ptr %call.i.i, ptr @protected_registers, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_protect_n(ptr noundef %location, i64 noundef %n) local_unnamed_addr #6 {
entry:
  %call.i = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i = icmp eq ptr %call.i, null
  br i1 %cmp.i, label %if.then.i, label %must_malloc.exit

if.then.i:                                        ; preds = %entry
  %call1.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %entry, %if.then.i
  store ptr %location, ptr %call.i, align 8, !tbaa !58
  %length = getelementptr inbounds %struct.gc_protected, ptr %call.i, i64 0, i32 1
  store i64 %n, ptr %length, align 8, !tbaa !60
  %0 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next = getelementptr inbounds %struct.gc_protected, ptr %call.i, i64 0, i32 2
  store ptr %0, ptr %next, align 8, !tbaa !61
  store ptr %call.i, ptr @protected_registers, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_protect_sym(ptr noundef %location, ptr noundef %st) local_unnamed_addr #6 {
entry:
  %call.i = tail call ptr @gen_intern(ptr noundef %st, i64 noundef 0)
  store ptr %call.i, ptr %location, align 8, !tbaa !5
  %call.i.i.i = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %gc_protect.exit

if.then.i.i.i:                                    ; preds = %entry
  %call1.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect.exit

gc_protect.exit:                                  ; preds = %entry, %if.then.i.i.i
  store ptr %location, ptr %call.i.i.i, align 8, !tbaa !58
  %length.i.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i, i64 0, i32 1
  store i64 1, ptr %length.i.i, align 8, !tbaa !60
  %0 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i, i64 0, i32 2
  store ptr %0, ptr %next.i.i, align 8, !tbaa !61
  store ptr %call.i.i.i, ptr @protected_registers, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @scan_registers() local_unnamed_addr #6 {
entry:
  %reg.025 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %tobool.not26 = icmp eq ptr %reg.025, null
  br i1 %tobool.not26, label %for.end6, label %for.body

for.body:                                         ; preds = %entry, %for.inc5
  %reg.027 = phi ptr [ %reg.0, %for.inc5 ], [ %reg.025, %entry ]
  %0 = load ptr, ptr %reg.027, align 8, !tbaa !58
  %length = getelementptr inbounds %struct.gc_protected, ptr %reg.027, i64 0, i32 1
  %1 = load i64, ptr %length, align 8, !tbaa !60
  %cmp23 = icmp sgt i64 %1, 0
  br i1 %cmp23, label %for.body3, label %for.inc5

for.body3:                                        ; preds = %for.body, %gc_relocate.exit
  %j.024 = phi i64 [ %inc, %gc_relocate.exit ], [ 0, %for.body ]
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %j.024
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %2, null
  br i1 %cmp.i, label %gc_relocate.exit, label %if.end.i

if.end.i:                                         ; preds = %for.body3
  %3 = load i16, ptr %2, align 8, !tbaa !35
  %cmp1.i = icmp eq i16 %3, 1
  br i1 %cmp1.i, label %if.then3.i, label %cond.false.i

if.then3.i:                                       ; preds = %if.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %gc_relocate.exit

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 1
  %5 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv7.i = sext i16 %5 to i32
  switch i32 %conv7.i, label %cond.end18.i [
    i32 2, label %sw.bb.i
    i32 1, label %sw.bb.i
    i32 3, label %sw.bb.i
    i32 11, label %sw.bb.i
    i32 4, label %sw.bb.i
    i32 5, label %sw.bb.i
    i32 6, label %sw.bb.i
    i32 21, label %sw.bb.i
    i32 7, label %sw.bb.i
    i32 19, label %sw.bb.i
    i32 20, label %sw.bb.i
    i32 8, label %sw.bb.i
    i32 9, label %sw.bb.i
    i32 10, label %sw.bb.i
  ]

sw.bb.i:                                          ; preds = %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i, %cond.false.i
  %6 = load ptr, ptr @heap, align 8, !tbaa !5
  %7 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp8.not.i = icmp ult ptr %6, %7
  br i1 %cmp8.not.i, label %if.end11.i, label %if.then10.i

if.then10.i:                                      ; preds = %sw.bb.i
  %.b.i = load i1, ptr @inside_err, align 8
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %8 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp27190.i = icmp sgt i64 %8, 0
  br i1 %cmp27190.i, label %if.then34.i, label %if.end44.i

if.then34.i:                                      ; preds = %if.then10.i
  %call35.i = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.17, ptr noundef nonnull @.str.26)
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.then34.i, %if.then10.i
  %9 = load i64, ptr @errjmp_ok, align 8, !tbaa !10
  %cmp45.i = icmp eq i64 %9, 1
  br i1 %cmp45.i, label %if.then47.i, label %if.end77.i

if.then47.i:                                      ; preds = %if.end44.i
  store i1 true, ptr @inside_err, align 8
  %10 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %cmp.i16 = icmp eq ptr %10, null
  br i1 %cmp.i16, label %if.then.i, label %cond.false.i18

cond.false.i18:                                   ; preds = %if.then47.i
  %type.i17 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 1
  %11 = load i16, ptr %type.i17, align 2, !tbaa !14
  %12 = icmp eq i16 %11, 3
  br i1 %12, label %setvar.exit, label %if.then.i

if.then.i:                                        ; preds = %cond.false.i18, %if.then47.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %10) #40
  br label %setvar.exit

setvar.exit:                                      ; preds = %cond.false.i18, %if.then.i
  %vcell.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %vcell.i, align 8, !tbaa !9
  %l.0169.i = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %tobool49.not170.i = icmp eq ptr %l.0169.i, null
  br i1 %tobool49.not170.i, label %for.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %setvar.exit
  %13 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %14 = load ptr, ptr @sym_catchall, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %l.0171.i = phi ptr [ %l.0169.i, %for.body.lr.ph.i ], [ %l.0.i, %for.inc.i ]
  %15 = load ptr, ptr %l.0171.i, align 8, !tbaa !17
  %cmp50.i = icmp eq ptr %15, %13
  %cmp53.i = icmp eq ptr %15, %14
  %or.cond124.i = select i1 %cmp50.i, i1 true, i1 %cmp53.i
  br i1 %or.cond124.i, label %if.then55.i, label %for.inc.i

if.then55.i:                                      ; preds = %for.body.i
  br i1 %.b.i, label %cond.end71.i, label %cond.false65.i

cond.false65.i:                                   ; preds = %if.then55.i
  %call67.i = tail call ptr @strcons(i64 noundef 18, ptr noundef nonnull @.str.26) #33
  %call68.i = tail call ptr @cons(ptr noundef %call67.i, ptr noundef null) #38
  br label %cond.end71.i

cond.end71.i:                                     ; preds = %cond.false65.i, %if.then55.i
  %cond72.i = phi ptr [ %call68.i, %cond.false65.i ], [ null, %if.then55.i ]
  %retval73.i = getelementptr inbounds %struct.catch_frame, ptr %l.0171.i, i64 0, i32 1
  store ptr %cond72.i, ptr %retval73.i, align 8, !tbaa !19
  store i64 0, ptr @nointerrupt, align 8, !tbaa !10
  store i1 false, ptr @inside_err, align 8
  %cframe.i = getelementptr inbounds %struct.catch_frame, ptr %l.0171.i, i64 0, i32 2
  tail call void @longjmp(ptr noundef nonnull %cframe.i, i32 noundef 2) #35
  unreachable

for.inc.i:                                        ; preds = %for.body.i
  %next.i = getelementptr inbounds %struct.catch_frame, ptr %l.0171.i, i64 0, i32 3
  %l.0.i = load ptr, ptr %next.i, align 8, !tbaa !5
  %tobool49.not.i = icmp eq ptr %l.0.i, null
  br i1 %tobool49.not.i, label %for.end.i, label %for.body.i, !llvm.loop !20

for.end.i:                                        ; preds = %for.inc.i, %setvar.exit
  store i1 false, ptr @inside_err, align 8
  tail call void @longjmp(ptr noundef nonnull @errjmp, i32 noundef 1) #35
  unreachable

if.end77.i:                                       ; preds = %if.end44.i
  %16 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp78.i = icmp sgt i64 %16, 0
  br i1 %cmp78.i, label %if.then80.i, label %if.end82.i

if.then80.i:                                      ; preds = %if.end77.i
  %puts.i = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.242)
  br label %if.end82.i

if.end82.i:                                       ; preds = %if.then80.i, %if.end77.i
  %17 = load ptr, ptr @fatal_exit_hook, align 8, !tbaa !5
  %tobool83.not.i = icmp eq ptr %17, null
  br i1 %tobool83.not.i, label %if.else85.i, label %err.exit

if.else85.i:                                      ; preds = %if.end82.i
  tail call void @exit(i32 noundef 10) #35
  unreachable

err.exit:                                         ; preds = %if.end82.i
  tail call void %17() #33
  br label %if.end11.i

if.end11.i:                                       ; preds = %err.exit, %sw.bb.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %6, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  br label %sw.epilog.i

cond.end18.i:                                     ; preds = %cond.false.i
  %conv20.i = sext i16 %5 to i64
  %18 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i.i = icmp eq ptr %18, null
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %cond.end18.i
  %calloc.i.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i.i = icmp eq ptr %calloc.i.i, null
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %must_malloc.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %call1.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i.i

must_malloc.exit.i.i:                             ; preds = %if.then.i.i.i, %if.then.i.i
  store ptr %calloc.i.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %must_malloc.exit.i.i, %cond.end18.i
  %19 = phi ptr [ %calloc.i.i, %must_malloc.exit.i.i ], [ %18, %cond.end18.i ]
  %or.cond.i.i = icmp ult i16 %5, 100
  br i1 %or.cond.i.i, label %if.then3.i.i, label %if.else.i.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  %arrayidx.i.i = getelementptr inbounds %struct.user_type_hooks, ptr %19, i64 %conv20.i
  %20 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !62
  %tobool.not.i = icmp eq ptr %20, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then21.i

if.else.i.i:                                      ; preds = %if.end.i.i
  %call4.i.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then21.i:                                      ; preds = %if.then3.i.i
  %call23.i = tail call ptr %20(ptr noundef nonnull %2) #33
  br label %sw.epilog.i

if.else.i:                                        ; preds = %if.then3.i.i
  %21 = load ptr, ptr @heap, align 8, !tbaa !5
  %22 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp24.not.i = icmp ult ptr %21, %22
  br i1 %cmp24.not.i, label %if.end27.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.else.i
  %call.i51.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then26.i, %if.else.i
  %add.ptr28.i = getelementptr inbounds %struct.obj, ptr %21, i64 1
  store ptr %add.ptr28.i, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %21, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.end27.i, %if.then21.i, %if.end11.i
  %nw.0.i = phi ptr [ %call23.i, %if.then21.i ], [ %21, %if.end27.i ], [ %6, %if.end11.i ]
  store i16 1, ptr %2, align 8, !tbaa !35
  %storage_as31.i = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 2
  store ptr %nw.0.i, ptr %storage_as31.i, align 8, !tbaa !9
  br label %gc_relocate.exit

gc_relocate.exit:                                 ; preds = %for.body3, %if.then3.i, %sw.epilog.i
  %retval.0.i = phi ptr [ %4, %if.then3.i ], [ %nw.0.i, %sw.epilog.i ], [ null, %for.body3 ]
  store ptr %retval.0.i, ptr %arrayidx, align 8, !tbaa !5
  %inc = add nuw nsw i64 %j.024, 1
  %exitcond.not = icmp eq i64 %inc, %1
  br i1 %exitcond.not, label %for.inc5, label %for.body3, !llvm.loop !63

for.inc5:                                         ; preds = %gc_relocate.exit, %for.body
  %next = getelementptr inbounds %struct.gc_protected, ptr %reg.027, i64 0, i32 2
  %reg.0 = load ptr, ptr %next, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %reg.0, null
  br i1 %tobool.not, label %for.end6, label %for.body, !llvm.loop !64

for.end6:                                         ; preds = %for.inc5, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @gc_relocate(ptr noundef %x) local_unnamed_addr #6 {
entry:
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %0 = load i16, ptr %x, align 8, !tbaa !35
  %cmp1 = icmp eq i16 %0, 1
  br i1 %cmp1, label %if.then3, label %cond.false

if.then3:                                         ; preds = %if.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %cleanup

cond.false:                                       ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %2 = load i16, ptr %type, align 2, !tbaa !14
  %conv7 = sext i16 %2 to i32
  switch i32 %conv7, label %cond.end18 [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 11, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 21, label %sw.bb
    i32 7, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
  ]

sw.bb:                                            ; preds = %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false
  %3 = load ptr, ptr @heap, align 8, !tbaa !5
  %4 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp8.not = icmp ult ptr %3, %4
  br i1 %cmp8.not, label %if.end11, label %if.then10

if.then10:                                        ; preds = %sw.bb
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %sw.bb
  %add.ptr = getelementptr inbounds %struct.obj, ptr %3, i64 1
  store ptr %add.ptr, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %x, i64 24, i1 false)
  br label %sw.epilog

cond.end18:                                       ; preds = %cond.false
  %conv20 = sext i16 %2 to i64
  %5 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %5, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end18
  %calloc.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %cond.end18
  %6 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %5, %cond.end18 ]
  %or.cond.i = icmp ult i16 %2, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %arrayidx.i = getelementptr inbounds %struct.user_type_hooks, ptr %6, i64 %conv20
  %7 = load ptr, ptr %arrayidx.i, align 8, !tbaa !62
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.else, label %if.then21

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then21:                                        ; preds = %if.then3.i
  %call23 = tail call ptr %7(ptr noundef nonnull %x) #33
  br label %sw.epilog

if.else:                                          ; preds = %if.then3.i
  %8 = load ptr, ptr @heap, align 8, !tbaa !5
  %9 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp24.not = icmp ult ptr %8, %9
  br i1 %cmp24.not, label %if.end27, label %if.then26

if.then26:                                        ; preds = %if.else
  %call.i51 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.else
  %add.ptr28 = getelementptr inbounds %struct.obj, ptr %8, i64 1
  store ptr %add.ptr28, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %x, i64 24, i1 false)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then21, %if.end27, %if.end11
  %nw.0 = phi ptr [ %call23, %if.then21 ], [ %8, %if.end27 ], [ %3, %if.end11 ]
  store i16 1, ptr %x, align 8, !tbaa !35
  %storage_as31 = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  store ptr %nw.0, ptr %storage_as31, align 8, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %entry, %sw.epilog, %if.then3
  %retval.0 = phi ptr [ %1, %if.then3 ], [ %nw.0, %sw.epilog ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local void @init_storage() local_unnamed_addr #6 {
entry:
  %stack_start = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %stack_start) #33
  %0 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr %stack_start, ptr @stack_start_ptr, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @init_storage_1()
  call void @init_storage_a() #33
  %1 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i.i = icmp eq ptr %1, null
  br i1 %cmp.i.i, label %if.then.i.i, label %set_print_hooks.exit

if.then.i.i:                                      ; preds = %if.end
  %calloc.i.i = call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i.i = icmp eq ptr %calloc.i.i, null
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %must_malloc.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %call1.i.i.i = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i.i

must_malloc.exit.i.i:                             ; preds = %if.then.i.i.i, %if.then.i.i
  store ptr %calloc.i.i, ptr @user_types, align 8, !tbaa !5
  br label %set_print_hooks.exit

set_print_hooks.exit:                             ; preds = %must_malloc.exit.i.i, %if.end
  %2 = phi ptr [ %calloc.i.i, %must_malloc.exit.i.i ], [ %1, %if.end ]
  %arrayidx.i.i = getelementptr inbounds %struct.user_type_hooks, ptr %2, i64 17
  %gc_free.i = getelementptr inbounds %struct.user_type_hooks, ptr %2, i64 17, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx.i.i, i8 0, i64 24, i1 false)
  store ptr @file_gc_free, ptr %gc_free.i, align 8, !tbaa !48
  %prin1.i = getelementptr inbounds %struct.user_type_hooks, ptr %2, i64 17, i32 4
  store ptr @file_prin1, ptr %prin1.i, align 8, !tbaa !65
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %stack_start) #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_storage_1() local_unnamed_addr #6 {
entry:
  %call.i = tail call noalias dereferenceable_or_null(5121) ptr @malloc(i64 noundef 5121) #39
  %cmp.i = icmp eq ptr %call.i, null
  br i1 %cmp.i, label %if.then.i, label %must_malloc.exit

if.then.i:                                        ; preds = %entry
  %call1.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %entry, %if.then.i
  store ptr %call.i, ptr @tkbuffer, align 8, !tbaa !5
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  %1 = load i64, ptr @nheaps, align 8
  %cmp1 = icmp ne i64 %1, 2
  %or.cond = select i1 %cmp, i1 %cmp1, i1 false
  %cmp2 = icmp slt i64 %1, 1
  %or.cond72 = select i1 %or.cond, i1 true, i1 %cmp2
  br i1 %or.cond72, label %if.then, label %if.end

if.then:                                          ; preds = %must_malloc.exit
  %call3 = tail call ptr @err(ptr noundef nonnull @.str.52, ptr noundef null)
  %.pre = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %must_malloc.exit, %if.then
  %2 = phi i64 [ %1, %must_malloc.exit ], [ %.pre, %if.then ]
  %mul = shl i64 %2, 3
  %cond.i = tail call i64 @llvm.umax.i64(i64 %mul, i64 1)
  %call.i89 = tail call noalias ptr @malloc(i64 noundef %cond.i) #39
  %cmp.i90 = icmp eq ptr %call.i89, null
  br i1 %cmp.i90, label %if.then.i92, label %must_malloc.exit93

if.then.i92:                                      ; preds = %if.end
  %call1.i91 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre336 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %must_malloc.exit93

must_malloc.exit93:                               ; preds = %if.end, %if.then.i92
  %3 = phi i64 [ %2, %if.end ], [ %.pre336, %if.then.i92 ]
  store ptr %call.i89, ptr @heaps, align 8, !tbaa !5
  %cmp5327 = icmp sgt i64 %3, 0
  br i1 %cmp5327, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %must_malloc.exit93
  %xtraiter = and i64 %3, 3
  %4 = icmp ult i64 %3, 4
  br i1 %4, label %for.end.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %3, -4
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %j.0328 = phi i64 [ 0, %for.body.preheader.new ], [ %inc.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.3, %for.body ]
  %5 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %j.0328
  store ptr null, ptr %arrayidx, align 8, !tbaa !5
  %inc = or i64 %j.0328, 1
  %6 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx.1 = getelementptr inbounds ptr, ptr %6, i64 %inc
  store ptr null, ptr %arrayidx.1, align 8, !tbaa !5
  %inc.1 = or i64 %j.0328, 2
  %7 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx.2 = getelementptr inbounds ptr, ptr %7, i64 %inc.1
  store ptr null, ptr %arrayidx.2, align 8, !tbaa !5
  %inc.2 = or i64 %j.0328, 3
  %8 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx.3 = getelementptr inbounds ptr, ptr %8, i64 %inc.2
  store ptr null, ptr %arrayidx.3, align 8, !tbaa !5
  %inc.3 = add nuw nsw i64 %j.0328, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !llvm.loop !66

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.preheader
  %j.0328.unr = phi i64 [ 0, %for.body.preheader ], [ %inc.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %j.0328.epil = phi i64 [ %inc.epil, %for.body.epil ], [ %j.0328.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
  %9 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx.epil = getelementptr inbounds ptr, ptr %9, i64 %j.0328.epil
  store ptr null, ptr %arrayidx.epil, align 8, !tbaa !5
  %inc.epil = add nuw nsw i64 %j.0328.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !llvm.loop !67

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %must_malloc.exit93
  %10 = load i64, ptr @heap_size, align 8, !tbaa !10
  %mul6 = mul i64 %10, 24
  %cond.i94 = tail call i64 @llvm.umax.i64(i64 %mul6, i64 1)
  %call.i95 = tail call noalias ptr @malloc(i64 noundef %cond.i94) #39
  %cmp.i96 = icmp eq ptr %call.i95, null
  br i1 %cmp.i96, label %if.then.i98, label %must_malloc.exit99

if.then.i98:                                      ; preds = %for.end
  %call1.i97 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre337 = load i64, ptr @heap_size, align 8, !tbaa !10
  br label %must_malloc.exit99

must_malloc.exit99:                               ; preds = %for.end, %if.then.i98
  %11 = phi i64 [ %10, %for.end ], [ %.pre337, %if.then.i98 ]
  %12 = load ptr, ptr @heaps, align 8, !tbaa !5
  store ptr %call.i95, ptr %12, align 8, !tbaa !5
  %13 = load ptr, ptr @heaps, align 8, !tbaa !5
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  store ptr %14, ptr @heap, align 8, !tbaa !5
  store ptr %14, ptr @heap_org, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds %struct.obj, ptr %14, i64 %11
  store ptr %add.ptr, ptr @heap_end, align 8, !tbaa !5
  %15 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10 = icmp eq i64 %15, 1
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %must_malloc.exit99
  %mul12 = mul i64 %11, 24
  %cond.i100 = tail call i64 @llvm.umax.i64(i64 %mul12, i64 1)
  %call.i101 = tail call noalias ptr @malloc(i64 noundef %cond.i100) #39
  %cmp.i102 = icmp eq ptr %call.i101, null
  br i1 %cmp.i102, label %if.then.i104, label %must_malloc.exit105

if.then.i104:                                     ; preds = %if.then11
  %call1.i103 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre338 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %must_malloc.exit105

must_malloc.exit105:                              ; preds = %if.then11, %if.then.i104
  %16 = phi ptr [ %13, %if.then11 ], [ %.pre338, %if.then.i104 ]
  %arrayidx14 = getelementptr inbounds ptr, ptr %16, i64 1
  store ptr %call.i101, ptr %arrayidx14, align 8, !tbaa !5
  br label %if.end15

if.else:                                          ; preds = %must_malloc.exit99
  store ptr null, ptr @freelist, align 8, !tbaa !5
  br label %if.end15

if.end15:                                         ; preds = %if.else, %must_malloc.exit105
  %call.i.i.i = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %gc_protect.exit

if.then.i.i.i:                                    ; preds = %if.end15
  %call1.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect.exit

gc_protect.exit:                                  ; preds = %if.end15, %if.then.i.i.i
  store ptr @oblistvar, ptr %call.i.i.i, align 8, !tbaa !58
  %length.i.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i, i64 0, i32 1
  store i64 1, ptr %length.i.i, align 8, !tbaa !60
  %17 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i, i64 0, i32 2
  store ptr %17, ptr %next.i.i, align 8, !tbaa !61
  store ptr %call.i.i.i, ptr @protected_registers, align 8, !tbaa !5
  %18 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  %cmp16 = icmp sgt i64 %18, 1
  br i1 %cmp16, label %if.then17, label %if.end27

if.then17:                                        ; preds = %gc_protect.exit
  %mul18 = shl i64 %18, 3
  %cond.i106 = tail call i64 @llvm.umax.i64(i64 %mul18, i64 1)
  %call.i107 = tail call noalias ptr @malloc(i64 noundef %cond.i106) #39
  %cmp.i108 = icmp eq ptr %call.i107, null
  br i1 %cmp.i108, label %must_malloc.exit111, label %must_malloc.exit111.thread

must_malloc.exit111.thread:                       ; preds = %if.then17
  store ptr %call.i107, ptr @obarray, align 8, !tbaa !5
  br label %for.body22.preheader

must_malloc.exit111:                              ; preds = %if.then17
  %call1.i109 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre339 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  store ptr %call.i107, ptr @obarray, align 8, !tbaa !5
  %cmp21329 = icmp sgt i64 %.pre339, 0
  br i1 %cmp21329, label %for.body22.preheader, label %for.end26

for.body22.preheader:                             ; preds = %must_malloc.exit111.thread, %must_malloc.exit111
  %19 = phi i64 [ %18, %must_malloc.exit111.thread ], [ %.pre339, %must_malloc.exit111 ]
  %20 = add i64 %19, -1
  %xtraiter353 = and i64 %19, 3
  %21 = icmp ult i64 %20, 3
  br i1 %21, label %for.end26.loopexit.unr-lcssa, label %for.body22.preheader.new

for.body22.preheader.new:                         ; preds = %for.body22.preheader
  %unroll_iter356 = and i64 %19, -4
  br label %for.body22

for.body22:                                       ; preds = %for.body22, %for.body22.preheader.new
  %j.1330 = phi i64 [ 0, %for.body22.preheader.new ], [ %inc25.3, %for.body22 ]
  %niter357 = phi i64 [ 0, %for.body22.preheader.new ], [ %niter357.next.3, %for.body22 ]
  %22 = load ptr, ptr @obarray, align 8, !tbaa !5
  %arrayidx23 = getelementptr inbounds ptr, ptr %22, i64 %j.1330
  store ptr null, ptr %arrayidx23, align 8, !tbaa !5
  %inc25 = or i64 %j.1330, 1
  %23 = load ptr, ptr @obarray, align 8, !tbaa !5
  %arrayidx23.1 = getelementptr inbounds ptr, ptr %23, i64 %inc25
  store ptr null, ptr %arrayidx23.1, align 8, !tbaa !5
  %inc25.1 = or i64 %j.1330, 2
  %24 = load ptr, ptr @obarray, align 8, !tbaa !5
  %arrayidx23.2 = getelementptr inbounds ptr, ptr %24, i64 %inc25.1
  store ptr null, ptr %arrayidx23.2, align 8, !tbaa !5
  %inc25.2 = or i64 %j.1330, 3
  %25 = load ptr, ptr @obarray, align 8, !tbaa !5
  %arrayidx23.3 = getelementptr inbounds ptr, ptr %25, i64 %inc25.2
  store ptr null, ptr %arrayidx23.3, align 8, !tbaa !5
  %inc25.3 = add nuw nsw i64 %j.1330, 4
  %niter357.next.3 = add i64 %niter357, 4
  %niter357.ncmp.3 = icmp eq i64 %niter357.next.3, %unroll_iter356
  br i1 %niter357.ncmp.3, label %for.end26.loopexit.unr-lcssa, label %for.body22, !llvm.loop !69

for.end26.loopexit.unr-lcssa:                     ; preds = %for.body22, %for.body22.preheader
  %j.1330.unr = phi i64 [ 0, %for.body22.preheader ], [ %inc25.3, %for.body22 ]
  %lcmp.mod355.not = icmp eq i64 %xtraiter353, 0
  br i1 %lcmp.mod355.not, label %for.end26.loopexit, label %for.body22.epil

for.body22.epil:                                  ; preds = %for.end26.loopexit.unr-lcssa, %for.body22.epil
  %j.1330.epil = phi i64 [ %inc25.epil, %for.body22.epil ], [ %j.1330.unr, %for.end26.loopexit.unr-lcssa ]
  %epil.iter354 = phi i64 [ %epil.iter354.next, %for.body22.epil ], [ 0, %for.end26.loopexit.unr-lcssa ]
  %26 = load ptr, ptr @obarray, align 8, !tbaa !5
  %arrayidx23.epil = getelementptr inbounds ptr, ptr %26, i64 %j.1330.epil
  store ptr null, ptr %arrayidx23.epil, align 8, !tbaa !5
  %inc25.epil = add nuw nsw i64 %j.1330.epil, 1
  %epil.iter354.next = add i64 %epil.iter354, 1
  %epil.iter354.cmp.not = icmp eq i64 %epil.iter354.next, %xtraiter353
  br i1 %epil.iter354.cmp.not, label %for.end26.loopexit, label %for.body22.epil, !llvm.loop !70

for.end26.loopexit:                               ; preds = %for.body22.epil, %for.end26.loopexit.unr-lcssa
  %.pre340 = load ptr, ptr @obarray, align 8, !tbaa !5
  br label %for.end26

for.end26:                                        ; preds = %for.end26.loopexit, %must_malloc.exit111
  %27 = phi i64 [ %19, %for.end26.loopexit ], [ %.pre339, %must_malloc.exit111 ]
  %28 = phi ptr [ %.pre340, %for.end26.loopexit ], [ null, %must_malloc.exit111 ]
  %call.i.i = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %gc_protect_n.exit

if.then.i.i:                                      ; preds = %for.end26
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_n.exit

gc_protect_n.exit:                                ; preds = %for.end26, %if.then.i.i
  store ptr %28, ptr %call.i.i, align 8, !tbaa !58
  %length.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i, i64 0, i32 1
  store i64 %27, ptr %length.i, align 8, !tbaa !60
  %29 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i, i64 0, i32 2
  store ptr %29, ptr %next.i, align 8, !tbaa !61
  store ptr %call.i.i, ptr @protected_registers, align 8, !tbaa !5
  br label %if.end27

if.end27:                                         ; preds = %gc_protect_n.exit, %gc_protect.exit
  %call.i112 = tail call ptr @gen_intern(ptr noundef nonnull @.str.53, i64 noundef 0)
  %30 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i113 = icmp eq i64 %30, 1
  br i1 %cmp.i113, label %if.then.i114, label %if.else.i

if.then.i114:                                     ; preds = %if.end27
  %31 = load ptr, ptr @heap, align 8, !tbaa !5
  %32 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %31, %32
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i114
  %call.i.i115 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i114
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %31, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %if.end27
  %33 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %33, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %34 = phi ptr [ %.pre.i, %if.then4.i ], [ %33, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 2, i32 0, i32 1
  %35 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %35, ptr @freelist, align 8, !tbaa !5
  %36 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %36, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %31, %if.end.i ], [ %34, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %call.i112, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  store ptr %z.0.i, ptr @unbound_marker, align 8, !tbaa !5
  %call.i.i.i116 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i117 = icmp eq ptr %call.i.i.i116, null
  br i1 %cmp.i.i.i117, label %if.then.i.i.i119, label %gc_protect.exit122

if.then.i.i.i119:                                 ; preds = %cons.exit
  %call1.i.i.i118 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect.exit122

gc_protect.exit122:                               ; preds = %cons.exit, %if.then.i.i.i119
  store ptr @unbound_marker, ptr %call.i.i.i116, align 8, !tbaa !58
  %length.i.i120 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i116, i64 0, i32 1
  store i64 1, ptr %length.i.i120, align 8, !tbaa !60
  %37 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i121 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i116, i64 0, i32 2
  store ptr %37, ptr %next.i.i121, align 8, !tbaa !61
  store ptr %call.i.i.i116, ptr @protected_registers, align 8, !tbaa !5
  %call.i123 = tail call ptr @gen_intern(ptr noundef nonnull @.str.54, i64 noundef 0)
  %38 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i124 = icmp eq i64 %38, 1
  br i1 %cmp.i124, label %if.then.i126, label %if.else.i132

if.then.i126:                                     ; preds = %gc_protect.exit122
  %39 = load ptr, ptr @heap, align 8, !tbaa !5
  %40 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i125 = icmp ult ptr %39, %40
  br i1 %cmp1.not.i125, label %if.end.i130, label %if.then2.i128

if.then2.i128:                                    ; preds = %if.then.i126
  %call.i.i127 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i130

if.end.i130:                                      ; preds = %if.then2.i128, %if.then.i126
  %add.ptr.i129 = getelementptr inbounds %struct.obj, ptr %39, i64 1
  store ptr %add.ptr.i129, ptr @heap, align 8, !tbaa !5
  br label %cons.exit142

if.else.i132:                                     ; preds = %gc_protect.exit122
  %41 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i131 = icmp eq ptr %41, null
  br i1 %cmp3.i131, label %if.then4.i134, label %if.end5.i137

if.then4.i134:                                    ; preds = %if.else.i132
  tail call void @gc_for_newcell() #38
  %.pre.i133 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i137

if.end5.i137:                                     ; preds = %if.then4.i134, %if.else.i132
  %42 = phi ptr [ %.pre.i133, %if.then4.i134 ], [ %41, %if.else.i132 ]
  %cdr.i135 = getelementptr inbounds %struct.obj, ptr %42, i64 0, i32 2, i32 0, i32 1
  %43 = load ptr, ptr %cdr.i135, align 8, !tbaa !9
  store ptr %43, ptr @freelist, align 8, !tbaa !5
  %44 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i136 = add nsw i64 %44, 1
  store i64 %inc.i136, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit142

cons.exit142:                                     ; preds = %if.end.i130, %if.end5.i137
  %z.0.i138 = phi ptr [ %39, %if.end.i130 ], [ %42, %if.end5.i137 ]
  store i16 0, ptr %z.0.i138, align 8, !tbaa !35
  %type.i139 = getelementptr inbounds %struct.obj, ptr %z.0.i138, i64 0, i32 1
  store i16 1, ptr %type.i139, align 2, !tbaa !14
  %storage_as7.i140 = getelementptr inbounds %struct.obj, ptr %z.0.i138, i64 0, i32 2
  store ptr %call.i123, ptr %storage_as7.i140, align 8, !tbaa !9
  %cdr9.i141 = getelementptr inbounds %struct.obj, ptr %z.0.i138, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i141, align 8, !tbaa !9
  store ptr %z.0.i138, ptr @eof_val, align 8, !tbaa !5
  %call.i.i.i143 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i144 = icmp eq ptr %call.i.i.i143, null
  br i1 %cmp.i.i.i144, label %if.then.i.i.i146, label %gc_protect.exit149

if.then.i.i.i146:                                 ; preds = %cons.exit142
  %call1.i.i.i145 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect.exit149

gc_protect.exit149:                               ; preds = %cons.exit142, %if.then.i.i.i146
  store ptr @eof_val, ptr %call.i.i.i143, align 8, !tbaa !58
  %length.i.i147 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i143, i64 0, i32 1
  store i64 1, ptr %length.i.i147, align 8, !tbaa !60
  %45 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i148 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i143, i64 0, i32 2
  store ptr %45, ptr %next.i.i148, align 8, !tbaa !61
  store ptr %call.i.i.i143, ptr @protected_registers, align 8, !tbaa !5
  %call.i.i150 = tail call ptr @gen_intern(ptr noundef nonnull @.str.55, i64 noundef 0)
  store ptr %call.i.i150, ptr @sym_t, align 8, !tbaa !5
  %call.i.i.i.i = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %gc_protect_sym.exit

if.then.i.i.i.i:                                  ; preds = %gc_protect.exit149
  %call1.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre341 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %gc_protect_sym.exit

gc_protect_sym.exit:                              ; preds = %gc_protect.exit149, %if.then.i.i.i.i
  %46 = phi ptr [ %call.i.i150, %gc_protect.exit149 ], [ %.pre341, %if.then.i.i.i.i ]
  store ptr @sym_t, ptr %call.i.i.i.i, align 8, !tbaa !58
  %length.i.i.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i, i64 0, i32 1
  store i64 1, ptr %length.i.i.i, align 8, !tbaa !60
  %47 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i, i64 0, i32 2
  store ptr %47, ptr %next.i.i.i, align 8, !tbaa !61
  store ptr %call.i.i.i.i, ptr @protected_registers, align 8, !tbaa !5
  %cmp.i151 = icmp eq ptr %46, null
  br i1 %cmp.i151, label %if.then.i154, label %cond.false.i

cond.false.i:                                     ; preds = %gc_protect_sym.exit
  %type.i152 = getelementptr inbounds %struct.obj, ptr %46, i64 0, i32 1
  %48 = load i16, ptr %type.i152, align 2, !tbaa !14
  %49 = icmp eq i16 %48, 3
  br i1 %49, label %setvar.exit, label %if.then.i154

if.then.i154:                                     ; preds = %cond.false.i, %gc_protect_sym.exit
  %call.i153 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %46) #38
  br label %setvar.exit

setvar.exit:                                      ; preds = %cond.false.i, %if.then.i154
  %vcell.i = getelementptr inbounds %struct.obj, ptr %46, i64 0, i32 2, i32 0, i32 1
  store ptr %46, ptr %vcell.i, align 8, !tbaa !9
  %call.i156 = tail call ptr @gen_intern(ptr noundef nonnull @.str.56, i64 noundef 0)
  %cmp.i157 = icmp eq ptr %call.i156, null
  br i1 %cmp.i157, label %if.then.i161, label %cond.false.i159

cond.false.i159:                                  ; preds = %setvar.exit
  %type.i158 = getelementptr inbounds %struct.obj, ptr %call.i156, i64 0, i32 1
  %50 = load i16, ptr %type.i158, align 2, !tbaa !14
  %51 = icmp eq i16 %50, 3
  br i1 %51, label %setvar.exit168, label %if.then.i161

if.then.i161:                                     ; preds = %cond.false.i159, %setvar.exit
  %call.i160 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i156) #38
  br label %setvar.exit168

setvar.exit168:                                   ; preds = %cond.false.i159, %if.then.i161
  %vcell.i165 = getelementptr inbounds %struct.obj, ptr %call.i156, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %vcell.i165, align 8, !tbaa !9
  %call.i169 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  %call.i170 = tail call ptr @gen_intern(ptr noundef nonnull @.str.58, i64 noundef 0)
  %cmp.i171 = icmp eq ptr %call.i169, null
  br i1 %cmp.i171, label %if.then.i175, label %cond.false.i173

cond.false.i173:                                  ; preds = %setvar.exit168
  %type.i172 = getelementptr inbounds %struct.obj, ptr %call.i169, i64 0, i32 1
  %52 = load i16, ptr %type.i172, align 2, !tbaa !14
  %53 = icmp eq i16 %52, 3
  br i1 %53, label %setvar.exit182, label %if.then.i175

if.then.i175:                                     ; preds = %cond.false.i173, %setvar.exit168
  %call.i174 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i169) #38
  br label %setvar.exit182

setvar.exit182:                                   ; preds = %cond.false.i173, %if.then.i175
  %vcell.i179 = getelementptr inbounds %struct.obj, ptr %call.i169, i64 0, i32 2, i32 0, i32 1
  store ptr %call.i170, ptr %vcell.i179, align 8, !tbaa !9
  %call.i183 = tail call ptr @gen_intern(ptr noundef nonnull @.str.59, i64 noundef 0)
  %call.i184 = tail call ptr @gen_intern(ptr noundef nonnull @.str.60, i64 noundef 0)
  %cmp.i185 = icmp eq ptr %call.i183, null
  br i1 %cmp.i185, label %if.then.i189, label %cond.false.i187

cond.false.i187:                                  ; preds = %setvar.exit182
  %type.i186 = getelementptr inbounds %struct.obj, ptr %call.i183, i64 0, i32 1
  %54 = load i16, ptr %type.i186, align 2, !tbaa !14
  %55 = icmp eq i16 %54, 3
  br i1 %55, label %setvar.exit196, label %if.then.i189

if.then.i189:                                     ; preds = %cond.false.i187, %setvar.exit182
  %call.i188 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i183) #38
  br label %setvar.exit196

setvar.exit196:                                   ; preds = %cond.false.i187, %if.then.i189
  %vcell.i193 = getelementptr inbounds %struct.obj, ptr %call.i183, i64 0, i32 2, i32 0, i32 1
  store ptr %call.i184, ptr %vcell.i193, align 8, !tbaa !9
  %call.i197 = tail call ptr @gen_intern(ptr noundef nonnull @.str.61, i64 noundef 0)
  %call.i198 = tail call ptr @gen_intern(ptr noundef nonnull @.str.62, i64 noundef 0)
  %cmp.i199 = icmp eq ptr %call.i197, null
  br i1 %cmp.i199, label %if.then.i203, label %cond.false.i201

cond.false.i201:                                  ; preds = %setvar.exit196
  %type.i200 = getelementptr inbounds %struct.obj, ptr %call.i197, i64 0, i32 1
  %56 = load i16, ptr %type.i200, align 2, !tbaa !14
  %57 = icmp eq i16 %56, 3
  br i1 %57, label %setvar.exit210, label %if.then.i203

if.then.i203:                                     ; preds = %cond.false.i201, %setvar.exit196
  %call.i202 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i197) #38
  br label %setvar.exit210

setvar.exit210:                                   ; preds = %cond.false.i201, %if.then.i203
  %vcell.i207 = getelementptr inbounds %struct.obj, ptr %call.i197, i64 0, i32 2, i32 0, i32 1
  store ptr %call.i198, ptr %vcell.i207, align 8, !tbaa !9
  %call.i.i211 = tail call ptr @gen_intern(ptr noundef nonnull @.str.63, i64 noundef 0)
  store ptr %call.i.i211, ptr @sym_errobj, align 8, !tbaa !5
  %call.i.i.i.i212 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i213 = icmp eq ptr %call.i.i.i.i212, null
  br i1 %cmp.i.i.i.i213, label %if.then.i.i.i.i215, label %gc_protect_sym.exit218

if.then.i.i.i.i215:                               ; preds = %setvar.exit210
  %call1.i.i.i.i214 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre342 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  br label %gc_protect_sym.exit218

gc_protect_sym.exit218:                           ; preds = %setvar.exit210, %if.then.i.i.i.i215
  %58 = phi ptr [ %call.i.i211, %setvar.exit210 ], [ %.pre342, %if.then.i.i.i.i215 ]
  store ptr @sym_errobj, ptr %call.i.i.i.i212, align 8, !tbaa !58
  %length.i.i.i216 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i212, i64 0, i32 1
  store i64 1, ptr %length.i.i.i216, align 8, !tbaa !60
  %59 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i217 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i212, i64 0, i32 2
  store ptr %59, ptr %next.i.i.i217, align 8, !tbaa !61
  store ptr %call.i.i.i.i212, ptr @protected_registers, align 8, !tbaa !5
  %cmp.i219 = icmp eq ptr %58, null
  br i1 %cmp.i219, label %if.then.i223, label %cond.false.i221

cond.false.i221:                                  ; preds = %gc_protect_sym.exit218
  %type.i220 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 1
  %60 = load i16, ptr %type.i220, align 2, !tbaa !14
  %61 = icmp eq i16 %60, 3
  br i1 %61, label %setvar.exit230, label %if.then.i223

if.then.i223:                                     ; preds = %cond.false.i221, %gc_protect_sym.exit218
  %call.i222 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %58) #38
  br label %setvar.exit230

setvar.exit230:                                   ; preds = %cond.false.i221, %if.then.i223
  %vcell.i227 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %vcell.i227, align 8, !tbaa !9
  %call.i.i231 = tail call ptr @gen_intern(ptr noundef nonnull @.str.64, i64 noundef 0)
  store ptr %call.i.i231, ptr @sym_catchall, align 8, !tbaa !5
  %call.i.i.i.i232 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i233 = icmp eq ptr %call.i.i.i.i232, null
  br i1 %cmp.i.i.i.i233, label %if.then.i.i.i.i235, label %gc_protect_sym.exit238

if.then.i.i.i.i235:                               ; preds = %setvar.exit230
  %call1.i.i.i.i234 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_sym.exit238

gc_protect_sym.exit238:                           ; preds = %setvar.exit230, %if.then.i.i.i.i235
  store ptr @sym_catchall, ptr %call.i.i.i.i232, align 8, !tbaa !58
  %length.i.i.i236 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i232, i64 0, i32 1
  store i64 1, ptr %length.i.i.i236, align 8, !tbaa !60
  %62 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i237 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i232, i64 0, i32 2
  store ptr %62, ptr %next.i.i.i237, align 8, !tbaa !61
  store ptr %call.i.i.i.i232, ptr @protected_registers, align 8, !tbaa !5
  %call.i.i239 = tail call ptr @gen_intern(ptr noundef nonnull @.str.65, i64 noundef 0)
  store ptr %call.i.i239, ptr @sym_progn, align 8, !tbaa !5
  %call.i.i.i.i240 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i241 = icmp eq ptr %call.i.i.i.i240, null
  br i1 %cmp.i.i.i.i241, label %if.then.i.i.i.i243, label %gc_protect_sym.exit246

if.then.i.i.i.i243:                               ; preds = %gc_protect_sym.exit238
  %call1.i.i.i.i242 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_sym.exit246

gc_protect_sym.exit246:                           ; preds = %gc_protect_sym.exit238, %if.then.i.i.i.i243
  store ptr @sym_progn, ptr %call.i.i.i.i240, align 8, !tbaa !58
  %length.i.i.i244 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i240, i64 0, i32 1
  store i64 1, ptr %length.i.i.i244, align 8, !tbaa !60
  %63 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i245 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i240, i64 0, i32 2
  store ptr %63, ptr %next.i.i.i245, align 8, !tbaa !61
  store ptr %call.i.i.i.i240, ptr @protected_registers, align 8, !tbaa !5
  %call.i.i247 = tail call ptr @gen_intern(ptr noundef nonnull @.str.66, i64 noundef 0)
  store ptr %call.i.i247, ptr @sym_lambda, align 8, !tbaa !5
  %call.i.i.i.i248 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i249 = icmp eq ptr %call.i.i.i.i248, null
  br i1 %cmp.i.i.i.i249, label %if.then.i.i.i.i251, label %gc_protect_sym.exit254

if.then.i.i.i.i251:                               ; preds = %gc_protect_sym.exit246
  %call1.i.i.i.i250 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_sym.exit254

gc_protect_sym.exit254:                           ; preds = %gc_protect_sym.exit246, %if.then.i.i.i.i251
  store ptr @sym_lambda, ptr %call.i.i.i.i248, align 8, !tbaa !58
  %length.i.i.i252 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i248, i64 0, i32 1
  store i64 1, ptr %length.i.i.i252, align 8, !tbaa !60
  %64 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i253 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i248, i64 0, i32 2
  store ptr %64, ptr %next.i.i.i253, align 8, !tbaa !61
  store ptr %call.i.i.i.i248, ptr @protected_registers, align 8, !tbaa !5
  %call.i.i255 = tail call ptr @gen_intern(ptr noundef nonnull @.str.67, i64 noundef 0)
  store ptr %call.i.i255, ptr @sym_quote, align 8, !tbaa !5
  %call.i.i.i.i256 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i257 = icmp eq ptr %call.i.i.i.i256, null
  br i1 %cmp.i.i.i.i257, label %if.then.i.i.i.i259, label %gc_protect_sym.exit262

if.then.i.i.i.i259:                               ; preds = %gc_protect_sym.exit254
  %call1.i.i.i.i258 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_sym.exit262

gc_protect_sym.exit262:                           ; preds = %gc_protect_sym.exit254, %if.then.i.i.i.i259
  store ptr @sym_quote, ptr %call.i.i.i.i256, align 8, !tbaa !58
  %length.i.i.i260 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i256, i64 0, i32 1
  store i64 1, ptr %length.i.i.i260, align 8, !tbaa !60
  %65 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i261 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i256, i64 0, i32 2
  store ptr %65, ptr %next.i.i.i261, align 8, !tbaa !61
  store ptr %call.i.i.i.i256, ptr @protected_registers, align 8, !tbaa !5
  %call.i.i263 = tail call ptr @gen_intern(ptr noundef nonnull @.str.68, i64 noundef 0)
  store ptr %call.i.i263, ptr @sym_dot, align 8, !tbaa !5
  %call.i.i.i.i264 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i265 = icmp eq ptr %call.i.i.i.i264, null
  br i1 %cmp.i.i.i.i265, label %if.then.i.i.i.i267, label %gc_protect_sym.exit270

if.then.i.i.i.i267:                               ; preds = %gc_protect_sym.exit262
  %call1.i.i.i.i266 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_sym.exit270

gc_protect_sym.exit270:                           ; preds = %gc_protect_sym.exit262, %if.then.i.i.i.i267
  store ptr @sym_dot, ptr %call.i.i.i.i264, align 8, !tbaa !58
  %length.i.i.i268 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i264, i64 0, i32 1
  store i64 1, ptr %length.i.i.i268, align 8, !tbaa !60
  %66 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i269 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i264, i64 0, i32 2
  store ptr %66, ptr %next.i.i.i269, align 8, !tbaa !61
  store ptr %call.i.i.i.i264, ptr @protected_registers, align 8, !tbaa !5
  %call.i.i271 = tail call ptr @gen_intern(ptr noundef nonnull @.str.69, i64 noundef 0)
  store ptr %call.i.i271, ptr @sym_after_gc, align 8, !tbaa !5
  %call.i.i.i.i272 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i273 = icmp eq ptr %call.i.i.i.i272, null
  br i1 %cmp.i.i.i.i273, label %if.then.i.i.i.i275, label %gc_protect_sym.exit278

if.then.i.i.i.i275:                               ; preds = %gc_protect_sym.exit270
  %call1.i.i.i.i274 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre343 = load ptr, ptr @sym_after_gc, align 8, !tbaa !5
  br label %gc_protect_sym.exit278

gc_protect_sym.exit278:                           ; preds = %gc_protect_sym.exit270, %if.then.i.i.i.i275
  %67 = phi ptr [ %call.i.i271, %gc_protect_sym.exit270 ], [ %.pre343, %if.then.i.i.i.i275 ]
  store ptr @sym_after_gc, ptr %call.i.i.i.i272, align 8, !tbaa !58
  %length.i.i.i276 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i272, i64 0, i32 1
  store i64 1, ptr %length.i.i.i276, align 8, !tbaa !60
  %68 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i277 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i272, i64 0, i32 2
  store ptr %68, ptr %next.i.i.i277, align 8, !tbaa !61
  store ptr %call.i.i.i.i272, ptr @protected_registers, align 8, !tbaa !5
  %cmp.i279 = icmp eq ptr %67, null
  br i1 %cmp.i279, label %if.then.i283, label %cond.false.i281

cond.false.i281:                                  ; preds = %gc_protect_sym.exit278
  %type.i280 = getelementptr inbounds %struct.obj, ptr %67, i64 0, i32 1
  %69 = load i16, ptr %type.i280, align 2, !tbaa !14
  %70 = icmp eq i16 %69, 3
  br i1 %70, label %setvar.exit290, label %if.then.i283

if.then.i283:                                     ; preds = %cond.false.i281, %gc_protect_sym.exit278
  %call.i282 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %67) #38
  br label %setvar.exit290

setvar.exit290:                                   ; preds = %cond.false.i281, %if.then.i283
  %vcell.i287 = getelementptr inbounds %struct.obj, ptr %67, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %vcell.i287, align 8, !tbaa !9
  %call.i.i291 = tail call ptr @gen_intern(ptr noundef nonnull @.str.70, i64 noundef 0)
  store ptr %call.i.i291, ptr @sym_eval_history_ptr, align 8, !tbaa !5
  %call.i.i.i.i292 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i.i.i293 = icmp eq ptr %call.i.i.i.i292, null
  br i1 %cmp.i.i.i.i293, label %if.then.i.i.i.i295, label %gc_protect_sym.exit298

if.then.i.i.i.i295:                               ; preds = %setvar.exit290
  %call1.i.i.i.i294 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre344 = load ptr, ptr @sym_eval_history_ptr, align 8, !tbaa !5
  br label %gc_protect_sym.exit298

gc_protect_sym.exit298:                           ; preds = %setvar.exit290, %if.then.i.i.i.i295
  %71 = phi ptr [ %call.i.i291, %setvar.exit290 ], [ %.pre344, %if.then.i.i.i.i295 ]
  store ptr @sym_eval_history_ptr, ptr %call.i.i.i.i292, align 8, !tbaa !58
  %length.i.i.i296 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i292, i64 0, i32 1
  store i64 1, ptr %length.i.i.i296, align 8, !tbaa !60
  %72 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i.i.i297 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i.i.i292, i64 0, i32 2
  store ptr %72, ptr %next.i.i.i297, align 8, !tbaa !61
  store ptr %call.i.i.i.i292, ptr @protected_registers, align 8, !tbaa !5
  %cmp.i299 = icmp eq ptr %71, null
  br i1 %cmp.i299, label %if.then.i303, label %cond.false.i301

cond.false.i301:                                  ; preds = %gc_protect_sym.exit298
  %type.i300 = getelementptr inbounds %struct.obj, ptr %71, i64 0, i32 1
  %73 = load i16, ptr %type.i300, align 2, !tbaa !14
  %74 = icmp eq i16 %73, 3
  br i1 %74, label %setvar.exit310, label %if.then.i303

if.then.i303:                                     ; preds = %cond.false.i301, %gc_protect_sym.exit298
  %call.i302 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %71) #38
  br label %setvar.exit310

setvar.exit310:                                   ; preds = %cond.false.i301, %if.then.i303
  %vcell.i307 = getelementptr inbounds %struct.obj, ptr %71, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %vcell.i307, align 8, !tbaa !9
  %75 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp47 = icmp sgt i64 %75, 0
  br i1 %cmp47, label %if.then48, label %if.end71

if.then48:                                        ; preds = %setvar.exit310
  %mul49 = shl i64 %75, 3
  %cond.i311 = tail call i64 @llvm.umax.i64(i64 %mul49, i64 1)
  %call.i312 = tail call noalias ptr @malloc(i64 noundef %cond.i311) #39
  %cmp.i313 = icmp eq ptr %call.i312, null
  br i1 %cmp.i313, label %must_malloc.exit317, label %must_malloc.exit317.thread

must_malloc.exit317.thread:                       ; preds = %if.then48
  store ptr %call.i312, ptr @inums, align 8, !tbaa !5
  br label %for.body53.preheader

must_malloc.exit317:                              ; preds = %if.then48
  %call1.i314 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre345 = load i64, ptr @inums_dim, align 8, !tbaa !10
  store ptr %call.i312, ptr @inums, align 8, !tbaa !5
  %cmp52331 = icmp sgt i64 %.pre345, 0
  br i1 %cmp52331, label %for.body53.preheader, label %for.end70

for.body53.preheader:                             ; preds = %must_malloc.exit317.thread, %must_malloc.exit317
  br label %for.body53

for.body53:                                       ; preds = %for.body53.preheader, %if.end65
  %j.2332 = phi i64 [ %inc69, %if.end65 ], [ 0, %for.body53.preheader ]
  %76 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp54 = icmp eq i64 %76, 1
  br i1 %cmp54, label %if.then55, label %if.else60

if.then55:                                        ; preds = %for.body53
  %77 = load ptr, ptr @heap, align 8, !tbaa !5
  %78 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp56.not = icmp ult ptr %77, %78
  br i1 %cmp56.not, label %if.end58, label %if.then57

if.then57:                                        ; preds = %if.then55
  %call.i318 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.then55
  %add.ptr59 = getelementptr inbounds %struct.obj, ptr %77, i64 1
  store ptr %add.ptr59, ptr @heap, align 8, !tbaa !5
  br label %if.end65

if.else60:                                        ; preds = %for.body53
  %79 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp61 = icmp eq ptr %79, null
  br i1 %cmp61, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.else60
  tail call void @gc_for_newcell()
  %.pre346 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.else60
  %80 = phi ptr [ %.pre346, %if.then62 ], [ %79, %if.else60 ]
  %cdr = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 2, i32 0, i32 1
  %81 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %81, ptr @freelist, align 8, !tbaa !5
  %82 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc64 = add nsw i64 %82, 1
  store i64 %inc64, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end65

if.end65:                                         ; preds = %if.end63, %if.end58
  %ptr.0 = phi ptr [ %77, %if.end58 ], [ %80, %if.end63 ]
  store i16 0, ptr %ptr.0, align 8, !tbaa !35
  %type = getelementptr inbounds %struct.obj, ptr %ptr.0, i64 0, i32 1
  store i16 2, ptr %type, align 2, !tbaa !14
  %conv = sitofp i64 %j.2332 to double
  %storage_as66 = getelementptr inbounds %struct.obj, ptr %ptr.0, i64 0, i32 2
  store double %conv, ptr %storage_as66, align 8, !tbaa !9
  %83 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx67 = getelementptr inbounds ptr, ptr %83, i64 %j.2332
  store ptr %ptr.0, ptr %arrayidx67, align 8, !tbaa !5
  %inc69 = add nuw nsw i64 %j.2332, 1
  %84 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp52 = icmp slt i64 %inc69, %84
  br i1 %cmp52, label %for.body53, label %for.end70.loopexit, !llvm.loop !71

for.end70.loopexit:                               ; preds = %if.end65
  %.pre347 = load ptr, ptr @inums, align 8, !tbaa !5
  br label %for.end70

for.end70:                                        ; preds = %for.end70.loopexit, %must_malloc.exit317
  %85 = phi ptr [ null, %must_malloc.exit317 ], [ %.pre347, %for.end70.loopexit ]
  %.lcssa = phi i64 [ %.pre345, %must_malloc.exit317 ], [ %84, %for.end70.loopexit ]
  %call.i.i319 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %cmp.i.i320 = icmp eq ptr %call.i.i319, null
  br i1 %cmp.i.i320, label %if.then.i.i322, label %gc_protect_n.exit325

if.then.i.i322:                                   ; preds = %for.end70
  %call1.i.i321 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %gc_protect_n.exit325

gc_protect_n.exit325:                             ; preds = %for.end70, %if.then.i.i322
  store ptr %85, ptr %call.i.i319, align 8, !tbaa !58
  %length.i323 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i319, i64 0, i32 1
  store i64 %.lcssa, ptr %length.i323, align 8, !tbaa !60
  %86 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %next.i324 = getelementptr inbounds %struct.gc_protected, ptr %call.i.i319, i64 0, i32 2
  store ptr %86, ptr %next.i324, align 8, !tbaa !61
  store ptr %call.i.i319, ptr @protected_registers, align 8, !tbaa !5
  br label %if.end71

if.end71:                                         ; preds = %gc_protect_n.exit325, %setvar.exit310
  ret void
}

declare void @init_storage_a() local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local void @set_gc_hooks(i64 noundef %type, ptr noundef %rel, ptr noundef %mark, ptr noundef %scan, ptr noundef %free, ptr nocapture noundef writeonly %kind) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %calloc.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %entry
  %1 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %0, %entry ]
  %or.cond.i = icmp ult i64 %type, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %arrayidx.i = getelementptr inbounds %struct.user_type_hooks, ptr %1, i64 %type
  store ptr %rel, ptr %arrayidx.i, align 8, !tbaa !62
  %gc_scan = getelementptr inbounds %struct.user_type_hooks, ptr %1, i64 %type, i32 1
  store ptr %scan, ptr %gc_scan, align 8, !tbaa !72
  %gc_mark = getelementptr inbounds %struct.user_type_hooks, ptr %1, i64 %type, i32 2
  store ptr %mark, ptr %gc_mark, align 8, !tbaa !73
  %gc_free = getelementptr inbounds %struct.user_type_hooks, ptr %1, i64 %type, i32 3
  store ptr %free, ptr %gc_free, align 8, !tbaa !48
  %2 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  store i64 %2, ptr %kind, align 8, !tbaa !10
  ret void

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @file_gc_free(ptr nocapture noundef %ptr) #6 {
entry:
  %storage_as = getelementptr inbounds %struct.obj, ptr %ptr, i64 0, i32 2
  %0 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @fclose(ptr noundef nonnull %0)
  store ptr null, ptr %storage_as, align 8, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %name = getelementptr inbounds %struct.obj, ptr %ptr, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %name, align 8, !tbaa !9
  %tobool6.not = icmp eq ptr %1, null
  br i1 %tobool6.not, label %if.end12, label %if.then7

if.then7:                                         ; preds = %if.end
  tail call void @free(ptr noundef nonnull %1) #33
  store ptr null, ptr %name, align 8, !tbaa !9
  br label %if.end12

if.end12:                                         ; preds = %if.then7, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @set_print_hooks(i64 noundef %type, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %calloc.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %entry
  %1 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %0, %entry ]
  %or.cond.i = icmp ult i64 %type, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %prin1 = getelementptr inbounds %struct.user_type_hooks, ptr %1, i64 %type, i32 4
  store ptr %fcn, ptr %prin1, align 8, !tbaa !65
  ret void

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @file_prin1(ptr nocapture noundef readonly %ptr, ptr nocapture noundef readonly %f) #6 {
entry:
  %storage_as = getelementptr inbounds %struct.obj, ptr %ptr, i64 0, i32 2
  %name1 = getelementptr inbounds %struct.obj, ptr %ptr, i64 0, i32 2, i32 0, i32 1
  %0 = load ptr, ptr %name1, align 8, !tbaa !9
  %puts_fcn.i = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %1 = load ptr, ptr %puts_fcn.i, align 8, !tbaa !33
  %cb_argument.i = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %2 = load ptr, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i = tail call i32 %1(ptr noundef nonnull @.str.149, ptr noundef %2) #33
  %3 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %4 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) @.str.150, ptr noundef %4) #33
  %5 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %6 = load ptr, ptr %puts_fcn.i, align 8, !tbaa !33
  %7 = load ptr, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i12 = tail call i32 %6(ptr noundef %5, ptr noundef %7) #33
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %8 = load ptr, ptr %puts_fcn.i, align 8, !tbaa !33
  %9 = load ptr, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i15 = tail call i32 %8(ptr noundef nonnull @.str.112, ptr noundef %9) #33
  %10 = load ptr, ptr %puts_fcn.i, align 8, !tbaa !33
  %11 = load ptr, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i18 = tail call i32 %10(ptr noundef nonnull %0, ptr noundef %11) #33
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %12 = load ptr, ptr %puts_fcn.i, align 8, !tbaa !33
  %13 = load ptr, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i21 = tail call i32 %12(ptr noundef nonnull @.str.118, ptr noundef %13) #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr(ptr noundef %name, i64 noundef %type, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit

if.else.i:                                        ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %3, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %4 = phi ptr [ %.pre.i, %if.then4.i ], [ %3, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %6, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit

subrcons.exit:                                    ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %1, %if.end.i ], [ %4, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %conv.i = trunc i64 %type to i16
  %type7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 %conv.i, ptr %type7.i, align 2, !tbaa !14
  %storage_as8.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i, align 8, !tbaa !9
  %f11.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i, align 8, !tbaa !9
  %cmp.i4 = icmp eq ptr %call.i, null
  br i1 %cmp.i4, label %if.then.i6, label %cond.false.i

cond.false.i:                                     ; preds = %subrcons.exit
  %type.i = getelementptr inbounds %struct.obj, ptr %call.i, i64 0, i32 1
  %7 = load i16, ptr %type.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %setvar.exit, label %if.then.i6

if.then.i6:                                       ; preds = %cond.false.i, %subrcons.exit
  %call.i5 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i) #38
  br label %setvar.exit

setvar.exit:                                      ; preds = %cond.false.i, %if.then.i6
  %vcell.i = getelementptr inbounds %struct.obj, ptr %call.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i, ptr %vcell.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_0(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 4, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_1(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 5, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_2(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 6, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_2n(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 21, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_3(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 7, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_4(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 19, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_5(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 20, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_lsubr(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 8, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_fsubr(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 9, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_msubr(ptr noundef %name, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %call.i.i = tail call ptr @gen_intern(ptr noundef %name, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i, label %if.end.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i

if.else.i.i:                                      ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.else.i.i
  %4 = phi ptr [ %.pre.i.i, %if.then4.i.i ], [ %3, %if.else.i.i ]
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i

subrcons.exit.i:                                  ; preds = %if.end5.i.i, %if.end.i.i
  %z.0.i.i = phi ptr [ %1, %if.end.i.i ], [ %4, %if.end5.i.i ]
  store i16 0, ptr %z.0.i.i, align 8, !tbaa !35
  %type7.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 1
  store i16 10, ptr %type7.i.i, align 2, !tbaa !14
  %storage_as8.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2
  store ptr %name, ptr %storage_as8.i.i, align 8, !tbaa !9
  %f11.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fcn, ptr %f11.i.i, align 8, !tbaa !9
  %cmp.i4.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i4.i, label %if.then.i6.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %subrcons.exit.i
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %cond.false.i.i, %subrcons.exit.i
  %call.i5.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_subr.exit

init_subr.exit:                                   ; preds = %cond.false.i.i, %if.then.i6.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @assq(ptr noundef readnone %x, ptr noundef %alist) #6 {
entry:
  %cmp35 = icmp eq ptr %alist, null
  br i1 %cmp35, label %cleanup, label %cond.end

cond.end:                                         ; preds = %entry, %for.inc
  %l.036 = phi ptr [ %4, %for.inc ], [ %alist, %entry ]
  %type = getelementptr inbounds %struct.obj, ptr %l.036, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp1 = icmp eq i16 %0, 1
  br i1 %cmp1, label %for.body, label %if.end21

for.body:                                         ; preds = %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %l.036, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %cmp3 = icmp eq ptr %1, null
  br i1 %cmp3, label %for.inc, label %cond.end9

cond.end9:                                        ; preds = %for.body
  %type7 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type7, align 2, !tbaa !14
  %cmp11 = icmp eq i16 %2, 1
  br i1 %cmp11, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %cond.end9
  %storage_as13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %storage_as13, align 8, !tbaa !9
  %cmp15 = icmp eq ptr %3, %x
  br i1 %cmp15, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body, %cond.end9, %land.lhs.true
  %cdr = getelementptr inbounds %struct.obj, ptr %l.036, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %cdr, align 8, !tbaa !9
  %cmp = icmp eq ptr %4, null
  br i1 %cmp, label %cleanup, label %cond.end, !llvm.loop !74

if.end21:                                         ; preds = %cond.end
  %call = tail call ptr @err(ptr noundef nonnull @.str.71, ptr noundef nonnull %alist)
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %for.inc, %entry, %if.end21
  %retval.0 = phi ptr [ null, %if.end21 ], [ null, %entry ], [ %1, %land.lhs.true ], [ null, %for.inc ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_user_type_hooks(i64 noundef %type) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %calloc = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i = icmp eq ptr %calloc, null
  br i1 %cmp.i, label %if.then.i, label %must_malloc.exit

if.then.i:                                        ; preds = %if.then
  %call1.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %if.then, %if.then.i
  store ptr %calloc, ptr @user_types, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %must_malloc.exit, %entry
  %1 = phi ptr [ %calloc, %must_malloc.exit ], [ %0, %entry ]
  %or.cond = icmp ult i64 %type, 100
  br i1 %or.cond, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.user_type_hooks, ptr %1, i64 %type
  br label %cleanup

if.else:                                          ; preds = %if.end
  %call4 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then3
  %retval.0 = phi ptr [ %arrayidx, %if.then3 ], [ null, %if.else ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #18

; Function Attrs: nounwind uwtable
define dso_local i64 @allocate_user_tc() local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @user_tc_next, align 8, !tbaa !10
  %cmp = icmp sgt i64 %0, 100
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call ptr @err(ptr noundef nonnull @.str.73, ptr noundef null)
  %.pre = load i64, ptr @user_tc_next, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = phi i64 [ %.pre, %if.then ], [ %0, %entry ]
  %inc = add nsw i64 %1, 1
  store i64 %inc, ptr @user_tc_next, align 8, !tbaa !10
  ret i64 %0
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #19

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define dso_local ptr @get_newspace() local_unnamed_addr #20 {
entry:
  %0 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %1 = load ptr, ptr @heaps, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx1 = getelementptr inbounds ptr, ptr %1, i64 1
  %3 = load ptr, ptr %arrayidx1, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %newspace.0 = phi ptr [ %3, %if.then ], [ %2, %entry ]
  store ptr %newspace.0, ptr @heap, align 8, !tbaa !5
  store ptr %newspace.0, ptr @heap_org, align 8, !tbaa !5
  %4 = load i64, ptr @heap_size, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.obj, ptr %newspace.0, i64 %4
  store ptr %add.ptr, ptr @heap_end, align 8, !tbaa !5
  ret ptr %newspace.0
}

; Function Attrs: nounwind uwtable
define dso_local void @scan_newspace(ptr noundef %newspace) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @heap, align 8, !tbaa !5
  %cmp39 = icmp ugt ptr %0, %newspace
  br i1 %cmp39, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %ptr.040 = phi ptr [ %incdec.ptr, %for.inc ], [ %newspace, %entry ]
  %cmp1 = icmp eq ptr %ptr.040, null
  br i1 %cmp1, label %cond.end20, label %cond.end

cond.end:                                         ; preds = %for.body
  %type = getelementptr inbounds %struct.obj, ptr %ptr.040, i64 0, i32 1
  %1 = load i16, ptr %type, align 2, !tbaa !14
  %conv = sext i16 %1 to i32
  switch i32 %conv, label %cond.false17 [
    i32 1, label %sw.bb
    i32 11, label %sw.bb
    i32 3, label %sw.bb8
    i32 2, label %for.inc
    i32 4, label %for.inc
    i32 5, label %for.inc
    i32 6, label %for.inc
    i32 21, label %for.inc
    i32 7, label %for.inc
    i32 19, label %for.inc
    i32 20, label %for.inc
    i32 8, label %for.inc
    i32 9, label %for.inc
    i32 10, label %for.inc
  ]

sw.bb:                                            ; preds = %cond.end, %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %ptr.040, i64 0, i32 2
  %2 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %call = tail call ptr @gc_relocate(ptr noundef %2)
  store ptr %call, ptr %storage_as, align 8, !tbaa !9
  %cdr = getelementptr inbounds %struct.obj, ptr %ptr.040, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr, align 8, !tbaa !9
  %call5 = tail call ptr @gc_relocate(ptr noundef %3)
  store ptr %call5, ptr %cdr, align 8, !tbaa !9
  br label %for.inc

sw.bb8:                                           ; preds = %cond.end
  %vcell = getelementptr inbounds %struct.obj, ptr %ptr.040, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %vcell, align 8, !tbaa !9
  %call10 = tail call ptr @gc_relocate(ptr noundef %4)
  store ptr %call10, ptr %vcell, align 8, !tbaa !9
  br label %for.inc

cond.false17:                                     ; preds = %cond.end
  %conv19 = sext i16 %1 to i64
  br label %cond.end20

cond.end20:                                       ; preds = %for.body, %cond.false17
  %cond21 = phi i64 [ %conv19, %cond.false17 ], [ 0, %for.body ]
  %5 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %5, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end20
  %calloc.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %cond.end20
  %6 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %5, %cond.end20 ]
  %or.cond.i = icmp ult i64 %cond21, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %gc_scan = getelementptr inbounds %struct.user_type_hooks, ptr %6, i64 %cond21, i32 1
  %7 = load ptr, ptr %gc_scan, align 8, !tbaa !72
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %for.inc, label %if.then

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then:                                          ; preds = %if.then3.i
  tail call void %7(ptr noundef %ptr.040) #33
  br label %for.inc

for.inc:                                          ; preds = %sw.bb, %sw.bb8, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %if.then, %if.then3.i
  %incdec.ptr = getelementptr inbounds %struct.obj, ptr %ptr.040, i64 1
  %8 = load ptr, ptr @heap, align 8, !tbaa !5
  %cmp = icmp ult ptr %incdec.ptr, %8
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !75

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @free_oldspace(ptr noundef %space, ptr noundef readnone %end) local_unnamed_addr #6 {
entry:
  %cmp26 = icmp ult ptr %space, %end
  br i1 %cmp26, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %ptr.027 = phi ptr [ %incdec.ptr, %for.inc ], [ %space, %entry ]
  %0 = load i16, ptr %ptr.027, align 8, !tbaa !35
  %cmp1 = icmp eq i16 %0, 0
  br i1 %cmp1, label %cond.false, label %for.inc

cond.false:                                       ; preds = %for.body
  %type = getelementptr inbounds %struct.obj, ptr %ptr.027, i64 0, i32 1
  %1 = load i16, ptr %type, align 2, !tbaa !14
  %conv5 = sext i16 %1 to i32
  switch i32 %conv5, label %cond.end12 [
    i32 1, label %for.inc
    i32 11, label %for.inc
    i32 3, label %for.inc
    i32 2, label %for.inc
    i32 4, label %for.inc
    i32 5, label %for.inc
    i32 6, label %for.inc
    i32 21, label %for.inc
    i32 7, label %for.inc
    i32 19, label %for.inc
    i32 20, label %for.inc
    i32 8, label %for.inc
    i32 9, label %for.inc
    i32 10, label %for.inc
  ]

cond.end12:                                       ; preds = %cond.false
  %conv14 = sext i16 %1 to i64
  %2 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %2, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end12
  %calloc.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %cond.end12
  %3 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %2, %cond.end12 ]
  %or.cond.i = icmp ult i16 %1, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %gc_free = getelementptr inbounds %struct.user_type_hooks, ptr %3, i64 %conv14, i32 3
  %4 = load ptr, ptr %gc_free, align 8, !tbaa !48
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %for.inc, label %if.then15

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then15:                                        ; preds = %if.then3.i
  tail call void %4(ptr noundef nonnull %ptr.027) #33
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then3.i, %if.then15, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false, %cond.false
  %incdec.ptr = getelementptr inbounds %struct.obj, ptr %ptr.027, i64 1
  %cmp = icmp ult ptr %incdec.ptr, %end
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !50

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @allocate_aheap() #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 1
  br i1 %cmp.i, label %if.then.i, label %gc_kind_check.exit

if.then.i:                                        ; preds = %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.77, ptr noundef null)
  br label %gc_kind_check.exit

gc_kind_check.exit:                               ; preds = %entry, %if.then.i
  %1 = load i64, ptr @nheaps, align 8, !tbaa !10
  %cmp41 = icmp sgt i64 %1, 0
  br i1 %cmp41, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %gc_kind_check.exit
  %2 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %j.042 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %j.042
  %3 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %4 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %5 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %tobool1 = icmp ne i64 %5, 0
  %6 = load i64, ptr @siod_verbose_level, align 8
  %cmp2 = icmp sgt i64 %6, 3
  %or.cond = select i1 %tobool1, i1 %cmp2, i1 false
  br i1 %or.cond, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.74, i64 noundef %j.042)
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %7 = load i64, ptr @heap_size, align 8, !tbaa !10
  %mul = mul i64 %7, 24
  %cond.i = tail call i64 @llvm.umax.i64(i64 %mul, i64 1)
  %call.i34 = tail call noalias ptr @malloc(i64 noundef %cond.i) #39
  %cmp.i35 = icmp eq ptr %call.i34, null
  br i1 %cmp.i35, label %if.then.i36, label %must_malloc.exit

if.then.i36:                                      ; preds = %if.end
  %call1.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %.pre = load i64, ptr @heap_size, align 8, !tbaa !10
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %if.end, %if.then.i36
  %8 = phi i64 [ %7, %if.end ], [ %.pre, %if.then.i36 ]
  %9 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx6 = getelementptr inbounds ptr, ptr %9, i64 %j.042
  store ptr %call.i34, ptr %arrayidx6, align 8, !tbaa !5
  %10 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx7 = getelementptr inbounds ptr, ptr %10, i64 %j.042
  %11 = load ptr, ptr %arrayidx7, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds %struct.obj, ptr %11, i64 %8
  %type43 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  store i16 12, ptr %type43, align 2, !tbaa !14
  %cmp1045 = icmp sgt i64 %8, 1
  br i1 %cmp1045, label %if.then11.preheader, label %if.else

if.then11.preheader:                              ; preds = %must_malloc.exit
  %add.ptr944 = getelementptr inbounds %struct.obj, ptr %11, i64 1
  br label %if.then11

if.then11:                                        ; preds = %if.then11.preheader, %if.then11
  %add.ptr947 = phi ptr [ %add.ptr9, %if.then11 ], [ %add.ptr944, %if.then11.preheader ]
  %ptr.046 = phi ptr [ %add.ptr947, %if.then11 ], [ %11, %if.then11.preheader ]
  %cdr = getelementptr inbounds %struct.obj, ptr %ptr.046, i64 0, i32 2, i32 0, i32 1
  store ptr %add.ptr947, ptr %cdr, align 8, !tbaa !9
  %type = getelementptr inbounds %struct.obj, ptr %add.ptr947, i64 0, i32 1
  store i16 12, ptr %type, align 2, !tbaa !14
  %add.ptr9 = getelementptr inbounds %struct.obj, ptr %add.ptr947, i64 1
  %cmp10 = icmp ult ptr %add.ptr9, %add.ptr
  br i1 %cmp10, label %if.then11, label %if.else

if.else:                                          ; preds = %if.then11, %must_malloc.exit
  %ptr.0.lcssa = phi ptr [ %11, %must_malloc.exit ], [ %add.ptr947, %if.then11 ]
  %12 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cdr13 = getelementptr inbounds %struct.obj, ptr %ptr.0.lcssa, i64 0, i32 2, i32 0, i32 1
  store ptr %12, ptr %cdr13, align 8, !tbaa !9
  %13 = load ptr, ptr %arrayidx7, align 8, !tbaa !5
  store ptr %13, ptr @freelist, align 8, !tbaa !5
  store i64 %4, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i37 = icmp eq i64 %4, 0
  %14 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i38 = icmp eq i64 %14, 1
  %or.cond.i = select i1 %cmp.i37, i1 %cmp1.i38, i1 false
  br i1 %or.cond.i, label %if.then.i39, label %no_interrupt.exit

if.then.i39:                                      ; preds = %if.else
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %if.else, %if.then.i39
  %15 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i64 %j.042, 1
  %exitcond.not = icmp eq i64 %inc, %1
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !76

cleanup:                                          ; preds = %for.inc, %gc_kind_check.exit, %no_interrupt.exit
  %retval.0 = phi ptr [ %15, %no_interrupt.exit ], [ null, %gc_kind_check.exit ], [ null, %for.inc ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_kind_check() local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call ptr @err(ptr noundef nonnull @.str.77, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_mark_and_sweep() local_unnamed_addr #6 {
entry:
  %b.i.i13 = alloca %struct.tms, align 8
  %b.i.i = alloca %struct.tms, align 8
  %stack_end = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %stack_end) #33
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i.i) #33
  %call.i.i = call i64 @times(ptr noundef nonnull %b.i.i) #33
  %0 = load i64, ptr %b.i.i, align 8, !tbaa !36
  %conv.i.i = sitofp i64 %0 to double
  %tms_stime.i.i = getelementptr inbounds %struct.tms, ptr %b.i.i, i64 0, i32 1
  %1 = load i64, ptr %tms_stime.i.i, align 8, !tbaa !38
  %conv1.i.i = sitofp i64 %1 to double
  %add.i.i = fadd double %conv.i.i, %conv1.i.i
  %div.i.i = fdiv double %add.i.i, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i.i) #33
  store double %div.i.i, ptr @gc_rt, align 8, !tbaa !39
  store i64 0, ptr @gc_cells_collected, align 8, !tbaa !10
  %2 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %tobool.i = icmp ne i64 %2, 0
  %3 = load i64, ptr @siod_verbose_level, align 8
  %cmp.i = icmp sgt i64 %3, 3
  %or.cond.i = select i1 %tobool.i, i1 %cmp.i, i1 false
  br i1 %or.cond.i, label %if.then.i, label %gc_ms_stats_start.exit

if.then.i:                                        ; preds = %entry
  %puts.i = call i32 @puts(ptr nonnull dereferenceable(1) @str.241)
  br label %gc_ms_stats_start.exit

gc_ms_stats_start.exit:                           ; preds = %entry, %if.then.i
  %4 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %heap.promoted = load ptr, ptr @heap, align 8, !tbaa !5
  %cmp82 = icmp ult ptr %heap.promoted, %4
  br i1 %cmp82, label %while.body, label %while.end

while.body:                                       ; preds = %gc_ms_stats_start.exit, %while.body
  %incdec.ptr8183 = phi ptr [ %incdec.ptr, %while.body ], [ %heap.promoted, %gc_ms_stats_start.exit ]
  %type = getelementptr inbounds %struct.obj, ptr %incdec.ptr8183, i64 0, i32 1
  store i16 12, ptr %type, align 2, !tbaa !14
  store i16 0, ptr %incdec.ptr8183, align 8, !tbaa !35
  %incdec.ptr = getelementptr inbounds %struct.obj, ptr %incdec.ptr8183, i64 1
  %cmp = icmp ult ptr %incdec.ptr, %4
  br i1 %cmp, label %while.body, label %while.cond.while.end_crit_edge, !llvm.loop !77

while.cond.while.end_crit_edge:                   ; preds = %while.body
  store ptr %incdec.ptr, ptr @heap, align 8, !tbaa !5
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %gc_ms_stats_start.exit
  %call = call i32 @getcontext(ptr noundef nonnull @save_regs_gc_mark) #36
  %5 = load i64, ptr @nheaps, align 8, !tbaa !10
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %for.body.i29, label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %for.inc.i33, %while.end
  %reg.0.i87 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %tobool.i1.not88 = icmp eq ptr %reg.0.i87, null
  br i1 %tobool.i1.not88, label %mark_protected_registers.exit, label %for.body.i

for.body.i29:                                     ; preds = %while.end, %for.inc.i33
  %7 = phi i64 [ %13, %for.inc.i33 ], [ %5, %while.end ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.i33 ], [ 0, %while.end ]
  %arrayidx.i28 = getelementptr inbounds ptr, ptr getelementptr inbounds (%struct.ucontext_t, ptr @save_regs_gc_mark, i64 0, i32 3), i64 %indvars.iv
  %8 = load ptr, ptr %arrayidx.i28, align 8, !tbaa !5
  %type.i.i = getelementptr inbounds %struct.obj, ptr %8, i64 0, i32 1
  %cmp21.i.i = icmp sgt i64 %7, 0
  br i1 %cmp21.i.i, label %for.body.lr.ph.i.i, label %for.inc.i33

for.body.lr.ph.i.i:                               ; preds = %for.body.i29
  %9 = load ptr, ptr @heaps, align 8, !tbaa !5
  %10 = load i64, ptr @heap_size, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %8 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %j.022.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %9, i64 %j.022.i.i
  %11 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !5
  %tobool.not.i.i = icmp ne ptr %11, null
  %cmp1.not.i.i = icmp ule ptr %11, %8
  %or.cond.not25.i.i = and i1 %tobool.not.i.i, %cmp1.not.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %11, i64 %10
  %cmp3.i.i = icmp ugt ptr %add.ptr.i.i, %8
  %or.cond24.i.i = select i1 %or.cond.not25.i.i, i1 %cmp3.i.i, i1 false
  br i1 %or.cond24.i.i, label %land.lhs.true4.i.i, label %for.inc.i.i

land.lhs.true4.i.i:                               ; preds = %for.body.i.i
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %11 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %rem.i.i = urem i64 %sub.ptr.sub.i.i, 24
  %cmp5.i.i = icmp eq i64 %rem.i.i, 0
  br i1 %cmp5.i.i, label %land.lhs.true6.i.i, label %for.inc.i.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true4.i.i
  %12 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %cmp8.not.i.i = icmp eq i16 %12, 12
  br i1 %cmp8.not.i.i, label %for.inc.i.i, label %if.then.i31

for.inc.i.i:                                      ; preds = %land.lhs.true6.i.i, %land.lhs.true4.i.i, %for.body.i.i
  %inc.i.i = add nuw nsw i64 %j.022.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %inc.i.i, %7
  br i1 %exitcond.not.i.i, label %for.inc.i33, label %for.body.i.i, !llvm.loop !78

if.then.i31:                                      ; preds = %land.lhs.true6.i.i
  call void @gc_mark(ptr noundef nonnull %8)
  %.pre = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %for.inc.i33

for.inc.i33:                                      ; preds = %for.inc.i.i, %for.body.i29, %if.then.i31
  %13 = phi i64 [ %7, %for.body.i29 ], [ %.pre, %if.then.i31 ], [ %7, %for.inc.i.i ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 32
  br i1 %exitcond.not, label %for.cond.i.preheader, label %for.body.i29, !llvm.loop !79

for.body.i:                                       ; preds = %for.cond.i.preheader, %for.inc4.i
  %reg.0.i89 = phi ptr [ %reg.0.i, %for.inc4.i ], [ %reg.0.i87, %for.cond.i.preheader ]
  %14 = load ptr, ptr %reg.0.i89, align 8, !tbaa !58
  %length.i = getelementptr inbounds %struct.gc_protected, ptr %reg.0.i89, i64 0, i32 1
  %15 = load i64, ptr %length.i, align 8, !tbaa !60
  %cmp.i285 = icmp sgt i64 %15, 0
  br i1 %cmp.i285, label %for.body3.i, label %for.inc4.i

for.body3.i:                                      ; preds = %for.body.i, %for.body3.i
  %j.0.i86 = phi i64 [ %inc.i, %for.body3.i ], [ 0, %for.body.i ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %14, i64 %j.0.i86
  %16 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  call void @gc_mark(ptr noundef %16)
  %inc.i = add nuw nsw i64 %j.0.i86, 1
  %exitcond107.not = icmp eq i64 %inc.i, %15
  br i1 %exitcond107.not, label %for.inc4.i, label %for.body3.i, !llvm.loop !81

for.inc4.i:                                       ; preds = %for.body3.i, %for.body.i
  %next.i = getelementptr inbounds %struct.gc_protected, ptr %reg.0.i89, i64 0, i32 2
  %reg.0.i = load ptr, ptr %next.i, align 8, !tbaa !5
  %tobool.i1.not = icmp eq ptr %reg.0.i, null
  br i1 %tobool.i1.not, label %mark_protected_registers.exit, label %for.body.i, !llvm.loop !82

mark_protected_registers.exit:                    ; preds = %for.inc4.i, %for.cond.i.preheader
  %17 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %cmp.i3 = icmp ugt ptr %17, %stack_end
  %spec.select = select i1 %cmp.i3, ptr %17, ptr %stack_end
  %spec.select76 = select i1 %cmp.i3, ptr %stack_end, ptr %17
  %sub.ptr.lhs.cast.i = ptrtoint ptr %spec.select to i64
  %sub.ptr.rhs.cast.i = ptrtoint ptr %spec.select76 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr i64 %sub.ptr.sub.i, 3
  %cmp.i3690 = icmp sgt i64 %sub.ptr.sub.i, 0
  %18 = load i64, ptr @nheaps, align 8, !tbaa !10
  br i1 %cmp.i3690, label %for.body.i41.lr.ph, label %for.cond.i6.preheader

for.body.i41.lr.ph:                               ; preds = %mark_protected_registers.exit
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %for.body.i41.preheader, label %gc_sweep.exit

for.body.i41.preheader:                           ; preds = %for.body.i41.lr.ph
  %smax = call i64 @llvm.smax.i64(i64 %sub.ptr.div.i, i64 1)
  br label %for.body.i41

for.cond.i6.preheader:                            ; preds = %for.inc.i68, %mark_protected_registers.exit
  %20 = phi i64 [ %18, %mark_protected_registers.exit ], [ %27, %for.inc.i68 ]
  %cmp.i598 = icmp sgt i64 %20, 0
  br i1 %cmp.i598, label %for.body.i9, label %gc_sweep.exit

for.body.i41:                                     ; preds = %for.body.i41.preheader, %for.inc.i68
  %21 = phi i64 [ %18, %for.body.i41.preheader ], [ %27, %for.inc.i68 ]
  %indvars.iv111 = phi i64 [ 0, %for.body.i41.preheader ], [ %indvars.iv.next112, %for.inc.i68 ]
  %arrayidx.i38 = getelementptr inbounds ptr, ptr %spec.select76, i64 %indvars.iv111
  %22 = load ptr, ptr %arrayidx.i38, align 8, !tbaa !5
  %type.i.i39 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 1
  %cmp21.i.i40 = icmp sgt i64 %21, 0
  br i1 %cmp21.i.i40, label %for.body.lr.ph.i.i43, label %for.inc.i68

for.body.lr.ph.i.i43:                             ; preds = %for.body.i41
  %23 = load ptr, ptr @heaps, align 8, !tbaa !5
  %24 = load i64, ptr @heap_size, align 8
  %sub.ptr.lhs.cast.i.i42 = ptrtoint ptr %22 to i64
  br label %for.body.i.i52

for.body.i.i52:                                   ; preds = %for.inc.i.i62, %for.body.lr.ph.i.i43
  %j.022.i.i44 = phi i64 [ 0, %for.body.lr.ph.i.i43 ], [ %inc.i.i60, %for.inc.i.i62 ]
  %arrayidx.i.i45 = getelementptr inbounds ptr, ptr %23, i64 %j.022.i.i44
  %25 = load ptr, ptr %arrayidx.i.i45, align 8, !tbaa !5
  %tobool.not.i.i46 = icmp ne ptr %25, null
  %cmp1.not.i.i47 = icmp ule ptr %25, %22
  %or.cond.not25.i.i48 = and i1 %tobool.not.i.i46, %cmp1.not.i.i47
  %add.ptr.i.i49 = getelementptr inbounds %struct.obj, ptr %25, i64 %24
  %cmp3.i.i50 = icmp ugt ptr %add.ptr.i.i49, %22
  %or.cond24.i.i51 = select i1 %or.cond.not25.i.i48, i1 %cmp3.i.i50, i1 false
  br i1 %or.cond24.i.i51, label %land.lhs.true4.i.i57, label %for.inc.i.i62

land.lhs.true4.i.i57:                             ; preds = %for.body.i.i52
  %sub.ptr.rhs.cast.i.i53 = ptrtoint ptr %25 to i64
  %sub.ptr.sub.i.i54 = sub i64 %sub.ptr.lhs.cast.i.i42, %sub.ptr.rhs.cast.i.i53
  %rem.i.i55 = urem i64 %sub.ptr.sub.i.i54, 24
  %cmp5.i.i56 = icmp eq i64 %rem.i.i55, 0
  br i1 %cmp5.i.i56, label %land.lhs.true6.i.i59, label %for.inc.i.i62

land.lhs.true6.i.i59:                             ; preds = %land.lhs.true4.i.i57
  %26 = load i16, ptr %type.i.i39, align 2, !tbaa !14
  %cmp8.not.i.i58 = icmp eq i16 %26, 12
  br i1 %cmp8.not.i.i58, label %for.inc.i.i62, label %if.then.i66

for.inc.i.i62:                                    ; preds = %land.lhs.true6.i.i59, %land.lhs.true4.i.i57, %for.body.i.i52
  %inc.i.i60 = add nuw nsw i64 %j.022.i.i44, 1
  %exitcond.not.i.i61 = icmp eq i64 %inc.i.i60, %21
  br i1 %exitcond.not.i.i61, label %for.inc.i68, label %for.body.i.i52, !llvm.loop !78

if.then.i66:                                      ; preds = %land.lhs.true6.i.i59
  call void @gc_mark(ptr noundef nonnull %22)
  %.pre116 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %for.inc.i68

for.inc.i68:                                      ; preds = %for.inc.i.i62, %for.body.i41, %if.then.i66
  %27 = phi i64 [ %21, %for.body.i41 ], [ %.pre116, %if.then.i66 ], [ %21, %for.inc.i.i62 ]
  %indvars.iv.next112 = add nuw nsw i64 %indvars.iv111, 1
  %exitcond114.not = icmp eq i64 %indvars.iv.next112, %smax
  br i1 %exitcond114.not, label %for.cond.i6.preheader, label %for.body.i41, !llvm.loop !83

for.body.i9:                                      ; preds = %for.cond.i6.preheader, %for.inc21.i
  %28 = phi i64 [ %37, %for.inc21.i ], [ %20, %for.cond.i6.preheader ]
  %k.0.i101 = phi i64 [ %inc22.i, %for.inc21.i ], [ 0, %for.cond.i6.preheader ]
  %n.0.i100 = phi i64 [ %n.3.i, %for.inc21.i ], [ 0, %for.cond.i6.preheader ]
  %nfreelist.0.i99 = phi ptr [ %nfreelist.3.i, %for.inc21.i ], [ null, %for.cond.i6.preheader ]
  %29 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx.i7 = getelementptr inbounds ptr, ptr %29, i64 %k.0.i101
  %30 = load ptr, ptr %arrayidx.i7, align 8, !tbaa !5
  %tobool.i8.not = icmp eq ptr %30, null
  br i1 %tobool.i8.not, label %for.inc21.i, label %if.then.i10

if.then.i10:                                      ; preds = %for.body.i9
  %31 = load i64, ptr @heap_size, align 8, !tbaa !10
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %30, i64 %31
  %cmp3.i93 = icmp sgt i64 %31, 0
  br i1 %cmp3.i93, label %for.body4.i, label %for.inc21.i

for.body4.i:                                      ; preds = %if.then.i10, %for.inc.i
  %ptr.0.i96 = phi ptr [ %incdec.ptr.i, %for.inc.i ], [ %30, %if.then.i10 ]
  %n.1.i95 = phi i64 [ %n.2.i, %for.inc.i ], [ %n.0.i100, %if.then.i10 ]
  %nfreelist.1.i94 = phi ptr [ %nfreelist.2.i, %for.inc.i ], [ %nfreelist.0.i99, %if.then.i10 ]
  %32 = load i16, ptr %ptr.0.i96, align 8, !tbaa !35
  %cmp5.i = icmp eq i16 %32, 0
  br i1 %cmp5.i, label %if.then7.i, label %if.else.i

if.then7.i:                                       ; preds = %for.body4.i
  %type.i = getelementptr inbounds %struct.obj, ptr %ptr.0.i96, i64 0, i32 1
  %33 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv8.i = sext i16 %33 to i32
  switch i32 %conv8.i, label %sw.default.i [
    i32 12, label %sw.epilog.i
    i32 1, label %sw.epilog.i
    i32 11, label %sw.epilog.i
    i32 3, label %sw.epilog.i
    i32 2, label %sw.epilog.i
    i32 4, label %sw.epilog.i
    i32 5, label %sw.epilog.i
    i32 6, label %sw.epilog.i
    i32 21, label %sw.epilog.i
    i32 7, label %sw.epilog.i
    i32 19, label %sw.epilog.i
    i32 20, label %sw.epilog.i
    i32 8, label %sw.epilog.i
    i32 9, label %sw.epilog.i
    i32 10, label %sw.epilog.i
  ]

sw.default.i:                                     ; preds = %if.then7.i
  %conv13.i = sext i16 %33 to i64
  %34 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i70 = icmp eq ptr %34, null
  br i1 %cmp.i70, label %if.then.i72, label %if.end.i

if.then.i72:                                      ; preds = %sw.default.i
  %call.i.i71 = call noalias dereferenceable_or_null(8000) ptr @malloc(i64 noundef 8000) #39
  %cmp.i.i = icmp eq ptr %call.i.i71, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i72
  %call1.i.i = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i72
  store ptr %call.i.i71, ptr @user_types, align 8, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(8000) %call.i.i71, i8 0, i64 8000, i1 false)
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %sw.default.i
  %35 = phi ptr [ %call.i.i71, %must_malloc.exit.i ], [ %34, %sw.default.i ]
  %or.cond.i73 = icmp ult i16 %33, 100
  br i1 %or.cond.i73, label %if.then3.i, label %if.else.i75

if.then3.i:                                       ; preds = %if.end.i
  %gc_free.i = getelementptr inbounds %struct.user_type_hooks, ptr %35, i64 %conv13.i, i32 3
  %36 = load ptr, ptr %gc_free.i, align 8, !tbaa !48
  %tobool14.i.not = icmp eq ptr %36, null
  br i1 %tobool14.i.not, label %sw.epilog.i, label %if.then15.i

if.else.i75:                                      ; preds = %if.end.i
  %call4.i = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then15.i:                                      ; preds = %if.then3.i
  call void %36(ptr noundef nonnull %ptr.0.i96) #33
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.then15.i, %if.then3.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i, %if.then7.i
  %inc.i12 = add nsw i64 %n.1.i95, 1
  store i16 12, ptr %type.i, align 2, !tbaa !14
  %cdr.i = getelementptr inbounds %struct.obj, ptr %ptr.0.i96, i64 0, i32 2, i32 0, i32 1
  store ptr %nfreelist.1.i94, ptr %cdr.i, align 8, !tbaa !9
  br label %for.inc.i

if.else.i:                                        ; preds = %for.body4.i
  store i16 0, ptr %ptr.0.i96, align 8, !tbaa !35
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i, %sw.epilog.i
  %nfreelist.2.i = phi ptr [ %ptr.0.i96, %sw.epilog.i ], [ %nfreelist.1.i94, %if.else.i ]
  %n.2.i = phi i64 [ %inc.i12, %sw.epilog.i ], [ %n.1.i95, %if.else.i ]
  %incdec.ptr.i = getelementptr inbounds %struct.obj, ptr %ptr.0.i96, i64 1
  %cmp3.i = icmp ult ptr %incdec.ptr.i, %add.ptr.i
  br i1 %cmp3.i, label %for.body4.i, label %for.inc21.i.loopexit, !llvm.loop !84

for.inc21.i.loopexit:                             ; preds = %for.inc.i
  %.pre119 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %for.inc21.i

for.inc21.i:                                      ; preds = %for.inc21.i.loopexit, %if.then.i10, %for.body.i9
  %37 = phi i64 [ %28, %for.body.i9 ], [ %28, %if.then.i10 ], [ %.pre119, %for.inc21.i.loopexit ]
  %nfreelist.3.i = phi ptr [ %nfreelist.0.i99, %for.body.i9 ], [ %nfreelist.0.i99, %if.then.i10 ], [ %nfreelist.2.i, %for.inc21.i.loopexit ]
  %n.3.i = phi i64 [ %n.0.i100, %for.body.i9 ], [ %n.0.i100, %if.then.i10 ], [ %n.2.i, %for.inc21.i.loopexit ]
  %inc22.i = add nuw nsw i64 %k.0.i101, 1
  %cmp.i5 = icmp slt i64 %inc22.i, %37
  br i1 %cmp.i5, label %for.body.i9, label %gc_sweep.exit, !llvm.loop !85

gc_sweep.exit:                                    ; preds = %for.inc21.i, %for.body.i41.lr.ph, %for.cond.i6.preheader
  %nfreelist.0.i.lcssa = phi ptr [ null, %for.cond.i6.preheader ], [ null, %for.body.i41.lr.ph ], [ %nfreelist.3.i, %for.inc21.i ]
  %n.0.i.lcssa = phi i64 [ 0, %for.cond.i6.preheader ], [ 0, %for.body.i41.lr.ph ], [ %n.3.i, %for.inc21.i ]
  store i64 %n.0.i.lcssa, ptr @gc_cells_collected, align 8, !tbaa !10
  store ptr %nfreelist.0.i.lcssa, ptr @freelist, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i.i13) #33
  %call.i.i14 = call i64 @times(ptr noundef nonnull %b.i.i13) #33
  %38 = load i64, ptr %b.i.i13, align 8, !tbaa !36
  %conv.i.i15 = sitofp i64 %38 to double
  %tms_stime.i.i16 = getelementptr inbounds %struct.tms, ptr %b.i.i13, i64 0, i32 1
  %39 = load i64, ptr %tms_stime.i.i16, align 8, !tbaa !38
  %conv1.i.i17 = sitofp i64 %39 to double
  %add.i.i18 = fadd double %conv.i.i15, %conv1.i.i17
  %div.i.i19 = fdiv double %add.i.i18, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i.i13) #33
  %40 = load double, ptr @gc_rt, align 8, !tbaa !39
  %sub.i = fsub double %div.i.i19, %40
  store double %sub.i, ptr @gc_rt, align 8, !tbaa !39
  %41 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  %add.i = fadd double %41, %sub.i
  store double %add.i, ptr @gc_time_taken, align 8, !tbaa !39
  %42 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %tobool.i20 = icmp ne i64 %42, 0
  %43 = load i64, ptr @siod_verbose_level, align 8
  %cmp.i21 = icmp sgt i64 %43, 3
  %or.cond.i22 = select i1 %tobool.i20, i1 %cmp.i21, i1 false
  br i1 %or.cond.i22, label %if.then.i23, label %gc_ms_stats_end.exit

if.then.i23:                                      ; preds = %gc_sweep.exit
  %44 = load i64, ptr @gc_cells_collected, align 8, !tbaa !10
  %call1.i = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.76, double noundef %sub.i, i64 noundef %44)
  br label %gc_ms_stats_end.exit

gc_ms_stats_end.exit:                             ; preds = %gc_sweep.exit, %if.then.i23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %stack_end) #33
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @gc_ms_stats_start() local_unnamed_addr #1 {
entry:
  %b.i = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i) #33
  %call.i = call i64 @times(ptr noundef nonnull %b.i) #33
  %0 = load i64, ptr %b.i, align 8, !tbaa !36
  %conv.i = sitofp i64 %0 to double
  %tms_stime.i = getelementptr inbounds %struct.tms, ptr %b.i, i64 0, i32 1
  %1 = load i64, ptr %tms_stime.i, align 8, !tbaa !38
  %conv1.i = sitofp i64 %1 to double
  %add.i = fadd double %conv.i, %conv1.i
  %div.i = fdiv double %add.i, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i) #33
  store double %div.i, ptr @gc_rt, align 8, !tbaa !39
  store i64 0, ptr @gc_cells_collected, align 8, !tbaa !10
  %2 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %tobool = icmp ne i64 %2, 0
  %3 = load i64, ptr @siod_verbose_level, align 8
  %cmp = icmp sgt i64 %3, 3
  %or.cond = select i1 %tobool, i1 %cmp, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %puts = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.241)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: returns_twice
declare i32 @getcontext(ptr noundef) local_unnamed_addr #21

; Function Attrs: nounwind uwtable
define dso_local void @mark_locations(ptr noundef %start, ptr noundef %end) local_unnamed_addr #6 {
entry:
  %cmp = icmp ugt ptr %start, %end
  %spec.select = select i1 %cmp, ptr %start, ptr %end
  %spec.select6 = select i1 %cmp, ptr %end, ptr %start
  %sub.ptr.lhs.cast = ptrtoint ptr %spec.select to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %spec.select6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp5.i = icmp sgt i64 %sub.ptr.sub, 0
  %0 = load i64, ptr @nheaps, align 8
  %1 = icmp sgt i64 %0, 0
  %or.cond.i = select i1 %cmp5.i, i1 %1, i1 false
  br i1 %or.cond.i, label %for.body.i, label %mark_locations_array.exit

for.body.i:                                       ; preds = %entry, %for.inc.i
  %2 = phi i64 [ %8, %for.inc.i ], [ %0, %entry ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 0, %entry ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %spec.select6, i64 %indvars.iv.i
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %type.i.i = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %cmp21.i.i = icmp sgt i64 %2, 0
  br i1 %cmp21.i.i, label %for.body.lr.ph.i.i, label %for.inc.i

for.body.lr.ph.i.i:                               ; preds = %for.body.i
  %4 = load ptr, ptr @heaps, align 8, !tbaa !5
  %5 = load i64, ptr @heap_size, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %3 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %j.022.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %4, i64 %j.022.i.i
  %6 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !5
  %tobool.not.i.i = icmp ne ptr %6, null
  %cmp1.not.i.i = icmp ule ptr %6, %3
  %or.cond.not25.i.i = and i1 %tobool.not.i.i, %cmp1.not.i.i
  %add.ptr.i.i = getelementptr inbounds %struct.obj, ptr %6, i64 %5
  %cmp3.i.i = icmp ugt ptr %add.ptr.i.i, %3
  %or.cond24.i.i = select i1 %or.cond.not25.i.i, i1 %cmp3.i.i, i1 false
  br i1 %or.cond24.i.i, label %land.lhs.true4.i.i, label %for.inc.i.i

land.lhs.true4.i.i:                               ; preds = %for.body.i.i
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %6 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %rem.i.i = urem i64 %sub.ptr.sub.i.i, 24
  %cmp5.i.i = icmp eq i64 %rem.i.i, 0
  br i1 %cmp5.i.i, label %land.lhs.true6.i.i, label %for.inc.i.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true4.i.i
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %cmp8.not.i.i = icmp eq i16 %7, 12
  br i1 %cmp8.not.i.i, label %for.inc.i.i, label %if.then.i

for.inc.i.i:                                      ; preds = %land.lhs.true6.i.i, %land.lhs.true4.i.i, %for.body.i.i
  %inc.i.i = add nuw nsw i64 %j.022.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %inc.i.i, %2
  br i1 %exitcond.not.i.i, label %for.inc.i, label %for.body.i.i, !llvm.loop !78

if.then.i:                                        ; preds = %land.lhs.true6.i.i
  tail call void @gc_mark(ptr noundef nonnull %3)
  %.pre.i = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.inc.i.i, %if.then.i, %for.body.i
  %8 = phi i64 [ %2, %for.body.i ], [ %.pre.i, %if.then.i ], [ %2, %for.inc.i.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %sub.ptr.div
  br i1 %exitcond.not.i, label %mark_locations_array.exit, label %for.body.i, !llvm.loop !86

mark_locations_array.exit:                        ; preds = %for.inc.i, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_protected_registers() local_unnamed_addr #6 {
entry:
  %reg.013 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %tobool.not14 = icmp eq ptr %reg.013, null
  br i1 %tobool.not14, label %for.end5, label %for.body

for.body:                                         ; preds = %entry, %for.inc4
  %reg.015 = phi ptr [ %reg.0, %for.inc4 ], [ %reg.013, %entry ]
  %0 = load ptr, ptr %reg.015, align 8, !tbaa !58
  %length = getelementptr inbounds %struct.gc_protected, ptr %reg.015, i64 0, i32 1
  %1 = load i64, ptr %length, align 8, !tbaa !60
  %cmp11 = icmp sgt i64 %1, 0
  br i1 %cmp11, label %for.body3, label %for.inc4

for.body3:                                        ; preds = %for.body, %for.body3
  %j.012 = phi i64 [ %inc, %for.body3 ], [ 0, %for.body ]
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %j.012
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  tail call void @gc_mark(ptr noundef %2)
  %inc = add nuw nsw i64 %j.012, 1
  %exitcond.not = icmp eq i64 %inc, %1
  br i1 %exitcond.not, label %for.inc4, label %for.body3, !llvm.loop !81

for.inc4:                                         ; preds = %for.body3, %for.body
  %next = getelementptr inbounds %struct.gc_protected, ptr %reg.015, i64 0, i32 2
  %reg.0 = load ptr, ptr %next, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %reg.0, null
  br i1 %tobool.not, label %for.end5, label %for.body, !llvm.loop !82

for.end5:                                         ; preds = %for.inc4, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_sweep() local_unnamed_addr #6 {
entry:
  %0 = load i64, ptr @nheaps, align 8, !tbaa !10
  %cmp51 = icmp sgt i64 %0, 0
  br i1 %cmp51, label %for.body, label %for.end23

for.body:                                         ; preds = %entry, %for.inc21
  %1 = phi i64 [ %10, %for.inc21 ], [ %0, %entry ]
  %k.054 = phi i64 [ %inc22, %for.inc21 ], [ 0, %entry ]
  %n.053 = phi i64 [ %n.3, %for.inc21 ], [ 0, %entry ]
  %nfreelist.052 = phi ptr [ %nfreelist.3, %for.inc21 ], [ null, %entry ]
  %2 = load ptr, ptr @heaps, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %k.054
  %3 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %for.inc21, label %if.then

if.then:                                          ; preds = %for.body
  %4 = load i64, ptr @heap_size, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.obj, ptr %3, i64 %4
  %cmp346 = icmp sgt i64 %4, 0
  br i1 %cmp346, label %for.body4, label %for.inc21

for.body4:                                        ; preds = %if.then, %for.inc
  %ptr.049 = phi ptr [ %incdec.ptr, %for.inc ], [ %3, %if.then ]
  %n.148 = phi i64 [ %n.2, %for.inc ], [ %n.053, %if.then ]
  %nfreelist.147 = phi ptr [ %nfreelist.2, %for.inc ], [ %nfreelist.052, %if.then ]
  %5 = load i16, ptr %ptr.049, align 8, !tbaa !35
  %cmp5 = icmp eq i16 %5, 0
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %for.body4
  %type = getelementptr inbounds %struct.obj, ptr %ptr.049, i64 0, i32 1
  %6 = load i16, ptr %type, align 2, !tbaa !14
  %conv8 = sext i16 %6 to i32
  switch i32 %conv8, label %cond.end [
    i32 12, label %sw.epilog
    i32 1, label %sw.epilog
    i32 11, label %sw.epilog
    i32 3, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 5, label %sw.epilog
    i32 6, label %sw.epilog
    i32 21, label %sw.epilog
    i32 7, label %sw.epilog
    i32 19, label %sw.epilog
    i32 20, label %sw.epilog
    i32 8, label %sw.epilog
    i32 9, label %sw.epilog
    i32 10, label %sw.epilog
  ]

cond.end:                                         ; preds = %if.then7
  %conv13 = sext i16 %6 to i64
  %7 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %7, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end
  %calloc.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %cond.end
  %8 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %7, %cond.end ]
  %or.cond.i = icmp ult i16 %6, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %gc_free = getelementptr inbounds %struct.user_type_hooks, ptr %8, i64 %conv13, i32 3
  %9 = load ptr, ptr %gc_free, align 8, !tbaa !48
  %tobool14.not = icmp eq ptr %9, null
  br i1 %tobool14.not, label %sw.epilog, label %if.then15

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then15:                                        ; preds = %if.then3.i
  tail call void %9(ptr noundef nonnull %ptr.049) #33
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then3.i, %if.then15, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7
  %inc = add nsw i64 %n.148, 1
  store i16 12, ptr %type, align 2, !tbaa !14
  %cdr = getelementptr inbounds %struct.obj, ptr %ptr.049, i64 0, i32 2, i32 0, i32 1
  store ptr %nfreelist.147, ptr %cdr, align 8, !tbaa !9
  br label %for.inc

if.else:                                          ; preds = %for.body4
  store i16 0, ptr %ptr.049, align 8, !tbaa !35
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog, %if.else
  %nfreelist.2 = phi ptr [ %ptr.049, %sw.epilog ], [ %nfreelist.147, %if.else ]
  %n.2 = phi i64 [ %inc, %sw.epilog ], [ %n.148, %if.else ]
  %incdec.ptr = getelementptr inbounds %struct.obj, ptr %ptr.049, i64 1
  %cmp3 = icmp ult ptr %incdec.ptr, %add.ptr
  br i1 %cmp3, label %for.body4, label %for.inc21.loopexit, !llvm.loop !84

for.inc21.loopexit:                               ; preds = %for.inc
  %.pre = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %for.inc21

for.inc21:                                        ; preds = %for.inc21.loopexit, %if.then, %for.body
  %10 = phi i64 [ %1, %for.body ], [ %1, %if.then ], [ %.pre, %for.inc21.loopexit ]
  %nfreelist.3 = phi ptr [ %nfreelist.052, %for.body ], [ %nfreelist.052, %if.then ], [ %nfreelist.2, %for.inc21.loopexit ]
  %n.3 = phi i64 [ %n.053, %for.body ], [ %n.053, %if.then ], [ %n.2, %for.inc21.loopexit ]
  %inc22 = add nuw nsw i64 %k.054, 1
  %cmp = icmp slt i64 %inc22, %10
  br i1 %cmp, label %for.body, label %for.end23, !llvm.loop !85

for.end23:                                        ; preds = %for.inc21, %entry
  %nfreelist.0.lcssa = phi ptr [ null, %entry ], [ %nfreelist.3, %for.inc21 ]
  %n.0.lcssa = phi i64 [ 0, %entry ], [ %n.3, %for.inc21 ]
  store i64 %n.0.lcssa, ptr @gc_cells_collected, align 8, !tbaa !10
  store ptr %nfreelist.0.lcssa, ptr @freelist, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @gc_ms_stats_end() local_unnamed_addr #1 {
entry:
  %b.i = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i) #33
  %call.i = call i64 @times(ptr noundef nonnull %b.i) #33
  %0 = load i64, ptr %b.i, align 8, !tbaa !36
  %conv.i = sitofp i64 %0 to double
  %tms_stime.i = getelementptr inbounds %struct.tms, ptr %b.i, i64 0, i32 1
  %1 = load i64, ptr %tms_stime.i, align 8, !tbaa !38
  %conv1.i = sitofp i64 %1 to double
  %add.i = fadd double %conv.i, %conv1.i
  %div.i = fdiv double %add.i, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i) #33
  %2 = load double, ptr @gc_rt, align 8, !tbaa !39
  %sub = fsub double %div.i, %2
  store double %sub, ptr @gc_rt, align 8, !tbaa !39
  %3 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  %add = fadd double %3, %sub
  store double %add, ptr @gc_time_taken, align 8, !tbaa !39
  %4 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %tobool = icmp ne i64 %4, 0
  %5 = load i64, ptr @siod_verbose_level, align 8
  %cmp = icmp sgt i64 %5, 3
  %or.cond = select i1 %tobool, i1 %cmp, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i64, ptr @gc_cells_collected, align 8, !tbaa !10
  %call1 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.76, double noundef %sub, i64 noundef %6)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_mark(ptr noundef %ptr) local_unnamed_addr #6 {
entry:
  %cmp39 = icmp eq ptr %ptr, null
  br i1 %cmp39, label %cleanup, label %if.end

if.end:                                           ; preds = %entry, %gc_mark_loop.backedge
  %ptr.addr.040 = phi ptr [ %ptr.addr.0.be, %gc_mark_loop.backedge ], [ %ptr, %entry ]
  %0 = load i16, ptr %ptr.addr.040, align 8, !tbaa !35
  %tobool.not = icmp eq i16 %0, 0
  br i1 %tobool.not, label %if.end2, label %cleanup

if.end2:                                          ; preds = %if.end
  store i16 1, ptr %ptr.addr.040, align 8, !tbaa !35
  %type = getelementptr inbounds %struct.obj, ptr %ptr.addr.040, i64 0, i32 1
  %1 = load i16, ptr %type, align 2, !tbaa !14
  %conv = sext i16 %1 to i32
  switch i32 %conv, label %cond.end [
    i32 2, label %cleanup
    i32 1, label %sw.bb
    i32 3, label %sw.bb5
    i32 11, label %sw.bb7
    i32 4, label %cleanup
    i32 5, label %cleanup
    i32 6, label %cleanup
    i32 21, label %cleanup
    i32 7, label %cleanup
    i32 19, label %cleanup
    i32 20, label %cleanup
    i32 8, label %cleanup
    i32 9, label %cleanup
    i32 10, label %cleanup
  ]

sw.bb:                                            ; preds = %if.end2
  %storage_as = getelementptr inbounds %struct.obj, ptr %ptr.addr.040, i64 0, i32 2
  %2 = load ptr, ptr %storage_as, align 8, !tbaa !9
  tail call void @gc_mark(ptr noundef %2)
  %cdr = getelementptr inbounds %struct.obj, ptr %ptr.addr.040, i64 0, i32 2, i32 0, i32 1
  br label %gc_mark_loop.backedge

gc_mark_loop.backedge:                            ; preds = %sw.bb, %sw.bb5, %sw.bb7
  %ptr.addr.0.be.in = phi ptr [ %storage_as8, %sw.bb7 ], [ %vcell, %sw.bb5 ], [ %cdr, %sw.bb ]
  %ptr.addr.0.be = load ptr, ptr %ptr.addr.0.be.in, align 8, !tbaa !9
  %cmp = icmp eq ptr %ptr.addr.0.be, null
  br i1 %cmp, label %cleanup, label %if.end

sw.bb5:                                           ; preds = %if.end2
  %vcell = getelementptr inbounds %struct.obj, ptr %ptr.addr.040, i64 0, i32 2, i32 0, i32 1
  br label %gc_mark_loop.backedge

sw.bb7:                                           ; preds = %if.end2
  %storage_as8 = getelementptr inbounds %struct.obj, ptr %ptr.addr.040, i64 0, i32 2
  %code = getelementptr inbounds %struct.obj, ptr %ptr.addr.040, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %code, align 8, !tbaa !9
  tail call void @gc_mark(ptr noundef %3)
  br label %gc_mark_loop.backedge

cond.end:                                         ; preds = %if.end2
  %conv15 = sext i16 %1 to i64
  %4 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %4, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end
  %calloc = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i35 = icmp eq ptr %calloc, null
  br i1 %cmp.i35, label %if.then.i36, label %must_malloc.exit

if.then.i36:                                      ; preds = %if.then.i
  %call1.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %if.then.i, %if.then.i36
  store ptr %calloc, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit, %cond.end
  %5 = phi ptr [ %calloc, %must_malloc.exit ], [ %4, %cond.end ]
  %or.cond.i = icmp ult i16 %1, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %gc_mark16 = getelementptr inbounds %struct.user_type_hooks, ptr %5, i64 %conv15, i32 2
  %6 = load ptr, ptr %gc_mark16, align 8, !tbaa !73
  %tobool17.not = icmp eq ptr %6, null
  br i1 %tobool17.not, label %cleanup, label %if.then18

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then18:                                        ; preds = %if.then3.i
  %call20 = tail call ptr %6(ptr noundef nonnull %ptr.addr.040) #33
  br label %cleanup

cleanup:                                          ; preds = %gc_mark_loop.backedge, %if.end, %if.end2, %if.end2, %if.end2, %if.end2, %if.end2, %if.end2, %if.end2, %if.end2, %if.end2, %if.end2, %if.end2, %entry, %if.then18, %if.then3.i
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_locations_array(ptr nocapture noundef readonly %x, i64 noundef %n) local_unnamed_addr #6 {
entry:
  %cmp5 = icmp sgt i64 %n, 0
  %0 = load i64, ptr @nheaps, align 8
  %1 = icmp sgt i64 %0, 0
  %or.cond = select i1 %cmp5, i1 %1, i1 false
  br i1 %or.cond, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %2 = phi i64 [ %8, %for.inc ], [ %0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds ptr, ptr %x, i64 %indvars.iv
  %3 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %type.i = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %cmp21.i = icmp sgt i64 %2, 0
  br i1 %cmp21.i, label %for.body.lr.ph.i, label %for.inc

for.body.lr.ph.i:                                 ; preds = %for.body
  %4 = load ptr, ptr @heaps, align 8, !tbaa !5
  %5 = load i64, ptr @heap_size, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %3 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %j.022.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %4, i64 %j.022.i
  %6 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %tobool.not.i = icmp ne ptr %6, null
  %cmp1.not.i = icmp ule ptr %6, %3
  %or.cond.not25.i = and i1 %tobool.not.i, %cmp1.not.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %6, i64 %5
  %cmp3.i = icmp ugt ptr %add.ptr.i, %3
  %or.cond24.i = select i1 %or.cond.not25.i, i1 %cmp3.i, i1 false
  br i1 %or.cond24.i, label %land.lhs.true4.i, label %for.inc.i

land.lhs.true4.i:                                 ; preds = %for.body.i
  %sub.ptr.rhs.cast.i = ptrtoint ptr %6 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %rem.i = urem i64 %sub.ptr.sub.i, 24
  %cmp5.i = icmp eq i64 %rem.i, 0
  br i1 %cmp5.i, label %land.lhs.true6.i, label %for.inc.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true4.i
  %7 = load i16, ptr %type.i, align 2, !tbaa !14
  %cmp8.not.i = icmp eq i16 %7, 12
  br i1 %cmp8.not.i, label %for.inc.i, label %if.then

for.inc.i:                                        ; preds = %land.lhs.true6.i, %land.lhs.true4.i, %for.body.i
  %inc.i = add nuw nsw i64 %j.022.i, 1
  %exitcond.not.i = icmp eq i64 %inc.i, %2
  br i1 %exitcond.not.i, label %for.inc, label %for.body.i, !llvm.loop !78

if.then:                                          ; preds = %land.lhs.true6.i
  tail call void @gc_mark(ptr noundef nonnull %3)
  %.pre = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %for.inc

for.inc:                                          ; preds = %for.inc.i, %for.body, %if.then
  %8 = phi i64 [ %2, %for.body ], [ %.pre, %if.then ], [ %2, %for.inc.i ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %n
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !86

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @looks_pointerp(ptr noundef %p) local_unnamed_addr #22 {
entry:
  %type = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %0 = load i64, ptr @nheaps, align 8, !tbaa !10
  %cmp21 = icmp sgt i64 %0, 0
  br i1 %cmp21, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %1 = load ptr, ptr @heaps, align 8, !tbaa !5
  %2 = load i64, ptr @heap_size, align 8
  %sub.ptr.lhs.cast = ptrtoint ptr %p to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %j.022 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %arrayidx = getelementptr inbounds ptr, ptr %1, i64 %j.022
  %3 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %tobool.not = icmp ne ptr %3, null
  %cmp1.not = icmp ule ptr %3, %p
  %or.cond.not25 = and i1 %tobool.not, %cmp1.not
  %add.ptr = getelementptr inbounds %struct.obj, ptr %3, i64 %2
  %cmp3 = icmp ugt ptr %add.ptr, %p
  %or.cond24 = select i1 %or.cond.not25, i1 %cmp3, i1 false
  br i1 %or.cond24, label %land.lhs.true4, label %for.inc

land.lhs.true4:                                   ; preds = %for.body
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %rem = urem i64 %sub.ptr.sub, 24
  %cmp5 = icmp eq i64 %rem, 0
  br i1 %cmp5, label %land.lhs.true6, label %for.inc

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %4 = load i16, ptr %type, align 2, !tbaa !14
  %cmp8.not = icmp eq i16 %4, 12
  br i1 %cmp8.not, label %for.inc, label %cleanup

for.inc:                                          ; preds = %for.body, %land.lhs.true4, %land.lhs.true6
  %inc = add nuw nsw i64 %j.022, 1
  %exitcond.not = icmp eq i64 %inc, %0
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !78

cleanup:                                          ; preds = %land.lhs.true6, %for.inc, %entry
  %retval.0 = phi i64 [ 0, %entry ], [ 0, %for.inc ], [ 1, %land.lhs.true6 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @user_gc(ptr noundef %args) #6 {
entry:
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 1
  br i1 %cmp.i, label %if.then.i, label %gc_kind_check.exit

if.then.i:                                        ; preds = %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.77, ptr noundef null)
  br label %gc_kind_check.exit

gc_kind_check.exit:                               ; preds = %entry, %if.then.i
  %1 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  store i64 0, ptr @errjmp_ok, align 8, !tbaa !10
  %2 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %cmp.not = icmp eq ptr %args, null
  br i1 %cmp.not, label %if.end4, label %cond.end.i

cond.end.i:                                       ; preds = %gc_kind_check.exit
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %3 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %3 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %if.end4.sink.split
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %4 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %5 = icmp ne ptr %4, null
  %spec.select = zext i1 %5 to i64
  br label %if.end4.sink.split

sw.default.i:                                     ; preds = %cond.end.i
  %call.i8 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  br label %if.end4.sink.split

if.end4.sink.split:                               ; preds = %sw.bb1.i, %cond.end.i, %sw.default.i
  %.sink = phi i64 [ 0, %sw.default.i ], [ 0, %cond.end.i ], [ %spec.select, %sw.bb1.i ]
  store i64 %.sink, ptr @gc_status_flag, align 8, !tbaa !10
  br label %if.end4

if.end4:                                          ; preds = %if.end4.sink.split, %gc_kind_check.exit
  tail call void @gc_mark_and_sweep()
  store i64 %2, ptr @gc_status_flag, align 8, !tbaa !10
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 %1, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i9 = icmp eq i64 %1, 0
  %6 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i10 = icmp eq i64 %6, 1
  %or.cond.i = select i1 %cmp.i9, i1 %cmp1.i10, i1 false
  br i1 %or.cond.i, label %if.then.i11, label %no_interrupt.exit

if.then.i11:                                      ; preds = %if.end4
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %if.end4, %if.then.i11
  ret ptr null
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @nactive_heaps() local_unnamed_addr #22 {
entry:
  %0 = load i64, ptr @nheaps, align 8, !tbaa !10
  %cmp4 = icmp sgt i64 %0, 0
  br i1 %cmp4, label %land.rhs.lr.ph, label %for.end

land.rhs.lr.ph:                                   ; preds = %entry
  %1 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.inc
  %m.05 = phi i64 [ 0, %land.rhs.lr.ph ], [ %inc, %for.inc ]
  %arrayidx = getelementptr inbounds ptr, ptr %1, i64 %m.05
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %inc = add nuw nsw i64 %m.05, 1
  %exitcond.not = icmp eq i64 %inc, %0
  br i1 %exitcond.not, label %for.end, label %land.rhs, !llvm.loop !87

for.end:                                          ; preds = %land.rhs, %for.inc, %entry
  %m.0.lcssa = phi i64 [ 0, %entry ], [ %0, %for.inc ], [ %m.05, %land.rhs ]
  ret i64 %m.0.lcssa
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @freelist_length() local_unnamed_addr #22 {
entry:
  %l.04 = load ptr, ptr @freelist, align 8, !tbaa !9
  %cmp.not5 = icmp eq ptr %l.04, null
  br i1 %cmp.not5, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %l.07 = phi ptr [ %l.0, %for.body ], [ %l.04, %entry ]
  %n.06 = phi i64 [ %inc, %for.body ], [ 0, %entry ]
  %cdr = getelementptr inbounds %struct.obj, ptr %l.07, i64 0, i32 2, i32 0, i32 1
  %inc = add nuw nsw i64 %n.06, 1
  %l.0 = load ptr, ptr %cdr, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %l.0, null
  br i1 %cmp.not, label %for.end, label %for.body, !llvm.loop !88

for.end:                                          ; preds = %for.body, %entry
  %n.0.lcssa = phi i64 [ 0, %entry ], [ %inc, %for.body ]
  %0 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24
  %add = add nsw i64 %sub.ptr.div, %n.0.lcssa
  ret i64 %add
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @gc_status(ptr noundef %args) #6 {
entry:
  %cmp.not = icmp eq ptr %args, null
  br i1 %cmp.not, label %if.end3, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %if.end3.sink.split
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %2 = icmp ne ptr %1, null
  %spec.select = zext i1 %2 to i64
  br label %if.end3.sink.split

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  br label %if.end3.sink.split

if.end3.sink.split:                               ; preds = %sw.bb1.i, %cond.end.i, %sw.default.i
  %.sink = phi i64 [ 0, %sw.default.i ], [ 0, %cond.end.i ], [ %spec.select, %sw.bb1.i ]
  store i64 %.sink, ptr @gc_status_flag, align 8, !tbaa !10
  br label %if.end3

if.end3:                                          ; preds = %if.end3.sink.split, %entry
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp4 = icmp eq i64 %3, 1
  %4 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %tobool.not = icmp eq i64 %4, 0
  %5 = load ptr, ptr @stdout, align 8, !tbaa !5
  %6 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i27 = icmp eq i64 %6, 0
  br i1 %cmp4, label %if.then5, label %if.else14

if.then5:                                         ; preds = %if.end3
  br i1 %tobool.not, label %if.else7, label %if.then6

if.then6:                                         ; preds = %if.then5
  %7 = tail call i64 @fwrite(ptr nonnull @.str.78, i64 25, i64 1, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %8 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i = icmp eq i64 %8, 1
  %or.cond.i.i.i = select i1 %cmp.i.i.i27, i1 %cmp1.i3.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.end8.sink.split, label %if.end8

if.else7:                                         ; preds = %if.then5
  %9 = tail call i64 @fwrite(ptr nonnull @.str.79, i64 26, i64 1, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %10 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i28 = icmp eq i64 %10, 1
  %or.cond.i.i.i29 = select i1 %cmp.i.i.i27, i1 %cmp1.i3.i.i28, i1 false
  br i1 %or.cond.i.i.i29, label %if.end8.sink.split, label %if.end8

if.end8.sink.split:                               ; preds = %if.else7, %if.then6
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i30 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end8

if.end8:                                          ; preds = %if.end8.sink.split, %if.else7, %if.then6
  %11 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %12 = load ptr, ptr @heap, align 8, !tbaa !5
  %13 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint ptr %12 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %13 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24
  %14 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %sub.ptr.lhs.cast9 = ptrtoint ptr %14 to i64
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.lhs.cast
  %sub.ptr.div12 = sdiv exact i64 %sub.ptr.sub11, 24
  %call13 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %11, ptr noundef nonnull dereferenceable(1) @.str.80, i64 noundef %sub.ptr.div, i64 noundef %sub.ptr.div12) #33
  %15 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %16 = load ptr, ptr @stdout, align 8, !tbaa !5
  %17 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i33 = tail call i32 @fputs(ptr %15, ptr %16)
  store i64 %17, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i34 = icmp eq i64 %17, 0
  %18 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i35 = icmp eq i64 %18, 1
  %or.cond.i.i.i36 = select i1 %cmp.i.i.i34, i1 %cmp1.i3.i.i35, i1 false
  br i1 %or.cond.i.i.i36, label %if.end22.sink.split, label %if.end22

if.else14:                                        ; preds = %if.end3
  br i1 %tobool.not, label %if.else17, label %if.then16

if.then16:                                        ; preds = %if.else14
  %19 = tail call i64 @fwrite(ptr nonnull @.str.81, i64 27, i64 1, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %20 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i42 = icmp eq i64 %20, 1
  %or.cond.i.i.i43 = select i1 %cmp.i.i.i27, i1 %cmp1.i3.i.i42, i1 false
  br i1 %or.cond.i.i.i43, label %if.end18.sink.split, label %if.end18

if.else17:                                        ; preds = %if.else14
  %21 = tail call i64 @fwrite(ptr nonnull @.str.82, i64 26, i64 1, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %22 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i49 = icmp eq i64 %22, 1
  %or.cond.i.i.i50 = select i1 %cmp.i.i.i27, i1 %cmp1.i3.i.i49, i1 false
  br i1 %or.cond.i.i.i50, label %if.end18.sink.split, label %if.end18

if.end18.sink.split:                              ; preds = %if.else17, %if.then16
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i51 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end18

if.end18:                                         ; preds = %if.end18.sink.split, %if.else17, %if.then16
  %23 = load i64, ptr @nheaps, align 8, !tbaa !10
  %cmp4.i = icmp sgt i64 %23, 0
  br i1 %cmp4.i, label %land.rhs.lr.ph.i, label %nactive_heaps.exit

land.rhs.lr.ph.i:                                 ; preds = %if.end18
  %24 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.inc.i, %land.rhs.lr.ph.i
  %m.05.i = phi i64 [ 0, %land.rhs.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %24, i64 %m.05.i
  %25 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %tobool.not.i = icmp eq ptr %25, null
  br i1 %tobool.not.i, label %nactive_heaps.exit, label %for.inc.i

for.inc.i:                                        ; preds = %land.rhs.i
  %inc.i = add nuw nsw i64 %m.05.i, 1
  %exitcond.not.i = icmp eq i64 %inc.i, %23
  br i1 %exitcond.not.i, label %nactive_heaps.exit, label %land.rhs.i, !llvm.loop !87

nactive_heaps.exit:                               ; preds = %land.rhs.i, %for.inc.i, %if.end18
  %m.0.lcssa.i = phi i64 [ 0, %if.end18 ], [ %m.05.i, %land.rhs.i ], [ %23, %for.inc.i ]
  %l.04.i = load ptr, ptr @freelist, align 8, !tbaa !9
  %cmp.not5.i = icmp eq ptr %l.04.i, null
  br i1 %cmp.not5.i, label %freelist_length.exit, label %for.body.i

for.body.i:                                       ; preds = %nactive_heaps.exit, %for.body.i
  %l.07.i = phi ptr [ %l.0.i, %for.body.i ], [ %l.04.i, %nactive_heaps.exit ]
  %n.06.i = phi i64 [ %inc.i54, %for.body.i ], [ 0, %nactive_heaps.exit ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %l.07.i, i64 0, i32 2, i32 0, i32 1
  %inc.i54 = add nuw nsw i64 %n.06.i, 1
  %l.0.i = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.not.i = icmp eq ptr %l.0.i, null
  br i1 %cmp.not.i, label %freelist_length.exit, label %for.body.i, !llvm.loop !88

freelist_length.exit:                             ; preds = %for.body.i, %nactive_heaps.exit
  %n.0.lcssa.i = phi i64 [ 0, %nactive_heaps.exit ], [ %inc.i54, %for.body.i ]
  %26 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %27 = load ptr, ptr @heap, align 8, !tbaa !5
  %sub.ptr.lhs.cast.i = ptrtoint ptr %26 to i64
  %sub.ptr.rhs.cast.i = ptrtoint ptr %27 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 24
  %add.i = add nsw i64 %sub.ptr.div.i, %n.0.lcssa.i
  %28 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %29 = load i64, ptr @heap_size, align 8, !tbaa !10
  %mul = mul nsw i64 %29, %m.0.lcssa.i
  %sub = sub nsw i64 %mul, %add.i
  %call21 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %28, ptr noundef nonnull dereferenceable(1) @.str.83, i64 noundef %m.0.lcssa.i, i64 noundef %23, i64 noundef %sub, i64 noundef %add.i) #33
  %30 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %31 = load ptr, ptr @stdout, align 8, !tbaa !5
  %32 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i55 = tail call i32 @fputs(ptr %30, ptr %31)
  store i64 %32, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i56 = icmp eq i64 %32, 0
  %33 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i57 = icmp eq i64 %33, 1
  %or.cond.i.i.i58 = select i1 %cmp.i.i.i56, i1 %cmp1.i3.i.i57, i1 false
  br i1 %or.cond.i.i.i58, label %if.end22.sink.split, label %if.end22

if.end22.sink.split:                              ; preds = %freelist_length.exit, %if.end8
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i59 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end22

if.end22:                                         ; preds = %if.end22.sink.split, %freelist_length.exit, %if.end8
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @gc_info(ptr noundef %arg) #6 {
entry:
  %call = tail call i64 @get_c_long(ptr noundef %arg) #33
  switch i64 %call, label %return [
    i64 0, label %sw.bb
    i64 1, label %sw.bb1
    i64 2, label %sw.bb4
    i64 3, label %sw.bb7
    i64 4, label %sw.bb10
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp = icmp eq i64 %0, 1
  %1 = load ptr, ptr @sym_t, align 8
  %cond = select i1 %cmp, ptr %1, ptr null
  br label %return

sw.bb1:                                           ; preds = %entry
  %2 = load i64, ptr @nheaps, align 8, !tbaa !10
  %cmp4.i = icmp sgt i64 %2, 0
  br i1 %cmp4.i, label %land.rhs.lr.ph.i, label %nactive_heaps.exit

land.rhs.lr.ph.i:                                 ; preds = %sw.bb1
  %3 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.inc.i, %land.rhs.lr.ph.i
  %m.05.i = phi i64 [ 0, %land.rhs.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %3, i64 %m.05.i
  %4 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %nactive_heaps.exit, label %for.inc.i

for.inc.i:                                        ; preds = %land.rhs.i
  %inc.i = add nuw nsw i64 %m.05.i, 1
  %exitcond.not.i = icmp eq i64 %inc.i, %2
  br i1 %exitcond.not.i, label %nactive_heaps.exit, label %land.rhs.i, !llvm.loop !87

nactive_heaps.exit:                               ; preds = %land.rhs.i, %for.inc.i, %sw.bb1
  %m.0.lcssa.i = phi i64 [ 0, %sw.bb1 ], [ %m.05.i, %land.rhs.i ], [ %2, %for.inc.i ]
  %conv = sitofp i64 %m.0.lcssa.i to double
  %5 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %5, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %nactive_heaps.exit
  %conv.i = fptosi double %conv to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %conv, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = icmp sgt i64 %m.0.lcssa.i, -1
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %5, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %6 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i20 = getelementptr inbounds ptr, ptr %6, i64 %conv.i
  %7 = load ptr, ptr %arrayidx.i20, align 8, !tbaa !5
  br label %return

if.end.i:                                         ; preds = %land.lhs.true.i, %nactive_heaps.exit
  %8 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %8, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %9 = load ptr, ptr @heap, align 8, !tbaa !5
  %10 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %9, %10
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %9, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %11 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %11, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %12 = phi ptr [ %.pre.i, %if.then19.i ], [ %11, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2, i32 0, i32 1
  %13 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %13, ptr @freelist, align 8, !tbaa !5
  %14 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i21 = add nsw i64 %14, 1
  store i64 %inc.i21, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %9, %if.end16.i ], [ %12, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %conv, ptr %storage_as22.i, align 8, !tbaa !9
  br label %return

sw.bb4:                                           ; preds = %entry
  %15 = load i64, ptr @nheaps, align 8, !tbaa !10
  %conv5 = sitofp i64 %15 to double
  %16 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i22 = icmp sgt i64 %16, 0
  br i1 %cmp.i22, label %land.lhs.true.i31, label %if.end.i35

land.lhs.true.i31:                                ; preds = %sw.bb4
  %conv.i23 = fptosi double %conv5 to i64
  %conv1.i24 = sitofp i64 %conv.i23 to double
  %sub.i25 = fsub double %conv5, %conv1.i24
  %cmp2.i26 = fcmp oeq double %sub.i25, 0.000000e+00
  %cmp5.i27 = icmp sgt i64 %15, -1
  %or.cond.i28 = and i1 %cmp5.i27, %cmp2.i26
  %cmp8.i29 = icmp sgt i64 %16, %conv.i23
  %or.cond32.i30 = and i1 %cmp8.i29, %or.cond.i28
  br i1 %or.cond32.i30, label %if.then.i33, label %if.end.i35

if.then.i33:                                      ; preds = %land.lhs.true.i31
  %17 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i32 = getelementptr inbounds ptr, ptr %17, i64 %conv.i23
  %18 = load ptr, ptr %arrayidx.i32, align 8, !tbaa !5
  br label %return

if.end.i35:                                       ; preds = %land.lhs.true.i31, %sw.bb4
  %19 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i34 = icmp eq i64 %19, 1
  br i1 %cmp10.i34, label %if.then12.i37, label %if.else.i43

if.then12.i37:                                    ; preds = %if.end.i35
  %20 = load ptr, ptr @heap, align 8, !tbaa !5
  %21 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i36 = icmp ult ptr %20, %21
  br i1 %cmp13.not.i36, label %if.end16.i41, label %if.then15.i39

if.then15.i39:                                    ; preds = %if.then12.i37
  %call.i.i38 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i41

if.end16.i41:                                     ; preds = %if.then15.i39, %if.then12.i37
  %add.ptr.i40 = getelementptr inbounds %struct.obj, ptr %20, i64 1
  store ptr %add.ptr.i40, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i52

if.else.i43:                                      ; preds = %if.end.i35
  %22 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i42 = icmp eq ptr %22, null
  br i1 %cmp17.i42, label %if.then19.i45, label %if.end20.i48

if.then19.i45:                                    ; preds = %if.else.i43
  tail call void @gc_for_newcell()
  %.pre.i44 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i48

if.end20.i48:                                     ; preds = %if.then19.i45, %if.else.i43
  %23 = phi ptr [ %.pre.i44, %if.then19.i45 ], [ %22, %if.else.i43 ]
  %cdr.i46 = getelementptr inbounds %struct.obj, ptr %23, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %cdr.i46, align 8, !tbaa !9
  store ptr %24, ptr @freelist, align 8, !tbaa !5
  %25 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i47 = add nsw i64 %25, 1
  store i64 %inc.i47, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i52

if.end21.i52:                                     ; preds = %if.end20.i48, %if.end16.i41
  %z.0.i49 = phi ptr [ %20, %if.end16.i41 ], [ %23, %if.end20.i48 ]
  store i16 0, ptr %z.0.i49, align 8, !tbaa !35
  %type.i50 = getelementptr inbounds %struct.obj, ptr %z.0.i49, i64 0, i32 1
  store i16 2, ptr %type.i50, align 2, !tbaa !14
  %storage_as22.i51 = getelementptr inbounds %struct.obj, ptr %z.0.i49, i64 0, i32 2
  store double %conv5, ptr %storage_as22.i51, align 8, !tbaa !9
  br label %return

sw.bb7:                                           ; preds = %entry
  %26 = load i64, ptr @heap_size, align 8, !tbaa !10
  %conv8 = sitofp i64 %26 to double
  %27 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i55 = icmp sgt i64 %27, 0
  br i1 %cmp.i55, label %land.lhs.true.i64, label %if.end.i68

land.lhs.true.i64:                                ; preds = %sw.bb7
  %conv.i56 = fptosi double %conv8 to i64
  %conv1.i57 = sitofp i64 %conv.i56 to double
  %sub.i58 = fsub double %conv8, %conv1.i57
  %cmp2.i59 = fcmp oeq double %sub.i58, 0.000000e+00
  %cmp5.i60 = icmp sgt i64 %26, -1
  %or.cond.i61 = and i1 %cmp5.i60, %cmp2.i59
  %cmp8.i62 = icmp sgt i64 %27, %conv.i56
  %or.cond32.i63 = and i1 %cmp8.i62, %or.cond.i61
  br i1 %or.cond32.i63, label %if.then.i66, label %if.end.i68

if.then.i66:                                      ; preds = %land.lhs.true.i64
  %28 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i65 = getelementptr inbounds ptr, ptr %28, i64 %conv.i56
  %29 = load ptr, ptr %arrayidx.i65, align 8, !tbaa !5
  br label %return

if.end.i68:                                       ; preds = %land.lhs.true.i64, %sw.bb7
  %30 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i67 = icmp eq i64 %30, 1
  br i1 %cmp10.i67, label %if.then12.i70, label %if.else.i76

if.then12.i70:                                    ; preds = %if.end.i68
  %31 = load ptr, ptr @heap, align 8, !tbaa !5
  %32 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i69 = icmp ult ptr %31, %32
  br i1 %cmp13.not.i69, label %if.end16.i74, label %if.then15.i72

if.then15.i72:                                    ; preds = %if.then12.i70
  %call.i.i71 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i74

if.end16.i74:                                     ; preds = %if.then15.i72, %if.then12.i70
  %add.ptr.i73 = getelementptr inbounds %struct.obj, ptr %31, i64 1
  store ptr %add.ptr.i73, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i85

if.else.i76:                                      ; preds = %if.end.i68
  %33 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i75 = icmp eq ptr %33, null
  br i1 %cmp17.i75, label %if.then19.i78, label %if.end20.i81

if.then19.i78:                                    ; preds = %if.else.i76
  tail call void @gc_for_newcell()
  %.pre.i77 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i81

if.end20.i81:                                     ; preds = %if.then19.i78, %if.else.i76
  %34 = phi ptr [ %.pre.i77, %if.then19.i78 ], [ %33, %if.else.i76 ]
  %cdr.i79 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 2, i32 0, i32 1
  %35 = load ptr, ptr %cdr.i79, align 8, !tbaa !9
  store ptr %35, ptr @freelist, align 8, !tbaa !5
  %36 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i80 = add nsw i64 %36, 1
  store i64 %inc.i80, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i85

if.end21.i85:                                     ; preds = %if.end20.i81, %if.end16.i74
  %z.0.i82 = phi ptr [ %31, %if.end16.i74 ], [ %34, %if.end20.i81 ]
  store i16 0, ptr %z.0.i82, align 8, !tbaa !35
  %type.i83 = getelementptr inbounds %struct.obj, ptr %z.0.i82, i64 0, i32 1
  store i16 2, ptr %type.i83, align 2, !tbaa !14
  %storage_as22.i84 = getelementptr inbounds %struct.obj, ptr %z.0.i82, i64 0, i32 2
  store double %conv8, ptr %storage_as22.i84, align 8, !tbaa !9
  br label %return

sw.bb10:                                          ; preds = %entry
  %37 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp11 = icmp eq i64 %37, 1
  br i1 %cmp11, label %cond.true13, label %cond.false14

cond.true13:                                      ; preds = %sw.bb10
  %38 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %39 = load ptr, ptr @heap, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint ptr %38 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %39 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24
  br label %cond.end16

cond.false14:                                     ; preds = %sw.bb10
  %l.04.i = load ptr, ptr @freelist, align 8, !tbaa !9
  %cmp.not5.i = icmp eq ptr %l.04.i, null
  br i1 %cmp.not5.i, label %freelist_length.exit, label %for.body.i

for.body.i:                                       ; preds = %cond.false14, %for.body.i
  %l.07.i = phi ptr [ %l.0.i, %for.body.i ], [ %l.04.i, %cond.false14 ]
  %n.06.i = phi i64 [ %inc.i89, %for.body.i ], [ 0, %cond.false14 ]
  %cdr.i88 = getelementptr inbounds %struct.obj, ptr %l.07.i, i64 0, i32 2, i32 0, i32 1
  %inc.i89 = add nuw nsw i64 %n.06.i, 1
  %l.0.i = load ptr, ptr %cdr.i88, align 8, !tbaa !9
  %cmp.not.i = icmp eq ptr %l.0.i, null
  br i1 %cmp.not.i, label %freelist_length.exit, label %for.body.i, !llvm.loop !88

freelist_length.exit:                             ; preds = %for.body.i, %cond.false14
  %n.0.lcssa.i = phi i64 [ 0, %cond.false14 ], [ %inc.i89, %for.body.i ]
  %40 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %41 = load ptr, ptr @heap, align 8, !tbaa !5
  %sub.ptr.lhs.cast.i = ptrtoint ptr %40 to i64
  %sub.ptr.rhs.cast.i = ptrtoint ptr %41 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 24
  %add.i = add nsw i64 %sub.ptr.div.i, %n.0.lcssa.i
  br label %cond.end16

cond.end16:                                       ; preds = %freelist_length.exit, %cond.true13
  %42 = phi ptr [ %38, %cond.true13 ], [ %40, %freelist_length.exit ]
  %43 = phi ptr [ %39, %cond.true13 ], [ %41, %freelist_length.exit ]
  %cond17 = phi i64 [ %sub.ptr.div, %cond.true13 ], [ %add.i, %freelist_length.exit ]
  %conv18 = sitofp i64 %cond17 to double
  %44 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i90 = icmp sgt i64 %44, 0
  br i1 %cmp.i90, label %land.lhs.true.i99, label %if.end.i103

land.lhs.true.i99:                                ; preds = %cond.end16
  %conv.i91 = fptosi double %conv18 to i64
  %conv1.i92 = sitofp i64 %conv.i91 to double
  %sub.i93 = fsub double %conv18, %conv1.i92
  %cmp2.i94 = fcmp oeq double %sub.i93, 0.000000e+00
  %cmp5.i95 = icmp sgt i64 %cond17, -1
  %or.cond.i96 = and i1 %cmp5.i95, %cmp2.i94
  %cmp8.i97 = icmp sgt i64 %44, %conv.i91
  %or.cond32.i98 = and i1 %cmp8.i97, %or.cond.i96
  br i1 %or.cond32.i98, label %if.then.i101, label %if.end.i103

if.then.i101:                                     ; preds = %land.lhs.true.i99
  %45 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i100 = getelementptr inbounds ptr, ptr %45, i64 %conv.i91
  %46 = load ptr, ptr %arrayidx.i100, align 8, !tbaa !5
  br label %return

if.end.i103:                                      ; preds = %land.lhs.true.i99, %cond.end16
  br i1 %cmp11, label %if.then12.i105, label %if.else.i111

if.then12.i105:                                   ; preds = %if.end.i103
  %cmp13.not.i104 = icmp ult ptr %43, %42
  br i1 %cmp13.not.i104, label %if.end16.i109, label %if.then15.i107

if.then15.i107:                                   ; preds = %if.then12.i105
  %call.i.i106 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i109

if.end16.i109:                                    ; preds = %if.then15.i107, %if.then12.i105
  %add.ptr.i108 = getelementptr inbounds %struct.obj, ptr %43, i64 1
  store ptr %add.ptr.i108, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i120

if.else.i111:                                     ; preds = %if.end.i103
  %47 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i110 = icmp eq ptr %47, null
  br i1 %cmp17.i110, label %if.then19.i113, label %if.end20.i116

if.then19.i113:                                   ; preds = %if.else.i111
  tail call void @gc_for_newcell()
  %.pre.i112 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i116

if.end20.i116:                                    ; preds = %if.then19.i113, %if.else.i111
  %48 = phi ptr [ %.pre.i112, %if.then19.i113 ], [ %47, %if.else.i111 ]
  %cdr.i114 = getelementptr inbounds %struct.obj, ptr %48, i64 0, i32 2, i32 0, i32 1
  %49 = load ptr, ptr %cdr.i114, align 8, !tbaa !9
  store ptr %49, ptr @freelist, align 8, !tbaa !5
  %50 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i115 = add nsw i64 %50, 1
  store i64 %inc.i115, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i120

if.end21.i120:                                    ; preds = %if.end20.i116, %if.end16.i109
  %z.0.i117 = phi ptr [ %43, %if.end16.i109 ], [ %48, %if.end20.i116 ]
  store i16 0, ptr %z.0.i117, align 8, !tbaa !35
  %type.i118 = getelementptr inbounds %struct.obj, ptr %z.0.i117, i64 0, i32 1
  store i16 2, ptr %type.i118, align 2, !tbaa !14
  %storage_as22.i119 = getelementptr inbounds %struct.obj, ptr %z.0.i117, i64 0, i32 2
  store double %conv18, ptr %storage_as22.i119, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %entry, %if.end21.i120, %if.then.i101, %if.end21.i85, %if.then.i66, %if.end21.i52, %if.then.i33, %if.end21.i, %if.then.i, %sw.bb
  %retval.0 = phi ptr [ %cond, %sw.bb ], [ %7, %if.then.i ], [ %z.0.i, %if.end21.i ], [ %18, %if.then.i33 ], [ %z.0.i49, %if.end21.i52 ], [ %29, %if.then.i66 ], [ %z.0.i82, %if.end21.i85 ], [ %46, %if.then.i101 ], [ %z.0.i117, %if.end21.i120 ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_args(ptr noundef %l, ptr noundef %env) local_unnamed_addr #6 {
entry:
  %cmp = icmp eq ptr %l, null
  br i1 %cmp, label %cleanup, label %cond.end

cond.end:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp2.not = icmp eq i16 %0, 1
  br i1 %cmp2.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %cond.end
  %call = tail call ptr @err(ptr noundef nonnull @.str.84, ptr noundef nonnull %l)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %call6 = tail call ptr @leval(ptr noundef %1, ptr noundef %env)
  %2 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %2, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end5
  %3 = load ptr, ptr @heap, align 8, !tbaa !5
  %4 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i.not = icmp ult ptr %3, %4
  br i1 %cmp1.i.not, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %3, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %if.end5
  %5 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %5, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %6 = phi ptr [ %.pre, %if.then4.i ], [ %5, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2, i32 0, i32 1
  %7 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %7, ptr @freelist, align 8, !tbaa !5
  %8 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %8, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %3, %if.end.i ], [ %6, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %call6, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  %v2.0.in70 = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 2, i32 0, i32 1
  %v2.071 = load ptr, ptr %v2.0.in70, align 8, !tbaa !9
  %cmp972 = icmp eq ptr %v2.071, null
  br i1 %cmp972, label %cleanup, label %cond.end15

cond.end15:                                       ; preds = %cons.exit, %cons.exit66
  %v2.074 = phi ptr [ %v2.0, %cons.exit66 ], [ %v2.071, %cons.exit ]
  %v1.073 = phi ptr [ %z.0.i62, %cons.exit66 ], [ %z.0.i, %cons.exit ]
  %type13 = getelementptr inbounds %struct.obj, ptr %v2.074, i64 0, i32 1
  %9 = load i16, ptr %type13, align 2, !tbaa !14
  %cmp17 = icmp eq i16 %9, 1
  br i1 %cmp17, label %for.body, label %if.then29

for.body:                                         ; preds = %cond.end15
  %storage_as19 = getelementptr inbounds %struct.obj, ptr %v2.074, i64 0, i32 2
  %10 = load ptr, ptr %storage_as19, align 8, !tbaa !9
  %call21 = tail call ptr @leval(ptr noundef %10, ptr noundef %env)
  %11 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i48 = icmp eq i64 %11, 1
  br i1 %cmp.i48, label %if.then.i50, label %if.else.i56

if.then.i50:                                      ; preds = %for.body
  %12 = load ptr, ptr @heap, align 8, !tbaa !5
  %13 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.i49.not = icmp ult ptr %12, %13
  br i1 %cmp1.i49.not, label %if.end.i54, label %if.then2.i52

if.then2.i52:                                     ; preds = %if.then.i50
  %call.i.i51 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i54

if.end.i54:                                       ; preds = %if.then2.i52, %if.then.i50
  %add.ptr.i53 = getelementptr inbounds %struct.obj, ptr %12, i64 1
  store ptr %add.ptr.i53, ptr @heap, align 8, !tbaa !5
  br label %cons.exit66

if.else.i56:                                      ; preds = %for.body
  %14 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i55 = icmp eq ptr %14, null
  br i1 %cmp3.i55, label %if.then4.i57, label %if.end5.i61

if.then4.i57:                                     ; preds = %if.else.i56
  tail call void @gc_for_newcell()
  %.pre75 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i61

if.end5.i61:                                      ; preds = %if.then4.i57, %if.else.i56
  %15 = phi ptr [ %.pre75, %if.then4.i57 ], [ %14, %if.else.i56 ]
  %cdr.i59 = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 2, i32 0, i32 1
  %16 = load ptr, ptr %cdr.i59, align 8, !tbaa !9
  store ptr %16, ptr @freelist, align 8, !tbaa !5
  %17 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i60 = add nsw i64 %17, 1
  store i64 %inc.i60, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit66

cons.exit66:                                      ; preds = %if.end.i54, %if.end5.i61
  %z.0.i62 = phi ptr [ %12, %if.end.i54 ], [ %15, %if.end5.i61 ]
  store i16 0, ptr %z.0.i62, align 8, !tbaa !35
  %type.i63 = getelementptr inbounds %struct.obj, ptr %z.0.i62, i64 0, i32 1
  store i16 1, ptr %type.i63, align 2, !tbaa !14
  %storage_as7.i64 = getelementptr inbounds %struct.obj, ptr %z.0.i62, i64 0, i32 2
  store ptr %call21, ptr %storage_as7.i64, align 8, !tbaa !9
  %cdr9.i65 = getelementptr inbounds %struct.obj, ptr %z.0.i62, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i65, align 8, !tbaa !9
  %cdr24 = getelementptr inbounds %struct.obj, ptr %v1.073, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i62, ptr %cdr24, align 8, !tbaa !9
  %v2.0.in = getelementptr inbounds %struct.obj, ptr %v2.074, i64 0, i32 2, i32 0, i32 1
  %v2.0 = load ptr, ptr %v2.0.in, align 8, !tbaa !9
  %cmp9 = icmp eq ptr %v2.0, null
  br i1 %cmp9, label %cleanup, label %cond.end15, !llvm.loop !89

if.then29:                                        ; preds = %cond.end15
  %call30 = tail call ptr @err(ptr noundef nonnull @.str.84, ptr noundef nonnull %l)
  br label %cleanup

cleanup:                                          ; preds = %cons.exit66, %cons.exit, %if.then29, %entry
  %retval.0 = phi ptr [ null, %entry ], [ %z.0.i, %if.then29 ], [ %z.0.i, %cons.exit ], [ %z.0.i, %cons.exit66 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @extend_env(ptr noundef %actuals, ptr noundef %formals, ptr noundef %env) local_unnamed_addr #6 {
entry:
  %cmp = icmp eq ptr %formals, null
  br i1 %cmp, label %if.end, label %cond.end

cond.end:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %formals, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp1 = icmp eq i16 %0, 3
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %1 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %1, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %2 = load ptr, ptr @heap, align 8, !tbaa !5
  %3 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %2, %3
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %2, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %if.then
  %4 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %4, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %5 = phi ptr [ %.pre.i, %if.then4.i ], [ %4, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %6, ptr @freelist, align 8, !tbaa !5
  %7 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %7, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %2, %if.end.i ], [ %5, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %formals, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  %8 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i13 = icmp eq i64 %8, 1
  br i1 %cmp.i13, label %if.then.i15, label %if.else.i21

if.then.i15:                                      ; preds = %cons.exit
  %9 = load ptr, ptr @heap, align 8, !tbaa !5
  %10 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i14 = icmp ult ptr %9, %10
  br i1 %cmp1.not.i14, label %if.end.i19, label %if.then2.i17

if.then2.i17:                                     ; preds = %if.then.i15
  %call.i.i16 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i19

if.end.i19:                                       ; preds = %if.then2.i17, %if.then.i15
  %add.ptr.i18 = getelementptr inbounds %struct.obj, ptr %9, i64 1
  store ptr %add.ptr.i18, ptr @heap, align 8, !tbaa !5
  br label %cons.exit31

if.else.i21:                                      ; preds = %cons.exit
  %11 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i20 = icmp eq ptr %11, null
  br i1 %cmp3.i20, label %if.then4.i23, label %if.end5.i26

if.then4.i23:                                     ; preds = %if.else.i21
  tail call void @gc_for_newcell() #38
  %.pre.i22 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i26

if.end5.i26:                                      ; preds = %if.then4.i23, %if.else.i21
  %12 = phi ptr [ %.pre.i22, %if.then4.i23 ], [ %11, %if.else.i21 ]
  %cdr.i24 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2, i32 0, i32 1
  %13 = load ptr, ptr %cdr.i24, align 8, !tbaa !9
  store ptr %13, ptr @freelist, align 8, !tbaa !5
  %14 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i25 = add nsw i64 %14, 1
  store i64 %inc.i25, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit31

cons.exit31:                                      ; preds = %if.end.i19, %if.end5.i26
  %z.0.i27 = phi ptr [ %9, %if.end.i19 ], [ %12, %if.end5.i26 ]
  store i16 0, ptr %z.0.i27, align 8, !tbaa !35
  %type.i28 = getelementptr inbounds %struct.obj, ptr %z.0.i27, i64 0, i32 1
  store i16 1, ptr %type.i28, align 2, !tbaa !14
  %storage_as7.i29 = getelementptr inbounds %struct.obj, ptr %z.0.i27, i64 0, i32 2
  store ptr %actuals, ptr %storage_as7.i29, align 8, !tbaa !9
  %cdr9.i30 = getelementptr inbounds %struct.obj, ptr %z.0.i27, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i30, align 8, !tbaa !9
  %15 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i32 = icmp eq i64 %15, 1
  br i1 %cmp.i32, label %if.then.i34, label %if.else.i40

if.then.i34:                                      ; preds = %cons.exit31
  %16 = load ptr, ptr @heap, align 8, !tbaa !5
  %17 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i33 = icmp ult ptr %16, %17
  br i1 %cmp1.not.i33, label %if.end.i38, label %if.then2.i36

if.then2.i36:                                     ; preds = %if.then.i34
  %call.i.i35 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i38

if.end.i38:                                       ; preds = %if.then2.i36, %if.then.i34
  %add.ptr.i37 = getelementptr inbounds %struct.obj, ptr %16, i64 1
  store ptr %add.ptr.i37, ptr @heap, align 8, !tbaa !5
  br label %cons.exit50

if.else.i40:                                      ; preds = %cons.exit31
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i39 = icmp eq ptr %18, null
  br i1 %cmp3.i39, label %if.then4.i42, label %if.end5.i45

if.then4.i42:                                     ; preds = %if.else.i40
  tail call void @gc_for_newcell() #38
  %.pre.i41 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i45

if.end5.i45:                                      ; preds = %if.then4.i42, %if.else.i40
  %19 = phi ptr [ %.pre.i41, %if.then4.i42 ], [ %18, %if.else.i40 ]
  %cdr.i43 = getelementptr inbounds %struct.obj, ptr %19, i64 0, i32 2, i32 0, i32 1
  %20 = load ptr, ptr %cdr.i43, align 8, !tbaa !9
  store ptr %20, ptr @freelist, align 8, !tbaa !5
  %21 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i44 = add nsw i64 %21, 1
  store i64 %inc.i44, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit50

cons.exit50:                                      ; preds = %if.end.i38, %if.end5.i45
  %z.0.i46 = phi ptr [ %16, %if.end.i38 ], [ %19, %if.end5.i45 ]
  store i16 0, ptr %z.0.i46, align 8, !tbaa !35
  %type.i47 = getelementptr inbounds %struct.obj, ptr %z.0.i46, i64 0, i32 1
  store i16 1, ptr %type.i47, align 2, !tbaa !14
  %storage_as7.i48 = getelementptr inbounds %struct.obj, ptr %z.0.i46, i64 0, i32 2
  store ptr %z.0.i, ptr %storage_as7.i48, align 8, !tbaa !9
  %cdr9.i49 = getelementptr inbounds %struct.obj, ptr %z.0.i46, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i27, ptr %cdr9.i49, align 8, !tbaa !9
  %22 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i51 = icmp eq i64 %22, 1
  br i1 %cmp.i51, label %if.then.i53, label %if.else.i59

if.then.i53:                                      ; preds = %cons.exit50
  %23 = load ptr, ptr @heap, align 8, !tbaa !5
  %24 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i52 = icmp ult ptr %23, %24
  br i1 %cmp1.not.i52, label %if.end.i57, label %if.then2.i55

if.then2.i55:                                     ; preds = %if.then.i53
  %call.i.i54 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i57

if.end.i57:                                       ; preds = %if.then2.i55, %if.then.i53
  %add.ptr.i56 = getelementptr inbounds %struct.obj, ptr %23, i64 1
  store ptr %add.ptr.i56, ptr @heap, align 8, !tbaa !5
  br label %return

if.else.i59:                                      ; preds = %cons.exit50
  %25 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i58 = icmp eq ptr %25, null
  br i1 %cmp3.i58, label %if.then4.i61, label %if.end5.i64

if.then4.i61:                                     ; preds = %if.else.i59
  tail call void @gc_for_newcell() #38
  %.pre.i60 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i64

if.end5.i64:                                      ; preds = %if.then4.i61, %if.else.i59
  %26 = phi ptr [ %.pre.i60, %if.then4.i61 ], [ %25, %if.else.i59 ]
  %cdr.i62 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  %27 = load ptr, ptr %cdr.i62, align 8, !tbaa !9
  store ptr %27, ptr @freelist, align 8, !tbaa !5
  %28 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i63 = add nsw i64 %28, 1
  store i64 %inc.i63, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %return

if.end:                                           ; preds = %entry, %cond.end
  %29 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i70 = icmp eq i64 %29, 1
  br i1 %cmp.i70, label %if.then.i72, label %if.else.i78

if.then.i72:                                      ; preds = %if.end
  %30 = load ptr, ptr @heap, align 8, !tbaa !5
  %31 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i71 = icmp ult ptr %30, %31
  br i1 %cmp1.not.i71, label %if.end.i76, label %if.then2.i74

if.then2.i74:                                     ; preds = %if.then.i72
  %call.i.i73 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i76

if.end.i76:                                       ; preds = %if.then2.i74, %if.then.i72
  %add.ptr.i75 = getelementptr inbounds %struct.obj, ptr %30, i64 1
  store ptr %add.ptr.i75, ptr @heap, align 8, !tbaa !5
  br label %cons.exit88

if.else.i78:                                      ; preds = %if.end
  %32 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i77 = icmp eq ptr %32, null
  br i1 %cmp3.i77, label %if.then4.i80, label %if.end5.i83

if.then4.i80:                                     ; preds = %if.else.i78
  tail call void @gc_for_newcell() #38
  %.pre.i79 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i83

if.end5.i83:                                      ; preds = %if.then4.i80, %if.else.i78
  %33 = phi ptr [ %.pre.i79, %if.then4.i80 ], [ %32, %if.else.i78 ]
  %cdr.i81 = getelementptr inbounds %struct.obj, ptr %33, i64 0, i32 2, i32 0, i32 1
  %34 = load ptr, ptr %cdr.i81, align 8, !tbaa !9
  store ptr %34, ptr @freelist, align 8, !tbaa !5
  %35 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i82 = add nsw i64 %35, 1
  store i64 %inc.i82, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit88

cons.exit88:                                      ; preds = %if.end.i76, %if.end5.i83
  %z.0.i84 = phi ptr [ %30, %if.end.i76 ], [ %33, %if.end5.i83 ]
  store i16 0, ptr %z.0.i84, align 8, !tbaa !35
  %type.i85 = getelementptr inbounds %struct.obj, ptr %z.0.i84, i64 0, i32 1
  store i16 1, ptr %type.i85, align 2, !tbaa !14
  %storage_as7.i86 = getelementptr inbounds %struct.obj, ptr %z.0.i84, i64 0, i32 2
  store ptr %formals, ptr %storage_as7.i86, align 8, !tbaa !9
  %cdr9.i87 = getelementptr inbounds %struct.obj, ptr %z.0.i84, i64 0, i32 2, i32 0, i32 1
  store ptr %actuals, ptr %cdr9.i87, align 8, !tbaa !9
  %36 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i89 = icmp eq i64 %36, 1
  br i1 %cmp.i89, label %if.then.i91, label %if.else.i97

if.then.i91:                                      ; preds = %cons.exit88
  %37 = load ptr, ptr @heap, align 8, !tbaa !5
  %38 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i90 = icmp ult ptr %37, %38
  br i1 %cmp1.not.i90, label %if.end.i95, label %if.then2.i93

if.then2.i93:                                     ; preds = %if.then.i91
  %call.i.i92 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i95

if.end.i95:                                       ; preds = %if.then2.i93, %if.then.i91
  %add.ptr.i94 = getelementptr inbounds %struct.obj, ptr %37, i64 1
  store ptr %add.ptr.i94, ptr @heap, align 8, !tbaa !5
  br label %return

if.else.i97:                                      ; preds = %cons.exit88
  %39 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i96 = icmp eq ptr %39, null
  br i1 %cmp3.i96, label %if.then4.i99, label %if.end5.i102

if.then4.i99:                                     ; preds = %if.else.i97
  tail call void @gc_for_newcell() #38
  %.pre.i98 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i102

if.end5.i102:                                     ; preds = %if.then4.i99, %if.else.i97
  %40 = phi ptr [ %.pre.i98, %if.then4.i99 ], [ %39, %if.else.i97 ]
  %cdr.i100 = getelementptr inbounds %struct.obj, ptr %40, i64 0, i32 2, i32 0, i32 1
  %41 = load ptr, ptr %cdr.i100, align 8, !tbaa !9
  store ptr %41, ptr @freelist, align 8, !tbaa !5
  %42 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i101 = add nsw i64 %42, 1
  store i64 %inc.i101, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %return

return:                                           ; preds = %if.end5.i102, %if.end.i95, %if.end5.i64, %if.end.i57
  %z.0.i103.sink112 = phi ptr [ %23, %if.end.i57 ], [ %26, %if.end5.i64 ], [ %37, %if.end.i95 ], [ %40, %if.end5.i102 ]
  %z.0.i84.sink = phi ptr [ %z.0.i46, %if.end.i57 ], [ %z.0.i46, %if.end5.i64 ], [ %z.0.i84, %if.end.i95 ], [ %z.0.i84, %if.end5.i102 ]
  store i16 0, ptr %z.0.i103.sink112, align 8, !tbaa !35
  %type.i104 = getelementptr inbounds %struct.obj, ptr %z.0.i103.sink112, i64 0, i32 1
  store i16 1, ptr %type.i104, align 2, !tbaa !14
  %storage_as7.i105 = getelementptr inbounds %struct.obj, ptr %z.0.i103.sink112, i64 0, i32 2
  store ptr %z.0.i84.sink, ptr %storage_as7.i105, align 8, !tbaa !9
  %cdr9.i106 = getelementptr inbounds %struct.obj, ptr %z.0.i103.sink112, i64 0, i32 2, i32 0, i32 1
  store ptr %env, ptr %cdr9.i106, align 8, !tbaa !9
  ret ptr %z.0.i103.sink112
}

; Function Attrs: nounwind uwtable
define dso_local void @set_eval_hooks(i64 noundef %type, ptr noundef %fcn) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %calloc.i = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %entry
  %1 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %0, %entry ]
  %or.cond.i = icmp ult i64 %type, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %leval = getelementptr inbounds %struct.user_type_hooks, ptr %1, i64 %type, i32 5
  store ptr %fcn, ptr %leval, align 8, !tbaa !52
  ret void

if.else.i:                                        ; preds = %if.end.i
  %call4.i = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @err_closure_code(ptr noundef %tmp) local_unnamed_addr #6 {
entry:
  %call = tail call ptr @err(ptr noundef nonnull @.str.88, ptr noundef %tmp)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lapply(ptr noundef %fcn, ptr noundef %args) #6 {
entry:
  %fcn.addr = alloca ptr, align 8
  store ptr %fcn, ptr %fcn.addr, align 8, !tbaa !5
  %0 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %cmp = icmp ult ptr %fcn.addr, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call.i = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %.pr = load ptr, ptr %fcn.addr, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = phi ptr [ %.pr, %if.then ], [ %fcn, %entry ]
  %cmp1 = icmp eq ptr %1, null
  br i1 %cmp1, label %cond.end186, label %cond.end

cond.end:                                         ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type, align 2, !tbaa !14
  %conv = sext i16 %2 to i32
  switch i32 %conv, label %cond.false183 [
    i32 4, label %sw.bb
    i32 5, label %sw.bb2
    i32 6, label %sw.bb7
    i32 21, label %sw.bb14
    i32 7, label %sw.bb38
    i32 19, label %sw.bb48
    i32 20, label %sw.bb62
    i32 8, label %sw.bb81
    i32 9, label %sw.bb85
    i32 10, label %sw.bb85
    i32 3, label %sw.bb85
    i32 11, label %sw.bb87
  ]

sw.bb:                                            ; preds = %cond.end
  %f = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %f, align 8, !tbaa !9
  %call = call ptr %3() #33
  br label %cleanup

sw.bb2:                                           ; preds = %cond.end
  %f4 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %f4, align 8, !tbaa !9
  %cmp.i = icmp eq ptr %args, null
  br i1 %cmp.i, label %car.exit, label %cond.end.i

cond.end.i:                                       ; preds = %sw.bb2
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %5 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %5 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %6 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i231 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  br label %car.exit

car.exit:                                         ; preds = %sw.bb2, %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %6, %sw.bb1.i ], [ null, %cond.end.i ], [ null, %sw.bb2 ]
  %call6 = call ptr %4(ptr noundef %retval.0.i) #33
  br label %cleanup

sw.bb7:                                           ; preds = %cond.end
  %f9 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %7 = load ptr, ptr %f9, align 8, !tbaa !9
  %cmp.i232 = icmp eq ptr %args, null
  br i1 %cmp.i232, label %car.exit259, label %cond.end.i235

cond.end.i235:                                    ; preds = %sw.bb7
  %type.i233 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %8 = load i16, ptr %type.i233, align 2, !tbaa !14
  %conv.i234 = sext i16 %8 to i32
  switch i32 %conv.i234, label %sw.default.i239 [
    i32 0, label %cond.end.i245
    i32 1, label %sw.bb1.i237
  ]

sw.bb1.i237:                                      ; preds = %cond.end.i235
  %storage_as.i236 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %9 = load ptr, ptr %storage_as.i236, align 8, !tbaa !9
  br label %cond.end.i245

sw.default.i239:                                  ; preds = %cond.end.i235
  %call.i238 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  %.pre894 = load i16, ptr %type.i233, align 2, !tbaa !14
  br label %cond.end.i245

cond.end.i245:                                    ; preds = %cond.end.i235, %sw.bb1.i237, %sw.default.i239
  %10 = phi i16 [ %8, %cond.end.i235 ], [ %8, %sw.bb1.i237 ], [ %.pre894, %sw.default.i239 ]
  %retval.0.i240.ph = phi ptr [ null, %cond.end.i235 ], [ %9, %sw.bb1.i237 ], [ null, %sw.default.i239 ]
  %conv.i244 = sext i16 %10 to i32
  switch i32 %conv.i244, label %sw.default.i248 [
    i32 0, label %car.exit259
    i32 1, label %cdr.exit
  ]

sw.default.i248:                                  ; preds = %cond.end.i245
  %call.i247 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %car.exit259

cdr.exit:                                         ; preds = %cond.end.i245
  %cdr.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i250 = icmp eq ptr %11, null
  br i1 %cmp.i250, label %car.exit259, label %cond.end.i253

cond.end.i253:                                    ; preds = %cdr.exit
  %type.i251 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %12 = load i16, ptr %type.i251, align 2, !tbaa !14
  %conv.i252 = sext i16 %12 to i32
  switch i32 %conv.i252, label %sw.default.i257 [
    i32 0, label %car.exit259
    i32 1, label %sw.bb1.i255
  ]

sw.bb1.i255:                                      ; preds = %cond.end.i253
  %storage_as.i254 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %13 = load ptr, ptr %storage_as.i254, align 8, !tbaa !9
  br label %car.exit259

sw.default.i257:                                  ; preds = %cond.end.i253
  %call.i256 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %11)
  br label %car.exit259

car.exit259:                                      ; preds = %sw.bb7, %cond.end.i245, %sw.default.i248, %cdr.exit, %cond.end.i253, %sw.bb1.i255, %sw.default.i257
  %retval.0.i240626630 = phi ptr [ %retval.0.i240.ph, %sw.default.i257 ], [ %retval.0.i240.ph, %sw.bb1.i255 ], [ %retval.0.i240.ph, %cond.end.i253 ], [ %retval.0.i240.ph, %cdr.exit ], [ null, %sw.bb7 ], [ %retval.0.i240.ph, %cond.end.i245 ], [ %retval.0.i240.ph, %sw.default.i248 ]
  %retval.0.i258 = phi ptr [ null, %sw.default.i257 ], [ %13, %sw.bb1.i255 ], [ null, %cond.end.i253 ], [ null, %cdr.exit ], [ null, %sw.bb7 ], [ null, %cond.end.i245 ], [ null, %sw.default.i248 ]
  %call13 = call ptr %7(ptr noundef %retval.0.i240626630, ptr noundef %retval.0.i258) #33
  br label %cleanup

sw.bb14:                                          ; preds = %cond.end
  %f16 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %f16, align 8, !tbaa !9
  %cmp.i260 = icmp eq ptr %args, null
  br i1 %cmp.i260, label %car.exit289, label %cond.end.i263

cond.end.i263:                                    ; preds = %sw.bb14
  %type.i261 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %15 = load i16, ptr %type.i261, align 2, !tbaa !14
  %conv.i262 = sext i16 %15 to i32
  switch i32 %conv.i262, label %sw.default.i267 [
    i32 0, label %cond.end.i273
    i32 1, label %sw.bb1.i265
  ]

sw.bb1.i265:                                      ; preds = %cond.end.i263
  %storage_as.i264 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %16 = load ptr, ptr %storage_as.i264, align 8, !tbaa !9
  br label %cond.end.i273

sw.default.i267:                                  ; preds = %cond.end.i263
  %call.i266 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  %.pre893 = load i16, ptr %type.i261, align 2, !tbaa !14
  br label %cond.end.i273

cond.end.i273:                                    ; preds = %cond.end.i263, %sw.bb1.i265, %sw.default.i267
  %17 = phi i16 [ %15, %cond.end.i263 ], [ %15, %sw.bb1.i265 ], [ %.pre893, %sw.default.i267 ]
  %retval.0.i268.ph = phi ptr [ null, %cond.end.i263 ], [ %16, %sw.bb1.i265 ], [ null, %sw.default.i267 ]
  %conv.i272 = sext i16 %17 to i32
  switch i32 %conv.i272, label %sw.default.i277 [
    i32 0, label %cond.end.i293
    i32 1, label %cdr.exit279
  ]

sw.default.i277:                                  ; preds = %cond.end.i273
  %call.i276 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i293

cdr.exit279:                                      ; preds = %cond.end.i273
  %cdr.i274 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %18 = load ptr, ptr %cdr.i274, align 8, !tbaa !9
  %cmp.i280 = icmp eq ptr %18, null
  br i1 %cmp.i280, label %cond.end.i293, label %cond.end.i283

cond.end.i283:                                    ; preds = %cdr.exit279
  %type.i281 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 1
  %19 = load i16, ptr %type.i281, align 2, !tbaa !14
  %conv.i282 = sext i16 %19 to i32
  switch i32 %conv.i282, label %sw.default.i287 [
    i32 0, label %cond.end.i293
    i32 1, label %sw.bb1.i285
  ]

sw.bb1.i285:                                      ; preds = %cond.end.i283
  %storage_as.i284 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 2
  %20 = load ptr, ptr %storage_as.i284, align 8, !tbaa !9
  br label %cond.end.i293

sw.default.i287:                                  ; preds = %cond.end.i283
  %call.i286 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %18)
  br label %cond.end.i293

car.exit289:                                      ; preds = %sw.bb14
  %call20 = call ptr %14(ptr noundef null, ptr noundef null) #33
  br label %cleanup

cond.end.i293:                                    ; preds = %cond.end.i273, %sw.default.i277, %sw.default.i287, %sw.bb1.i285, %cond.end.i283, %cdr.exit279
  %.sink = phi ptr [ null, %cdr.exit279 ], [ null, %cond.end.i283 ], [ %20, %sw.bb1.i285 ], [ null, %sw.default.i287 ], [ null, %sw.default.i277 ], [ null, %cond.end.i273 ]
  %call20646 = call ptr %14(ptr noundef %retval.0.i268.ph, ptr noundef %.sink) #33
  %21 = load i16, ptr %type.i261, align 2, !tbaa !14
  %conv.i292 = sext i16 %21 to i32
  switch i32 %conv.i292, label %sw.default.i297 [
    i32 0, label %cleanup
    i32 1, label %cdr.exit299
  ]

sw.default.i297:                                  ; preds = %cond.end.i293
  %call.i296 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cleanup

cdr.exit299:                                      ; preds = %cond.end.i293
  %cdr.i294 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %cdr.i294, align 8, !tbaa !9
  %cmp.i300 = icmp eq ptr %22, null
  br i1 %cmp.i300, label %cleanup, label %cond.end.i303

cond.end.i303:                                    ; preds = %cdr.exit299
  %type.i301 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 1
  %23 = load i16, ptr %type.i301, align 2, !tbaa !14
  %conv.i302 = sext i16 %23 to i32
  switch i32 %conv.i302, label %sw.default.i307 [
    i32 0, label %cleanup
    i32 1, label %cdr.exit309
  ]

sw.default.i307:                                  ; preds = %cond.end.i303
  %call.i306 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %22)
  br label %cleanup

cdr.exit309:                                      ; preds = %cond.end.i303
  %cdr.i304 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %cdr.i304, align 8, !tbaa !9
  %cmp23887 = icmp eq ptr %24, null
  br i1 %cmp23887, label %cleanup, label %cond.end29

cond.end29:                                       ; preds = %cdr.exit309, %for.body
  %acc.0889 = phi ptr [ %call36, %for.body ], [ %call20646, %cdr.exit309 ]
  %args.addr.0888 = phi ptr [ %29, %for.body ], [ %24, %cdr.exit309 ]
  %type27 = getelementptr inbounds %struct.obj, ptr %args.addr.0888, i64 0, i32 1
  %25 = load i16, ptr %type27, align 2, !tbaa !14
  %cmp31 = icmp eq i16 %25, 1
  br i1 %cmp31, label %for.body, label %cleanup

for.body:                                         ; preds = %cond.end29
  %26 = load ptr, ptr %fcn.addr, align 8, !tbaa !5
  %f34 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  %27 = load ptr, ptr %f34, align 8, !tbaa !9
  %storage_as35 = getelementptr inbounds %struct.obj, ptr %args.addr.0888, i64 0, i32 2
  %28 = load ptr, ptr %storage_as35, align 8, !tbaa !9
  %call36 = call ptr %27(ptr noundef %acc.0889, ptr noundef %28) #33
  %cdr = getelementptr inbounds %struct.obj, ptr %args.addr.0888, i64 0, i32 2, i32 0, i32 1
  %29 = load ptr, ptr %cdr, align 8, !tbaa !9
  %cmp23 = icmp eq ptr %29, null
  br i1 %cmp23, label %cleanup, label %cond.end29, !llvm.loop !90

sw.bb38:                                          ; preds = %cond.end
  %f40 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %30 = load ptr, ptr %f40, align 8, !tbaa !9
  %cmp.i310 = icmp eq ptr %args, null
  br i1 %cmp.i310, label %car.exit369, label %cond.end.i313

cond.end.i313:                                    ; preds = %sw.bb38
  %type.i311 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %31 = load i16, ptr %type.i311, align 2, !tbaa !14
  %conv.i312 = sext i16 %31 to i32
  switch i32 %conv.i312, label %sw.default.i317 [
    i32 0, label %cond.end.i323
    i32 1, label %sw.bb1.i315
  ]

sw.bb1.i315:                                      ; preds = %cond.end.i313
  %storage_as.i314 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %32 = load ptr, ptr %storage_as.i314, align 8, !tbaa !9
  br label %cond.end.i323

sw.default.i317:                                  ; preds = %cond.end.i313
  %call.i316 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  %.pre892 = load i16, ptr %type.i311, align 2, !tbaa !14
  br label %cond.end.i323

cond.end.i323:                                    ; preds = %cond.end.i313, %sw.bb1.i315, %sw.default.i317
  %33 = phi i16 [ %31, %cond.end.i313 ], [ %31, %sw.bb1.i315 ], [ %.pre892, %sw.default.i317 ]
  %retval.0.i318.ph = phi ptr [ null, %cond.end.i313 ], [ %32, %sw.bb1.i315 ], [ null, %sw.default.i317 ]
  %conv.i322 = sext i16 %33 to i32
  switch i32 %conv.i322, label %sw.default.i327 [
    i32 0, label %cond.end.i343
    i32 1, label %cdr.exit329
  ]

sw.default.i327:                                  ; preds = %cond.end.i323
  %call.i326 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i343

cdr.exit329:                                      ; preds = %cond.end.i323
  %cdr.i324 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %34 = load ptr, ptr %cdr.i324, align 8, !tbaa !9
  %cmp.i330 = icmp eq ptr %34, null
  br i1 %cmp.i330, label %cond.end.i343, label %cond.end.i333

cond.end.i333:                                    ; preds = %cdr.exit329
  %type.i331 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 1
  %35 = load i16, ptr %type.i331, align 2, !tbaa !14
  %conv.i332 = sext i16 %35 to i32
  switch i32 %conv.i332, label %sw.default.i337 [
    i32 0, label %cond.end.i343
    i32 1, label %sw.bb1.i335
  ]

sw.bb1.i335:                                      ; preds = %cond.end.i333
  %storage_as.i334 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 2
  %36 = load ptr, ptr %storage_as.i334, align 8, !tbaa !9
  br label %cond.end.i343

sw.default.i337:                                  ; preds = %cond.end.i333
  %call.i336 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %34)
  br label %cond.end.i343

cond.end.i343:                                    ; preds = %cond.end.i323, %sw.default.i327, %sw.default.i337, %sw.bb1.i335, %cond.end.i333, %cdr.exit329
  %retval.0.i338664 = phi ptr [ null, %cdr.exit329 ], [ null, %cond.end.i333 ], [ %36, %sw.bb1.i335 ], [ null, %sw.default.i337 ], [ null, %sw.default.i327 ], [ null, %cond.end.i323 ]
  %37 = load i16, ptr %type.i311, align 2, !tbaa !14
  %conv.i342 = sext i16 %37 to i32
  switch i32 %conv.i342, label %sw.default.i347 [
    i32 0, label %car.exit369
    i32 1, label %cdr.exit349
  ]

sw.default.i347:                                  ; preds = %cond.end.i343
  %call.i346 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %car.exit369

cdr.exit349:                                      ; preds = %cond.end.i343
  %cdr.i344 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %38 = load ptr, ptr %cdr.i344, align 8, !tbaa !9
  %cmp.i350 = icmp eq ptr %38, null
  br i1 %cmp.i350, label %car.exit369, label %cond.end.i353

cond.end.i353:                                    ; preds = %cdr.exit349
  %type.i351 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 1
  %39 = load i16, ptr %type.i351, align 2, !tbaa !14
  %conv.i352 = sext i16 %39 to i32
  switch i32 %conv.i352, label %sw.default.i357 [
    i32 0, label %car.exit369
    i32 1, label %cdr.exit359
  ]

sw.default.i357:                                  ; preds = %cond.end.i353
  %call.i356 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %38)
  br label %car.exit369

cdr.exit359:                                      ; preds = %cond.end.i353
  %cdr.i354 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 2, i32 0, i32 1
  %40 = load ptr, ptr %cdr.i354, align 8, !tbaa !9
  %cmp.i360 = icmp eq ptr %40, null
  br i1 %cmp.i360, label %car.exit369, label %cond.end.i363

cond.end.i363:                                    ; preds = %cdr.exit359
  %type.i361 = getelementptr inbounds %struct.obj, ptr %40, i64 0, i32 1
  %41 = load i16, ptr %type.i361, align 2, !tbaa !14
  %conv.i362 = sext i16 %41 to i32
  switch i32 %conv.i362, label %sw.default.i367 [
    i32 0, label %car.exit369
    i32 1, label %sw.bb1.i365
  ]

sw.bb1.i365:                                      ; preds = %cond.end.i363
  %storage_as.i364 = getelementptr inbounds %struct.obj, ptr %40, i64 0, i32 2
  %42 = load ptr, ptr %storage_as.i364, align 8, !tbaa !9
  br label %car.exit369

sw.default.i367:                                  ; preds = %cond.end.i363
  %call.i366 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %40)
  br label %car.exit369

car.exit369:                                      ; preds = %sw.bb38, %cond.end.i343, %sw.default.i347, %cdr.exit349, %cond.end.i353, %sw.default.i357, %cdr.exit359, %cond.end.i363, %sw.bb1.i365, %sw.default.i367
  %retval.0.i338665673680 = phi ptr [ %retval.0.i338664, %sw.default.i367 ], [ %retval.0.i338664, %sw.bb1.i365 ], [ %retval.0.i338664, %cond.end.i363 ], [ %retval.0.i338664, %cdr.exit359 ], [ %retval.0.i338664, %cdr.exit349 ], [ %retval.0.i338664, %cond.end.i353 ], [ %retval.0.i338664, %sw.default.i357 ], [ null, %sw.bb38 ], [ %retval.0.i338664, %cond.end.i343 ], [ %retval.0.i338664, %sw.default.i347 ]
  %retval.0.i318655659663674679 = phi ptr [ %retval.0.i318.ph, %sw.default.i367 ], [ %retval.0.i318.ph, %sw.bb1.i365 ], [ %retval.0.i318.ph, %cond.end.i363 ], [ %retval.0.i318.ph, %cdr.exit359 ], [ %retval.0.i318.ph, %cdr.exit349 ], [ %retval.0.i318.ph, %cond.end.i353 ], [ %retval.0.i318.ph, %sw.default.i357 ], [ null, %sw.bb38 ], [ %retval.0.i318.ph, %cond.end.i343 ], [ %retval.0.i318.ph, %sw.default.i347 ]
  %retval.0.i368 = phi ptr [ null, %sw.default.i367 ], [ %42, %sw.bb1.i365 ], [ null, %cond.end.i363 ], [ null, %cdr.exit359 ], [ null, %cdr.exit349 ], [ null, %cond.end.i353 ], [ null, %sw.default.i357 ], [ null, %sw.bb38 ], [ null, %cond.end.i343 ], [ null, %sw.default.i347 ]
  %call47 = call ptr %30(ptr noundef %retval.0.i318655659663674679, ptr noundef %retval.0.i338665673680, ptr noundef %retval.0.i368) #33
  br label %cleanup

sw.bb48:                                          ; preds = %cond.end
  %f50 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %43 = load ptr, ptr %f50, align 8, !tbaa !9
  %cmp.i370 = icmp eq ptr %args, null
  br i1 %cmp.i370, label %car.exit469, label %cond.end.i373

cond.end.i373:                                    ; preds = %sw.bb48
  %type.i371 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %44 = load i16, ptr %type.i371, align 2, !tbaa !14
  %conv.i372 = sext i16 %44 to i32
  switch i32 %conv.i372, label %sw.default.i377 [
    i32 0, label %cond.end.i383
    i32 1, label %sw.bb1.i375
  ]

sw.bb1.i375:                                      ; preds = %cond.end.i373
  %storage_as.i374 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %45 = load ptr, ptr %storage_as.i374, align 8, !tbaa !9
  br label %cond.end.i383

sw.default.i377:                                  ; preds = %cond.end.i373
  %call.i376 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  %.pre891 = load i16, ptr %type.i371, align 2, !tbaa !14
  br label %cond.end.i383

cond.end.i383:                                    ; preds = %cond.end.i373, %sw.bb1.i375, %sw.default.i377
  %46 = phi i16 [ %44, %cond.end.i373 ], [ %44, %sw.bb1.i375 ], [ %.pre891, %sw.default.i377 ]
  %retval.0.i378.ph = phi ptr [ null, %cond.end.i373 ], [ %45, %sw.bb1.i375 ], [ null, %sw.default.i377 ]
  %conv.i382 = sext i16 %46 to i32
  switch i32 %conv.i382, label %sw.default.i387 [
    i32 0, label %cond.end.i403
    i32 1, label %cdr.exit389
  ]

sw.default.i387:                                  ; preds = %cond.end.i383
  %call.i386 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i403

cdr.exit389:                                      ; preds = %cond.end.i383
  %cdr.i384 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %47 = load ptr, ptr %cdr.i384, align 8, !tbaa !9
  %cmp.i390 = icmp eq ptr %47, null
  br i1 %cmp.i390, label %cond.end.i403, label %cond.end.i393

cond.end.i393:                                    ; preds = %cdr.exit389
  %type.i391 = getelementptr inbounds %struct.obj, ptr %47, i64 0, i32 1
  %48 = load i16, ptr %type.i391, align 2, !tbaa !14
  %conv.i392 = sext i16 %48 to i32
  switch i32 %conv.i392, label %sw.default.i397 [
    i32 0, label %cond.end.i403
    i32 1, label %sw.bb1.i395
  ]

sw.bb1.i395:                                      ; preds = %cond.end.i393
  %storage_as.i394 = getelementptr inbounds %struct.obj, ptr %47, i64 0, i32 2
  %49 = load ptr, ptr %storage_as.i394, align 8, !tbaa !9
  br label %cond.end.i403

sw.default.i397:                                  ; preds = %cond.end.i393
  %call.i396 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %47)
  br label %cond.end.i403

cond.end.i403:                                    ; preds = %cond.end.i383, %sw.default.i387, %sw.default.i397, %sw.bb1.i395, %cond.end.i393, %cdr.exit389
  %retval.0.i398692 = phi ptr [ null, %cdr.exit389 ], [ null, %cond.end.i393 ], [ %49, %sw.bb1.i395 ], [ null, %sw.default.i397 ], [ null, %sw.default.i387 ], [ null, %cond.end.i383 ]
  %50 = load i16, ptr %type.i371, align 2, !tbaa !14
  %conv.i402 = sext i16 %50 to i32
  switch i32 %conv.i402, label %sw.default.i407 [
    i32 0, label %cond.end.i433
    i32 1, label %cdr.exit409
  ]

sw.default.i407:                                  ; preds = %cond.end.i403
  %call.i406 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i433

cdr.exit409:                                      ; preds = %cond.end.i403
  %cdr.i404 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %51 = load ptr, ptr %cdr.i404, align 8, !tbaa !9
  %cmp.i410 = icmp eq ptr %51, null
  br i1 %cmp.i410, label %cond.end.i433, label %cond.end.i413

cond.end.i413:                                    ; preds = %cdr.exit409
  %type.i411 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 1
  %52 = load i16, ptr %type.i411, align 2, !tbaa !14
  %conv.i412 = sext i16 %52 to i32
  switch i32 %conv.i412, label %sw.default.i417 [
    i32 0, label %cond.end.i433
    i32 1, label %cdr.exit419
  ]

sw.default.i417:                                  ; preds = %cond.end.i413
  %call.i416 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %51)
  br label %cond.end.i433

cdr.exit419:                                      ; preds = %cond.end.i413
  %cdr.i414 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 2, i32 0, i32 1
  %53 = load ptr, ptr %cdr.i414, align 8, !tbaa !9
  %cmp.i420 = icmp eq ptr %53, null
  br i1 %cmp.i420, label %cond.end.i433, label %cond.end.i423

cond.end.i423:                                    ; preds = %cdr.exit419
  %type.i421 = getelementptr inbounds %struct.obj, ptr %53, i64 0, i32 1
  %54 = load i16, ptr %type.i421, align 2, !tbaa !14
  %conv.i422 = sext i16 %54 to i32
  switch i32 %conv.i422, label %sw.default.i427 [
    i32 0, label %cond.end.i433
    i32 1, label %sw.bb1.i425
  ]

sw.bb1.i425:                                      ; preds = %cond.end.i423
  %storage_as.i424 = getelementptr inbounds %struct.obj, ptr %53, i64 0, i32 2
  %55 = load ptr, ptr %storage_as.i424, align 8, !tbaa !9
  br label %cond.end.i433

sw.default.i427:                                  ; preds = %cond.end.i423
  %call.i426 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %53)
  br label %cond.end.i433

cond.end.i433:                                    ; preds = %cond.end.i403, %sw.default.i407, %cdr.exit409, %cond.end.i413, %sw.default.i417, %sw.default.i427, %sw.bb1.i425, %cond.end.i423, %cdr.exit419
  %retval.0.i428716 = phi ptr [ null, %cdr.exit419 ], [ null, %cond.end.i423 ], [ %55, %sw.bb1.i425 ], [ null, %sw.default.i427 ], [ null, %sw.default.i417 ], [ null, %cond.end.i413 ], [ null, %cdr.exit409 ], [ null, %sw.default.i407 ], [ null, %cond.end.i403 ]
  %56 = load i16, ptr %type.i371, align 2, !tbaa !14
  %conv.i432 = sext i16 %56 to i32
  switch i32 %conv.i432, label %sw.default.i437 [
    i32 0, label %car.exit469
    i32 1, label %cdr.exit439
  ]

sw.default.i437:                                  ; preds = %cond.end.i433
  %call.i436 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %car.exit469

cdr.exit439:                                      ; preds = %cond.end.i433
  %cdr.i434 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %57 = load ptr, ptr %cdr.i434, align 8, !tbaa !9
  %cmp.i440 = icmp eq ptr %57, null
  br i1 %cmp.i440, label %car.exit469, label %cond.end.i443

cond.end.i443:                                    ; preds = %cdr.exit439
  %type.i441 = getelementptr inbounds %struct.obj, ptr %57, i64 0, i32 1
  %58 = load i16, ptr %type.i441, align 2, !tbaa !14
  %conv.i442 = sext i16 %58 to i32
  switch i32 %conv.i442, label %sw.default.i447 [
    i32 0, label %car.exit469
    i32 1, label %cdr.exit449
  ]

sw.default.i447:                                  ; preds = %cond.end.i443
  %call.i446 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %57)
  br label %car.exit469

cdr.exit449:                                      ; preds = %cond.end.i443
  %cdr.i444 = getelementptr inbounds %struct.obj, ptr %57, i64 0, i32 2, i32 0, i32 1
  %59 = load ptr, ptr %cdr.i444, align 8, !tbaa !9
  %cmp.i450 = icmp eq ptr %59, null
  br i1 %cmp.i450, label %car.exit469, label %cond.end.i453

cond.end.i453:                                    ; preds = %cdr.exit449
  %type.i451 = getelementptr inbounds %struct.obj, ptr %59, i64 0, i32 1
  %60 = load i16, ptr %type.i451, align 2, !tbaa !14
  %conv.i452 = sext i16 %60 to i32
  switch i32 %conv.i452, label %sw.default.i457 [
    i32 0, label %car.exit469
    i32 1, label %cdr.exit459
  ]

sw.default.i457:                                  ; preds = %cond.end.i453
  %call.i456 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %59)
  br label %car.exit469

cdr.exit459:                                      ; preds = %cond.end.i453
  %cdr.i454 = getelementptr inbounds %struct.obj, ptr %59, i64 0, i32 2, i32 0, i32 1
  %61 = load ptr, ptr %cdr.i454, align 8, !tbaa !9
  %cmp.i460 = icmp eq ptr %61, null
  br i1 %cmp.i460, label %car.exit469, label %cond.end.i463

cond.end.i463:                                    ; preds = %cdr.exit459
  %type.i461 = getelementptr inbounds %struct.obj, ptr %61, i64 0, i32 1
  %62 = load i16, ptr %type.i461, align 2, !tbaa !14
  %conv.i462 = sext i16 %62 to i32
  switch i32 %conv.i462, label %sw.default.i467 [
    i32 0, label %car.exit469
    i32 1, label %sw.bb1.i465
  ]

sw.bb1.i465:                                      ; preds = %cond.end.i463
  %storage_as.i464 = getelementptr inbounds %struct.obj, ptr %61, i64 0, i32 2
  %63 = load ptr, ptr %storage_as.i464, align 8, !tbaa !9
  br label %car.exit469

sw.default.i467:                                  ; preds = %cond.end.i463
  %call.i466 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %61)
  br label %car.exit469

car.exit469:                                      ; preds = %sw.bb48, %cond.end.i433, %sw.default.i437, %cdr.exit439, %cond.end.i443, %sw.default.i447, %cdr.exit449, %cond.end.i453, %sw.default.i457, %cdr.exit459, %cond.end.i463, %sw.bb1.i465, %sw.default.i467
  %retval.0.i398693701708713733739749 = phi ptr [ %retval.0.i398692, %sw.default.i467 ], [ %retval.0.i398692, %sw.bb1.i465 ], [ %retval.0.i398692, %cond.end.i463 ], [ %retval.0.i398692, %cdr.exit459 ], [ %retval.0.i398692, %cdr.exit449 ], [ %retval.0.i398692, %cond.end.i453 ], [ %retval.0.i398692, %sw.default.i457 ], [ %retval.0.i398692, %cdr.exit439 ], [ %retval.0.i398692, %cond.end.i443 ], [ %retval.0.i398692, %sw.default.i447 ], [ null, %sw.bb48 ], [ %retval.0.i398692, %cond.end.i433 ], [ %retval.0.i398692, %sw.default.i437 ]
  %retval.0.i378683687691702707715732740748 = phi ptr [ %retval.0.i378.ph, %sw.default.i467 ], [ %retval.0.i378.ph, %sw.bb1.i465 ], [ %retval.0.i378.ph, %cond.end.i463 ], [ %retval.0.i378.ph, %cdr.exit459 ], [ %retval.0.i378.ph, %cdr.exit449 ], [ %retval.0.i378.ph, %cond.end.i453 ], [ %retval.0.i378.ph, %sw.default.i457 ], [ %retval.0.i378.ph, %cdr.exit439 ], [ %retval.0.i378.ph, %cond.end.i443 ], [ %retval.0.i378.ph, %sw.default.i447 ], [ null, %sw.bb48 ], [ %retval.0.i378.ph, %cond.end.i433 ], [ %retval.0.i378.ph, %sw.default.i437 ]
  %retval.0.i428717731741747 = phi ptr [ %retval.0.i428716, %sw.default.i467 ], [ %retval.0.i428716, %sw.bb1.i465 ], [ %retval.0.i428716, %cond.end.i463 ], [ %retval.0.i428716, %cdr.exit459 ], [ %retval.0.i428716, %cdr.exit449 ], [ %retval.0.i428716, %cond.end.i453 ], [ %retval.0.i428716, %sw.default.i457 ], [ %retval.0.i428716, %cdr.exit439 ], [ %retval.0.i428716, %cond.end.i443 ], [ %retval.0.i428716, %sw.default.i447 ], [ null, %sw.bb48 ], [ %retval.0.i428716, %cond.end.i433 ], [ %retval.0.i428716, %sw.default.i437 ]
  %retval.0.i468 = phi ptr [ null, %sw.default.i467 ], [ %63, %sw.bb1.i465 ], [ null, %cond.end.i463 ], [ null, %cdr.exit459 ], [ null, %cdr.exit449 ], [ null, %cond.end.i453 ], [ null, %sw.default.i457 ], [ null, %cdr.exit439 ], [ null, %cond.end.i443 ], [ null, %sw.default.i447 ], [ null, %sw.bb48 ], [ null, %cond.end.i433 ], [ null, %sw.default.i437 ]
  %call61 = call ptr %43(ptr noundef %retval.0.i378683687691702707715732740748, ptr noundef %retval.0.i398693701708713733739749, ptr noundef %retval.0.i428717731741747, ptr noundef %retval.0.i468) #33
  br label %cleanup

sw.bb62:                                          ; preds = %cond.end
  %f64 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %64 = load ptr, ptr %f64, align 8, !tbaa !9
  %cmp.i470 = icmp eq ptr %args, null
  br i1 %cmp.i470, label %car.exit619, label %cond.end.i473

cond.end.i473:                                    ; preds = %sw.bb62
  %type.i471 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %65 = load i16, ptr %type.i471, align 2, !tbaa !14
  %conv.i472 = sext i16 %65 to i32
  switch i32 %conv.i472, label %sw.default.i477 [
    i32 0, label %cond.end.i483
    i32 1, label %sw.bb1.i475
  ]

sw.bb1.i475:                                      ; preds = %cond.end.i473
  %storage_as.i474 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %66 = load ptr, ptr %storage_as.i474, align 8, !tbaa !9
  br label %cond.end.i483

sw.default.i477:                                  ; preds = %cond.end.i473
  %call.i476 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  %.pre = load i16, ptr %type.i471, align 2, !tbaa !14
  br label %cond.end.i483

cond.end.i483:                                    ; preds = %cond.end.i473, %sw.bb1.i475, %sw.default.i477
  %67 = phi i16 [ %65, %cond.end.i473 ], [ %65, %sw.bb1.i475 ], [ %.pre, %sw.default.i477 ]
  %retval.0.i478.ph = phi ptr [ null, %cond.end.i473 ], [ %66, %sw.bb1.i475 ], [ null, %sw.default.i477 ]
  %conv.i482 = sext i16 %67 to i32
  switch i32 %conv.i482, label %sw.default.i487 [
    i32 0, label %cond.end.i503
    i32 1, label %cdr.exit489
  ]

sw.default.i487:                                  ; preds = %cond.end.i483
  %call.i486 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i503

cdr.exit489:                                      ; preds = %cond.end.i483
  %cdr.i484 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %68 = load ptr, ptr %cdr.i484, align 8, !tbaa !9
  %cmp.i490 = icmp eq ptr %68, null
  br i1 %cmp.i490, label %cond.end.i503, label %cond.end.i493

cond.end.i493:                                    ; preds = %cdr.exit489
  %type.i491 = getelementptr inbounds %struct.obj, ptr %68, i64 0, i32 1
  %69 = load i16, ptr %type.i491, align 2, !tbaa !14
  %conv.i492 = sext i16 %69 to i32
  switch i32 %conv.i492, label %sw.default.i497 [
    i32 0, label %cond.end.i503
    i32 1, label %sw.bb1.i495
  ]

sw.bb1.i495:                                      ; preds = %cond.end.i493
  %storage_as.i494 = getelementptr inbounds %struct.obj, ptr %68, i64 0, i32 2
  %70 = load ptr, ptr %storage_as.i494, align 8, !tbaa !9
  br label %cond.end.i503

sw.default.i497:                                  ; preds = %cond.end.i493
  %call.i496 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %68)
  br label %cond.end.i503

cond.end.i503:                                    ; preds = %cond.end.i483, %sw.default.i487, %sw.default.i497, %sw.bb1.i495, %cond.end.i493, %cdr.exit489
  %retval.0.i498761 = phi ptr [ null, %cdr.exit489 ], [ null, %cond.end.i493 ], [ %70, %sw.bb1.i495 ], [ null, %sw.default.i497 ], [ null, %sw.default.i487 ], [ null, %cond.end.i483 ]
  %71 = load i16, ptr %type.i471, align 2, !tbaa !14
  %conv.i502 = sext i16 %71 to i32
  switch i32 %conv.i502, label %sw.default.i507 [
    i32 0, label %cond.end.i533
    i32 1, label %cdr.exit509
  ]

sw.default.i507:                                  ; preds = %cond.end.i503
  %call.i506 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i533

cdr.exit509:                                      ; preds = %cond.end.i503
  %cdr.i504 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %72 = load ptr, ptr %cdr.i504, align 8, !tbaa !9
  %cmp.i510 = icmp eq ptr %72, null
  br i1 %cmp.i510, label %cond.end.i533, label %cond.end.i513

cond.end.i513:                                    ; preds = %cdr.exit509
  %type.i511 = getelementptr inbounds %struct.obj, ptr %72, i64 0, i32 1
  %73 = load i16, ptr %type.i511, align 2, !tbaa !14
  %conv.i512 = sext i16 %73 to i32
  switch i32 %conv.i512, label %sw.default.i517 [
    i32 0, label %cond.end.i533
    i32 1, label %cdr.exit519
  ]

sw.default.i517:                                  ; preds = %cond.end.i513
  %call.i516 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %72)
  br label %cond.end.i533

cdr.exit519:                                      ; preds = %cond.end.i513
  %cdr.i514 = getelementptr inbounds %struct.obj, ptr %72, i64 0, i32 2, i32 0, i32 1
  %74 = load ptr, ptr %cdr.i514, align 8, !tbaa !9
  %cmp.i520 = icmp eq ptr %74, null
  br i1 %cmp.i520, label %cond.end.i533, label %cond.end.i523

cond.end.i523:                                    ; preds = %cdr.exit519
  %type.i521 = getelementptr inbounds %struct.obj, ptr %74, i64 0, i32 1
  %75 = load i16, ptr %type.i521, align 2, !tbaa !14
  %conv.i522 = sext i16 %75 to i32
  switch i32 %conv.i522, label %sw.default.i527 [
    i32 0, label %cond.end.i533
    i32 1, label %sw.bb1.i525
  ]

sw.bb1.i525:                                      ; preds = %cond.end.i523
  %storage_as.i524 = getelementptr inbounds %struct.obj, ptr %74, i64 0, i32 2
  %76 = load ptr, ptr %storage_as.i524, align 8, !tbaa !9
  br label %cond.end.i533

sw.default.i527:                                  ; preds = %cond.end.i523
  %call.i526 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %74)
  br label %cond.end.i533

cond.end.i533:                                    ; preds = %cond.end.i503, %sw.default.i507, %cdr.exit509, %cond.end.i513, %sw.default.i517, %sw.default.i527, %sw.bb1.i525, %cond.end.i523, %cdr.exit519
  %retval.0.i528785 = phi ptr [ null, %cdr.exit519 ], [ null, %cond.end.i523 ], [ %76, %sw.bb1.i525 ], [ null, %sw.default.i527 ], [ null, %sw.default.i517 ], [ null, %cond.end.i513 ], [ null, %cdr.exit509 ], [ null, %sw.default.i507 ], [ null, %cond.end.i503 ]
  %77 = load i16, ptr %type.i471, align 2, !tbaa !14
  %conv.i532 = sext i16 %77 to i32
  switch i32 %conv.i532, label %sw.default.i537 [
    i32 0, label %cond.end.i573
    i32 1, label %cdr.exit539
  ]

sw.default.i537:                                  ; preds = %cond.end.i533
  %call.i536 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i573

cdr.exit539:                                      ; preds = %cond.end.i533
  %cdr.i534 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %78 = load ptr, ptr %cdr.i534, align 8, !tbaa !9
  %cmp.i540 = icmp eq ptr %78, null
  br i1 %cmp.i540, label %cond.end.i573, label %cond.end.i543

cond.end.i543:                                    ; preds = %cdr.exit539
  %type.i541 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 1
  %79 = load i16, ptr %type.i541, align 2, !tbaa !14
  %conv.i542 = sext i16 %79 to i32
  switch i32 %conv.i542, label %sw.default.i547 [
    i32 0, label %cond.end.i573
    i32 1, label %cdr.exit549
  ]

sw.default.i547:                                  ; preds = %cond.end.i543
  %call.i546 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %78)
  br label %cond.end.i573

cdr.exit549:                                      ; preds = %cond.end.i543
  %cdr.i544 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 2, i32 0, i32 1
  %80 = load ptr, ptr %cdr.i544, align 8, !tbaa !9
  %cmp.i550 = icmp eq ptr %80, null
  br i1 %cmp.i550, label %cond.end.i573, label %cond.end.i553

cond.end.i553:                                    ; preds = %cdr.exit549
  %type.i551 = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 1
  %81 = load i16, ptr %type.i551, align 2, !tbaa !14
  %conv.i552 = sext i16 %81 to i32
  switch i32 %conv.i552, label %sw.default.i557 [
    i32 0, label %cond.end.i573
    i32 1, label %cdr.exit559
  ]

sw.default.i557:                                  ; preds = %cond.end.i553
  %call.i556 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %80)
  br label %cond.end.i573

cdr.exit559:                                      ; preds = %cond.end.i553
  %cdr.i554 = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 2, i32 0, i32 1
  %82 = load ptr, ptr %cdr.i554, align 8, !tbaa !9
  %cmp.i560 = icmp eq ptr %82, null
  br i1 %cmp.i560, label %cond.end.i573, label %cond.end.i563

cond.end.i563:                                    ; preds = %cdr.exit559
  %type.i561 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 1
  %83 = load i16, ptr %type.i561, align 2, !tbaa !14
  %conv.i562 = sext i16 %83 to i32
  switch i32 %conv.i562, label %sw.default.i567 [
    i32 0, label %cond.end.i573
    i32 1, label %sw.bb1.i565
  ]

sw.bb1.i565:                                      ; preds = %cond.end.i563
  %storage_as.i564 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2
  %84 = load ptr, ptr %storage_as.i564, align 8, !tbaa !9
  br label %cond.end.i573

sw.default.i567:                                  ; preds = %cond.end.i563
  %call.i566 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %82)
  br label %cond.end.i573

cond.end.i573:                                    ; preds = %cond.end.i533, %sw.default.i537, %cdr.exit539, %cond.end.i543, %sw.default.i547, %cdr.exit549, %cond.end.i553, %sw.default.i557, %sw.default.i567, %sw.bb1.i565, %cond.end.i563, %cdr.exit559
  %retval.0.i568829 = phi ptr [ null, %cdr.exit559 ], [ null, %cond.end.i563 ], [ %84, %sw.bb1.i565 ], [ null, %sw.default.i567 ], [ null, %sw.default.i557 ], [ null, %cond.end.i553 ], [ null, %cdr.exit549 ], [ null, %sw.default.i547 ], [ null, %cond.end.i543 ], [ null, %cdr.exit539 ], [ null, %sw.default.i537 ], [ null, %cond.end.i533 ]
  %85 = load i16, ptr %type.i471, align 2, !tbaa !14
  %conv.i572 = sext i16 %85 to i32
  switch i32 %conv.i572, label %sw.default.i577 [
    i32 0, label %car.exit619
    i32 1, label %cdr.exit579
  ]

sw.default.i577:                                  ; preds = %cond.end.i573
  %call.i576 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %car.exit619

cdr.exit579:                                      ; preds = %cond.end.i573
  %cdr.i574 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %86 = load ptr, ptr %cdr.i574, align 8, !tbaa !9
  %cmp.i580 = icmp eq ptr %86, null
  br i1 %cmp.i580, label %car.exit619, label %cond.end.i583

cond.end.i583:                                    ; preds = %cdr.exit579
  %type.i581 = getelementptr inbounds %struct.obj, ptr %86, i64 0, i32 1
  %87 = load i16, ptr %type.i581, align 2, !tbaa !14
  %conv.i582 = sext i16 %87 to i32
  switch i32 %conv.i582, label %sw.default.i587 [
    i32 0, label %car.exit619
    i32 1, label %cdr.exit589
  ]

sw.default.i587:                                  ; preds = %cond.end.i583
  %call.i586 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %86)
  br label %car.exit619

cdr.exit589:                                      ; preds = %cond.end.i583
  %cdr.i584 = getelementptr inbounds %struct.obj, ptr %86, i64 0, i32 2, i32 0, i32 1
  %88 = load ptr, ptr %cdr.i584, align 8, !tbaa !9
  %cmp.i590 = icmp eq ptr %88, null
  br i1 %cmp.i590, label %car.exit619, label %cond.end.i593

cond.end.i593:                                    ; preds = %cdr.exit589
  %type.i591 = getelementptr inbounds %struct.obj, ptr %88, i64 0, i32 1
  %89 = load i16, ptr %type.i591, align 2, !tbaa !14
  %conv.i592 = sext i16 %89 to i32
  switch i32 %conv.i592, label %sw.default.i597 [
    i32 0, label %car.exit619
    i32 1, label %cdr.exit599
  ]

sw.default.i597:                                  ; preds = %cond.end.i593
  %call.i596 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %88)
  br label %car.exit619

cdr.exit599:                                      ; preds = %cond.end.i593
  %cdr.i594 = getelementptr inbounds %struct.obj, ptr %88, i64 0, i32 2, i32 0, i32 1
  %90 = load ptr, ptr %cdr.i594, align 8, !tbaa !9
  %cmp.i600 = icmp eq ptr %90, null
  br i1 %cmp.i600, label %car.exit619, label %cond.end.i603

cond.end.i603:                                    ; preds = %cdr.exit599
  %type.i601 = getelementptr inbounds %struct.obj, ptr %90, i64 0, i32 1
  %91 = load i16, ptr %type.i601, align 2, !tbaa !14
  %conv.i602 = sext i16 %91 to i32
  switch i32 %conv.i602, label %sw.default.i607 [
    i32 0, label %car.exit619
    i32 1, label %cdr.exit609
  ]

sw.default.i607:                                  ; preds = %cond.end.i603
  %call.i606 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %90)
  br label %car.exit619

cdr.exit609:                                      ; preds = %cond.end.i603
  %cdr.i604 = getelementptr inbounds %struct.obj, ptr %90, i64 0, i32 2, i32 0, i32 1
  %92 = load ptr, ptr %cdr.i604, align 8, !tbaa !9
  %cmp.i610 = icmp eq ptr %92, null
  br i1 %cmp.i610, label %car.exit619, label %cond.end.i613

cond.end.i613:                                    ; preds = %cdr.exit609
  %type.i611 = getelementptr inbounds %struct.obj, ptr %92, i64 0, i32 1
  %93 = load i16, ptr %type.i611, align 2, !tbaa !14
  %conv.i612 = sext i16 %93 to i32
  switch i32 %conv.i612, label %sw.default.i617 [
    i32 0, label %car.exit619
    i32 1, label %sw.bb1.i615
  ]

sw.bb1.i615:                                      ; preds = %cond.end.i613
  %storage_as.i614 = getelementptr inbounds %struct.obj, ptr %92, i64 0, i32 2
  %94 = load ptr, ptr %storage_as.i614, align 8, !tbaa !9
  br label %car.exit619

sw.default.i617:                                  ; preds = %cond.end.i613
  %call.i616 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %92)
  br label %car.exit619

car.exit619:                                      ; preds = %sw.bb62, %cond.end.i573, %sw.default.i577, %cdr.exit579, %cond.end.i583, %sw.default.i587, %cdr.exit589, %cond.end.i593, %sw.default.i597, %cdr.exit599, %cond.end.i603, %sw.default.i607, %cdr.exit609, %cond.end.i613, %sw.bb1.i615, %sw.default.i617
  %retval.0.i568830852865872885 = phi ptr [ %retval.0.i568829, %sw.default.i617 ], [ %retval.0.i568829, %sw.bb1.i615 ], [ %retval.0.i568829, %cond.end.i613 ], [ %retval.0.i568829, %cdr.exit609 ], [ %retval.0.i568829, %cdr.exit599 ], [ %retval.0.i568829, %cond.end.i603 ], [ %retval.0.i568829, %sw.default.i607 ], [ %retval.0.i568829, %cdr.exit589 ], [ %retval.0.i568829, %cond.end.i593 ], [ %retval.0.i568829, %sw.default.i597 ], [ %retval.0.i568829, %cdr.exit579 ], [ %retval.0.i568829, %cond.end.i583 ], [ %retval.0.i568829, %sw.default.i587 ], [ null, %sw.bb62 ], [ %retval.0.i568829, %cond.end.i573 ], [ %retval.0.i568829, %sw.default.i577 ]
  %retval.0.i528786800810816828853864873884 = phi ptr [ %retval.0.i528785, %sw.default.i617 ], [ %retval.0.i528785, %sw.bb1.i615 ], [ %retval.0.i528785, %cond.end.i613 ], [ %retval.0.i528785, %cdr.exit609 ], [ %retval.0.i528785, %cdr.exit599 ], [ %retval.0.i528785, %cond.end.i603 ], [ %retval.0.i528785, %sw.default.i607 ], [ %retval.0.i528785, %cdr.exit589 ], [ %retval.0.i528785, %cond.end.i593 ], [ %retval.0.i528785, %sw.default.i597 ], [ %retval.0.i528785, %cdr.exit579 ], [ %retval.0.i528785, %cond.end.i583 ], [ %retval.0.i528785, %sw.default.i587 ], [ null, %sw.bb62 ], [ %retval.0.i528785, %cond.end.i573 ], [ %retval.0.i528785, %sw.default.i577 ]
  %retval.0.i478752756760771776784801809817826854863874883 = phi ptr [ %retval.0.i478.ph, %sw.default.i617 ], [ %retval.0.i478.ph, %sw.bb1.i615 ], [ %retval.0.i478.ph, %cond.end.i613 ], [ %retval.0.i478.ph, %cdr.exit609 ], [ %retval.0.i478.ph, %cdr.exit599 ], [ %retval.0.i478.ph, %cond.end.i603 ], [ %retval.0.i478.ph, %sw.default.i607 ], [ %retval.0.i478.ph, %cdr.exit589 ], [ %retval.0.i478.ph, %cond.end.i593 ], [ %retval.0.i478.ph, %sw.default.i597 ], [ %retval.0.i478.ph, %cdr.exit579 ], [ %retval.0.i478.ph, %cond.end.i583 ], [ %retval.0.i478.ph, %sw.default.i587 ], [ null, %sw.bb62 ], [ %retval.0.i478.ph, %cond.end.i573 ], [ %retval.0.i478.ph, %sw.default.i577 ]
  %retval.0.i498762770777782802808818824855862875882 = phi ptr [ %retval.0.i498761, %sw.default.i617 ], [ %retval.0.i498761, %sw.bb1.i615 ], [ %retval.0.i498761, %cond.end.i613 ], [ %retval.0.i498761, %cdr.exit609 ], [ %retval.0.i498761, %cdr.exit599 ], [ %retval.0.i498761, %cond.end.i603 ], [ %retval.0.i498761, %sw.default.i607 ], [ %retval.0.i498761, %cdr.exit589 ], [ %retval.0.i498761, %cond.end.i593 ], [ %retval.0.i498761, %sw.default.i597 ], [ %retval.0.i498761, %cdr.exit579 ], [ %retval.0.i498761, %cond.end.i583 ], [ %retval.0.i498761, %sw.default.i587 ], [ null, %sw.bb62 ], [ %retval.0.i498761, %cond.end.i573 ], [ %retval.0.i498761, %sw.default.i577 ]
  %retval.0.i618 = phi ptr [ null, %sw.default.i617 ], [ %94, %sw.bb1.i615 ], [ null, %cond.end.i613 ], [ null, %cdr.exit609 ], [ null, %cdr.exit599 ], [ null, %cond.end.i603 ], [ null, %sw.default.i607 ], [ null, %cdr.exit589 ], [ null, %cond.end.i593 ], [ null, %sw.default.i597 ], [ null, %cdr.exit579 ], [ null, %cond.end.i583 ], [ null, %sw.default.i587 ], [ null, %sw.bb62 ], [ null, %cond.end.i573 ], [ null, %sw.default.i577 ]
  %call80 = call ptr %64(ptr noundef %retval.0.i478752756760771776784801809817826854863874883, ptr noundef %retval.0.i498762770777782802808818824855862875882, ptr noundef %retval.0.i528786800810816828853864873884, ptr noundef %retval.0.i568830852865872885, ptr noundef %retval.0.i618) #33
  br label %cleanup

sw.bb81:                                          ; preds = %cond.end
  %f83 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %95 = load ptr, ptr %f83, align 8, !tbaa !9
  %call84 = call ptr %95(ptr noundef %args) #33
  br label %cleanup

sw.bb85:                                          ; preds = %cond.end, %cond.end, %cond.end
  %call86 = call ptr @err(ptr noundef nonnull @.str.90, ptr noundef nonnull %1)
  br label %cleanup

sw.bb87:                                          ; preds = %cond.end
  %storage_as88 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %code = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %96 = load ptr, ptr %code, align 8, !tbaa !9
  %cmp89 = icmp eq ptr %96, null
  br i1 %cmp89, label %sw.default, label %cond.end97

cond.end97:                                       ; preds = %sw.bb87
  %type95 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 1
  %97 = load i16, ptr %type95, align 2, !tbaa !14
  %conv96 = sext i16 %97 to i32
  switch i32 %conv96, label %sw.default [
    i32 1, label %sw.bb99
    i32 5, label %sw.bb109
    i32 6, label %sw.bb117
    i32 7, label %sw.bb126
    i32 19, label %sw.bb137
    i32 20, label %sw.bb151
    i32 8, label %sw.bb169
  ]

sw.bb99:                                          ; preds = %cond.end97
  %call102 = call ptr @cdr(ptr noundef nonnull %96)
  %98 = load ptr, ptr %fcn.addr, align 8, !tbaa !5
  %code104 = getelementptr inbounds %struct.obj, ptr %98, i64 0, i32 2, i32 0, i32 1
  %99 = load ptr, ptr %code104, align 8, !tbaa !9
  %call105 = call ptr @car(ptr noundef %99)
  %100 = load ptr, ptr %fcn.addr, align 8, !tbaa !5
  %storage_as106 = getelementptr inbounds %struct.obj, ptr %100, i64 0, i32 2
  %101 = load ptr, ptr %storage_as106, align 8, !tbaa !9
  %call107 = call ptr @extend_env(ptr noundef %args, ptr noundef %call105, ptr noundef %101)
  %call108 = call ptr @leval(ptr noundef %call102, ptr noundef %call107)
  br label %cleanup

sw.bb109:                                         ; preds = %cond.end97
  %f113 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  %102 = load ptr, ptr %f113, align 8, !tbaa !9
  %103 = load ptr, ptr %storage_as88, align 8, !tbaa !9
  %call116 = call ptr %102(ptr noundef %103) #33
  br label %cleanup

sw.bb117:                                         ; preds = %cond.end97
  %f121 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  %104 = load ptr, ptr %f121, align 8, !tbaa !9
  %105 = load ptr, ptr %storage_as88, align 8, !tbaa !9
  %call124 = call ptr @car(ptr noundef %args)
  %call125 = call ptr %104(ptr noundef %105, ptr noundef %call124) #33
  br label %cleanup

sw.bb126:                                         ; preds = %cond.end97
  %f130 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  %106 = load ptr, ptr %f130, align 8, !tbaa !9
  %107 = load ptr, ptr %storage_as88, align 8, !tbaa !9
  %call133 = call ptr @car(ptr noundef %args)
  %call134 = call ptr @cdr(ptr noundef %args)
  %call135 = call ptr @car(ptr noundef %call134)
  %call136 = call ptr %106(ptr noundef %107, ptr noundef %call133, ptr noundef %call135) #33
  br label %cleanup

sw.bb137:                                         ; preds = %cond.end97
  %f141 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  %108 = load ptr, ptr %f141, align 8, !tbaa !9
  %109 = load ptr, ptr %storage_as88, align 8, !tbaa !9
  %call144 = call ptr @car(ptr noundef %args)
  %call145 = call ptr @cdr(ptr noundef %args)
  %call146 = call ptr @car(ptr noundef %call145)
  %call147 = call ptr @cdr(ptr noundef %args)
  %call148 = call ptr @cdr(ptr noundef %call147)
  %call149 = call ptr @car(ptr noundef %call148)
  %call150 = call ptr %108(ptr noundef %109, ptr noundef %call144, ptr noundef %call146, ptr noundef %call149) #33
  br label %cleanup

sw.bb151:                                         ; preds = %cond.end97
  %f155 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  %110 = load ptr, ptr %f155, align 8, !tbaa !9
  %111 = load ptr, ptr %storage_as88, align 8, !tbaa !9
  %call158 = call ptr @car(ptr noundef %args)
  %call159 = call ptr @cdr(ptr noundef %args)
  %call160 = call ptr @car(ptr noundef %call159)
  %call161 = call ptr @cdr(ptr noundef %args)
  %call162 = call ptr @cdr(ptr noundef %call161)
  %call163 = call ptr @car(ptr noundef %call162)
  %call164 = call ptr @cdr(ptr noundef %args)
  %call165 = call ptr @cdr(ptr noundef %call164)
  %call166 = call ptr @cdr(ptr noundef %call165)
  %call167 = call ptr @car(ptr noundef %call166)
  %call168 = call ptr %110(ptr noundef %111, ptr noundef %call158, ptr noundef %call160, ptr noundef %call163, ptr noundef %call167) #33
  br label %cleanup

sw.bb169:                                         ; preds = %cond.end97
  %f173 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  %112 = load ptr, ptr %f173, align 8, !tbaa !9
  %113 = load ptr, ptr %storage_as88, align 8, !tbaa !9
  %call176 = call ptr @cons(ptr noundef %113, ptr noundef %args)
  %call177 = call ptr %112(ptr noundef %call176) #33
  br label %cleanup

sw.default:                                       ; preds = %sw.bb87, %cond.end97
  %call.i620 = call ptr @err(ptr noundef nonnull @.str.88, ptr noundef nonnull %1)
  br label %cleanup

cond.false183:                                    ; preds = %cond.end
  %114 = sext i16 %2 to i64
  br label %cond.end186

cond.end186:                                      ; preds = %if.end, %cond.false183
  %cond187 = phi i64 [ %114, %cond.false183 ], [ 0, %if.end ]
  %115 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i621 = icmp eq ptr %115, null
  br i1 %cmp.i621, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end186
  %calloc.i = call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %cond.end186
  %116 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %115, %cond.end186 ]
  %or.cond.i = icmp ult i64 %cond187, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %leval = getelementptr inbounds %struct.user_type_hooks, ptr %116, i64 %cond187, i32 5
  %117 = load ptr, ptr %leval, align 8, !tbaa !52
  %tobool.not = icmp eq ptr %117, null
  %118 = load ptr, ptr %fcn.addr, align 8, !tbaa !5
  br i1 %tobool.not, label %if.else, label %if.then190

if.else.i:                                        ; preds = %if.end.i
  %call4.i = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then190:                                       ; preds = %if.then3.i
  %call191 = call ptr @err(ptr noundef nonnull @.str.91, ptr noundef %118)
  br label %cleanup

if.else:                                          ; preds = %if.then3.i
  %call192 = call ptr @err(ptr noundef nonnull @.str.90, ptr noundef %118)
  br label %cleanup

cleanup:                                          ; preds = %cond.end29, %for.body, %sw.default.i297, %cond.end.i293, %car.exit289, %cdr.exit299, %cond.end.i303, %sw.default.i307, %cdr.exit309, %if.else, %if.then190, %sw.default, %sw.bb169, %sw.bb151, %sw.bb137, %sw.bb126, %sw.bb117, %sw.bb109, %sw.bb99, %sw.bb85, %sw.bb81, %car.exit619, %car.exit469, %car.exit369, %car.exit259, %car.exit, %sw.bb
  %retval.0 = phi ptr [ null, %if.then190 ], [ null, %if.else ], [ null, %sw.default ], [ %call177, %sw.bb169 ], [ %call168, %sw.bb151 ], [ %call150, %sw.bb137 ], [ %call136, %sw.bb126 ], [ %call125, %sw.bb117 ], [ %call116, %sw.bb109 ], [ %call108, %sw.bb99 ], [ null, %sw.bb85 ], [ %call84, %sw.bb81 ], [ %call80, %car.exit619 ], [ %call61, %car.exit469 ], [ %call47, %car.exit369 ], [ %call13, %car.exit259 ], [ %call6, %car.exit ], [ %call, %sw.bb ], [ %call20646, %cdr.exit309 ], [ %call20646, %sw.default.i297 ], [ %call20646, %cond.end.i293 ], [ %call20, %car.exit289 ], [ %call20646, %cdr.exit299 ], [ %call20646, %cond.end.i303 ], [ %call20646, %sw.default.i307 ], [ %acc.0889, %cond.end29 ], [ %call36, %for.body ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_setq(ptr noundef %args, ptr noundef %env) #6 {
entry:
  %cmp.i = icmp eq ptr %args, null
  br i1 %cmp.i, label %car.exit24.thread, label %cond.end.i

car.exit24.thread:                                ; preds = %entry
  %call337 = tail call ptr @leval(ptr noundef null, ptr noundef %env)
  br label %if.then.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %cond.end.i10
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %cond.end.i10

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  %.pre = load i16, ptr %type.i, align 2, !tbaa !14
  br label %cond.end.i10

cond.end.i10:                                     ; preds = %cond.end.i, %sw.bb1.i, %sw.default.i
  %2 = phi i16 [ %0, %cond.end.i ], [ %0, %sw.bb1.i ], [ %.pre, %sw.default.i ]
  %retval.0.i.ph = phi ptr [ null, %cond.end.i ], [ %1, %sw.bb1.i ], [ null, %sw.default.i ]
  %conv.i9 = sext i16 %2 to i32
  switch i32 %conv.i9, label %sw.default.i13 [
    i32 0, label %car.exit24
    i32 1, label %cdr.exit
  ]

sw.default.i13:                                   ; preds = %cond.end.i10
  %call.i12 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %car.exit24

cdr.exit:                                         ; preds = %cond.end.i10
  %cdr.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i15 = icmp eq ptr %3, null
  br i1 %cmp.i15, label %car.exit24, label %cond.end.i18

cond.end.i18:                                     ; preds = %cdr.exit
  %type.i16 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %4 = load i16, ptr %type.i16, align 2, !tbaa !14
  %conv.i17 = sext i16 %4 to i32
  switch i32 %conv.i17, label %sw.default.i22 [
    i32 0, label %car.exit24
    i32 1, label %sw.bb1.i20
  ]

sw.bb1.i20:                                       ; preds = %cond.end.i18
  %storage_as.i19 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %storage_as.i19, align 8, !tbaa !9
  br label %car.exit24

sw.default.i22:                                   ; preds = %cond.end.i18
  %call.i21 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  br label %car.exit24

car.exit24:                                       ; preds = %cond.end.i10, %sw.default.i13, %cdr.exit, %cond.end.i18, %sw.bb1.i20, %sw.default.i22
  %retval.0.i23 = phi ptr [ null, %sw.default.i22 ], [ %5, %sw.bb1.i20 ], [ null, %cond.end.i18 ], [ null, %cdr.exit ], [ null, %sw.default.i13 ], [ null, %cond.end.i10 ]
  %call3 = tail call ptr @leval(ptr noundef %retval.0.i23, ptr noundef %env)
  %cmp.i25 = icmp eq ptr %retval.0.i.ph, null
  br i1 %cmp.i25, label %if.then.i, label %cond.false.i

cond.false.i:                                     ; preds = %car.exit24
  %type.i26 = getelementptr inbounds %struct.obj, ptr %retval.0.i.ph, i64 0, i32 1
  %6 = load i16, ptr %type.i26, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 3
  br i1 %7, label %setvar.exit, label %if.then.i

if.then.i:                                        ; preds = %car.exit24.thread, %cond.false.i, %car.exit24
  %call342 = phi ptr [ %call337, %car.exit24.thread ], [ %call3, %cond.false.i ], [ %call3, %car.exit24 ]
  %retval.0.i303439 = phi ptr [ null, %car.exit24.thread ], [ %retval.0.i.ph, %cond.false.i ], [ null, %car.exit24 ]
  %call.i27 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %retval.0.i303439) #38
  br label %setvar.exit

setvar.exit:                                      ; preds = %cond.false.i, %if.then.i
  %call341 = phi ptr [ %call3, %cond.false.i ], [ %call342, %if.then.i ]
  %retval.0.i303440 = phi ptr [ %retval.0.i.ph, %cond.false.i ], [ %retval.0.i303439, %if.then.i ]
  %call3.i = tail call ptr @envlookup(ptr noundef %retval.0.i303440, ptr noundef %env) #38
  %cmp4.i = icmp eq ptr %call3.i, null
  %storage_as8.i = getelementptr inbounds %struct.obj, ptr %call3.i, i64 0, i32 2
  %vcell.i = getelementptr inbounds %struct.obj, ptr %retval.0.i303440, i64 0, i32 2, i32 0, i32 1
  %storage_as8.sink.i = select i1 %cmp4.i, ptr %vcell.i, ptr %storage_as8.i
  store ptr %call341, ptr %storage_as8.sink.i, align 8, !tbaa !9
  ret ptr %call341
}

; Function Attrs: nounwind uwtable
define dso_local ptr @syntax_define(ptr noundef %args) local_unnamed_addr #6 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %cons.exit136, %entry
  %args.tr = phi ptr [ %args, %entry ], [ %z.0.i132, %cons.exit136 ]
  %cmp.i.not = icmp eq ptr %args.tr, null
  br i1 %cmp.i.not, label %cdr.exit, label %cond.end.i

cond.end.i:                                       ; preds = %tailrecurse
  %type.i = getelementptr inbounds %struct.obj, ptr %args.tr, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %cond.end.i32
    i32 1, label %car.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args.tr)
  %.pre = load i16, ptr %type.i, align 2, !tbaa !14
  br label %cond.end.i32

car.exit:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args.tr, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %cond.end.i32, label %cond.false

cond.false:                                       ; preds = %car.exit
  %cond137 = icmp eq i16 %0, 1
  br i1 %cond137, label %cond.end, label %sw.default.i26

sw.default.i26:                                   ; preds = %cond.false
  %call.i25 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args.tr)
  unreachable

cond.end:                                         ; preds = %cond.false
  %type = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type, align 2, !tbaa !14
  %cmp2 = icmp eq i16 %2, 3
  br i1 %cmp2, label %return, label %car.exit38

cond.end.i32:                                     ; preds = %cond.end.i, %sw.default.i, %car.exit
  %3 = phi i16 [ %0, %cond.end.i ], [ %.pre, %sw.default.i ], [ %0, %car.exit ]
  %conv.i31 = sext i16 %3 to i32
  switch i32 %conv.i31, label %sw.default.i36 [
    i32 0, label %cond.end.i52
    i32 1, label %car.exit38
  ]

sw.default.i36:                                   ; preds = %cond.end.i32
  %call.i35 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args.tr)
  br label %cond.end.i52

car.exit38:                                       ; preds = %cond.end, %cond.end.i32
  %storage_as.i33 = getelementptr inbounds %struct.obj, ptr %args.tr, i64 0, i32 2
  %4 = load ptr, ptr %storage_as.i33, align 8, !tbaa !9
  %cmp.i39 = icmp eq ptr %4, null
  br i1 %cmp.i39, label %cond.end.i52, label %cond.end.i42

cond.end.i42:                                     ; preds = %car.exit38
  %type.i40 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %5 = load i16, ptr %type.i40, align 2, !tbaa !14
  %conv.i41 = sext i16 %5 to i32
  switch i32 %conv.i41, label %sw.default.i46 [
    i32 0, label %cond.end.i52
    i32 1, label %sw.bb1.i44
  ]

sw.bb1.i44:                                       ; preds = %cond.end.i42
  %storage_as.i43 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %storage_as.i43, align 8, !tbaa !9
  br label %cond.end.i52

sw.default.i46:                                   ; preds = %cond.end.i42
  %call.i45 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %4)
  br label %cond.end.i52

cond.end.i52:                                     ; preds = %cond.end.i32, %sw.default.i36, %sw.default.i46, %sw.bb1.i44, %cond.end.i42, %car.exit38
  %retval.0.i47147 = phi ptr [ null, %car.exit38 ], [ null, %cond.end.i42 ], [ %6, %sw.bb1.i44 ], [ null, %sw.default.i46 ], [ null, %sw.default.i36 ], [ null, %cond.end.i32 ]
  %7 = load ptr, ptr @sym_lambda, align 8, !tbaa !5
  %8 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i51 = sext i16 %8 to i32
  switch i32 %conv.i51, label %sw.default.i56 [
    i32 0, label %cond.end.i70
    i32 1, label %car.exit58
  ]

sw.default.i56:                                   ; preds = %cond.end.i52
  %call.i55 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args.tr)
  br label %cond.end.i70

car.exit58:                                       ; preds = %cond.end.i52
  %storage_as.i53 = getelementptr inbounds %struct.obj, ptr %args.tr, i64 0, i32 2
  %9 = load ptr, ptr %storage_as.i53, align 8, !tbaa !9
  %cmp.i59 = icmp eq ptr %9, null
  br i1 %cmp.i59, label %cond.end.i70, label %cond.end.i62

cond.end.i62:                                     ; preds = %car.exit58
  %type.i60 = getelementptr inbounds %struct.obj, ptr %9, i64 0, i32 1
  %10 = load i16, ptr %type.i60, align 2, !tbaa !14
  %conv.i61 = sext i16 %10 to i32
  switch i32 %conv.i61, label %sw.default.i65 [
    i32 0, label %cond.end.i70
    i32 1, label %sw.bb1.i63
  ]

sw.bb1.i63:                                       ; preds = %cond.end.i62
  %cdr.i = getelementptr inbounds %struct.obj, ptr %9, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  br label %cond.end.i70

sw.default.i65:                                   ; preds = %cond.end.i62
  %call.i64 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %9)
  br label %cond.end.i70

cdr.exit:                                         ; preds = %tailrecurse
  %12 = load ptr, ptr @sym_lambda, align 8, !tbaa !5
  br label %cdr.exit76

cond.end.i70:                                     ; preds = %cond.end.i52, %sw.default.i56, %sw.default.i65, %sw.bb1.i63, %cond.end.i62, %car.exit58
  %retval.0.i66159 = phi ptr [ null, %car.exit58 ], [ null, %cond.end.i62 ], [ %11, %sw.bb1.i63 ], [ null, %sw.default.i65 ], [ null, %sw.default.i56 ], [ null, %cond.end.i52 ]
  %13 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i69 = sext i16 %13 to i32
  switch i32 %conv.i69, label %sw.default.i74 [
    i32 0, label %cdr.exit76
    i32 1, label %sw.bb1.i72
  ]

sw.bb1.i72:                                       ; preds = %cond.end.i70
  %cdr.i71 = getelementptr inbounds %struct.obj, ptr %args.tr, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %cdr.i71, align 8, !tbaa !9
  br label %cdr.exit76

sw.default.i74:                                   ; preds = %cond.end.i70
  %call.i73 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args.tr)
  br label %cdr.exit76

cdr.exit76:                                       ; preds = %cdr.exit, %cond.end.i70, %sw.bb1.i72, %sw.default.i74
  %retval.0.i66160 = phi ptr [ %retval.0.i66159, %sw.default.i74 ], [ %retval.0.i66159, %sw.bb1.i72 ], [ %retval.0.i66159, %cond.end.i70 ], [ null, %cdr.exit ]
  %15 = phi ptr [ %7, %sw.default.i74 ], [ %7, %sw.bb1.i72 ], [ %7, %cond.end.i70 ], [ %12, %cdr.exit ]
  %retval.0.i47148154158 = phi ptr [ %retval.0.i47147, %sw.default.i74 ], [ %retval.0.i47147, %sw.bb1.i72 ], [ %retval.0.i47147, %cond.end.i70 ], [ null, %cdr.exit ]
  %retval.0.i75 = phi ptr [ null, %sw.default.i74 ], [ %14, %sw.bb1.i72 ], [ null, %cond.end.i70 ], [ null, %cdr.exit ]
  %16 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i77 = icmp eq i64 %16, 1
  br i1 %cmp.i77, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %cdr.exit76
  %17 = load ptr, ptr @heap, align 8, !tbaa !5
  %18 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %17, %18
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %17, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %cdr.exit76
  %19 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %19, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %20 = phi ptr [ %.pre.i, %if.then4.i ], [ %19, %if.else.i ]
  %cdr.i78 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %21 = load ptr, ptr %cdr.i78, align 8, !tbaa !9
  store ptr %21, ptr @freelist, align 8, !tbaa !5
  %22 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %22, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %17, %if.end.i ], [ %20, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i79 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i79, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %retval.0.i66160, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %retval.0.i75, ptr %cdr9.i, align 8, !tbaa !9
  %23 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i80 = icmp eq i64 %23, 1
  br i1 %cmp.i80, label %if.then.i82, label %if.else.i88

if.then.i82:                                      ; preds = %cons.exit
  %24 = load ptr, ptr @heap, align 8, !tbaa !5
  %25 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i81 = icmp ult ptr %24, %25
  br i1 %cmp1.not.i81, label %if.end.i86, label %if.then2.i84

if.then2.i84:                                     ; preds = %if.then.i82
  %call.i.i83 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i86

if.end.i86:                                       ; preds = %if.then2.i84, %if.then.i82
  %add.ptr.i85 = getelementptr inbounds %struct.obj, ptr %24, i64 1
  store ptr %add.ptr.i85, ptr @heap, align 8, !tbaa !5
  br label %cons.exit98

if.else.i88:                                      ; preds = %cons.exit
  %26 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i87 = icmp eq ptr %26, null
  br i1 %cmp3.i87, label %if.then4.i90, label %if.end5.i93

if.then4.i90:                                     ; preds = %if.else.i88
  tail call void @gc_for_newcell() #38
  %.pre.i89 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i93

if.end5.i93:                                      ; preds = %if.then4.i90, %if.else.i88
  %27 = phi ptr [ %.pre.i89, %if.then4.i90 ], [ %26, %if.else.i88 ]
  %cdr.i91 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 2, i32 0, i32 1
  %28 = load ptr, ptr %cdr.i91, align 8, !tbaa !9
  store ptr %28, ptr @freelist, align 8, !tbaa !5
  %29 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i92 = add nsw i64 %29, 1
  store i64 %inc.i92, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit98

cons.exit98:                                      ; preds = %if.end.i86, %if.end5.i93
  %z.0.i94 = phi ptr [ %24, %if.end.i86 ], [ %27, %if.end5.i93 ]
  store i16 0, ptr %z.0.i94, align 8, !tbaa !35
  %type.i95 = getelementptr inbounds %struct.obj, ptr %z.0.i94, i64 0, i32 1
  store i16 1, ptr %type.i95, align 2, !tbaa !14
  %storage_as7.i96 = getelementptr inbounds %struct.obj, ptr %z.0.i94, i64 0, i32 2
  store ptr %15, ptr %storage_as7.i96, align 8, !tbaa !9
  %cdr9.i97 = getelementptr inbounds %struct.obj, ptr %z.0.i94, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i, ptr %cdr9.i97, align 8, !tbaa !9
  %30 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i99 = icmp eq i64 %30, 1
  br i1 %cmp.i99, label %if.then.i101, label %if.else.i107

if.then.i101:                                     ; preds = %cons.exit98
  %31 = load ptr, ptr @heap, align 8, !tbaa !5
  %32 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i100 = icmp ult ptr %31, %32
  br i1 %cmp1.not.i100, label %if.end.i105, label %if.then2.i103

if.then2.i103:                                    ; preds = %if.then.i101
  %call.i.i102 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i105

if.end.i105:                                      ; preds = %if.then2.i103, %if.then.i101
  %add.ptr.i104 = getelementptr inbounds %struct.obj, ptr %31, i64 1
  store ptr %add.ptr.i104, ptr @heap, align 8, !tbaa !5
  br label %cons.exit117

if.else.i107:                                     ; preds = %cons.exit98
  %33 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i106 = icmp eq ptr %33, null
  br i1 %cmp3.i106, label %if.then4.i109, label %if.end5.i112

if.then4.i109:                                    ; preds = %if.else.i107
  tail call void @gc_for_newcell() #38
  %.pre.i108 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i112

if.end5.i112:                                     ; preds = %if.then4.i109, %if.else.i107
  %34 = phi ptr [ %.pre.i108, %if.then4.i109 ], [ %33, %if.else.i107 ]
  %cdr.i110 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 2, i32 0, i32 1
  %35 = load ptr, ptr %cdr.i110, align 8, !tbaa !9
  store ptr %35, ptr @freelist, align 8, !tbaa !5
  %36 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i111 = add nsw i64 %36, 1
  store i64 %inc.i111, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit117

cons.exit117:                                     ; preds = %if.end.i105, %if.end5.i112
  %z.0.i113 = phi ptr [ %31, %if.end.i105 ], [ %34, %if.end5.i112 ]
  store i16 0, ptr %z.0.i113, align 8, !tbaa !35
  %type.i114 = getelementptr inbounds %struct.obj, ptr %z.0.i113, i64 0, i32 1
  store i16 1, ptr %type.i114, align 2, !tbaa !14
  %storage_as7.i115 = getelementptr inbounds %struct.obj, ptr %z.0.i113, i64 0, i32 2
  store ptr %z.0.i94, ptr %storage_as7.i115, align 8, !tbaa !9
  %cdr9.i116 = getelementptr inbounds %struct.obj, ptr %z.0.i113, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i116, align 8, !tbaa !9
  %37 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i118 = icmp eq i64 %37, 1
  br i1 %cmp.i118, label %if.then.i120, label %if.else.i126

if.then.i120:                                     ; preds = %cons.exit117
  %38 = load ptr, ptr @heap, align 8, !tbaa !5
  %39 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i119 = icmp ult ptr %38, %39
  br i1 %cmp1.not.i119, label %if.end.i124, label %if.then2.i122

if.then2.i122:                                    ; preds = %if.then.i120
  %call.i.i121 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i124

if.end.i124:                                      ; preds = %if.then2.i122, %if.then.i120
  %add.ptr.i123 = getelementptr inbounds %struct.obj, ptr %38, i64 1
  store ptr %add.ptr.i123, ptr @heap, align 8, !tbaa !5
  br label %cons.exit136

if.else.i126:                                     ; preds = %cons.exit117
  %40 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i125 = icmp eq ptr %40, null
  br i1 %cmp3.i125, label %if.then4.i128, label %if.end5.i131

if.then4.i128:                                    ; preds = %if.else.i126
  tail call void @gc_for_newcell() #38
  %.pre.i127 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i131

if.end5.i131:                                     ; preds = %if.then4.i128, %if.else.i126
  %41 = phi ptr [ %.pre.i127, %if.then4.i128 ], [ %40, %if.else.i126 ]
  %cdr.i129 = getelementptr inbounds %struct.obj, ptr %41, i64 0, i32 2, i32 0, i32 1
  %42 = load ptr, ptr %cdr.i129, align 8, !tbaa !9
  store ptr %42, ptr @freelist, align 8, !tbaa !5
  %43 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i130 = add nsw i64 %43, 1
  store i64 %inc.i130, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit136

cons.exit136:                                     ; preds = %if.end.i124, %if.end5.i131
  %z.0.i132 = phi ptr [ %38, %if.end.i124 ], [ %41, %if.end5.i131 ]
  store i16 0, ptr %z.0.i132, align 8, !tbaa !35
  %type.i133 = getelementptr inbounds %struct.obj, ptr %z.0.i132, i64 0, i32 1
  store i16 1, ptr %type.i133, align 2, !tbaa !14
  %storage_as7.i134 = getelementptr inbounds %struct.obj, ptr %z.0.i132, i64 0, i32 2
  store ptr %retval.0.i47148154158, ptr %storage_as7.i134, align 8, !tbaa !9
  %cdr9.i135 = getelementptr inbounds %struct.obj, ptr %z.0.i132, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i113, ptr %cdr9.i135, align 8, !tbaa !9
  br label %tailrecurse

return:                                           ; preds = %cond.end
  ret ptr %args.tr
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_define(ptr noundef %args, ptr noundef %env) #6 {
entry:
  %call = tail call ptr @syntax_define(ptr noundef %args)
  %cmp.i = icmp eq ptr %call, null
  br i1 %cmp.i, label %if.end, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %call, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %if.end.thread145
    i32 1, label %car.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %call)
  br label %if.end.thread145

car.exit:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %call, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %if.end.thread142, label %cond.end

if.end.thread142:                                 ; preds = %car.exit
  %call4144 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef null)
  br label %cond.end.i48

cond.end:                                         ; preds = %car.exit
  %type = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type, align 2, !tbaa !14
  %cmp2.not = icmp eq i16 %2, 3
  br i1 %cmp2.not, label %cond.end.i48, label %if.end.thread139

if.end.thread139:                                 ; preds = %cond.end
  %call4141 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef nonnull %1)
  br label %cond.end.i48

if.end.thread145:                                 ; preds = %sw.default.i, %cond.end.i
  %call4146 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef null)
  br label %cond.end.i48

if.end:                                           ; preds = %entry
  %call4 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef null)
  br label %car.exit62

cond.end.i48:                                     ; preds = %cond.end, %if.end.thread145, %if.end.thread142, %if.end.thread139
  %retval.0.i130135137 = phi ptr [ %1, %if.end.thread139 ], [ null, %if.end.thread142 ], [ null, %if.end.thread145 ], [ %1, %cond.end ]
  %3 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i47 = sext i16 %3 to i32
  switch i32 %conv.i47, label %sw.default.i51 [
    i32 0, label %car.exit62
    i32 1, label %cdr.exit
  ]

sw.default.i51:                                   ; preds = %cond.end.i48
  %call.i50 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %call)
  br label %car.exit62

cdr.exit:                                         ; preds = %cond.end.i48
  %cdr.i = getelementptr inbounds %struct.obj, ptr %call, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i53 = icmp eq ptr %4, null
  br i1 %cmp.i53, label %car.exit62, label %cond.end.i56

cond.end.i56:                                     ; preds = %cdr.exit
  %type.i54 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %5 = load i16, ptr %type.i54, align 2, !tbaa !14
  %conv.i55 = sext i16 %5 to i32
  switch i32 %conv.i55, label %sw.default.i60 [
    i32 0, label %car.exit62
    i32 1, label %sw.bb1.i58
  ]

sw.bb1.i58:                                       ; preds = %cond.end.i56
  %storage_as.i57 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %storage_as.i57, align 8, !tbaa !9
  br label %car.exit62

sw.default.i60:                                   ; preds = %cond.end.i56
  %call.i59 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %4)
  br label %car.exit62

car.exit62:                                       ; preds = %if.end, %cond.end.i48, %sw.default.i51, %cdr.exit, %cond.end.i56, %sw.bb1.i58, %sw.default.i60
  %retval.0.i130135138150 = phi ptr [ %retval.0.i130135137, %sw.default.i60 ], [ %retval.0.i130135137, %sw.bb1.i58 ], [ %retval.0.i130135137, %cond.end.i56 ], [ %retval.0.i130135137, %cdr.exit ], [ null, %if.end ], [ %retval.0.i130135137, %cond.end.i48 ], [ %retval.0.i130135137, %sw.default.i51 ]
  %retval.0.i61 = phi ptr [ null, %sw.default.i60 ], [ %6, %sw.bb1.i58 ], [ null, %cond.end.i56 ], [ null, %cdr.exit ], [ null, %if.end ], [ null, %cond.end.i48 ], [ null, %sw.default.i51 ]
  %call7 = tail call ptr @leval(ptr noundef %retval.0.i61, ptr noundef %env)
  %call8 = tail call ptr @envlookup(ptr noundef %retval.0.i130135138150, ptr noundef %env)
  %cmp9.not = icmp eq ptr %call8, null
  br i1 %cmp9.not, label %if.end12, label %if.then11

if.then11:                                        ; preds = %car.exit62
  %storage_as = getelementptr inbounds %struct.obj, ptr %call8, i64 0, i32 2
  store ptr %call7, ptr %storage_as, align 8, !tbaa !9
  br label %cleanup

if.end12:                                         ; preds = %car.exit62
  %cmp13 = icmp eq ptr %env, null
  br i1 %cmp13, label %if.then15, label %cond.end.i66

if.then15:                                        ; preds = %if.end12
  %vcell = getelementptr inbounds %struct.obj, ptr %retval.0.i130135138150, i64 0, i32 2, i32 0, i32 1
  store ptr %call7, ptr %vcell, align 8, !tbaa !9
  br label %cleanup

cond.end.i66:                                     ; preds = %if.end12
  %type.i64 = getelementptr inbounds %struct.obj, ptr %env, i64 0, i32 1
  %7 = load i16, ptr %type.i64, align 2, !tbaa !14
  %conv.i65 = sext i16 %7 to i32
  switch i32 %conv.i65, label %sw.default.i70 [
    i32 0, label %car.exit82
    i32 1, label %car.exit72
  ]

sw.default.i70:                                   ; preds = %cond.end.i66
  %call.i69 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %env)
  br label %car.exit82

car.exit72:                                       ; preds = %cond.end.i66
  %storage_as.i67 = getelementptr inbounds %struct.obj, ptr %env, i64 0, i32 2
  %8 = load ptr, ptr %storage_as.i67, align 8, !tbaa !9
  %cmp.i73 = icmp eq ptr %8, null
  br i1 %cmp.i73, label %car.exit82, label %cond.end.i76

cond.end.i76:                                     ; preds = %car.exit72
  %type.i74 = getelementptr inbounds %struct.obj, ptr %8, i64 0, i32 1
  %9 = load i16, ptr %type.i74, align 2, !tbaa !14
  %conv.i75 = sext i16 %9 to i32
  switch i32 %conv.i75, label %sw.default.i80 [
    i32 0, label %car.exit82
    i32 1, label %sw.bb1.i78
  ]

sw.bb1.i78:                                       ; preds = %cond.end.i76
  %storage_as.i77 = getelementptr inbounds %struct.obj, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %storage_as.i77, align 8, !tbaa !9
  br label %car.exit82

sw.default.i80:                                   ; preds = %cond.end.i76
  %call.i79 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %8)
  br label %car.exit82

car.exit82:                                       ; preds = %cond.end.i66, %sw.default.i70, %car.exit72, %cond.end.i76, %sw.bb1.i78, %sw.default.i80
  %cmp.i73154 = phi i1 [ false, %sw.default.i80 ], [ false, %sw.bb1.i78 ], [ false, %cond.end.i76 ], [ true, %car.exit72 ], [ true, %sw.default.i70 ], [ true, %cond.end.i66 ]
  %retval.0.i71153 = phi ptr [ %8, %sw.default.i80 ], [ %8, %sw.bb1.i78 ], [ %8, %cond.end.i76 ], [ null, %car.exit72 ], [ null, %sw.default.i70 ], [ null, %cond.end.i66 ]
  %retval.0.i81 = phi ptr [ null, %sw.default.i80 ], [ %10, %sw.bb1.i78 ], [ null, %cond.end.i76 ], [ null, %car.exit72 ], [ null, %sw.default.i70 ], [ null, %cond.end.i66 ]
  %11 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i83 = icmp eq i64 %11, 1
  br i1 %cmp.i83, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %car.exit82
  %12 = load ptr, ptr @heap, align 8, !tbaa !5
  %13 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %12, %13
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %12, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %car.exit82
  %14 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %14, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %15 = phi ptr [ %.pre.i, %if.then4.i ], [ %14, %if.else.i ]
  %cdr.i84 = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 2, i32 0, i32 1
  %16 = load ptr, ptr %cdr.i84, align 8, !tbaa !9
  store ptr %16, ptr @freelist, align 8, !tbaa !5
  %17 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %17, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %12, %if.end.i ], [ %15, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i85 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i85, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %retval.0.i130135138150, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %retval.0.i81, ptr %cdr9.i, align 8, !tbaa !9
  br i1 %cmp.i73154, label %setcar.exit.thread156, label %cond.false.i

setcar.exit.thread156:                            ; preds = %cons.exit
  %call.i88157 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef %retval.0.i71153)
  %storage_as.i90158 = getelementptr inbounds %struct.obj, ptr %retval.0.i71153, i64 0, i32 2
  store ptr %z.0.i, ptr %storage_as.i90158, align 8, !tbaa !9
  br label %cdr.exit101

cond.false.i:                                     ; preds = %cons.exit
  %type.i87 = getelementptr inbounds %struct.obj, ptr %retval.0.i71153, i64 0, i32 1
  %18 = load i16, ptr %type.i87, align 2, !tbaa !14
  %19 = icmp eq i16 %18, 1
  br i1 %19, label %cond.end.i95.thread, label %cond.end.i95

cond.end.i95.thread:                              ; preds = %cond.false.i
  %20 = getelementptr inbounds %struct.obj, ptr %retval.0.i71153, i64 0, i32 2
  store ptr %z.0.i, ptr %20, align 8
  br label %sw.bb1.i97

cond.end.i95:                                     ; preds = %cond.false.i
  %call.i88 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef nonnull %retval.0.i71153)
  %.pre = load i16, ptr %type.i87, align 2, !tbaa !14
  %21 = sext i16 %.pre to i32
  %22 = getelementptr inbounds %struct.obj, ptr %retval.0.i71153, i64 0, i32 2
  store ptr %z.0.i, ptr %22, align 8
  switch i32 %21, label %sw.default.i99 [
    i32 0, label %cdr.exit101
    i32 1, label %sw.bb1.i97
  ]

sw.bb1.i97:                                       ; preds = %cond.end.i95.thread, %cond.end.i95
  %cdr.i96 = getelementptr inbounds %struct.obj, ptr %retval.0.i71153, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i96, align 8, !tbaa !9
  br label %cdr.exit101

sw.default.i99:                                   ; preds = %cond.end.i95
  %call.i98 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %retval.0.i71153)
  br label %cdr.exit101

cdr.exit101:                                      ; preds = %setcar.exit.thread156, %cond.end.i95, %sw.bb1.i97, %sw.default.i99
  %retval.0.i100 = phi ptr [ null, %sw.default.i99 ], [ %23, %sw.bb1.i97 ], [ null, %cond.end.i95 ], [ null, %setcar.exit.thread156 ]
  %24 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i102 = icmp eq i64 %24, 1
  br i1 %cmp.i102, label %if.then.i104, label %if.else.i110

if.then.i104:                                     ; preds = %cdr.exit101
  %25 = load ptr, ptr @heap, align 8, !tbaa !5
  %26 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i103 = icmp ult ptr %25, %26
  br i1 %cmp1.not.i103, label %if.end.i108, label %if.then2.i106

if.then2.i106:                                    ; preds = %if.then.i104
  %call.i.i105 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i108

if.end.i108:                                      ; preds = %if.then2.i106, %if.then.i104
  %add.ptr.i107 = getelementptr inbounds %struct.obj, ptr %25, i64 1
  store ptr %add.ptr.i107, ptr @heap, align 8, !tbaa !5
  br label %cons.exit120

if.else.i110:                                     ; preds = %cdr.exit101
  %27 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i109 = icmp eq ptr %27, null
  br i1 %cmp3.i109, label %if.then4.i112, label %if.end5.i115

if.then4.i112:                                    ; preds = %if.else.i110
  tail call void @gc_for_newcell() #38
  %.pre.i111 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i115

if.end5.i115:                                     ; preds = %if.then4.i112, %if.else.i110
  %28 = phi ptr [ %.pre.i111, %if.then4.i112 ], [ %27, %if.else.i110 ]
  %cdr.i113 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 2, i32 0, i32 1
  %29 = load ptr, ptr %cdr.i113, align 8, !tbaa !9
  store ptr %29, ptr @freelist, align 8, !tbaa !5
  %30 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i114 = add nsw i64 %30, 1
  store i64 %inc.i114, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit120

cons.exit120:                                     ; preds = %if.end.i108, %if.end5.i115
  %z.0.i116 = phi ptr [ %25, %if.end.i108 ], [ %28, %if.end5.i115 ]
  store i16 0, ptr %z.0.i116, align 8, !tbaa !35
  %type.i117 = getelementptr inbounds %struct.obj, ptr %z.0.i116, i64 0, i32 1
  store i16 1, ptr %type.i117, align 2, !tbaa !14
  %storage_as7.i118 = getelementptr inbounds %struct.obj, ptr %z.0.i116, i64 0, i32 2
  store ptr %call7, ptr %storage_as7.i118, align 8, !tbaa !9
  %cdr9.i119 = getelementptr inbounds %struct.obj, ptr %z.0.i116, i64 0, i32 2, i32 0, i32 1
  store ptr %retval.0.i100, ptr %cdr9.i119, align 8, !tbaa !9
  br i1 %cmp.i73154, label %if.then.i125, label %cond.false.i123

cond.false.i123:                                  ; preds = %cons.exit120
  %type.i122 = getelementptr inbounds %struct.obj, ptr %retval.0.i71153, i64 0, i32 1
  %31 = load i16, ptr %type.i122, align 2, !tbaa !14
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %setcdr.exit, label %if.then.i125

if.then.i125:                                     ; preds = %cond.false.i123, %cons.exit120
  %call.i124 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef nonnull %retval.0.i71153)
  br label %setcdr.exit

setcdr.exit:                                      ; preds = %cond.false.i123, %if.then.i125
  %cdr.i126 = getelementptr inbounds %struct.obj, ptr %retval.0.i71153, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i116, ptr %cdr.i126, align 8, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %setcdr.exit, %if.then15, %if.then11
  ret ptr %call7
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_if(ptr nocapture noundef %pform, ptr nocapture noundef readonly %penv) #6 {
entry:
  %0 = load ptr, ptr %pform, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %car.exit.thread, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %1 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit.thread
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %car.exit.thread

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %2 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %3 = load ptr, ptr %penv, align 8, !tbaa !5
  %cmp.i12 = icmp eq ptr %2, null
  br i1 %cmp.i12, label %car.exit.thread93, label %cond.end.i15

cond.end.i15:                                     ; preds = %cdr.exit
  %type.i13 = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 1
  %4 = load i16, ptr %type.i13, align 2, !tbaa !14
  %conv.i14 = sext i16 %4 to i32
  switch i32 %conv.i14, label %sw.default.i18 [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i16
  ]

sw.bb1.i16:                                       ; preds = %cond.end.i15
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 2
  %5 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i18:                                   ; preds = %cond.end.i15
  %call.i17 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %2)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i15, %sw.bb1.i16, %sw.default.i18
  %retval.0.i19 = phi ptr [ null, %sw.default.i18 ], [ %5, %sw.bb1.i16 ], [ null, %cond.end.i15 ]
  %call2 = tail call ptr @leval(ptr noundef %retval.0.i19, ptr noundef %3)
  %cmp.not = icmp eq ptr %call2, null
  br i1 %cmp.not, label %if.else, label %if.then

car.exit.thread93:                                ; preds = %cdr.exit
  %call295 = tail call ptr @leval(ptr noundef null, ptr noundef %3)
  br label %if.end

car.exit.thread:                                  ; preds = %entry, %cond.end.i, %sw.default.i
  %6 = load ptr, ptr %penv, align 8, !tbaa !5
  %call277 = tail call ptr @leval(ptr noundef null, ptr noundef %6)
  br label %if.end

if.then:                                          ; preds = %car.exit
  br i1 %cmp.i12, label %if.end, label %cond.end.i23

cond.end.i23:                                     ; preds = %if.then
  %type.i21 = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 1
  %7 = load i16, ptr %type.i21, align 2, !tbaa !14
  %conv.i22 = sext i16 %7 to i32
  switch i32 %conv.i22, label %sw.default.i27 [
    i32 0, label %if.end
    i32 1, label %cdr.exit29
  ]

sw.default.i27:                                   ; preds = %cond.end.i23
  %call.i26 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %2)
  br label %if.end

cdr.exit29:                                       ; preds = %cond.end.i23
  %cdr.i24 = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 2, i32 0, i32 1
  %8 = load ptr, ptr %cdr.i24, align 8, !tbaa !9
  %cmp.i30 = icmp eq ptr %8, null
  br i1 %cmp.i30, label %if.end, label %cond.end.i33

cond.end.i33:                                     ; preds = %cdr.exit29
  %type.i31 = getelementptr inbounds %struct.obj, ptr %8, i64 0, i32 1
  %9 = load i16, ptr %type.i31, align 2, !tbaa !14
  %conv.i32 = sext i16 %9 to i32
  switch i32 %conv.i32, label %sw.default.i37 [
    i32 0, label %if.end
    i32 1, label %sw.bb1.i35
  ]

sw.bb1.i35:                                       ; preds = %cond.end.i33
  %storage_as.i34 = getelementptr inbounds %struct.obj, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %storage_as.i34, align 8, !tbaa !9
  br label %if.end

sw.default.i37:                                   ; preds = %cond.end.i33
  %call.i36 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %8)
  br label %if.end

if.else:                                          ; preds = %car.exit
  br i1 %cmp.i12, label %if.end, label %cond.end.i43

cond.end.i43:                                     ; preds = %if.else
  %type.i41 = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 1
  %11 = load i16, ptr %type.i41, align 2, !tbaa !14
  %conv.i42 = sext i16 %11 to i32
  switch i32 %conv.i42, label %sw.default.i47 [
    i32 0, label %if.end
    i32 1, label %cdr.exit49
  ]

sw.default.i47:                                   ; preds = %cond.end.i43
  %call.i46 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %2)
  br label %if.end

cdr.exit49:                                       ; preds = %cond.end.i43
  %cdr.i44 = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 2, i32 0, i32 1
  %12 = load ptr, ptr %cdr.i44, align 8, !tbaa !9
  %cmp.i50 = icmp eq ptr %12, null
  br i1 %cmp.i50, label %if.end, label %cond.end.i53

cond.end.i53:                                     ; preds = %cdr.exit49
  %type.i51 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 1
  %13 = load i16, ptr %type.i51, align 2, !tbaa !14
  %conv.i52 = sext i16 %13 to i32
  switch i32 %conv.i52, label %sw.default.i57 [
    i32 0, label %if.end
    i32 1, label %cdr.exit59
  ]

sw.default.i57:                                   ; preds = %cond.end.i53
  %call.i56 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %12)
  br label %if.end

cdr.exit59:                                       ; preds = %cond.end.i53
  %cdr.i54 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %cdr.i54, align 8, !tbaa !9
  %cmp.i60 = icmp eq ptr %14, null
  br i1 %cmp.i60, label %if.end, label %cond.end.i63

cond.end.i63:                                     ; preds = %cdr.exit59
  %type.i61 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %15 = load i16, ptr %type.i61, align 2, !tbaa !14
  %conv.i62 = sext i16 %15 to i32
  switch i32 %conv.i62, label %sw.default.i67 [
    i32 0, label %if.end
    i32 1, label %sw.bb1.i65
  ]

sw.bb1.i65:                                       ; preds = %cond.end.i63
  %storage_as.i64 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2
  %16 = load ptr, ptr %storage_as.i64, align 8, !tbaa !9
  br label %if.end

sw.default.i67:                                   ; preds = %cond.end.i63
  %call.i66 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %14)
  br label %if.end

if.end:                                           ; preds = %car.exit.thread93, %car.exit.thread, %if.else, %cond.end.i43, %sw.default.i47, %cdr.exit49, %cond.end.i53, %sw.default.i57, %if.then, %cond.end.i23, %sw.default.i27, %sw.default.i67, %sw.bb1.i65, %cond.end.i63, %cdr.exit59, %sw.default.i37, %sw.bb1.i35, %cond.end.i33, %cdr.exit29
  %storemerge = phi ptr [ null, %sw.default.i37 ], [ %10, %sw.bb1.i35 ], [ null, %cond.end.i33 ], [ null, %cdr.exit29 ], [ null, %sw.default.i67 ], [ %16, %sw.bb1.i65 ], [ null, %cond.end.i63 ], [ null, %cdr.exit59 ], [ null, %sw.default.i27 ], [ null, %cond.end.i23 ], [ null, %if.then ], [ null, %sw.default.i57 ], [ null, %cond.end.i53 ], [ null, %cdr.exit49 ], [ null, %sw.default.i47 ], [ null, %cond.end.i43 ], [ null, %if.else ], [ null, %car.exit.thread ], [ null, %car.exit.thread93 ]
  store ptr %storemerge, ptr %pform, align 8, !tbaa !5
  %17 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_lambda(ptr noundef %args, ptr noundef %env) #6 {
entry:
  %cmp.i = icmp eq ptr %args, null
  br i1 %cmp.i, label %car.exit63, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %cond.end.i26.sink.split [
    i32 0, label %cond.end.i26
    i32 1, label %cdr.exit
  ]

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i13 = icmp eq ptr %1, null
  br i1 %cmp.i13, label %cond.end.i26, label %cond.end.i16

cond.end.i16:                                     ; preds = %cdr.exit
  %type.i14 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i14, align 2, !tbaa !14
  %conv.i15 = sext i16 %2 to i32
  switch i32 %conv.i15, label %cond.end.i26.sink.split [
    i32 0, label %cond.end.i26
    i32 1, label %cdr.exit22
  ]

cdr.exit22:                                       ; preds = %cond.end.i16
  %cdr.i17 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i17, align 8, !tbaa !9
  %cmp = icmp eq ptr %3, null
  br i1 %cmp, label %cond.end.i26, label %cdr.exit50

cond.end.i26.sink.split:                          ; preds = %cond.end.i16, %cond.end.i
  %args.sink = phi ptr [ %args, %cond.end.i ], [ %1, %cond.end.i16 ]
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args.sink)
  br label %cond.end.i26

cond.end.i26:                                     ; preds = %cond.end.i26.sink.split, %cond.end.i, %cdr.exit, %cond.end.i16, %cdr.exit22
  %4 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i25 = sext i16 %4 to i32
  switch i32 %conv.i25, label %sw.default.i30 [
    i32 0, label %cond.end.i57
    i32 1, label %cdr.exit32
  ]

sw.default.i30:                                   ; preds = %cond.end.i26
  %call.i29 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args)
  br label %cond.end.i57

cdr.exit32:                                       ; preds = %cond.end.i26
  %cdr.i27 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i27, align 8, !tbaa !9
  %cmp.i33 = icmp eq ptr %5, null
  br i1 %cmp.i33, label %cond.end.i57, label %cond.end.i36

cond.end.i36:                                     ; preds = %cdr.exit32
  %type.i34 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %6 = load i16, ptr %type.i34, align 2, !tbaa !14
  %conv.i35 = sext i16 %6 to i32
  switch i32 %conv.i35, label %sw.default.i39 [
    i32 0, label %cond.end.i57
    i32 1, label %sw.bb1.i37
  ]

sw.bb1.i37:                                       ; preds = %cond.end.i36
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %cond.end.i57

sw.default.i39:                                   ; preds = %cond.end.i36
  %call.i38 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %5)
  br label %cond.end.i57

cdr.exit50:                                       ; preds = %cdr.exit22
  %8 = load ptr, ptr @sym_progn, align 8, !tbaa !5
  %9 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i51 = icmp eq i64 %9, 1
  br i1 %cmp.i51, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %cdr.exit50
  %10 = load ptr, ptr @heap, align 8, !tbaa !5
  %11 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %10, %11
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %10, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %cdr.exit50
  %12 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %12, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %13 = phi ptr [ %.pre.i, %if.then4.i ], [ %12, %if.else.i ]
  %cdr.i52 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %cdr.i52, align 8, !tbaa !9
  store ptr %14, ptr @freelist, align 8, !tbaa !5
  %15 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %15, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %10, %if.end.i ], [ %13, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i53 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i53, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %8, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %cdr9.i, align 8, !tbaa !9
  br label %cond.end.i57

cond.end.i57:                                     ; preds = %cond.end.i26, %sw.default.i30, %cons.exit, %cdr.exit32, %cond.end.i36, %sw.bb1.i37, %sw.default.i39
  %body.0110 = phi ptr [ null, %cdr.exit32 ], [ null, %cond.end.i36 ], [ %7, %sw.bb1.i37 ], [ null, %sw.default.i39 ], [ %z.0.i, %cons.exit ], [ null, %sw.default.i30 ], [ null, %cond.end.i26 ]
  %16 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i56 = sext i16 %16 to i32
  switch i32 %conv.i56, label %sw.default.i61 [
    i32 0, label %car.exit63
    i32 1, label %sw.bb1.i59
  ]

sw.bb1.i59:                                       ; preds = %cond.end.i57
  %storage_as.i58 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %17 = load ptr, ptr %storage_as.i58, align 8, !tbaa !9
  br label %car.exit63

sw.default.i61:                                   ; preds = %cond.end.i57
  %call.i60 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  br label %car.exit63

car.exit63:                                       ; preds = %entry, %cond.end.i57, %sw.bb1.i59, %sw.default.i61
  %body.0111 = phi ptr [ %body.0110, %sw.default.i61 ], [ %body.0110, %sw.bb1.i59 ], [ %body.0110, %cond.end.i57 ], [ null, %entry ]
  %retval.0.i62 = phi ptr [ null, %sw.default.i61 ], [ %17, %sw.bb1.i59 ], [ null, %cond.end.i57 ], [ null, %entry ]
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i64 = icmp eq i64 %18, 1
  br i1 %cmp.i64, label %if.then.i66, label %if.else.i72

if.then.i66:                                      ; preds = %car.exit63
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i65 = icmp ult ptr %19, %20
  br i1 %cmp1.not.i65, label %if.end.i70, label %if.then2.i68

if.then2.i68:                                     ; preds = %if.then.i66
  %call.i.i67 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i70

if.end.i70:                                       ; preds = %if.then2.i68, %if.then.i66
  %add.ptr.i69 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %add.ptr.i69, ptr @heap, align 8, !tbaa !5
  br label %cons.exit82

if.else.i72:                                      ; preds = %car.exit63
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i71 = icmp eq ptr %21, null
  br i1 %cmp3.i71, label %if.then4.i74, label %if.end5.i77

if.then4.i74:                                     ; preds = %if.else.i72
  tail call void @gc_for_newcell() #38
  %.pre.i73 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i77

if.end5.i77:                                      ; preds = %if.then4.i74, %if.else.i72
  %22 = phi ptr [ %.pre.i73, %if.then4.i74 ], [ %21, %if.else.i72 ]
  %cdr.i75 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i75, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i76 = add nsw i64 %24, 1
  store i64 %inc.i76, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit82

cons.exit82:                                      ; preds = %if.end.i70, %if.end5.i77
  %z.0.i78 = phi ptr [ %19, %if.end.i70 ], [ %22, %if.end5.i77 ]
  store i16 0, ptr %z.0.i78, align 8, !tbaa !35
  %type.i79 = getelementptr inbounds %struct.obj, ptr %z.0.i78, i64 0, i32 1
  store i16 1, ptr %type.i79, align 2, !tbaa !14
  %storage_as7.i80 = getelementptr inbounds %struct.obj, ptr %z.0.i78, i64 0, i32 2
  store ptr %retval.0.i62, ptr %storage_as7.i80, align 8, !tbaa !9
  %cdr9.i81 = getelementptr inbounds %struct.obj, ptr %z.0.i78, i64 0, i32 2, i32 0, i32 1
  store ptr %body.0111, ptr %cdr9.i81, align 8, !tbaa !9
  %25 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i83 = icmp eq i64 %25, 1
  br i1 %cmp.i83, label %if.then.i85, label %if.else.i91

if.then.i85:                                      ; preds = %cons.exit82
  %26 = load ptr, ptr @heap, align 8, !tbaa !5
  %27 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i84 = icmp ult ptr %26, %27
  br i1 %cmp1.not.i84, label %if.end.i89, label %if.then2.i87

if.then2.i87:                                     ; preds = %if.then.i85
  %call.i.i86 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i89

if.end.i89:                                       ; preds = %if.then2.i87, %if.then.i85
  %add.ptr.i88 = getelementptr inbounds %struct.obj, ptr %26, i64 1
  store ptr %add.ptr.i88, ptr @heap, align 8, !tbaa !5
  br label %closure.exit

if.else.i91:                                      ; preds = %cons.exit82
  %28 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i90 = icmp eq ptr %28, null
  br i1 %cmp3.i90, label %if.then4.i93, label %if.end5.i96

if.then4.i93:                                     ; preds = %if.else.i91
  tail call void @gc_for_newcell()
  %.pre.i92 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i96

if.end5.i96:                                      ; preds = %if.then4.i93, %if.else.i91
  %29 = phi ptr [ %.pre.i92, %if.then4.i93 ], [ %28, %if.else.i91 ]
  %cdr.i94 = getelementptr inbounds %struct.obj, ptr %29, i64 0, i32 2, i32 0, i32 1
  %30 = load ptr, ptr %cdr.i94, align 8, !tbaa !9
  store ptr %30, ptr @freelist, align 8, !tbaa !5
  %31 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i95 = add nsw i64 %31, 1
  store i64 %inc.i95, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %closure.exit

closure.exit:                                     ; preds = %if.end.i89, %if.end5.i96
  %z.0.i97 = phi ptr [ %26, %if.end.i89 ], [ %29, %if.end5.i96 ]
  store i16 0, ptr %z.0.i97, align 8, !tbaa !35
  %type.i98 = getelementptr inbounds %struct.obj, ptr %z.0.i97, i64 0, i32 1
  store i16 11, ptr %type.i98, align 2, !tbaa !14
  %storage_as7.i99 = getelementptr inbounds %struct.obj, ptr %z.0.i97, i64 0, i32 2
  store ptr %env, ptr %storage_as7.i99, align 8, !tbaa !9
  %code10.i = getelementptr inbounds %struct.obj, ptr %z.0.i97, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i78, ptr %code10.i, align 8, !tbaa !9
  ret ptr %z.0.i97
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local ptr @arglchk(ptr noundef readnone returned %x) local_unnamed_addr #0 {
entry:
  ret ptr %x
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_progn(ptr nocapture noundef %pform, ptr nocapture noundef readonly %penv) #6 {
entry:
  %0 = load ptr, ptr %penv, align 8, !tbaa !5
  %1 = load ptr, ptr %pform, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %car.exit48, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %2 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit48
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %car.exit48

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i11 = icmp eq ptr %3, null
  br i1 %cmp.i11, label %car.exit48, label %cond.end.i14

cond.end.i14:                                     ; preds = %cdr.exit
  %type.i12 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %4 = load i16, ptr %type.i12, align 2, !tbaa !14
  %conv.i13 = sext i16 %4 to i32
  switch i32 %conv.i13, label %cond.end.i42.sink.split [
    i32 0, label %cond.end.i42
    i32 1, label %cdr.exit20
  ]

cdr.exit20:                                       ; preds = %cond.end.i14
  %cdr.i15 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i15, align 8, !tbaa !9
  %cmp.not52 = icmp eq ptr %5, null
  br i1 %cmp.not52, label %cond.end.i42, label %cond.end.i24

cond.end.i24:                                     ; preds = %cdr.exit20, %cdr.exit38
  %next.054 = phi ptr [ %9, %cdr.exit38 ], [ %5, %cdr.exit20 ]
  %l.053 = phi ptr [ %next.054, %cdr.exit38 ], [ %3, %cdr.exit20 ]
  %type.i22 = getelementptr inbounds %struct.obj, ptr %l.053, i64 0, i32 1
  %6 = load i16, ptr %type.i22, align 2, !tbaa !14
  %conv.i23 = sext i16 %6 to i32
  switch i32 %conv.i23, label %sw.default.i27 [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i25
  ]

sw.bb1.i25:                                       ; preds = %cond.end.i24
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %l.053, i64 0, i32 2
  %7 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i27:                                   ; preds = %cond.end.i24
  %call.i26 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.053)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i24, %sw.bb1.i25, %sw.default.i27
  %retval.0.i28 = phi ptr [ null, %sw.default.i27 ], [ %7, %sw.bb1.i25 ], [ null, %cond.end.i24 ]
  %call3 = tail call ptr @leval(ptr noundef %retval.0.i28, ptr noundef %0)
  %type.i30 = getelementptr inbounds %struct.obj, ptr %next.054, i64 0, i32 1
  %8 = load i16, ptr %type.i30, align 2, !tbaa !14
  %conv.i31 = sext i16 %8 to i32
  switch i32 %conv.i31, label %cond.end.i42.sink.split [
    i32 0, label %cond.end.i42
    i32 1, label %cdr.exit38
  ]

cdr.exit38:                                       ; preds = %car.exit
  %cdr.i33 = getelementptr inbounds %struct.obj, ptr %next.054, i64 0, i32 2, i32 0, i32 1
  %9 = load ptr, ptr %cdr.i33, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %9, null
  br i1 %cmp.not, label %cond.end.i42, label %cond.end.i24, !llvm.loop !91

cond.end.i42.sink.split:                          ; preds = %car.exit, %cond.end.i14
  %next.054.lcssa.sink = phi ptr [ %3, %cond.end.i14 ], [ %next.054, %car.exit ]
  %call.i35 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %next.054.lcssa.sink)
  br label %cond.end.i42

cond.end.i42:                                     ; preds = %car.exit, %cdr.exit38, %cond.end.i42.sink.split, %cdr.exit20, %cond.end.i14
  %l.0.lcssa62 = phi ptr [ %3, %cond.end.i14 ], [ %3, %cdr.exit20 ], [ %next.054.lcssa.sink, %cond.end.i42.sink.split ], [ %next.054, %cdr.exit38 ], [ %next.054, %car.exit ]
  %type.i40 = getelementptr inbounds %struct.obj, ptr %l.0.lcssa62, i64 0, i32 1
  %10 = load i16, ptr %type.i40, align 2, !tbaa !14
  %conv.i41 = sext i16 %10 to i32
  switch i32 %conv.i41, label %sw.default.i46 [
    i32 0, label %car.exit48
    i32 1, label %sw.bb1.i44
  ]

sw.bb1.i44:                                       ; preds = %cond.end.i42
  %storage_as.i43 = getelementptr inbounds %struct.obj, ptr %l.0.lcssa62, i64 0, i32 2
  %11 = load ptr, ptr %storage_as.i43, align 8, !tbaa !9
  br label %car.exit48

sw.default.i46:                                   ; preds = %cond.end.i42
  %call.i45 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.0.lcssa62)
  br label %car.exit48

car.exit48:                                       ; preds = %cdr.exit, %sw.default.i, %cond.end.i, %entry, %cond.end.i42, %sw.bb1.i44, %sw.default.i46
  %retval.0.i47 = phi ptr [ null, %sw.default.i46 ], [ %11, %sw.bb1.i44 ], [ null, %cond.end.i42 ], [ null, %entry ], [ null, %cond.end.i ], [ null, %sw.default.i ], [ null, %cdr.exit ]
  store ptr %retval.0.i47, ptr %pform, align 8, !tbaa !5
  %12 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %12
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_or(ptr nocapture noundef %pform, ptr nocapture noundef readonly %penv) #6 {
entry:
  %0 = load ptr, ptr %penv, align 8, !tbaa !5
  %1 = load ptr, ptr %pform, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %car.exit54, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %2 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit54
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %car.exit54

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i17 = icmp eq ptr %3, null
  br i1 %cmp.i17, label %car.exit54, label %cond.end.i20

cond.end.i20:                                     ; preds = %cdr.exit
  %type.i18 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %4 = load i16, ptr %type.i18, align 2, !tbaa !14
  %conv.i19 = sext i16 %4 to i32
  switch i32 %conv.i19, label %cond.end.i48.sink.split [
    i32 0, label %cond.end.i48
    i32 1, label %cdr.exit26
  ]

cdr.exit26:                                       ; preds = %cond.end.i20
  %cdr.i21 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i21, align 8, !tbaa !9
  %cmp.not59 = icmp eq ptr %5, null
  br i1 %cmp.not59, label %cond.end.i48, label %cond.end.i30

cond.end.i30:                                     ; preds = %cdr.exit26, %cdr.exit44
  %next.061 = phi ptr [ %9, %cdr.exit44 ], [ %5, %cdr.exit26 ]
  %l.060 = phi ptr [ %next.061, %cdr.exit44 ], [ %3, %cdr.exit26 ]
  %type.i28 = getelementptr inbounds %struct.obj, ptr %l.060, i64 0, i32 1
  %6 = load i16, ptr %type.i28, align 2, !tbaa !14
  %conv.i29 = sext i16 %6 to i32
  switch i32 %conv.i29, label %sw.default.i33 [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i31
  ]

sw.bb1.i31:                                       ; preds = %cond.end.i30
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %l.060, i64 0, i32 2
  %7 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i33:                                   ; preds = %cond.end.i30
  %call.i32 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.060)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i30, %sw.bb1.i31, %sw.default.i33
  %retval.0.i34 = phi ptr [ null, %sw.default.i33 ], [ %7, %sw.bb1.i31 ], [ null, %cond.end.i30 ]
  %call3 = tail call ptr @leval(ptr noundef %retval.0.i34, ptr noundef %0)
  %cmp4.not = icmp eq ptr %call3, null
  br i1 %cmp4.not, label %cond.end.i38, label %if.then

if.then:                                          ; preds = %car.exit
  store ptr %call3, ptr %pform, align 8, !tbaa !5
  br label %cleanup

cond.end.i38:                                     ; preds = %car.exit
  %type.i36 = getelementptr inbounds %struct.obj, ptr %next.061, i64 0, i32 1
  %8 = load i16, ptr %type.i36, align 2, !tbaa !14
  %conv.i37 = sext i16 %8 to i32
  switch i32 %conv.i37, label %cond.end.i48.sink.split [
    i32 0, label %cond.end.i48
    i32 1, label %cdr.exit44
  ]

cdr.exit44:                                       ; preds = %cond.end.i38
  %cdr.i39 = getelementptr inbounds %struct.obj, ptr %next.061, i64 0, i32 2, i32 0, i32 1
  %9 = load ptr, ptr %cdr.i39, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %9, null
  br i1 %cmp.not, label %cond.end.i48, label %cond.end.i30, !llvm.loop !92

cond.end.i48.sink.split:                          ; preds = %cond.end.i38, %cond.end.i20
  %next.061.lcssa76.sink = phi ptr [ %3, %cond.end.i20 ], [ %next.061, %cond.end.i38 ]
  %call.i41 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %next.061.lcssa76.sink)
  br label %cond.end.i48

cond.end.i48:                                     ; preds = %cond.end.i38, %cdr.exit44, %cond.end.i48.sink.split, %cdr.exit26, %cond.end.i20
  %l.0.lcssa71 = phi ptr [ %3, %cond.end.i20 ], [ %3, %cdr.exit26 ], [ %next.061.lcssa76.sink, %cond.end.i48.sink.split ], [ %next.061, %cdr.exit44 ], [ %next.061, %cond.end.i38 ]
  %type.i46 = getelementptr inbounds %struct.obj, ptr %l.0.lcssa71, i64 0, i32 1
  %10 = load i16, ptr %type.i46, align 2, !tbaa !14
  %conv.i47 = sext i16 %10 to i32
  switch i32 %conv.i47, label %sw.default.i52 [
    i32 0, label %car.exit54
    i32 1, label %sw.bb1.i50
  ]

sw.bb1.i50:                                       ; preds = %cond.end.i48
  %storage_as.i49 = getelementptr inbounds %struct.obj, ptr %l.0.lcssa71, i64 0, i32 2
  %11 = load ptr, ptr %storage_as.i49, align 8, !tbaa !9
  br label %car.exit54

sw.default.i52:                                   ; preds = %cond.end.i48
  %call.i51 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.0.lcssa71)
  br label %car.exit54

car.exit54:                                       ; preds = %cdr.exit, %sw.default.i, %cond.end.i, %entry, %cond.end.i48, %sw.bb1.i50, %sw.default.i52
  %retval.0.i53 = phi ptr [ null, %sw.default.i52 ], [ %11, %sw.bb1.i50 ], [ null, %cond.end.i48 ], [ null, %entry ], [ null, %cond.end.i ], [ null, %sw.default.i ], [ null, %cdr.exit ]
  store ptr %retval.0.i53, ptr %pform, align 8, !tbaa !5
  %12 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %cleanup

cleanup:                                          ; preds = %car.exit54, %if.then
  %retval.0 = phi ptr [ null, %if.then ], [ %12, %car.exit54 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_and(ptr nocapture noundef %pform, ptr nocapture noundef readonly %penv) #6 {
entry:
  %0 = load ptr, ptr %penv, align 8, !tbaa !5
  %1 = load ptr, ptr %pform, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %if.then, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %2 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %if.then
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %if.then

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp = icmp eq ptr %3, null
  br i1 %cmp, label %if.then, label %cond.end.i23

if.then:                                          ; preds = %entry, %cond.end.i, %sw.default.i, %cdr.exit
  %4 = load ptr, ptr @sym_t, align 8, !tbaa !5
  store ptr %4, ptr %pform, align 8, !tbaa !5
  br label %cleanup

cond.end.i23:                                     ; preds = %cdr.exit
  %type.i21 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %5 = load i16, ptr %type.i21, align 2, !tbaa !14
  %conv.i22 = sext i16 %5 to i32
  switch i32 %conv.i22, label %cond.end.i51.sink.split [
    i32 0, label %cond.end.i51
    i32 1, label %cdr.exit29
  ]

cdr.exit29:                                       ; preds = %cond.end.i23
  %cdr.i24 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %cdr.i24, align 8, !tbaa !9
  %cmp2.not61 = icmp eq ptr %6, null
  br i1 %cmp2.not61, label %cond.end.i51, label %cond.end.i33

cond.end.i33:                                     ; preds = %cdr.exit29, %cdr.exit47
  %next.063 = phi ptr [ %10, %cdr.exit47 ], [ %6, %cdr.exit29 ]
  %l.062 = phi ptr [ %next.063, %cdr.exit47 ], [ %3, %cdr.exit29 ]
  %type.i31 = getelementptr inbounds %struct.obj, ptr %l.062, i64 0, i32 1
  %7 = load i16, ptr %type.i31, align 2, !tbaa !14
  %conv.i32 = sext i16 %7 to i32
  switch i32 %conv.i32, label %sw.default.i36 [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i34
  ]

sw.bb1.i34:                                       ; preds = %cond.end.i33
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %l.062, i64 0, i32 2
  %8 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i36:                                   ; preds = %cond.end.i33
  %call.i35 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.062)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i33, %sw.bb1.i34, %sw.default.i36
  %retval.0.i37 = phi ptr [ null, %sw.default.i36 ], [ %8, %sw.bb1.i34 ], [ null, %cond.end.i33 ]
  %call4 = tail call ptr @leval(ptr noundef %retval.0.i37, ptr noundef %0)
  %cmp5 = icmp eq ptr %call4, null
  br i1 %cmp5, label %if.then6, label %cond.end.i41

if.then6:                                         ; preds = %car.exit
  store ptr null, ptr %pform, align 8, !tbaa !5
  br label %cleanup

cond.end.i41:                                     ; preds = %car.exit
  %type.i39 = getelementptr inbounds %struct.obj, ptr %next.063, i64 0, i32 1
  %9 = load i16, ptr %type.i39, align 2, !tbaa !14
  %conv.i40 = sext i16 %9 to i32
  switch i32 %conv.i40, label %cond.end.i51.sink.split [
    i32 0, label %cond.end.i51
    i32 1, label %cdr.exit47
  ]

cdr.exit47:                                       ; preds = %cond.end.i41
  %cdr.i42 = getelementptr inbounds %struct.obj, ptr %next.063, i64 0, i32 2, i32 0, i32 1
  %10 = load ptr, ptr %cdr.i42, align 8, !tbaa !9
  %cmp2.not = icmp eq ptr %10, null
  br i1 %cmp2.not, label %cond.end.i51, label %cond.end.i33, !llvm.loop !93

cond.end.i51.sink.split:                          ; preds = %cond.end.i41, %cond.end.i23
  %next.063.lcssa69.sink = phi ptr [ %3, %cond.end.i23 ], [ %next.063, %cond.end.i41 ]
  %call.i44 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %next.063.lcssa69.sink)
  br label %cond.end.i51

cond.end.i51:                                     ; preds = %cond.end.i41, %cdr.exit47, %cond.end.i51.sink.split, %cond.end.i23, %cdr.exit29
  %l.0.lcssa = phi ptr [ %3, %cdr.exit29 ], [ %3, %cond.end.i23 ], [ %next.063.lcssa69.sink, %cond.end.i51.sink.split ], [ %next.063, %cdr.exit47 ], [ %next.063, %cond.end.i41 ]
  %type.i49 = getelementptr inbounds %struct.obj, ptr %l.0.lcssa, i64 0, i32 1
  %11 = load i16, ptr %type.i49, align 2, !tbaa !14
  %conv.i50 = sext i16 %11 to i32
  switch i32 %conv.i50, label %sw.default.i55 [
    i32 0, label %car.exit57
    i32 1, label %sw.bb1.i53
  ]

sw.bb1.i53:                                       ; preds = %cond.end.i51
  %storage_as.i52 = getelementptr inbounds %struct.obj, ptr %l.0.lcssa, i64 0, i32 2
  %12 = load ptr, ptr %storage_as.i52, align 8, !tbaa !9
  br label %car.exit57

sw.default.i55:                                   ; preds = %cond.end.i51
  %call.i54 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.0.lcssa)
  br label %car.exit57

car.exit57:                                       ; preds = %cond.end.i51, %sw.bb1.i53, %sw.default.i55
  %retval.0.i56 = phi ptr [ null, %sw.default.i55 ], [ %12, %sw.bb1.i53 ], [ null, %cond.end.i51 ]
  store ptr %retval.0.i56, ptr %pform, align 8, !tbaa !5
  %13 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %cleanup

cleanup:                                          ; preds = %car.exit57, %if.then6, %if.then
  %retval.0 = phi ptr [ null, %if.then ], [ null, %if.then6 ], [ %13, %car.exit57 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_catch_1(ptr noundef %forms, ptr noundef %env) local_unnamed_addr #6 {
entry:
  %cmp.not13 = icmp eq ptr %forms, null
  br i1 %cmp.not13, label %for.end, label %cond.end.i

cond.end.i:                                       ; preds = %entry, %cdr.exit
  %l.014 = phi ptr [ %3, %cdr.exit ], [ %forms, %entry ]
  %type.i = getelementptr inbounds %struct.obj, ptr %l.014, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %l.014, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.014)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %1, %sw.bb1.i ], [ null, %cond.end.i ]
  %call1 = tail call ptr @leval(ptr noundef %retval.0.i, ptr noundef %env)
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i7 = sext i16 %2 to i32
  switch i32 %conv.i7, label %sw.default.i11 [
    i32 0, label %for.end
    i32 1, label %cdr.exit
  ]

sw.default.i11:                                   ; preds = %car.exit
  %call.i10 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l.014)
  br label %for.end

cdr.exit:                                         ; preds = %car.exit
  %cdr.i = getelementptr inbounds %struct.obj, ptr %l.014, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %3, null
  br i1 %cmp.not, label %for.end, label %cond.end.i, !llvm.loop !94

for.end:                                          ; preds = %car.exit, %cdr.exit, %sw.default.i11, %entry
  %val.0.lcssa = phi ptr [ null, %entry ], [ %call1, %sw.default.i11 ], [ %call1, %cdr.exit ], [ %call1, %car.exit ]
  %4 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %next = getelementptr inbounds %struct.catch_frame, ptr %4, i64 0, i32 3
  %5 = load ptr, ptr %next, align 8, !tbaa !95
  store ptr %5, ptr @catch_framep, align 8, !tbaa !5
  ret ptr %val.0.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_catch(ptr noundef %args, ptr noundef %env) #6 {
entry:
  %frame = alloca %struct.catch_frame, align 8
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %frame) #33
  %cmp.i = icmp eq ptr %args, null
  br i1 %cmp.i, label %car.exit, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  br label %car.exit

car.exit:                                         ; preds = %entry, %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %1, %sw.bb1.i ], [ null, %cond.end.i ], [ null, %entry ]
  %call1 = call ptr @leval(ptr noundef %retval.0.i, ptr noundef %env)
  store ptr %call1, ptr %frame, align 8, !tbaa !17
  %2 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %next = getelementptr inbounds %struct.catch_frame, ptr %frame, i64 0, i32 3
  store ptr %2, ptr %next, align 8, !tbaa !95
  %cframe = getelementptr inbounds %struct.catch_frame, ptr %frame, i64 0, i32 2
  %call2 = call i32 @_setjmp(ptr noundef nonnull %cframe) #36
  store ptr %frame, ptr @catch_framep, align 8, !tbaa !5
  %cmp = icmp eq i32 %call2, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %car.exit
  %3 = load ptr, ptr %next, align 8, !tbaa !95
  store ptr %3, ptr @catch_framep, align 8, !tbaa !5
  %retval4 = getelementptr inbounds %struct.catch_frame, ptr %frame, i64 0, i32 1
  %4 = load ptr, ptr %retval4, align 8, !tbaa !19
  br label %cleanup

if.end:                                           ; preds = %car.exit
  br i1 %cmp.i, label %leval_catch_1.exit, label %cond.end.i13

cond.end.i13:                                     ; preds = %if.end
  %type.i11 = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %5 = load i16, ptr %type.i11, align 2, !tbaa !14
  %conv.i12 = sext i16 %5 to i32
  switch i32 %conv.i12, label %leval_catch_1.exit.sink.split [
    i32 0, label %leval_catch_1.exit
    i32 1, label %cdr.exit
  ]

cdr.exit:                                         ; preds = %cond.end.i13
  %cdr.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.not13.i = icmp eq ptr %6, null
  br i1 %cmp.not13.i, label %leval_catch_1.exit, label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cdr.exit, %cdr.exit.i
  %l.014.i = phi ptr [ %10, %cdr.exit.i ], [ %6, %cdr.exit ]
  %type.i.i = getelementptr inbounds %struct.obj, ptr %l.014.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %conv.i.i = sext i16 %7 to i32
  switch i32 %conv.i.i, label %sw.default.i.i [
    i32 0, label %car.exit.i
    i32 1, label %sw.bb1.i.i
  ]

sw.bb1.i.i:                                       ; preds = %cond.end.i.i
  %storage_as.i.i = getelementptr inbounds %struct.obj, ptr %l.014.i, i64 0, i32 2
  %8 = load ptr, ptr %storage_as.i.i, align 8, !tbaa !9
  br label %car.exit.i

sw.default.i.i:                                   ; preds = %cond.end.i.i
  %call.i.i = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.014.i)
  br label %car.exit.i

car.exit.i:                                       ; preds = %sw.default.i.i, %sw.bb1.i.i, %cond.end.i.i
  %retval.0.i.i = phi ptr [ null, %sw.default.i.i ], [ %8, %sw.bb1.i.i ], [ null, %cond.end.i.i ]
  %call1.i = call ptr @leval(ptr noundef %retval.0.i.i, ptr noundef %env)
  %9 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %conv.i7.i = sext i16 %9 to i32
  switch i32 %conv.i7.i, label %leval_catch_1.exit.sink.split [
    i32 0, label %leval_catch_1.exit
    i32 1, label %cdr.exit.i
  ]

cdr.exit.i:                                       ; preds = %car.exit.i
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %l.014.i, i64 0, i32 2, i32 0, i32 1
  %10 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  %cmp.not.i = icmp eq ptr %10, null
  br i1 %cmp.not.i, label %leval_catch_1.exit, label %cond.end.i.i, !llvm.loop !94

leval_catch_1.exit.sink.split:                    ; preds = %car.exit.i, %cond.end.i13
  %args.sink = phi ptr [ %args, %cond.end.i13 ], [ %l.014.i, %car.exit.i ]
  %val.0.lcssa.i.ph = phi ptr [ null, %cond.end.i13 ], [ %call1.i, %car.exit.i ]
  %call.i15 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %args.sink)
  br label %leval_catch_1.exit

leval_catch_1.exit:                               ; preds = %car.exit.i, %cdr.exit.i, %leval_catch_1.exit.sink.split, %if.end, %cond.end.i13, %cdr.exit
  %val.0.lcssa.i = phi ptr [ null, %cdr.exit ], [ null, %cond.end.i13 ], [ null, %if.end ], [ %val.0.lcssa.i.ph, %leval_catch_1.exit.sink.split ], [ %call1.i, %cdr.exit.i ], [ %call1.i, %car.exit.i ]
  %11 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %next.i = getelementptr inbounds %struct.catch_frame, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %next.i, align 8, !tbaa !95
  store ptr %12, ptr @catch_framep, align 8, !tbaa !5
  br label %cleanup

cleanup:                                          ; preds = %leval_catch_1.exit, %if.then
  %retval.0 = phi ptr [ %4, %if.then ], [ %val.0.lcssa.i, %leval_catch_1.exit ]
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %frame) #33
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lthrow(ptr noundef %tag, ptr noundef %value) #6 {
entry:
  %l.012 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %tobool.not13 = icmp eq ptr %l.012, null
  br i1 %tobool.not13, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %0 = load ptr, ptr @sym_catchall, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %l.014 = phi ptr [ %l.012, %for.body.lr.ph ], [ %l.0, %for.inc ]
  %1 = load ptr, ptr %l.014, align 8, !tbaa !17
  %cmp = icmp eq ptr %1, %tag
  %cmp3 = icmp eq ptr %1, %0
  %or.cond = select i1 %cmp, i1 true, i1 %cmp3
  br i1 %or.cond, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %retval4 = getelementptr inbounds %struct.catch_frame, ptr %l.014, i64 0, i32 1
  store ptr %value, ptr %retval4, align 8, !tbaa !19
  %cframe = getelementptr inbounds %struct.catch_frame, ptr %l.014, i64 0, i32 2
  tail call void @longjmp(ptr noundef nonnull %cframe, i32 noundef 2) #35
  unreachable

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.catch_frame, ptr %l.014, i64 0, i32 3
  %l.0 = load ptr, ptr %next, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %l.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !96

for.end:                                          ; preds = %for.inc, %entry
  %call = tail call ptr @err(ptr noundef nonnull @.str.94, ptr noundef %tag)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_let(ptr nocapture noundef %pform, ptr nocapture noundef %penv) #6 {
entry:
  %0 = load ptr, ptr %pform, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %cdr.exit.thread, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %1 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %cdr.exit.thread
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %cdr.exit.thread

cdr.exit.thread:                                  ; preds = %sw.default.i, %cond.end.i, %entry
  %2 = load ptr, ptr %penv, align 8, !tbaa !5
  br label %cdr.exit51.critedge

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %4 = load ptr, ptr %penv, align 8, !tbaa !5
  %cmp.i14 = icmp eq ptr %3, null
  br i1 %cmp.i14, label %cdr.exit51.critedge, label %cond.end.i17

cond.end.i17:                                     ; preds = %cdr.exit
  %type.i15 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %5 = load i16, ptr %type.i15, align 2, !tbaa !14
  %conv.i16 = sext i16 %5 to i32
  switch i32 %conv.i16, label %sw.default.i21 [
    i32 0, label %cond.end.i35
    i32 1, label %cdr.exit23
  ]

sw.default.i21:                                   ; preds = %cond.end.i17
  %call.i20 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %cond.end.i35

cdr.exit23:                                       ; preds = %cond.end.i17
  %cdr.i18 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %cdr.i18, align 8, !tbaa !9
  %cmp.i24 = icmp eq ptr %6, null
  br i1 %cmp.i24, label %cond.end.i35, label %cond.end.i27

cond.end.i27:                                     ; preds = %cdr.exit23
  %type.i25 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 1
  %7 = load i16, ptr %type.i25, align 2, !tbaa !14
  %conv.i26 = sext i16 %7 to i32
  switch i32 %conv.i26, label %sw.default.i30 [
    i32 0, label %cond.end.i35
    i32 1, label %sw.bb1.i28
  ]

sw.bb1.i28:                                       ; preds = %cond.end.i27
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %cond.end.i35

sw.default.i30:                                   ; preds = %cond.end.i27
  %call.i29 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %6)
  br label %cond.end.i35

cond.end.i35:                                     ; preds = %cond.end.i17, %sw.default.i21, %cdr.exit23, %cond.end.i27, %sw.bb1.i28, %sw.default.i30
  %.sink = phi ptr [ null, %cdr.exit23 ], [ null, %cond.end.i27 ], [ %8, %sw.bb1.i28 ], [ null, %sw.default.i30 ], [ null, %sw.default.i21 ], [ null, %cond.end.i17 ]
  %call3 = tail call ptr @leval_args(ptr noundef %.sink, ptr noundef %4)
  %9 = load i16, ptr %type.i15, align 2, !tbaa !14
  %conv.i34 = sext i16 %9 to i32
  switch i32 %conv.i34, label %sw.default.i39 [
    i32 0, label %cond.end.i45
    i32 1, label %sw.bb1.i37
  ]

sw.bb1.i37:                                       ; preds = %cond.end.i35
  %storage_as.i36 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %10 = load ptr, ptr %storage_as.i36, align 8, !tbaa !9
  br label %cond.end.i45

sw.default.i39:                                   ; preds = %cond.end.i35
  %call.i38 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  br label %cond.end.i45

cond.end.i45:                                     ; preds = %sw.default.i39, %sw.bb1.i37, %cond.end.i35
  %retval.0.i40 = phi ptr [ null, %sw.default.i39 ], [ %10, %sw.bb1.i37 ], [ null, %cond.end.i35 ]
  %call5 = tail call ptr @extend_env(ptr noundef %call3, ptr noundef %retval.0.i40, ptr noundef %4)
  store ptr %call5, ptr %penv, align 8, !tbaa !5
  %11 = load i16, ptr %type.i15, align 2, !tbaa !14
  %conv.i44 = sext i16 %11 to i32
  switch i32 %conv.i44, label %sw.default.i49 [
    i32 0, label %car.exit71
    i32 1, label %cdr.exit51
  ]

sw.default.i49:                                   ; preds = %cond.end.i45
  %call.i48 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %car.exit71

cdr.exit51.critedge:                              ; preds = %cdr.exit.thread, %cdr.exit
  %.ph.ph = phi ptr [ %4, %cdr.exit ], [ %2, %cdr.exit.thread ]
  %call394 = tail call ptr @leval_args(ptr noundef null, ptr noundef %.ph.ph)
  %call5.c = tail call ptr @extend_env(ptr noundef %call394, ptr noundef null, ptr noundef %.ph.ph)
  store ptr %call5.c, ptr %penv, align 8, !tbaa !5
  br label %car.exit71

cdr.exit51:                                       ; preds = %cond.end.i45
  %cdr.i46 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %12 = load ptr, ptr %cdr.i46, align 8, !tbaa !9
  %cmp.i52 = icmp eq ptr %12, null
  br i1 %cmp.i52, label %car.exit71, label %cond.end.i55

cond.end.i55:                                     ; preds = %cdr.exit51
  %type.i53 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 1
  %13 = load i16, ptr %type.i53, align 2, !tbaa !14
  %conv.i54 = sext i16 %13 to i32
  switch i32 %conv.i54, label %sw.default.i59 [
    i32 0, label %car.exit71
    i32 1, label %cdr.exit61
  ]

sw.default.i59:                                   ; preds = %cond.end.i55
  %call.i58 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %12)
  br label %car.exit71

cdr.exit61:                                       ; preds = %cond.end.i55
  %cdr.i56 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %cdr.i56, align 8, !tbaa !9
  %cmp.i62 = icmp eq ptr %14, null
  br i1 %cmp.i62, label %car.exit71, label %cond.end.i65

cond.end.i65:                                     ; preds = %cdr.exit61
  %type.i63 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %15 = load i16, ptr %type.i63, align 2, !tbaa !14
  %conv.i64 = sext i16 %15 to i32
  switch i32 %conv.i64, label %sw.default.i69 [
    i32 0, label %car.exit71
    i32 1, label %sw.bb1.i67
  ]

sw.bb1.i67:                                       ; preds = %cond.end.i65
  %storage_as.i66 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2
  %16 = load ptr, ptr %storage_as.i66, align 8, !tbaa !9
  br label %car.exit71

sw.default.i69:                                   ; preds = %cond.end.i65
  %call.i68 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %14)
  br label %car.exit71

car.exit71:                                       ; preds = %cdr.exit51.critedge, %cond.end.i45, %sw.default.i49, %cdr.exit51, %cond.end.i55, %sw.default.i59, %cdr.exit61, %cond.end.i65, %sw.bb1.i67, %sw.default.i69
  %retval.0.i70 = phi ptr [ null, %sw.default.i69 ], [ %16, %sw.bb1.i67 ], [ null, %cond.end.i65 ], [ null, %cdr.exit61 ], [ null, %sw.default.i59 ], [ null, %cond.end.i55 ], [ null, %cdr.exit51 ], [ null, %sw.default.i49 ], [ null, %cond.end.i45 ], [ null, %cdr.exit51.critedge ]
  store ptr %retval.0.i70, ptr %pform, align 8, !tbaa !5
  %17 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define dso_local ptr @letstar_macro(ptr noundef returned %form) #6 {
entry:
  %cmp.i.i = icmp eq ptr %form, null
  br i1 %cmp.i.i, label %if.end, label %cond.end.i.i

cond.end.i.i:                                     ; preds = %entry
  %type.i.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %0 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %conv.i.i = sext i16 %0 to i32
  switch i32 %conv.i.i, label %sw.default.i.i [
    i32 0, label %cond.false.i142
    i32 1, label %cdr.exit.i
  ]

sw.default.i.i:                                   ; preds = %cond.end.i.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %form)
  br label %cond.false.i142

cdr.exit.i:                                       ; preds = %cond.end.i.i
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  %cmp.i2.i = icmp eq ptr %1, null
  br i1 %cmp.i2.i, label %cond.false.i142, label %cond.end.i5.i

cond.end.i5.i:                                    ; preds = %cdr.exit.i
  %type.i3.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i3.i, align 2, !tbaa !14
  %conv.i4.i = sext i16 %2 to i32
  switch i32 %conv.i4.i, label %sw.default.i8.i [
    i32 0, label %cond.false.i142
    i32 1, label %cadr.exit
  ]

sw.default.i8.i:                                  ; preds = %cond.end.i5.i
  %call.i7.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  br label %cond.false.i142

cadr.exit:                                        ; preds = %cond.end.i5.i
  %storage_as.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i.i, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %3, null
  br i1 %cmp.not, label %cond.false.i142, label %cond.end.i

cond.end.i:                                       ; preds = %cadr.exit
  %type.i = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %4 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %4 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %cond.false.i142
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %cond.false.i142

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp2.not = icmp eq ptr %5, null
  br i1 %cmp2.not, label %cond.false.i142, label %car.exit

car.exit:                                         ; preds = %cdr.exit
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %6 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %7 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i30 = icmp eq i64 %7, 1
  br i1 %cmp.i30, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %car.exit
  %8 = load ptr, ptr @heap, align 8, !tbaa !5
  %9 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %8, %9
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i31 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %8, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %car.exit
  %10 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %10, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %11 = phi ptr [ %.pre.i, %if.then4.i ], [ %10, %if.else.i ]
  %cdr.i32 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2, i32 0, i32 1
  %12 = load ptr, ptr %cdr.i32, align 8, !tbaa !9
  store ptr %12, ptr @freelist, align 8, !tbaa !5
  %13 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %13, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %8, %if.end.i ], [ %11, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i33 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i33, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %6, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  %call.i34 = tail call ptr @gen_intern(ptr noundef nonnull @.str.59, i64 noundef 0)
  %14 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i37 = sext i16 %14 to i32
  switch i32 %conv.i37, label %sw.default.i42 [
    i32 0, label %cond.end.i.i48
    i32 1, label %sw.bb1.i40
  ]

sw.bb1.i40:                                       ; preds = %cons.exit
  %15 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  br label %cond.end.i.i48

sw.default.i42:                                   ; preds = %cons.exit
  %call.i41 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %cond.end.i.i48

cond.end.i.i48:                                   ; preds = %sw.default.i42, %sw.bb1.i40, %cons.exit
  %retval.0.i43 = phi ptr [ null, %sw.default.i42 ], [ %15, %sw.bb1.i40 ], [ null, %cons.exit ]
  %16 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %conv.i.i47 = sext i16 %16 to i32
  switch i32 %conv.i.i47, label %sw.default.i.i50 [
    i32 0, label %cddr.exit
    i32 1, label %cdr.exit.i53
  ]

sw.default.i.i50:                                 ; preds = %cond.end.i.i48
  %call.i.i49 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %form)
  br label %cddr.exit

cdr.exit.i53:                                     ; preds = %cond.end.i.i48
  %17 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  %cmp.i2.i52 = icmp eq ptr %17, null
  br i1 %cmp.i2.i52, label %cddr.exit, label %cond.end.i5.i56

cond.end.i5.i56:                                  ; preds = %cdr.exit.i53
  %type.i3.i54 = getelementptr inbounds %struct.obj, ptr %17, i64 0, i32 1
  %18 = load i16, ptr %type.i3.i54, align 2, !tbaa !14
  %conv.i4.i55 = sext i16 %18 to i32
  switch i32 %conv.i4.i55, label %sw.default.i9.i [
    i32 0, label %cddr.exit
    i32 1, label %sw.bb1.i7.i
  ]

sw.bb1.i7.i:                                      ; preds = %cond.end.i5.i56
  %cdr.i6.i = getelementptr inbounds %struct.obj, ptr %17, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %cdr.i6.i, align 8, !tbaa !9
  br label %cddr.exit

sw.default.i9.i:                                  ; preds = %cond.end.i5.i56
  %call.i8.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %17)
  br label %cddr.exit

cddr.exit:                                        ; preds = %cond.end.i.i48, %sw.default.i.i50, %cdr.exit.i53, %cond.end.i5.i56, %sw.bb1.i7.i, %sw.default.i9.i
  %retval.0.i10.i = phi ptr [ null, %sw.default.i9.i ], [ %19, %sw.bb1.i7.i ], [ null, %cond.end.i5.i56 ], [ null, %cdr.exit.i53 ], [ null, %sw.default.i.i50 ], [ null, %cond.end.i.i48 ]
  %20 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i57 = icmp eq i64 %20, 1
  br i1 %cmp.i57, label %if.then.i59, label %if.else.i65

if.then.i59:                                      ; preds = %cddr.exit
  %21 = load ptr, ptr @heap, align 8, !tbaa !5
  %22 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i58 = icmp ult ptr %21, %22
  br i1 %cmp1.not.i58, label %if.end.i63, label %if.then2.i61

if.then2.i61:                                     ; preds = %if.then.i59
  %call.i.i60 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i63

if.end.i63:                                       ; preds = %if.then2.i61, %if.then.i59
  %add.ptr.i62 = getelementptr inbounds %struct.obj, ptr %21, i64 1
  store ptr %add.ptr.i62, ptr @heap, align 8, !tbaa !5
  br label %cons.exit75

if.else.i65:                                      ; preds = %cddr.exit
  %23 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i64 = icmp eq ptr %23, null
  br i1 %cmp3.i64, label %if.then4.i67, label %if.end5.i70

if.then4.i67:                                     ; preds = %if.else.i65
  tail call void @gc_for_newcell() #38
  %.pre.i66 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i70

if.end5.i70:                                      ; preds = %if.then4.i67, %if.else.i65
  %24 = phi ptr [ %.pre.i66, %if.then4.i67 ], [ %23, %if.else.i65 ]
  %cdr.i68 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2, i32 0, i32 1
  %25 = load ptr, ptr %cdr.i68, align 8, !tbaa !9
  store ptr %25, ptr @freelist, align 8, !tbaa !5
  %26 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i69 = add nsw i64 %26, 1
  store i64 %inc.i69, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit75

cons.exit75:                                      ; preds = %if.end.i63, %if.end5.i70
  %z.0.i71 = phi ptr [ %21, %if.end.i63 ], [ %24, %if.end5.i70 ]
  store i16 0, ptr %z.0.i71, align 8, !tbaa !35
  %type.i72 = getelementptr inbounds %struct.obj, ptr %z.0.i71, i64 0, i32 1
  store i16 1, ptr %type.i72, align 2, !tbaa !14
  %storage_as7.i73 = getelementptr inbounds %struct.obj, ptr %z.0.i71, i64 0, i32 2
  store ptr %retval.0.i43, ptr %storage_as7.i73, align 8, !tbaa !9
  %cdr9.i74 = getelementptr inbounds %struct.obj, ptr %z.0.i71, i64 0, i32 2, i32 0, i32 1
  store ptr %retval.0.i10.i, ptr %cdr9.i74, align 8, !tbaa !9
  %27 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i76 = icmp eq i64 %27, 1
  br i1 %cmp.i76, label %if.then.i78, label %if.else.i84

if.then.i78:                                      ; preds = %cons.exit75
  %28 = load ptr, ptr @heap, align 8, !tbaa !5
  %29 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i77 = icmp ult ptr %28, %29
  br i1 %cmp1.not.i77, label %if.end.i82, label %if.then2.i80

if.then2.i80:                                     ; preds = %if.then.i78
  %call.i.i79 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i82

if.end.i82:                                       ; preds = %if.then2.i80, %if.then.i78
  %add.ptr.i81 = getelementptr inbounds %struct.obj, ptr %28, i64 1
  store ptr %add.ptr.i81, ptr @heap, align 8, !tbaa !5
  br label %cons.exit94

if.else.i84:                                      ; preds = %cons.exit75
  %30 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i83 = icmp eq ptr %30, null
  br i1 %cmp3.i83, label %if.then4.i86, label %if.end5.i89

if.then4.i86:                                     ; preds = %if.else.i84
  tail call void @gc_for_newcell() #38
  %.pre.i85 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i89

if.end5.i89:                                      ; preds = %if.then4.i86, %if.else.i84
  %31 = phi ptr [ %.pre.i85, %if.then4.i86 ], [ %30, %if.else.i84 ]
  %cdr.i87 = getelementptr inbounds %struct.obj, ptr %31, i64 0, i32 2, i32 0, i32 1
  %32 = load ptr, ptr %cdr.i87, align 8, !tbaa !9
  store ptr %32, ptr @freelist, align 8, !tbaa !5
  %33 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i88 = add nsw i64 %33, 1
  store i64 %inc.i88, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit94

cons.exit94:                                      ; preds = %if.end.i82, %if.end5.i89
  %z.0.i90 = phi ptr [ %28, %if.end.i82 ], [ %31, %if.end5.i89 ]
  store i16 0, ptr %z.0.i90, align 8, !tbaa !35
  %type.i91 = getelementptr inbounds %struct.obj, ptr %z.0.i90, i64 0, i32 1
  store i16 1, ptr %type.i91, align 2, !tbaa !14
  %storage_as7.i92 = getelementptr inbounds %struct.obj, ptr %z.0.i90, i64 0, i32 2
  store ptr %call.i34, ptr %storage_as7.i92, align 8, !tbaa !9
  %cdr9.i93 = getelementptr inbounds %struct.obj, ptr %z.0.i90, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i71, ptr %cdr9.i93, align 8, !tbaa !9
  %34 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i95 = icmp eq i64 %34, 1
  br i1 %cmp.i95, label %if.then.i97, label %if.else.i103

if.then.i97:                                      ; preds = %cons.exit94
  %35 = load ptr, ptr @heap, align 8, !tbaa !5
  %36 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i96 = icmp ult ptr %35, %36
  br i1 %cmp1.not.i96, label %if.end.i101, label %if.then2.i99

if.then2.i99:                                     ; preds = %if.then.i97
  %call.i.i98 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i101

if.end.i101:                                      ; preds = %if.then2.i99, %if.then.i97
  %add.ptr.i100 = getelementptr inbounds %struct.obj, ptr %35, i64 1
  store ptr %add.ptr.i100, ptr @heap, align 8, !tbaa !5
  br label %cons.exit113

if.else.i103:                                     ; preds = %cons.exit94
  %37 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i102 = icmp eq ptr %37, null
  br i1 %cmp3.i102, label %if.then4.i105, label %if.end5.i108

if.then4.i105:                                    ; preds = %if.else.i103
  tail call void @gc_for_newcell() #38
  %.pre.i104 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i108

if.end5.i108:                                     ; preds = %if.then4.i105, %if.else.i103
  %38 = phi ptr [ %.pre.i104, %if.then4.i105 ], [ %37, %if.else.i103 ]
  %cdr.i106 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 2, i32 0, i32 1
  %39 = load ptr, ptr %cdr.i106, align 8, !tbaa !9
  store ptr %39, ptr @freelist, align 8, !tbaa !5
  %40 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i107 = add nsw i64 %40, 1
  store i64 %inc.i107, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit113

cons.exit113:                                     ; preds = %if.end.i101, %if.end5.i108
  %z.0.i109 = phi ptr [ %35, %if.end.i101 ], [ %38, %if.end5.i108 ]
  store i16 0, ptr %z.0.i109, align 8, !tbaa !35
  %type.i110 = getelementptr inbounds %struct.obj, ptr %z.0.i109, i64 0, i32 1
  store i16 1, ptr %type.i110, align 2, !tbaa !14
  %storage_as7.i111 = getelementptr inbounds %struct.obj, ptr %z.0.i109, i64 0, i32 2
  store ptr %z.0.i90, ptr %storage_as7.i111, align 8, !tbaa !9
  %cdr9.i112 = getelementptr inbounds %struct.obj, ptr %z.0.i109, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i112, align 8, !tbaa !9
  %41 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i114 = icmp eq i64 %41, 1
  br i1 %cmp.i114, label %if.then.i116, label %if.else.i122

if.then.i116:                                     ; preds = %cons.exit113
  %42 = load ptr, ptr @heap, align 8, !tbaa !5
  %43 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i115 = icmp ult ptr %42, %43
  br i1 %cmp1.not.i115, label %if.end.i120, label %if.then2.i118

if.then2.i118:                                    ; preds = %if.then.i116
  %call.i.i117 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i120

if.end.i120:                                      ; preds = %if.then2.i118, %if.then.i116
  %add.ptr.i119 = getelementptr inbounds %struct.obj, ptr %42, i64 1
  store ptr %add.ptr.i119, ptr @heap, align 8, !tbaa !5
  br label %cond.false.i

if.else.i122:                                     ; preds = %cons.exit113
  %44 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i121 = icmp eq ptr %44, null
  br i1 %cmp3.i121, label %if.then4.i124, label %if.end5.i127

if.then4.i124:                                    ; preds = %if.else.i122
  tail call void @gc_for_newcell() #38
  %.pre.i123 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i127

if.end5.i127:                                     ; preds = %if.then4.i124, %if.else.i122
  %45 = phi ptr [ %.pre.i123, %if.then4.i124 ], [ %44, %if.else.i122 ]
  %cdr.i125 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 2, i32 0, i32 1
  %46 = load ptr, ptr %cdr.i125, align 8, !tbaa !9
  store ptr %46, ptr @freelist, align 8, !tbaa !5
  %47 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i126 = add nsw i64 %47, 1
  store i64 %inc.i126, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cond.false.i

cond.false.i:                                     ; preds = %if.end5.i127, %if.end.i120
  %z.0.i128 = phi ptr [ %42, %if.end.i120 ], [ %45, %if.end5.i127 ]
  store i16 0, ptr %z.0.i128, align 8, !tbaa !35
  %type.i129 = getelementptr inbounds %struct.obj, ptr %z.0.i128, i64 0, i32 1
  store i16 1, ptr %type.i129, align 2, !tbaa !14
  %storage_as7.i130 = getelementptr inbounds %struct.obj, ptr %z.0.i128, i64 0, i32 2
  store ptr %z.0.i, ptr %storage_as7.i130, align 8, !tbaa !9
  %cdr9.i131 = getelementptr inbounds %struct.obj, ptr %z.0.i128, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i109, ptr %cdr9.i131, align 8, !tbaa !9
  %48 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %49 = icmp eq i16 %48, 1
  br i1 %49, label %setcdr.exit, label %if.then.i136

if.then.i136:                                     ; preds = %cond.false.i
  %call.i135 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef nonnull %form)
  br label %setcdr.exit

setcdr.exit:                                      ; preds = %cond.false.i, %if.then.i136
  store ptr %z.0.i128, ptr %cdr.i.i, align 8, !tbaa !9
  br label %cond.false.i142

if.end:                                           ; preds = %entry
  %call.i139 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  br label %if.then.i144

cond.false.i142:                                  ; preds = %cond.end.i.i, %sw.default.i.i, %cdr.exit.i, %cond.end.i5.i, %sw.default.i8.i, %cond.end.i, %sw.default.i, %cadr.exit, %cdr.exit, %setcdr.exit
  %call.i139157 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  %50 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %51 = icmp eq i16 %50, 1
  br i1 %51, label %setcar.exit, label %if.then.i144

if.then.i144:                                     ; preds = %if.end, %cond.false.i142
  %call.i139154 = phi ptr [ %call.i139157, %cond.false.i142 ], [ %call.i139, %if.end ]
  %call.i143 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef %form)
  br label %setcar.exit

setcar.exit:                                      ; preds = %cond.false.i142, %if.then.i144
  %call.i139152 = phi ptr [ %call.i139157, %cond.false.i142 ], [ %call.i139154, %if.then.i144 ]
  %storage_as.i145 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2
  store ptr %call.i139152, ptr %storage_as.i145, align 8, !tbaa !9
  ret ptr %form
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cadr(ptr noundef %x) #6 {
entry:
  %cmp.i = icmp eq ptr %x, null
  br i1 %cmp.i, label %car.exit, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %x)
  br label %car.exit

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i2 = icmp eq ptr %1, null
  br i1 %cmp.i2, label %car.exit, label %cond.end.i5

cond.end.i5:                                      ; preds = %cdr.exit
  %type.i3 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i3, align 2, !tbaa !14
  %conv.i4 = sext i16 %2 to i32
  switch i32 %conv.i4, label %sw.default.i8 [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i6
  ]

sw.bb1.i6:                                        ; preds = %cond.end.i5
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i8:                                    ; preds = %cond.end.i5
  %call.i7 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  br label %car.exit

car.exit:                                         ; preds = %entry, %cond.end.i, %sw.default.i, %cdr.exit, %cond.end.i5, %sw.bb1.i6, %sw.default.i8
  %retval.0.i9 = phi ptr [ null, %sw.default.i8 ], [ %3, %sw.bb1.i6 ], [ null, %cond.end.i5 ], [ null, %cdr.exit ], [ null, %sw.default.i ], [ null, %cond.end.i ], [ null, %entry ]
  ret ptr %retval.0.i9
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cddr(ptr noundef %x) #6 {
entry:
  %cmp.i = icmp eq ptr %x, null
  br i1 %cmp.i, label %cdr.exit11, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %cdr.exit11
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %x)
  br label %cdr.exit11

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i2 = icmp eq ptr %1, null
  br i1 %cmp.i2, label %cdr.exit11, label %cond.end.i5

cond.end.i5:                                      ; preds = %cdr.exit
  %type.i3 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i3, align 2, !tbaa !14
  %conv.i4 = sext i16 %2 to i32
  switch i32 %conv.i4, label %sw.default.i9 [
    i32 0, label %cdr.exit11
    i32 1, label %sw.bb1.i7
  ]

sw.bb1.i7:                                        ; preds = %cond.end.i5
  %cdr.i6 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i6, align 8, !tbaa !9
  br label %cdr.exit11

sw.default.i9:                                    ; preds = %cond.end.i5
  %call.i8 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %cdr.exit11

cdr.exit11:                                       ; preds = %entry, %cond.end.i, %sw.default.i, %cdr.exit, %cond.end.i5, %sw.bb1.i7, %sw.default.i9
  %retval.0.i10 = phi ptr [ null, %sw.default.i9 ], [ %3, %sw.bb1.i7 ], [ null, %cond.end.i5 ], [ null, %cdr.exit ], [ null, %sw.default.i ], [ null, %cond.end.i ], [ null, %entry ]
  ret ptr %retval.0.i10
}

; Function Attrs: nounwind uwtable
define dso_local ptr @letrec_macro(ptr noundef returned %form) #6 {
entry:
  %cmp.i.i = icmp eq ptr %form, null
  br i1 %cmp.i.i, label %for.end, label %cond.end.i.i

cond.end.i.i:                                     ; preds = %entry
  %type.i.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %0 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %conv.i.i = sext i16 %0 to i32
  switch i32 %conv.i.i, label %sw.default.i.i [
    i32 0, label %cond.end.i.i28
    i32 1, label %cdr.exit.i
  ]

sw.default.i.i:                                   ; preds = %cond.end.i.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %form)
  br label %cond.end.i.i28

cdr.exit.i:                                       ; preds = %cond.end.i.i
  %cdr.i.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr.i.i, align 8, !tbaa !9
  %cmp.i2.i = icmp eq ptr %1, null
  br i1 %cmp.i2.i, label %cond.end.i.i28, label %cond.end.i5.i

cond.end.i5.i:                                    ; preds = %cdr.exit.i
  %type.i3.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i3.i, align 2, !tbaa !14
  %conv.i4.i = sext i16 %2 to i32
  switch i32 %conv.i4.i, label %sw.default.i9.i [
    i32 0, label %cond.end.i.i28
    i32 1, label %sw.bb1.i7.i
  ]

sw.bb1.i7.i:                                      ; preds = %cond.end.i5.i
  %cdr.i6.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i6.i, align 8, !tbaa !9
  br label %cond.end.i.i28

sw.default.i9.i:                                  ; preds = %cond.end.i5.i
  %call.i8.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %cond.end.i.i28

cond.end.i.i28:                                   ; preds = %cond.end.i.i, %sw.default.i.i, %cdr.exit.i, %cond.end.i5.i, %sw.bb1.i7.i, %sw.default.i9.i
  %retval.0.i10.i.ph = phi ptr [ null, %cond.end.i.i ], [ null, %sw.default.i.i ], [ null, %cdr.exit.i ], [ null, %cond.end.i5.i ], [ %3, %sw.bb1.i7.i ], [ null, %sw.default.i9.i ]
  %4 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %conv.i.i27 = sext i16 %4 to i32
  switch i32 %conv.i.i27, label %sw.default.i.i30 [
    i32 0, label %for.end
    i32 1, label %cdr.exit.i33
  ]

sw.default.i.i30:                                 ; preds = %cond.end.i.i28
  %call.i.i29 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %form)
  br label %for.end

cdr.exit.i33:                                     ; preds = %cond.end.i.i28
  %cdr.i.i31 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i31, align 8, !tbaa !9
  %cmp.i2.i32 = icmp eq ptr %5, null
  br i1 %cmp.i2.i32, label %for.end, label %cond.end.i5.i36

cond.end.i5.i36:                                  ; preds = %cdr.exit.i33
  %type.i3.i34 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %6 = load i16, ptr %type.i3.i34, align 2, !tbaa !14
  %conv.i4.i35 = sext i16 %6 to i32
  switch i32 %conv.i4.i35, label %sw.default.i8.i [
    i32 0, label %for.end
    i32 1, label %cadr.exit
  ]

sw.default.i8.i:                                  ; preds = %cond.end.i5.i36
  %call.i7.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %5)
  br label %for.end

cadr.exit:                                        ; preds = %cond.end.i5.i36
  %storage_as.i.i = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %storage_as.i.i, align 8, !tbaa !9
  %cmp.not148 = icmp eq ptr %7, null
  br i1 %cmp.not148, label %for.end, label %cond.end.i.i40

cond.end.i.i40:                                   ; preds = %cadr.exit, %cdr.exit
  %l.0151 = phi ptr [ %38, %cdr.exit ], [ %7, %cadr.exit ]
  %setb.0150 = phi ptr [ %z.0.i104, %cdr.exit ], [ %retval.0.i10.i.ph, %cadr.exit ]
  %letb.0149 = phi ptr [ %z.0.i67, %cdr.exit ], [ null, %cadr.exit ]
  %type.i.i38 = getelementptr inbounds %struct.obj, ptr %l.0151, i64 0, i32 1
  %8 = load i16, ptr %type.i.i38, align 2, !tbaa !14
  %conv.i.i39 = sext i16 %8 to i32
  switch i32 %conv.i.i39, label %sw.default.i.i42 [
    i32 0, label %caar.exit
    i32 1, label %car.exit.i
  ]

sw.default.i.i42:                                 ; preds = %cond.end.i.i40
  %call.i.i41 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.0151)
  br label %caar.exit

car.exit.i:                                       ; preds = %cond.end.i.i40
  %storage_as.i.i43 = getelementptr inbounds %struct.obj, ptr %l.0151, i64 0, i32 2
  %9 = load ptr, ptr %storage_as.i.i43, align 8, !tbaa !9
  %cmp.i2.i44 = icmp eq ptr %9, null
  br i1 %cmp.i2.i44, label %caar.exit, label %cond.end.i5.i47

cond.end.i5.i47:                                  ; preds = %car.exit.i
  %type.i3.i45 = getelementptr inbounds %struct.obj, ptr %9, i64 0, i32 1
  %10 = load i16, ptr %type.i3.i45, align 2, !tbaa !14
  %conv.i4.i46 = sext i16 %10 to i32
  switch i32 %conv.i4.i46, label %sw.default.i9.i50 [
    i32 0, label %caar.exit
    i32 1, label %sw.bb1.i7.i48
  ]

sw.bb1.i7.i48:                                    ; preds = %cond.end.i5.i47
  %storage_as.i6.i = getelementptr inbounds %struct.obj, ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %storage_as.i6.i, align 8, !tbaa !9
  br label %caar.exit

sw.default.i9.i50:                                ; preds = %cond.end.i5.i47
  %call.i8.i49 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %9)
  br label %caar.exit

caar.exit:                                        ; preds = %cond.end.i.i40, %sw.default.i.i42, %car.exit.i, %cond.end.i5.i47, %sw.bb1.i7.i48, %sw.default.i9.i50
  %retval.0.i10.i51 = phi ptr [ null, %sw.default.i9.i50 ], [ %11, %sw.bb1.i7.i48 ], [ null, %cond.end.i5.i47 ], [ null, %car.exit.i ], [ null, %sw.default.i.i42 ], [ null, %cond.end.i.i40 ]
  %12 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %12, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %caar.exit
  %13 = load ptr, ptr @heap, align 8, !tbaa !5
  %14 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %13, %14
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i52 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %13, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %caar.exit
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %15, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %16 = phi ptr [ %.pre.i, %if.then4.i ], [ %15, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %16, i64 0, i32 2, i32 0, i32 1
  %17 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %17, ptr @freelist, align 8, !tbaa !5
  %18 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %18, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %13, %if.end.i ], [ %16, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %retval.0.i10.i51, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  %19 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i53 = icmp eq i64 %19, 1
  br i1 %cmp.i53, label %if.then.i55, label %if.else.i61

if.then.i55:                                      ; preds = %cons.exit
  %20 = load ptr, ptr @heap, align 8, !tbaa !5
  %21 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i54 = icmp ult ptr %20, %21
  br i1 %cmp1.not.i54, label %if.end.i59, label %if.then2.i57

if.then2.i57:                                     ; preds = %if.then.i55
  %call.i.i56 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i59

if.end.i59:                                       ; preds = %if.then2.i57, %if.then.i55
  %add.ptr.i58 = getelementptr inbounds %struct.obj, ptr %20, i64 1
  store ptr %add.ptr.i58, ptr @heap, align 8, !tbaa !5
  br label %cons.exit71

if.else.i61:                                      ; preds = %cons.exit
  %22 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i60 = icmp eq ptr %22, null
  br i1 %cmp3.i60, label %if.then4.i63, label %if.end5.i66

if.then4.i63:                                     ; preds = %if.else.i61
  tail call void @gc_for_newcell() #38
  %.pre.i62 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i66

if.end5.i66:                                      ; preds = %if.then4.i63, %if.else.i61
  %23 = phi ptr [ %.pre.i62, %if.then4.i63 ], [ %22, %if.else.i61 ]
  %cdr.i64 = getelementptr inbounds %struct.obj, ptr %23, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %cdr.i64, align 8, !tbaa !9
  store ptr %24, ptr @freelist, align 8, !tbaa !5
  %25 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i65 = add nsw i64 %25, 1
  store i64 %inc.i65, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit71

cons.exit71:                                      ; preds = %if.end.i59, %if.end5.i66
  %z.0.i67 = phi ptr [ %20, %if.end.i59 ], [ %23, %if.end5.i66 ]
  store i16 0, ptr %z.0.i67, align 8, !tbaa !35
  %type.i68 = getelementptr inbounds %struct.obj, ptr %z.0.i67, i64 0, i32 1
  store i16 1, ptr %type.i68, align 2, !tbaa !14
  %storage_as7.i69 = getelementptr inbounds %struct.obj, ptr %z.0.i67, i64 0, i32 2
  store ptr %z.0.i, ptr %storage_as7.i69, align 8, !tbaa !9
  %cdr9.i70 = getelementptr inbounds %struct.obj, ptr %z.0.i67, i64 0, i32 2, i32 0, i32 1
  store ptr %letb.0149, ptr %cdr9.i70, align 8, !tbaa !9
  %call.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.95, i64 noundef 0)
  %26 = load i16, ptr %type.i.i38, align 2, !tbaa !14
  %conv.i.i74 = sext i16 %26 to i32
  switch i32 %conv.i.i74, label %sw.default.i.i77 [
    i32 0, label %caar.exit89
    i32 1, label %car.exit.i80
  ]

sw.default.i.i77:                                 ; preds = %cons.exit71
  %call.i.i76 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.0151)
  br label %caar.exit89

car.exit.i80:                                     ; preds = %cons.exit71
  %storage_as.i.i78 = getelementptr inbounds %struct.obj, ptr %l.0151, i64 0, i32 2
  %27 = load ptr, ptr %storage_as.i.i78, align 8, !tbaa !9
  %cmp.i2.i79 = icmp eq ptr %27, null
  br i1 %cmp.i2.i79, label %caar.exit89, label %cond.end.i5.i83

cond.end.i5.i83:                                  ; preds = %car.exit.i80
  %type.i3.i81 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 1
  %28 = load i16, ptr %type.i3.i81, align 2, !tbaa !14
  %conv.i4.i82 = sext i16 %28 to i32
  switch i32 %conv.i4.i82, label %sw.default.i9.i87 [
    i32 0, label %caar.exit89
    i32 1, label %sw.bb1.i7.i85
  ]

sw.bb1.i7.i85:                                    ; preds = %cond.end.i5.i83
  %storage_as.i6.i84 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 2
  %29 = load ptr, ptr %storage_as.i6.i84, align 8, !tbaa !9
  br label %caar.exit89

sw.default.i9.i87:                                ; preds = %cond.end.i5.i83
  %call.i8.i86 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %27)
  br label %caar.exit89

caar.exit89:                                      ; preds = %cons.exit71, %sw.default.i.i77, %car.exit.i80, %cond.end.i5.i83, %sw.bb1.i7.i85, %sw.default.i9.i87
  %retval.0.i10.i88 = phi ptr [ null, %sw.default.i9.i87 ], [ %29, %sw.bb1.i7.i85 ], [ null, %cond.end.i5.i83 ], [ null, %car.exit.i80 ], [ null, %sw.default.i.i77 ], [ null, %cons.exit71 ]
  %call7 = tail call ptr @cadar(ptr noundef nonnull %l.0151) #33
  %call8 = tail call ptr (i64, ...) @listn(i64 noundef 3, ptr noundef %call.i, ptr noundef %retval.0.i10.i88, ptr noundef %call7) #33
  %30 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i90 = icmp eq i64 %30, 1
  br i1 %cmp.i90, label %if.then.i92, label %if.else.i98

if.then.i92:                                      ; preds = %caar.exit89
  %31 = load ptr, ptr @heap, align 8, !tbaa !5
  %32 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i91 = icmp ult ptr %31, %32
  br i1 %cmp1.not.i91, label %if.end.i96, label %if.then2.i94

if.then2.i94:                                     ; preds = %if.then.i92
  %call.i.i93 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i96

if.end.i96:                                       ; preds = %if.then2.i94, %if.then.i92
  %add.ptr.i95 = getelementptr inbounds %struct.obj, ptr %31, i64 1
  store ptr %add.ptr.i95, ptr @heap, align 8, !tbaa !5
  br label %cons.exit108

if.else.i98:                                      ; preds = %caar.exit89
  %33 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i97 = icmp eq ptr %33, null
  br i1 %cmp3.i97, label %if.then4.i100, label %if.end5.i103

if.then4.i100:                                    ; preds = %if.else.i98
  tail call void @gc_for_newcell() #38
  %.pre.i99 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i103

if.end5.i103:                                     ; preds = %if.then4.i100, %if.else.i98
  %34 = phi ptr [ %.pre.i99, %if.then4.i100 ], [ %33, %if.else.i98 ]
  %cdr.i101 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 2, i32 0, i32 1
  %35 = load ptr, ptr %cdr.i101, align 8, !tbaa !9
  store ptr %35, ptr @freelist, align 8, !tbaa !5
  %36 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i102 = add nsw i64 %36, 1
  store i64 %inc.i102, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit108

cons.exit108:                                     ; preds = %if.end.i96, %if.end5.i103
  %z.0.i104 = phi ptr [ %31, %if.end.i96 ], [ %34, %if.end5.i103 ]
  store i16 0, ptr %z.0.i104, align 8, !tbaa !35
  %type.i105 = getelementptr inbounds %struct.obj, ptr %z.0.i104, i64 0, i32 1
  store i16 1, ptr %type.i105, align 2, !tbaa !14
  %storage_as7.i106 = getelementptr inbounds %struct.obj, ptr %z.0.i104, i64 0, i32 2
  store ptr %call8, ptr %storage_as7.i106, align 8, !tbaa !9
  %cdr9.i107 = getelementptr inbounds %struct.obj, ptr %z.0.i104, i64 0, i32 2, i32 0, i32 1
  store ptr %setb.0150, ptr %cdr9.i107, align 8, !tbaa !9
  %37 = load i16, ptr %type.i.i38, align 2, !tbaa !14
  %conv.i = sext i16 %37 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %for.end
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cons.exit108
  %call.i112 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l.0151)
  br label %for.end

cdr.exit:                                         ; preds = %cons.exit108
  %cdr.i111 = getelementptr inbounds %struct.obj, ptr %l.0151, i64 0, i32 2, i32 0, i32 1
  %38 = load ptr, ptr %cdr.i111, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %38, null
  br i1 %cmp.not, label %for.end, label %cond.end.i.i40, !llvm.loop !97

for.end:                                          ; preds = %cons.exit108, %cdr.exit, %sw.default.i, %entry, %cond.end.i.i28, %sw.default.i.i30, %cdr.exit.i33, %cond.end.i5.i36, %sw.default.i8.i, %cadr.exit
  %letb.0.lcssa = phi ptr [ null, %cadr.exit ], [ null, %sw.default.i8.i ], [ null, %cond.end.i5.i36 ], [ null, %cdr.exit.i33 ], [ null, %sw.default.i.i30 ], [ null, %cond.end.i.i28 ], [ null, %entry ], [ %z.0.i67, %sw.default.i ], [ %z.0.i67, %cdr.exit ], [ %z.0.i67, %cons.exit108 ]
  %setb.0.lcssa = phi ptr [ %retval.0.i10.i.ph, %cadr.exit ], [ %retval.0.i10.i.ph, %sw.default.i8.i ], [ %retval.0.i10.i.ph, %cond.end.i5.i36 ], [ %retval.0.i10.i.ph, %cdr.exit.i33 ], [ %retval.0.i10.i.ph, %sw.default.i.i30 ], [ %retval.0.i10.i.ph, %cond.end.i.i28 ], [ null, %entry ], [ %z.0.i104, %sw.default.i ], [ %z.0.i104, %cdr.exit ], [ %z.0.i104, %cons.exit108 ]
  %39 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i113 = icmp eq i64 %39, 1
  br i1 %cmp.i113, label %if.then.i115, label %if.else.i121

if.then.i115:                                     ; preds = %for.end
  %40 = load ptr, ptr @heap, align 8, !tbaa !5
  %41 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i114 = icmp ult ptr %40, %41
  br i1 %cmp1.not.i114, label %if.end.i119, label %if.then2.i117

if.then2.i117:                                    ; preds = %if.then.i115
  %call.i.i116 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i119

if.end.i119:                                      ; preds = %if.then2.i117, %if.then.i115
  %add.ptr.i118 = getelementptr inbounds %struct.obj, ptr %40, i64 1
  store ptr %add.ptr.i118, ptr @heap, align 8, !tbaa !5
  br label %cons.exit131

if.else.i121:                                     ; preds = %for.end
  %42 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i120 = icmp eq ptr %42, null
  br i1 %cmp3.i120, label %if.then4.i123, label %if.end5.i126

if.then4.i123:                                    ; preds = %if.else.i121
  tail call void @gc_for_newcell() #38
  %.pre.i122 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i126

if.end5.i126:                                     ; preds = %if.then4.i123, %if.else.i121
  %43 = phi ptr [ %.pre.i122, %if.then4.i123 ], [ %42, %if.else.i121 ]
  %cdr.i124 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2, i32 0, i32 1
  %44 = load ptr, ptr %cdr.i124, align 8, !tbaa !9
  store ptr %44, ptr @freelist, align 8, !tbaa !5
  %45 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i125 = add nsw i64 %45, 1
  store i64 %inc.i125, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit131

cons.exit131:                                     ; preds = %if.end.i119, %if.end5.i126
  %z.0.i127 = phi ptr [ %40, %if.end.i119 ], [ %43, %if.end5.i126 ]
  store i16 0, ptr %z.0.i127, align 8, !tbaa !35
  %type.i128 = getelementptr inbounds %struct.obj, ptr %z.0.i127, i64 0, i32 1
  store i16 1, ptr %type.i128, align 2, !tbaa !14
  %storage_as7.i129 = getelementptr inbounds %struct.obj, ptr %z.0.i127, i64 0, i32 2
  store ptr %letb.0.lcssa, ptr %storage_as7.i129, align 8, !tbaa !9
  %cdr9.i130 = getelementptr inbounds %struct.obj, ptr %z.0.i127, i64 0, i32 2, i32 0, i32 1
  store ptr %setb.0.lcssa, ptr %cdr9.i130, align 8, !tbaa !9
  br i1 %cmp.i.i, label %if.then.i135, label %cond.false.i

cond.false.i:                                     ; preds = %cons.exit131
  %type.i133 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %46 = load i16, ptr %type.i133, align 2, !tbaa !14
  %47 = icmp eq i16 %46, 1
  br i1 %47, label %cond.false.i141, label %if.then.i135

if.then.i135:                                     ; preds = %cond.false.i, %cons.exit131
  %call.i134 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %form)
  br label %cond.false.i141

cond.false.i141:                                  ; preds = %if.then.i135, %cond.false.i
  %cdr.i136 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i127, ptr %cdr.i136, align 8, !tbaa !9
  %call.i138 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  %type.i140 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %48 = load i16, ptr %type.i140, align 2, !tbaa !14
  %49 = icmp eq i16 %48, 1
  br i1 %49, label %setcar.exit, label %if.then.i143

if.then.i143:                                     ; preds = %cond.false.i141
  %call.i142 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef nonnull %form)
  br label %setcar.exit

setcar.exit:                                      ; preds = %cond.false.i141, %if.then.i143
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2
  store ptr %call.i138, ptr %storage_as.i, align 8, !tbaa !9
  ret ptr %form
}

; Function Attrs: nounwind uwtable
define dso_local ptr @caar(ptr noundef %x) #6 {
entry:
  %cmp.i = icmp eq ptr %x, null
  br i1 %cmp.i, label %car.exit11, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit11
    i32 1, label %car.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %x)
  br label %car.exit11

car.exit:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %cmp.i2 = icmp eq ptr %1, null
  br i1 %cmp.i2, label %car.exit11, label %cond.end.i5

cond.end.i5:                                      ; preds = %car.exit
  %type.i3 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i3, align 2, !tbaa !14
  %conv.i4 = sext i16 %2 to i32
  switch i32 %conv.i4, label %sw.default.i9 [
    i32 0, label %car.exit11
    i32 1, label %sw.bb1.i7
  ]

sw.bb1.i7:                                        ; preds = %cond.end.i5
  %storage_as.i6 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i6, align 8, !tbaa !9
  br label %car.exit11

sw.default.i9:                                    ; preds = %cond.end.i5
  %call.i8 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  br label %car.exit11

car.exit11:                                       ; preds = %entry, %cond.end.i, %sw.default.i, %car.exit, %cond.end.i5, %sw.bb1.i7, %sw.default.i9
  %retval.0.i10 = phi ptr [ null, %sw.default.i9 ], [ %3, %sw.bb1.i7 ], [ null, %cond.end.i5 ], [ null, %car.exit ], [ null, %sw.default.i ], [ null, %cond.end.i ], [ null, %entry ]
  ret ptr %retval.0.i10
}

declare ptr @listn(i64 noundef, ...) local_unnamed_addr #13

declare ptr @cadar(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @reverse(ptr noundef %l) #6 {
entry:
  %cmp.not17 = icmp eq ptr %l, null
  br i1 %cmp.not17, label %for.end, label %cond.end.i

cond.end.i:                                       ; preds = %entry, %cdr.exit
  %p.019 = phi ptr [ %10, %cdr.exit ], [ %l, %entry ]
  %n.018 = phi ptr [ %z.0.i, %cdr.exit ], [ null, %entry ]
  %type.i = getelementptr inbounds %struct.obj, ptr %p.019, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %p.019, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %p.019)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %1, %sw.bb1.i ], [ null, %cond.end.i ]
  %2 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i6 = icmp eq i64 %2, 1
  br i1 %cmp.i6, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %car.exit
  %3 = load ptr, ptr @heap, align 8, !tbaa !5
  %4 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %3, %4
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %3, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %car.exit
  %5 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %5, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %6 = phi ptr [ %.pre.i, %if.then4.i ], [ %5, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2, i32 0, i32 1
  %7 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %7, ptr @freelist, align 8, !tbaa !5
  %8 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %8, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %3, %if.end.i ], [ %6, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i7 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i7, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %retval.0.i, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %n.018, ptr %cdr9.i, align 8, !tbaa !9
  %9 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i10 = sext i16 %9 to i32
  switch i32 %conv.i10, label %sw.default.i15 [
    i32 0, label %for.end
    i32 1, label %cdr.exit
  ]

sw.default.i15:                                   ; preds = %cons.exit
  %call.i14 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %p.019)
  br label %for.end

cdr.exit:                                         ; preds = %cons.exit
  %cdr.i12 = getelementptr inbounds %struct.obj, ptr %p.019, i64 0, i32 2, i32 0, i32 1
  %10 = load ptr, ptr %cdr.i12, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %10, null
  br i1 %cmp.not, label %for.end, label %cond.end.i, !llvm.loop !98

for.end:                                          ; preds = %cons.exit, %cdr.exit, %sw.default.i15, %entry
  %n.0.lcssa = phi ptr [ null, %entry ], [ %z.0.i, %sw.default.i15 ], [ %z.0.i, %cdr.exit ], [ %z.0.i, %cons.exit ]
  ret ptr %n.0.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local ptr @let_macro(ptr noundef returned %form) #6 {
entry:
  %cmp.i = icmp eq ptr %form, null
  br i1 %cmp.i, label %if.end23, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %cond.end.i171
    i32 1, label %cdr.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %form)
  br label %cond.end.i171

cdr.exit:                                         ; preds = %cond.end.i
  %cdr.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.i50 = icmp eq ptr %1, null
  br i1 %cmp.i50, label %cond.end.i171, label %cond.end.i53

cond.end.i53:                                     ; preds = %cdr.exit
  %type.i51 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i51, align 2, !tbaa !14
  %conv.i52 = sext i16 %2 to i32
  switch i32 %conv.i52, label %sw.default.i56 [
    i32 0, label %cond.end.i171
    i32 1, label %car.exit
  ]

sw.default.i56:                                   ; preds = %cond.end.i53
  %call.i55 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  br label %cond.end.i171

car.exit:                                         ; preds = %cond.end.i53
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %cmp.not334 = icmp eq ptr %3, null
  br i1 %cmp.not334, label %cond.end.i171, label %cond.end.i61

cond.end.i61:                                     ; preds = %car.exit, %cdr.exit167
  %p.0337 = phi ptr [ %41, %cdr.exit167 ], [ %3, %car.exit ]
  %al.0336 = phi ptr [ %z.0.i153.sink362, %cdr.exit167 ], [ null, %car.exit ]
  %fl.0335 = phi ptr [ %fl.1, %cdr.exit167 ], [ null, %car.exit ]
  %type.i59 = getelementptr inbounds %struct.obj, ptr %p.0337, i64 0, i32 1
  %4 = load i16, ptr %type.i59, align 2, !tbaa !14
  %conv.i60 = sext i16 %4 to i32
  switch i32 %conv.i60, label %sw.default.i65 [
    i32 0, label %car.exit99
    i32 1, label %car.exit67
  ]

sw.default.i65:                                   ; preds = %cond.end.i61
  %call.i64 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %p.0337)
  br label %car.exit99

car.exit67:                                       ; preds = %cond.end.i61
  %storage_as.i62 = getelementptr inbounds %struct.obj, ptr %p.0337, i64 0, i32 2
  %5 = load ptr, ptr %storage_as.i62, align 8, !tbaa !9
  %cmp3 = icmp eq ptr %5, null
  br i1 %cmp3, label %car.exit99, label %cond.end

cond.end:                                         ; preds = %car.exit67
  %type = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %6 = load i16, ptr %type, align 2, !tbaa !14
  %cmp4 = icmp eq i16 %6, 3
  br i1 %cmp4, label %if.then, label %cond.end.i93

if.then:                                          ; preds = %cond.end
  %7 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i68 = icmp eq i64 %7, 1
  br i1 %cmp.i68, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %8 = load ptr, ptr @heap, align 8, !tbaa !5
  %9 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %8, %9
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %8, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %if.then
  %10 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %10, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %11 = phi ptr [ %.pre.i, %if.then4.i ], [ %10, %if.else.i ]
  %cdr.i69 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2, i32 0, i32 1
  %12 = load ptr, ptr %cdr.i69, align 8, !tbaa !9
  store ptr %12, ptr @freelist, align 8, !tbaa !5
  %13 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %13, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %8, %if.end.i ], [ %11, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i70 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i70, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %5, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %fl.0335, ptr %cdr9.i, align 8, !tbaa !9
  %14 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i71 = icmp eq i64 %14, 1
  br i1 %cmp.i71, label %if.then.i73, label %if.else.i79

if.then.i73:                                      ; preds = %cons.exit
  %15 = load ptr, ptr @heap, align 8, !tbaa !5
  %16 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i72 = icmp ult ptr %15, %16
  br i1 %cmp1.not.i72, label %if.end.i77, label %if.then2.i75

if.then2.i75:                                     ; preds = %if.then.i73
  %call.i.i74 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i77

if.end.i77:                                       ; preds = %if.then2.i75, %if.then.i73
  %add.ptr.i76 = getelementptr inbounds %struct.obj, ptr %15, i64 1
  store ptr %add.ptr.i76, ptr @heap, align 8, !tbaa !5
  br label %cond.end.i161

if.else.i79:                                      ; preds = %cons.exit
  %17 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i78 = icmp eq ptr %17, null
  br i1 %cmp3.i78, label %if.then4.i81, label %if.end5.i84

if.then4.i81:                                     ; preds = %if.else.i79
  tail call void @gc_for_newcell() #38
  %.pre.i80 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i84

if.end5.i84:                                      ; preds = %if.then4.i81, %if.else.i79
  %18 = phi ptr [ %.pre.i80, %if.then4.i81 ], [ %17, %if.else.i79 ]
  %cdr.i82 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %cdr.i82, align 8, !tbaa !9
  store ptr %19, ptr @freelist, align 8, !tbaa !5
  %20 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i83 = add nsw i64 %20, 1
  store i64 %inc.i83, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cond.end.i161

cond.end.i93:                                     ; preds = %cond.end
  %conv.i92 = sext i16 %6 to i32
  switch i32 %conv.i92, label %sw.default.i97 [
    i32 0, label %car.exit99
    i32 1, label %sw.bb1.i95
  ]

sw.bb1.i95:                                       ; preds = %cond.end.i93
  %storage_as.i94 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2
  %21 = load ptr, ptr %storage_as.i94, align 8, !tbaa !9
  br label %car.exit99

sw.default.i97:                                   ; preds = %cond.end.i93
  %call.i96 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %5)
  br label %car.exit99

car.exit99:                                       ; preds = %car.exit67, %sw.default.i65, %cond.end.i61, %cond.end.i93, %sw.bb1.i95, %sw.default.i97
  %cmp3303308313 = phi i1 [ false, %sw.default.i97 ], [ false, %sw.bb1.i95 ], [ false, %cond.end.i93 ], [ true, %car.exit67 ], [ true, %sw.default.i65 ], [ true, %cond.end.i61 ]
  %retval.0.i66302309312 = phi ptr [ %5, %sw.default.i97 ], [ %5, %sw.bb1.i95 ], [ %5, %cond.end.i93 ], [ null, %car.exit67 ], [ null, %sw.default.i65 ], [ null, %cond.end.i61 ]
  %retval.0.i98 = phi ptr [ null, %sw.default.i97 ], [ %21, %sw.bb1.i95 ], [ null, %cond.end.i93 ], [ null, %car.exit67 ], [ null, %sw.default.i65 ], [ null, %cond.end.i61 ]
  %22 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i100 = icmp eq i64 %22, 1
  br i1 %cmp.i100, label %if.then.i102, label %if.else.i108

if.then.i102:                                     ; preds = %car.exit99
  %23 = load ptr, ptr @heap, align 8, !tbaa !5
  %24 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i101 = icmp ult ptr %23, %24
  br i1 %cmp1.not.i101, label %if.end.i106, label %if.then2.i104

if.then2.i104:                                    ; preds = %if.then.i102
  %call.i.i103 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i106

if.end.i106:                                      ; preds = %if.then2.i104, %if.then.i102
  %add.ptr.i105 = getelementptr inbounds %struct.obj, ptr %23, i64 1
  store ptr %add.ptr.i105, ptr @heap, align 8, !tbaa !5
  br label %cons.exit118

if.else.i108:                                     ; preds = %car.exit99
  %25 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i107 = icmp eq ptr %25, null
  br i1 %cmp3.i107, label %if.then4.i110, label %if.end5.i113

if.then4.i110:                                    ; preds = %if.else.i108
  tail call void @gc_for_newcell() #38
  %.pre.i109 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i113

if.end5.i113:                                     ; preds = %if.then4.i110, %if.else.i108
  %26 = phi ptr [ %.pre.i109, %if.then4.i110 ], [ %25, %if.else.i108 ]
  %cdr.i111 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  %27 = load ptr, ptr %cdr.i111, align 8, !tbaa !9
  store ptr %27, ptr @freelist, align 8, !tbaa !5
  %28 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i112 = add nsw i64 %28, 1
  store i64 %inc.i112, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit118

cons.exit118:                                     ; preds = %if.end.i106, %if.end5.i113
  %z.0.i114 = phi ptr [ %23, %if.end.i106 ], [ %26, %if.end5.i113 ]
  store i16 0, ptr %z.0.i114, align 8, !tbaa !35
  %type.i115 = getelementptr inbounds %struct.obj, ptr %z.0.i114, i64 0, i32 1
  store i16 1, ptr %type.i115, align 2, !tbaa !14
  %storage_as7.i116 = getelementptr inbounds %struct.obj, ptr %z.0.i114, i64 0, i32 2
  store ptr %retval.0.i98, ptr %storage_as7.i116, align 8, !tbaa !9
  %cdr9.i117 = getelementptr inbounds %struct.obj, ptr %z.0.i114, i64 0, i32 2, i32 0, i32 1
  store ptr %fl.0335, ptr %cdr9.i117, align 8, !tbaa !9
  br i1 %cmp3303308313, label %car.exit138, label %cond.end.i122

cond.end.i122:                                    ; preds = %cons.exit118
  %type.i120 = getelementptr inbounds %struct.obj, ptr %retval.0.i66302309312, i64 0, i32 1
  %29 = load i16, ptr %type.i120, align 2, !tbaa !14
  %conv.i121 = sext i16 %29 to i32
  switch i32 %conv.i121, label %sw.default.i126 [
    i32 0, label %car.exit138
    i32 1, label %cdr.exit128
  ]

sw.default.i126:                                  ; preds = %cond.end.i122
  %call.i125 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %retval.0.i66302309312)
  br label %car.exit138

cdr.exit128:                                      ; preds = %cond.end.i122
  %cdr.i123 = getelementptr inbounds %struct.obj, ptr %retval.0.i66302309312, i64 0, i32 2, i32 0, i32 1
  %30 = load ptr, ptr %cdr.i123, align 8, !tbaa !9
  %cmp.i129 = icmp eq ptr %30, null
  br i1 %cmp.i129, label %car.exit138, label %cond.end.i132

cond.end.i132:                                    ; preds = %cdr.exit128
  %type.i130 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 1
  %31 = load i16, ptr %type.i130, align 2, !tbaa !14
  %conv.i131 = sext i16 %31 to i32
  switch i32 %conv.i131, label %sw.default.i136 [
    i32 0, label %car.exit138
    i32 1, label %sw.bb1.i134
  ]

sw.bb1.i134:                                      ; preds = %cond.end.i132
  %storage_as.i133 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2
  %32 = load ptr, ptr %storage_as.i133, align 8, !tbaa !9
  br label %car.exit138

sw.default.i136:                                  ; preds = %cond.end.i132
  %call.i135 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %30)
  br label %car.exit138

car.exit138:                                      ; preds = %cons.exit118, %cond.end.i122, %sw.default.i126, %cdr.exit128, %cond.end.i132, %sw.bb1.i134, %sw.default.i136
  %retval.0.i137 = phi ptr [ null, %sw.default.i136 ], [ %32, %sw.bb1.i134 ], [ null, %cond.end.i132 ], [ null, %cdr.exit128 ], [ null, %sw.default.i126 ], [ null, %cond.end.i122 ], [ null, %cons.exit118 ]
  %33 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i139 = icmp eq i64 %33, 1
  br i1 %cmp.i139, label %if.then.i141, label %if.else.i147

if.then.i141:                                     ; preds = %car.exit138
  %34 = load ptr, ptr @heap, align 8, !tbaa !5
  %35 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i140 = icmp ult ptr %34, %35
  br i1 %cmp1.not.i140, label %if.end.i145, label %if.then2.i143

if.then2.i143:                                    ; preds = %if.then.i141
  %call.i.i142 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i145

if.end.i145:                                      ; preds = %if.then2.i143, %if.then.i141
  %add.ptr.i144 = getelementptr inbounds %struct.obj, ptr %34, i64 1
  store ptr %add.ptr.i144, ptr @heap, align 8, !tbaa !5
  br label %cond.end.i161

if.else.i147:                                     ; preds = %car.exit138
  %36 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i146 = icmp eq ptr %36, null
  br i1 %cmp3.i146, label %if.then4.i149, label %if.end5.i152

if.then4.i149:                                    ; preds = %if.else.i147
  tail call void @gc_for_newcell() #38
  %.pre.i148 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i152

if.end5.i152:                                     ; preds = %if.then4.i149, %if.else.i147
  %37 = phi ptr [ %.pre.i148, %if.then4.i149 ], [ %36, %if.else.i147 ]
  %cdr.i150 = getelementptr inbounds %struct.obj, ptr %37, i64 0, i32 2, i32 0, i32 1
  %38 = load ptr, ptr %cdr.i150, align 8, !tbaa !9
  store ptr %38, ptr @freelist, align 8, !tbaa !5
  %39 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i151 = add nsw i64 %39, 1
  store i64 %inc.i151, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cond.end.i161

cond.end.i161:                                    ; preds = %if.end5.i152, %if.end.i145, %if.end5.i84, %if.end.i77
  %z.0.i153.sink362 = phi ptr [ %15, %if.end.i77 ], [ %18, %if.end5.i84 ], [ %34, %if.end.i145 ], [ %37, %if.end5.i152 ]
  %retval.0.i137.sink = phi ptr [ null, %if.end.i77 ], [ null, %if.end5.i84 ], [ %retval.0.i137, %if.end.i145 ], [ %retval.0.i137, %if.end5.i152 ]
  %fl.1 = phi ptr [ %z.0.i, %if.end.i77 ], [ %z.0.i, %if.end5.i84 ], [ %z.0.i114, %if.end.i145 ], [ %z.0.i114, %if.end5.i152 ]
  store i16 0, ptr %z.0.i153.sink362, align 8, !tbaa !35
  %type.i154 = getelementptr inbounds %struct.obj, ptr %z.0.i153.sink362, i64 0, i32 1
  store i16 1, ptr %type.i154, align 2, !tbaa !14
  %storage_as7.i155 = getelementptr inbounds %struct.obj, ptr %z.0.i153.sink362, i64 0, i32 2
  store ptr %retval.0.i137.sink, ptr %storage_as7.i155, align 8, !tbaa !9
  %cdr9.i156 = getelementptr inbounds %struct.obj, ptr %z.0.i153.sink362, i64 0, i32 2, i32 0, i32 1
  store ptr %al.0336, ptr %cdr9.i156, align 8, !tbaa !9
  %40 = load i16, ptr %type.i59, align 2, !tbaa !14
  %conv.i160 = sext i16 %40 to i32
  switch i32 %conv.i160, label %sw.default.i165 [
    i32 0, label %for.end
    i32 1, label %cdr.exit167
  ]

sw.default.i165:                                  ; preds = %cond.end.i161
  %call.i164 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %p.0337)
  br label %for.end

cdr.exit167:                                      ; preds = %cond.end.i161
  %cdr.i162 = getelementptr inbounds %struct.obj, ptr %p.0337, i64 0, i32 2, i32 0, i32 1
  %41 = load ptr, ptr %cdr.i162, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %41, null
  br i1 %cmp.not, label %for.end, label %cond.end.i61, !llvm.loop !99

for.end:                                          ; preds = %cond.end.i161, %cdr.exit167, %sw.default.i165
  br i1 %cmp.i, label %if.end23, label %cond.end.i171

cond.end.i171:                                    ; preds = %sw.default.i56, %cond.end.i53, %cdr.exit, %sw.default.i, %cond.end.i, %car.exit, %for.end
  %al.0.lcssa347 = phi ptr [ %z.0.i153.sink362, %for.end ], [ null, %car.exit ], [ null, %cond.end.i ], [ null, %sw.default.i ], [ null, %cdr.exit ], [ null, %cond.end.i53 ], [ null, %sw.default.i56 ]
  %fl.0.lcssa345 = phi ptr [ %fl.1, %for.end ], [ null, %car.exit ], [ null, %cond.end.i ], [ null, %sw.default.i ], [ null, %cdr.exit ], [ null, %cond.end.i53 ], [ null, %sw.default.i56 ]
  %type.i169 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %42 = load i16, ptr %type.i169, align 2, !tbaa !14
  %conv.i170 = sext i16 %42 to i32
  switch i32 %conv.i170, label %sw.default.i175 [
    i32 0, label %if.end23
    i32 1, label %cdr.exit177
  ]

sw.default.i175:                                  ; preds = %cond.end.i171
  %call.i174 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %form)
  br label %if.end23

cdr.exit177:                                      ; preds = %cond.end.i171
  %cdr.i172 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  %43 = load ptr, ptr %cdr.i172, align 8, !tbaa !9
  %cmp.i178 = icmp eq ptr %43, null
  br i1 %cmp.i178, label %if.end23, label %cond.end.i181

cond.end.i181:                                    ; preds = %cdr.exit177
  %type.i179 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 1
  %44 = load i16, ptr %type.i179, align 2, !tbaa !14
  %conv.i180 = sext i16 %44 to i32
  switch i32 %conv.i180, label %sw.default.i185 [
    i32 0, label %if.end23
    i32 1, label %cdr.exit187
  ]

sw.default.i185:                                  ; preds = %cond.end.i181
  %call.i184 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %43)
  br label %if.end23

cdr.exit187:                                      ; preds = %cond.end.i181
  %cdr.i182 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2, i32 0, i32 1
  %45 = load ptr, ptr %cdr.i182, align 8, !tbaa !9
  %cmp.i188 = icmp eq ptr %45, null
  br i1 %cmp.i188, label %if.end23, label %cond.end.i191

cond.end.i191:                                    ; preds = %cdr.exit187
  %type.i189 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 1
  %46 = load i16, ptr %type.i189, align 2, !tbaa !14
  %conv.i190 = sext i16 %46 to i32
  switch i32 %conv.i190, label %sw.default.i195 [
    i32 0, label %cond.end.i201
    i32 1, label %cdr.exit197
  ]

sw.default.i195:                                  ; preds = %cond.end.i191
  %call.i194 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %45)
  %.pre = load i16, ptr %type.i189, align 2, !tbaa !14
  br label %cond.end.i201

cdr.exit197:                                      ; preds = %cond.end.i191
  %cdr.i192 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 2, i32 0, i32 1
  %47 = load ptr, ptr %cdr.i192, align 8, !tbaa !9
  %cmp17 = icmp eq ptr %47, null
  br i1 %cmp17, label %cond.end.i201, label %if.else21

cond.end.i201:                                    ; preds = %cdr.exit197, %cond.end.i191, %sw.default.i195
  %48 = phi i16 [ %46, %cdr.exit197 ], [ %46, %cond.end.i191 ], [ %.pre, %sw.default.i195 ]
  %conv.i200 = sext i16 %48 to i32
  switch i32 %conv.i200, label %sw.default.i205 [
    i32 0, label %if.end23
    i32 1, label %sw.bb1.i203
  ]

sw.bb1.i203:                                      ; preds = %cond.end.i201
  %storage_as.i202 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 2
  %49 = load ptr, ptr %storage_as.i202, align 8, !tbaa !9
  br label %if.end23

sw.default.i205:                                  ; preds = %cond.end.i201
  %call.i204 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %45)
  br label %if.end23

if.else21:                                        ; preds = %cdr.exit197
  %50 = load ptr, ptr @sym_progn, align 8, !tbaa !5
  %51 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i208 = icmp eq i64 %51, 1
  br i1 %cmp.i208, label %if.then.i210, label %if.else.i216

if.then.i210:                                     ; preds = %if.else21
  %52 = load ptr, ptr @heap, align 8, !tbaa !5
  %53 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i209 = icmp ult ptr %52, %53
  br i1 %cmp1.not.i209, label %if.end.i214, label %if.then2.i212

if.then2.i212:                                    ; preds = %if.then.i210
  %call.i.i211 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i214

if.end.i214:                                      ; preds = %if.then2.i212, %if.then.i210
  %add.ptr.i213 = getelementptr inbounds %struct.obj, ptr %52, i64 1
  store ptr %add.ptr.i213, ptr @heap, align 8, !tbaa !5
  br label %cons.exit226

if.else.i216:                                     ; preds = %if.else21
  %54 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i215 = icmp eq ptr %54, null
  br i1 %cmp3.i215, label %if.then4.i218, label %if.end5.i221

if.then4.i218:                                    ; preds = %if.else.i216
  tail call void @gc_for_newcell() #38
  %.pre.i217 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i221

if.end5.i221:                                     ; preds = %if.then4.i218, %if.else.i216
  %55 = phi ptr [ %.pre.i217, %if.then4.i218 ], [ %54, %if.else.i216 ]
  %cdr.i219 = getelementptr inbounds %struct.obj, ptr %55, i64 0, i32 2, i32 0, i32 1
  %56 = load ptr, ptr %cdr.i219, align 8, !tbaa !9
  store ptr %56, ptr @freelist, align 8, !tbaa !5
  %57 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i220 = add nsw i64 %57, 1
  store i64 %inc.i220, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit226

cons.exit226:                                     ; preds = %if.end.i214, %if.end5.i221
  %z.0.i222 = phi ptr [ %52, %if.end.i214 ], [ %55, %if.end5.i221 ]
  store i16 0, ptr %z.0.i222, align 8, !tbaa !35
  %type.i223 = getelementptr inbounds %struct.obj, ptr %z.0.i222, i64 0, i32 1
  store i16 1, ptr %type.i223, align 2, !tbaa !14
  %storage_as7.i224 = getelementptr inbounds %struct.obj, ptr %z.0.i222, i64 0, i32 2
  store ptr %50, ptr %storage_as7.i224, align 8, !tbaa !9
  %cdr9.i225 = getelementptr inbounds %struct.obj, ptr %z.0.i222, i64 0, i32 2, i32 0, i32 1
  store ptr %45, ptr %cdr9.i225, align 8, !tbaa !9
  br label %if.end23

if.end23:                                         ; preds = %entry, %for.end, %cond.end.i171, %sw.default.i175, %cdr.exit177, %cond.end.i181, %sw.default.i185, %cdr.exit187, %sw.default.i205, %sw.bb1.i203, %cond.end.i201, %cons.exit226
  %al.0.lcssa348 = phi ptr [ %al.0.lcssa347, %cons.exit226 ], [ %al.0.lcssa347, %sw.default.i205 ], [ %al.0.lcssa347, %sw.bb1.i203 ], [ %al.0.lcssa347, %cond.end.i201 ], [ %al.0.lcssa347, %cdr.exit187 ], [ %al.0.lcssa347, %sw.default.i185 ], [ %al.0.lcssa347, %cond.end.i181 ], [ %al.0.lcssa347, %cdr.exit177 ], [ %al.0.lcssa347, %sw.default.i175 ], [ %al.0.lcssa347, %cond.end.i171 ], [ %z.0.i153.sink362, %for.end ], [ null, %entry ]
  %fl.0.lcssa346 = phi ptr [ %fl.0.lcssa345, %cons.exit226 ], [ %fl.0.lcssa345, %sw.default.i205 ], [ %fl.0.lcssa345, %sw.bb1.i203 ], [ %fl.0.lcssa345, %cond.end.i201 ], [ %fl.0.lcssa345, %cdr.exit187 ], [ %fl.0.lcssa345, %sw.default.i185 ], [ %fl.0.lcssa345, %cond.end.i181 ], [ %fl.0.lcssa345, %cdr.exit177 ], [ %fl.0.lcssa345, %sw.default.i175 ], [ %fl.0.lcssa345, %cond.end.i171 ], [ %fl.1, %for.end ], [ null, %entry ]
  %p.1 = phi ptr [ %z.0.i222, %cons.exit226 ], [ null, %sw.default.i205 ], [ %49, %sw.bb1.i203 ], [ null, %cond.end.i201 ], [ null, %cdr.exit187 ], [ null, %sw.default.i185 ], [ null, %cond.end.i181 ], [ null, %cdr.exit177 ], [ null, %sw.default.i175 ], [ null, %cond.end.i171 ], [ null, %for.end ], [ null, %entry ]
  %call24 = tail call ptr @reverse(ptr noundef %fl.0.lcssa346)
  %call25 = tail call ptr @reverse(ptr noundef %al.0.lcssa348)
  %58 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i227 = icmp eq i64 %58, 1
  br i1 %cmp.i227, label %if.then.i229, label %if.else.i235

if.then.i229:                                     ; preds = %if.end23
  %59 = load ptr, ptr @heap, align 8, !tbaa !5
  %60 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i228 = icmp ult ptr %59, %60
  br i1 %cmp1.not.i228, label %if.end.i233, label %if.then2.i231

if.then2.i231:                                    ; preds = %if.then.i229
  %call.i.i230 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i233

if.end.i233:                                      ; preds = %if.then2.i231, %if.then.i229
  %add.ptr.i232 = getelementptr inbounds %struct.obj, ptr %59, i64 1
  store ptr %add.ptr.i232, ptr @heap, align 8, !tbaa !5
  br label %cons.exit245

if.else.i235:                                     ; preds = %if.end23
  %61 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i234 = icmp eq ptr %61, null
  br i1 %cmp3.i234, label %if.then4.i237, label %if.end5.i240

if.then4.i237:                                    ; preds = %if.else.i235
  tail call void @gc_for_newcell() #38
  %.pre.i236 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i240

if.end5.i240:                                     ; preds = %if.then4.i237, %if.else.i235
  %62 = phi ptr [ %.pre.i236, %if.then4.i237 ], [ %61, %if.else.i235 ]
  %cdr.i238 = getelementptr inbounds %struct.obj, ptr %62, i64 0, i32 2, i32 0, i32 1
  %63 = load ptr, ptr %cdr.i238, align 8, !tbaa !9
  store ptr %63, ptr @freelist, align 8, !tbaa !5
  %64 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i239 = add nsw i64 %64, 1
  store i64 %inc.i239, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit245

cons.exit245:                                     ; preds = %if.end.i233, %if.end5.i240
  %z.0.i241 = phi ptr [ %59, %if.end.i233 ], [ %62, %if.end5.i240 ]
  store i16 0, ptr %z.0.i241, align 8, !tbaa !35
  %type.i242 = getelementptr inbounds %struct.obj, ptr %z.0.i241, i64 0, i32 1
  store i16 1, ptr %type.i242, align 2, !tbaa !14
  %storage_as7.i243 = getelementptr inbounds %struct.obj, ptr %z.0.i241, i64 0, i32 2
  store ptr %p.1, ptr %storage_as7.i243, align 8, !tbaa !9
  %cdr9.i244 = getelementptr inbounds %struct.obj, ptr %z.0.i241, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i244, align 8, !tbaa !9
  %65 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i246 = icmp eq i64 %65, 1
  br i1 %cmp.i246, label %if.then.i248, label %if.else.i254

if.then.i248:                                     ; preds = %cons.exit245
  %66 = load ptr, ptr @heap, align 8, !tbaa !5
  %67 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i247 = icmp ult ptr %66, %67
  br i1 %cmp1.not.i247, label %if.end.i252, label %if.then2.i250

if.then2.i250:                                    ; preds = %if.then.i248
  %call.i.i249 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i252

if.end.i252:                                      ; preds = %if.then2.i250, %if.then.i248
  %add.ptr.i251 = getelementptr inbounds %struct.obj, ptr %66, i64 1
  store ptr %add.ptr.i251, ptr @heap, align 8, !tbaa !5
  br label %cons.exit264

if.else.i254:                                     ; preds = %cons.exit245
  %68 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i253 = icmp eq ptr %68, null
  br i1 %cmp3.i253, label %if.then4.i256, label %if.end5.i259

if.then4.i256:                                    ; preds = %if.else.i254
  tail call void @gc_for_newcell() #38
  %.pre.i255 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i259

if.end5.i259:                                     ; preds = %if.then4.i256, %if.else.i254
  %69 = phi ptr [ %.pre.i255, %if.then4.i256 ], [ %68, %if.else.i254 ]
  %cdr.i257 = getelementptr inbounds %struct.obj, ptr %69, i64 0, i32 2, i32 0, i32 1
  %70 = load ptr, ptr %cdr.i257, align 8, !tbaa !9
  store ptr %70, ptr @freelist, align 8, !tbaa !5
  %71 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i258 = add nsw i64 %71, 1
  store i64 %inc.i258, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit264

cons.exit264:                                     ; preds = %if.end.i252, %if.end5.i259
  %z.0.i260 = phi ptr [ %66, %if.end.i252 ], [ %69, %if.end5.i259 ]
  store i16 0, ptr %z.0.i260, align 8, !tbaa !35
  %type.i261 = getelementptr inbounds %struct.obj, ptr %z.0.i260, i64 0, i32 1
  store i16 1, ptr %type.i261, align 2, !tbaa !14
  %storage_as7.i262 = getelementptr inbounds %struct.obj, ptr %z.0.i260, i64 0, i32 2
  store ptr %call25, ptr %storage_as7.i262, align 8, !tbaa !9
  %cdr9.i263 = getelementptr inbounds %struct.obj, ptr %z.0.i260, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i241, ptr %cdr9.i263, align 8, !tbaa !9
  %72 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i265 = icmp eq i64 %72, 1
  br i1 %cmp.i265, label %if.then.i267, label %if.else.i273

if.then.i267:                                     ; preds = %cons.exit264
  %73 = load ptr, ptr @heap, align 8, !tbaa !5
  %74 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i266 = icmp ult ptr %73, %74
  br i1 %cmp1.not.i266, label %if.end.i271, label %if.then2.i269

if.then2.i269:                                    ; preds = %if.then.i267
  %call.i.i268 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i271

if.end.i271:                                      ; preds = %if.then2.i269, %if.then.i267
  %add.ptr.i270 = getelementptr inbounds %struct.obj, ptr %73, i64 1
  store ptr %add.ptr.i270, ptr @heap, align 8, !tbaa !5
  br label %cons.exit283

if.else.i273:                                     ; preds = %cons.exit264
  %75 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i272 = icmp eq ptr %75, null
  br i1 %cmp3.i272, label %if.then4.i275, label %if.end5.i278

if.then4.i275:                                    ; preds = %if.else.i273
  tail call void @gc_for_newcell() #38
  %.pre.i274 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i278

if.end5.i278:                                     ; preds = %if.then4.i275, %if.else.i273
  %76 = phi ptr [ %.pre.i274, %if.then4.i275 ], [ %75, %if.else.i273 ]
  %cdr.i276 = getelementptr inbounds %struct.obj, ptr %76, i64 0, i32 2, i32 0, i32 1
  %77 = load ptr, ptr %cdr.i276, align 8, !tbaa !9
  store ptr %77, ptr @freelist, align 8, !tbaa !5
  %78 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i277 = add nsw i64 %78, 1
  store i64 %inc.i277, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit283

cons.exit283:                                     ; preds = %if.end.i271, %if.end5.i278
  %z.0.i279 = phi ptr [ %73, %if.end.i271 ], [ %76, %if.end5.i278 ]
  store i16 0, ptr %z.0.i279, align 8, !tbaa !35
  %type.i280 = getelementptr inbounds %struct.obj, ptr %z.0.i279, i64 0, i32 1
  store i16 1, ptr %type.i280, align 2, !tbaa !14
  %storage_as7.i281 = getelementptr inbounds %struct.obj, ptr %z.0.i279, i64 0, i32 2
  store ptr %call24, ptr %storage_as7.i281, align 8, !tbaa !9
  %cdr9.i282 = getelementptr inbounds %struct.obj, ptr %z.0.i279, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i260, ptr %cdr9.i282, align 8, !tbaa !9
  br i1 %cmp.i, label %if.then.i287, label %cond.false.i

cond.false.i:                                     ; preds = %cons.exit283
  %type.i285 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %79 = load i16, ptr %type.i285, align 2, !tbaa !14
  %80 = icmp eq i16 %79, 1
  br i1 %80, label %cond.false.i293, label %if.then.i287

if.then.i287:                                     ; preds = %cond.false.i, %cons.exit283
  %call.i286 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %form)
  br label %cond.false.i293

cond.false.i293:                                  ; preds = %if.then.i287, %cond.false.i
  %cdr.i288 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i279, ptr %cdr.i288, align 8, !tbaa !9
  %call.i290 = tail call ptr @gen_intern(ptr noundef nonnull @.str.96, i64 noundef 0)
  %type.i292 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %81 = load i16, ptr %type.i292, align 2, !tbaa !14
  %82 = icmp eq i16 %81, 1
  br i1 %82, label %setcar.exit, label %if.then.i295

if.then.i295:                                     ; preds = %cond.false.i293
  %call.i294 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef nonnull %form)
  br label %setcar.exit

setcar.exit:                                      ; preds = %cond.false.i293, %if.then.i295
  %storage_as.i296 = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2
  store ptr %call.i290, ptr %storage_as.i296, align 8, !tbaa !9
  ret ptr %form
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_quote(ptr noundef %args, ptr nocapture readnone %env) #6 {
entry:
  %cmp.i = icmp eq ptr %args, null
  br i1 %cmp.i, label %car.exit, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  br label %car.exit

car.exit:                                         ; preds = %entry, %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %1, %sw.bb1.i ], [ null, %cond.end.i ], [ null, %entry ]
  ret ptr %retval.0.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local ptr @leval_tenv(ptr nocapture readnone %args, ptr noundef readnone returned %env) #0 {
entry:
  ret ptr %env
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @leval_while(ptr noundef %args, ptr noundef %env) #6 {
entry:
  %cmp.i = icmp eq ptr %args, null
  %type.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 1
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2
  %cdr.i = getelementptr inbounds %struct.obj, ptr %args, i64 0, i32 2, i32 0, i32 1
  br i1 %cmp.i, label %while.cond.us, label %while.cond

while.cond.us:                                    ; preds = %entry, %while.cond.us
  %call140.us = tail call ptr @leval(ptr noundef null, ptr noundef %env)
  %cmp.not41.us = icmp eq ptr %call140.us, null
  br i1 %cmp.not41.us, label %while.end, label %while.cond.us, !llvm.loop !100

while.cond.loopexit.sink.split:                   ; preds = %car.exit28, %while.body
  %l.043.lcssa.sink = phi ptr [ %args, %while.body ], [ %l.043, %car.exit28 ]
  %call.i35 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l.043.lcssa.sink)
  br label %while.cond.loopexit

while.cond.loopexit:                              ; preds = %car.exit28, %cdr.exit38, %while.cond.loopexit.sink.split, %while.body, %cdr.exit
  br label %while.cond, !llvm.loop !100

while.cond:                                       ; preds = %entry, %while.cond.loopexit
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %while.cond
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %while.cond
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %args)
  br label %car.exit

car.exit:                                         ; preds = %while.cond, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %1, %sw.bb1.i ], [ null, %while.cond ]
  %call1 = tail call ptr @leval(ptr noundef %retval.0.i, ptr noundef %env)
  %cmp.not = icmp eq ptr %call1, null
  br i1 %cmp.not, label %while.end, label %while.body

while.body:                                       ; preds = %car.exit
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i13 = sext i16 %2 to i32
  switch i32 %conv.i13, label %while.cond.loopexit.sink.split [
    i32 0, label %while.cond.loopexit
    i32 1, label %cdr.exit
  ]

cdr.exit:                                         ; preds = %while.body
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp3.not42 = icmp eq ptr %3, null
  br i1 %cmp3.not42, label %while.cond.loopexit, label %cond.end.i22

cond.end.i22:                                     ; preds = %cdr.exit, %cdr.exit38
  %l.043 = phi ptr [ %7, %cdr.exit38 ], [ %3, %cdr.exit ]
  %type.i20 = getelementptr inbounds %struct.obj, ptr %l.043, i64 0, i32 1
  %4 = load i16, ptr %type.i20, align 2, !tbaa !14
  %conv.i21 = sext i16 %4 to i32
  switch i32 %conv.i21, label %sw.default.i26 [
    i32 0, label %car.exit28
    i32 1, label %sw.bb1.i24
  ]

sw.bb1.i24:                                       ; preds = %cond.end.i22
  %storage_as.i23 = getelementptr inbounds %struct.obj, ptr %l.043, i64 0, i32 2
  %5 = load ptr, ptr %storage_as.i23, align 8, !tbaa !9
  br label %car.exit28

sw.default.i26:                                   ; preds = %cond.end.i22
  %call.i25 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.043)
  br label %car.exit28

car.exit28:                                       ; preds = %cond.end.i22, %sw.bb1.i24, %sw.default.i26
  %retval.0.i27 = phi ptr [ null, %sw.default.i26 ], [ %5, %sw.bb1.i24 ], [ null, %cond.end.i22 ]
  %call5 = tail call ptr @leval(ptr noundef %retval.0.i27, ptr noundef %env)
  %6 = load i16, ptr %type.i20, align 2, !tbaa !14
  %conv.i31 = sext i16 %6 to i32
  switch i32 %conv.i31, label %while.cond.loopexit.sink.split [
    i32 0, label %while.cond.loopexit
    i32 1, label %cdr.exit38
  ]

cdr.exit38:                                       ; preds = %car.exit28
  %cdr.i33 = getelementptr inbounds %struct.obj, ptr %l.043, i64 0, i32 2, i32 0, i32 1
  %7 = load ptr, ptr %cdr.i33, align 8, !tbaa !9
  %cmp3.not = icmp eq ptr %7, null
  br i1 %cmp3.not, label %while.cond.loopexit, label %cond.end.i22, !llvm.loop !101

while.end:                                        ; preds = %car.exit, %while.cond.us
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symbolconc(ptr noundef %args) #6 {
entry:
  %0 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  store i8 0, ptr %0, align 1, !tbaa !9
  %cmp.not40 = icmp eq ptr %args, null
  br i1 %cmp.not40, label %for.end, label %cond.end.i

cond.end.i:                                       ; preds = %entry, %cdr.exit
  %size.042 = phi i64 [ %add, %cdr.exit ], [ 0, %entry ]
  %l.041 = phi ptr [ %8, %cdr.exit ], [ %args, %entry ]
  %type.i = getelementptr inbounds %struct.obj, ptr %l.041, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %1 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %if.then
    i32 1, label %car.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.041)
  br label %if.then

car.exit:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %l.041, i64 0, i32 2
  %2 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %cmp1 = icmp eq ptr %2, null
  br i1 %cmp1, label %if.then, label %cond.end

cond.end:                                         ; preds = %car.exit
  %type = getelementptr inbounds %struct.obj, ptr %2, i64 0, i32 1
  %3 = load i16, ptr %type, align 2, !tbaa !14
  %cmp2.not = icmp eq i16 %3, 3
  br i1 %cmp2.not, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.i, %sw.default.i, %car.exit, %cond.end
  %retval.0.i3438 = phi ptr [ %2, %cond.end ], [ null, %car.exit ], [ null, %sw.default.i ], [ null, %cond.end.i ]
  %call4 = tail call ptr @err(ptr noundef nonnull @.str.97, ptr noundef %retval.0.i3438)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %retval.0.i3439 = phi ptr [ %retval.0.i3438, %if.then ], [ %2, %cond.end ]
  %storage_as = getelementptr inbounds %struct.obj, ptr %retval.0.i3439, i64 0, i32 2
  %4 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %call5 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4) #34
  %add = add i64 %call5, %size.042
  %cmp6 = icmp sgt i64 %add, 5120
  br i1 %cmp6, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end
  %call9 = tail call ptr @err(ptr noundef nonnull @.str.98, ptr noundef null)
  %.pre = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end
  %5 = phi ptr [ %.pre, %if.then8 ], [ %4, %if.end ]
  %6 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %call13 = tail call ptr @strcat(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) %5) #33
  %7 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i25 = sext i16 %7 to i32
  switch i32 %conv.i25, label %sw.default.i29 [
    i32 0, label %for.end
    i32 1, label %cdr.exit
  ]

sw.default.i29:                                   ; preds = %if.end10
  %call.i28 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l.041)
  br label %for.end

cdr.exit:                                         ; preds = %if.end10
  %cdr.i = getelementptr inbounds %struct.obj, ptr %l.041, i64 0, i32 2, i32 0, i32 1
  %8 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp.not = icmp eq ptr %8, null
  br i1 %cmp.not, label %for.end, label %cond.end.i, !llvm.loop !102

for.end:                                          ; preds = %if.end10, %cdr.exit, %sw.default.i29, %entry
  %9 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %call.i31 = tail call ptr @gen_intern(ptr noundef %9, i64 noundef 1)
  ret ptr %call.i31
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcat(ptr noalias noundef returned, ptr noalias nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local nonnull ptr @subr_kind_str(i64 noundef %n) local_unnamed_addr #0 {
entry:
  %switch.tableidx = add i64 %n, -4
  %0 = icmp ult i64 %switch.tableidx, 18
  br i1 %0, label %switch.lookup, label %return

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [18 x ptr], ptr @switch.table.lprin1g, i64 0, i64 %switch.tableidx
  %switch.load = load ptr, ptr %switch.gep, align 8
  br label %return

return:                                           ; preds = %entry, %switch.lookup
  %retval.0 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.109, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lprin1g(ptr noundef %exp, ptr noundef %f) local_unnamed_addr #6 {
entry:
  %exp.addr = alloca ptr, align 8
  store ptr %exp, ptr %exp.addr, align 8, !tbaa !5
  %0 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %cmp = icmp ult ptr %exp.addr, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call.i = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %.pr = load ptr, ptr %exp.addr, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = phi ptr [ %.pr, %if.then ], [ %exp, %entry ]
  %cmp1 = icmp eq ptr %1, null
  br i1 %cmp1, label %sw.bb, label %cond.end

cond.end:                                         ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type, align 2, !tbaa !14
  %conv = sext i16 %2 to i32
  switch i32 %conv, label %cond.end85 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb23
    i32 3, label %sw.bb36
    i32 4, label %cond.end45
    i32 5, label %cond.end45
    i32 6, label %cond.end45
    i32 21, label %cond.end45
    i32 7, label %cond.end45
    i32 19, label %cond.end45
    i32 20, label %cond.end45
    i32 8, label %cond.end45
    i32 9, label %cond.end45
    i32 10, label %cond.end45
    i32 11, label %sw.bb51
  ]

sw.bb:                                            ; preds = %if.end, %cond.end
  %puts_fcn.i = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %3 = load ptr, ptr %puts_fcn.i, align 8, !tbaa !33
  %cb_argument.i = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %4 = load ptr, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i135 = call i32 %3(ptr noundef nonnull @.str.110, ptr noundef %4) #33
  br label %sw.epilog

sw.bb2:                                           ; preds = %cond.end
  %puts_fcn.i136 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %5 = load ptr, ptr %puts_fcn.i136, align 8, !tbaa !33
  %cb_argument.i137 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %6 = load ptr, ptr %cb_argument.i137, align 8, !tbaa !34
  %call.i138 = call i32 %5(ptr noundef nonnull @.str.111, ptr noundef %6) #33
  %7 = load ptr, ptr %exp.addr, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %7, null
  br i1 %cmp.i, label %car.exit, label %cond.end.i

cond.end.i:                                       ; preds = %sw.bb2
  %type.i = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 1
  %8 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %8 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i139 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %7)
  br label %car.exit

car.exit:                                         ; preds = %sw.bb2, %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %9, %sw.bb1.i ], [ null, %cond.end.i ], [ null, %sw.bb2 ]
  %call3 = call ptr @lprin1g(ptr noundef %retval.0.i, ptr noundef nonnull %f)
  %10 = load ptr, ptr %exp.addr, align 8, !tbaa !5
  %cmp.i140 = icmp eq ptr %10, null
  br i1 %cmp.i140, label %if.end22, label %cond.end.i143

cond.end.i143:                                    ; preds = %car.exit
  %type.i141 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 1
  %11 = load i16, ptr %type.i141, align 2, !tbaa !14
  %conv.i142 = sext i16 %11 to i32
  switch i32 %conv.i142, label %sw.default.i146 [
    i32 0, label %if.end22
    i32 1, label %cdr.exit
  ]

sw.default.i146:                                  ; preds = %cond.end.i143
  %call.i145 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %10)
  br label %if.end22

cdr.exit:                                         ; preds = %cond.end.i143
  %cdr.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %12 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp5234 = icmp eq ptr %12, null
  br i1 %cmp5234, label %if.end22, label %cond.end11

cond.end11:                                       ; preds = %cdr.exit, %cdr.exit170
  %tmp.0235 = phi ptr [ %19, %cdr.exit170 ], [ %12, %cdr.exit ]
  %type9 = getelementptr inbounds %struct.obj, ptr %tmp.0235, i64 0, i32 1
  %13 = load i16, ptr %type9, align 2, !tbaa !14
  %cmp13 = icmp eq i16 %13, 1
  %14 = load ptr, ptr %puts_fcn.i136, align 8, !tbaa !33
  %15 = load ptr, ptr %cb_argument.i137, align 8, !tbaa !34
  br i1 %cmp13, label %cond.end.i154, label %if.then20

cond.end.i154:                                    ; preds = %cond.end11
  %call.i150 = call i32 %14(ptr noundef nonnull @.str.112, ptr noundef %15) #33
  %16 = load i16, ptr %type9, align 2, !tbaa !14
  %conv.i153 = sext i16 %16 to i32
  switch i32 %conv.i153, label %sw.default.i158 [
    i32 0, label %cond.end.i164
    i32 1, label %sw.bb1.i156
  ]

sw.bb1.i156:                                      ; preds = %cond.end.i154
  %storage_as.i155 = getelementptr inbounds %struct.obj, ptr %tmp.0235, i64 0, i32 2
  %17 = load ptr, ptr %storage_as.i155, align 8, !tbaa !9
  br label %cond.end.i164

sw.default.i158:                                  ; preds = %cond.end.i154
  %call.i157 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %tmp.0235)
  br label %cond.end.i164

cond.end.i164:                                    ; preds = %sw.default.i158, %sw.bb1.i156, %cond.end.i154
  %retval.0.i159 = phi ptr [ null, %sw.default.i158 ], [ %17, %sw.bb1.i156 ], [ null, %cond.end.i154 ]
  %call16 = call ptr @lprin1g(ptr noundef %retval.0.i159, ptr noundef nonnull %f)
  %18 = load i16, ptr %type9, align 2, !tbaa !14
  %conv.i163 = sext i16 %18 to i32
  switch i32 %conv.i163, label %sw.default.i168 [
    i32 0, label %if.end22
    i32 1, label %cdr.exit170
  ]

sw.default.i168:                                  ; preds = %cond.end.i164
  %call.i167 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %tmp.0235)
  br label %if.end22

cdr.exit170:                                      ; preds = %cond.end.i164
  %cdr.i165 = getelementptr inbounds %struct.obj, ptr %tmp.0235, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %cdr.i165, align 8, !tbaa !9
  %cmp5 = icmp eq ptr %19, null
  br i1 %cmp5, label %if.end22, label %cond.end11, !llvm.loop !103

if.then20:                                        ; preds = %cond.end11
  %call.i173 = call i32 %14(ptr noundef nonnull @.str.113, ptr noundef %15) #33
  %call21 = call ptr @lprin1g(ptr noundef nonnull %tmp.0235, ptr noundef nonnull %f)
  br label %if.end22

if.end22:                                         ; preds = %cond.end.i164, %cdr.exit170, %sw.default.i168, %car.exit, %cond.end.i143, %sw.default.i146, %cdr.exit, %if.then20
  %20 = load ptr, ptr %puts_fcn.i136, align 8, !tbaa !33
  %21 = load ptr, ptr %cb_argument.i137, align 8, !tbaa !34
  %call.i176 = call i32 %20(ptr noundef nonnull @.str.114, ptr noundef %21) #33
  br label %sw.epilog

sw.bb23:                                          ; preds = %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %storage_as, align 8, !tbaa !9
  %conv24 = fptosi double %22 to i64
  %conv25 = sitofp i64 %conv24 to double
  %cmp28 = fcmp oeq double %22, %conv25
  %23 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; preds = %sw.bb23
  %call31 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %23, ptr noundef nonnull dereferenceable(1) @.str.115, i64 noundef %conv24) #33
  br label %if.end35

if.else:                                          ; preds = %sw.bb23
  %call34 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %23, ptr noundef nonnull dereferenceable(1) @.str.116, double noundef %22) #33
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then30
  %24 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %puts_fcn.i177 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %25 = load ptr, ptr %puts_fcn.i177, align 8, !tbaa !33
  %cb_argument.i178 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %26 = load ptr, ptr %cb_argument.i178, align 8, !tbaa !34
  %call.i179 = call i32 %25(ptr noundef %24, ptr noundef %26) #33
  br label %sw.epilog

sw.bb36:                                          ; preds = %cond.end
  %storage_as37 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %27 = load ptr, ptr %storage_as37, align 8, !tbaa !9
  %puts_fcn.i180 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %28 = load ptr, ptr %puts_fcn.i180, align 8, !tbaa !33
  %cb_argument.i181 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %29 = load ptr, ptr %cb_argument.i181, align 8, !tbaa !34
  %call.i182 = call i32 %28(ptr noundef %27, ptr noundef %29) #33
  br label %sw.epilog

cond.end45:                                       ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %30 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %31 = sext i16 %2 to i64
  %switch.tableidx = add nsw i64 %31, -4
  %32 = icmp ult i64 %switch.tableidx, 18
  br i1 %32, label %switch.lookup, label %subr_kind_str.exit

switch.lookup:                                    ; preds = %cond.end45
  %switch.gep = getelementptr inbounds [18 x ptr], ptr @switch.table.lprin1g, i64 0, i64 %switch.tableidx
  %switch.load = load ptr, ptr %switch.gep, align 8
  br label %subr_kind_str.exit

subr_kind_str.exit:                               ; preds = %cond.end45, %switch.lookup
  %retval.0.i185 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.109, %cond.end45 ]
  %call49 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %30, ptr noundef nonnull dereferenceable(1) @.str.117, ptr noundef nonnull %retval.0.i185) #33
  %33 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %puts_fcn.i186 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %34 = load ptr, ptr %puts_fcn.i186, align 8, !tbaa !33
  %cb_argument.i187 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %35 = load ptr, ptr %cb_argument.i187, align 8, !tbaa !34
  %call.i188 = call i32 %34(ptr noundef %33, ptr noundef %35) #33
  %36 = load ptr, ptr %exp.addr, align 8, !tbaa !5
  %storage_as50 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2
  %37 = load ptr, ptr %storage_as50, align 8, !tbaa !9
  %38 = load ptr, ptr %puts_fcn.i186, align 8, !tbaa !33
  %39 = load ptr, ptr %cb_argument.i187, align 8, !tbaa !34
  %call.i191 = call i32 %38(ptr noundef %37, ptr noundef %39) #33
  %40 = load ptr, ptr %puts_fcn.i186, align 8, !tbaa !33
  %41 = load ptr, ptr %cb_argument.i187, align 8, !tbaa !34
  %call.i194 = call i32 %40(ptr noundef nonnull @.str.118, ptr noundef %41) #33
  br label %sw.epilog

sw.bb51:                                          ; preds = %cond.end
  %puts_fcn.i195 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %42 = load ptr, ptr %puts_fcn.i195, align 8, !tbaa !33
  %cb_argument.i196 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %43 = load ptr, ptr %cb_argument.i196, align 8, !tbaa !34
  %call.i197 = call i32 %42(ptr noundef nonnull @.str.119, ptr noundef %43) #33
  %44 = load ptr, ptr %exp.addr, align 8, !tbaa !5
  %code = getelementptr inbounds %struct.obj, ptr %44, i64 0, i32 2, i32 0, i32 1
  %45 = load ptr, ptr %code, align 8, !tbaa !9
  %cmp53 = icmp eq ptr %45, null
  br i1 %cmp53, label %if.end78, label %cond.false56

cond.false56:                                     ; preds = %sw.bb51
  %type59 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 1
  %46 = load i16, ptr %type59, align 2, !tbaa !14
  %47 = icmp eq i16 %46, 1
  br i1 %47, label %car.exit207, label %if.end78

car.exit207:                                      ; preds = %cond.false56
  %storage_as.i202 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 2
  %48 = load ptr, ptr %storage_as.i202, align 8, !tbaa !9
  %call69 = call ptr @lprin1g(ptr noundef %48, ptr noundef nonnull %f)
  %49 = load ptr, ptr %puts_fcn.i195, align 8, !tbaa !33
  %50 = load ptr, ptr %cb_argument.i196, align 8, !tbaa !34
  %call.i210 = call i32 %49(ptr noundef nonnull @.str.112, ptr noundef %50) #33
  %51 = load ptr, ptr %exp.addr, align 8, !tbaa !5
  %code71 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 2, i32 0, i32 1
  %52 = load ptr, ptr %code71, align 8, !tbaa !9
  %cmp.i211 = icmp eq ptr %52, null
  br i1 %cmp.i211, label %if.end78, label %cond.end.i214

cond.end.i214:                                    ; preds = %car.exit207
  %type.i212 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 1
  %53 = load i16, ptr %type.i212, align 2, !tbaa !14
  %conv.i213 = sext i16 %53 to i32
  switch i32 %conv.i213, label %sw.default.i218 [
    i32 0, label %if.end78
    i32 1, label %sw.bb1.i216
  ]

sw.bb1.i216:                                      ; preds = %cond.end.i214
  %cdr.i215 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2, i32 0, i32 1
  %54 = load ptr, ptr %cdr.i215, align 8, !tbaa !9
  br label %if.end78

sw.default.i218:                                  ; preds = %cond.end.i214
  %call.i217 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %52)
  br label %if.end78

if.end78:                                         ; preds = %cond.false56, %sw.bb51, %sw.default.i218, %sw.bb1.i216, %cond.end.i214, %car.exit207
  %.sink = phi ptr [ null, %sw.default.i218 ], [ %54, %sw.bb1.i216 ], [ null, %cond.end.i214 ], [ null, %car.exit207 ], [ %45, %sw.bb51 ], [ %45, %cond.false56 ]
  %call77 = call ptr @lprin1g(ptr noundef %.sink, ptr noundef nonnull %f)
  %55 = load ptr, ptr %puts_fcn.i195, align 8, !tbaa !33
  %56 = load ptr, ptr %cb_argument.i196, align 8, !tbaa !34
  %call.i223 = call i32 %55(ptr noundef nonnull @.str.118, ptr noundef %56) #33
  br label %sw.epilog

cond.end85:                                       ; preds = %cond.end
  %57 = sext i16 %2 to i64
  %58 = load ptr, ptr @user_types, align 8, !tbaa !5
  %cmp.i224 = icmp eq ptr %58, null
  br i1 %cmp.i224, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end85
  %calloc.i = call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %cmp.i.i = icmp eq ptr %calloc.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %must_malloc.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  %call1.i.i = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit.i

must_malloc.exit.i:                               ; preds = %if.then.i.i, %if.then.i
  store ptr %calloc.i, ptr @user_types, align 8, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %must_malloc.exit.i, %cond.end85
  %59 = phi ptr [ %calloc.i, %must_malloc.exit.i ], [ %58, %cond.end85 ]
  %or.cond.i = icmp ult i16 %2, 100
  br i1 %or.cond.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.end.i
  %prin1 = getelementptr inbounds %struct.user_type_hooks, ptr %59, i64 %57, i32 4
  %60 = load ptr, ptr %prin1, align 8, !tbaa !65
  %tobool.not = icmp eq ptr %60, null
  br i1 %tobool.not, label %if.else91, label %if.then89

if.else.i:                                        ; preds = %if.end.i
  %call4.i = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

if.then89:                                        ; preds = %if.then3.i
  %61 = load ptr, ptr %exp.addr, align 8, !tbaa !5
  call void %60(ptr noundef %61, ptr noundef %f) #33
  br label %sw.epilog

if.else91:                                        ; preds = %if.then3.i
  %62 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %63 = load ptr, ptr %exp.addr, align 8, !tbaa !5
  %cmp92 = icmp eq ptr %63, null
  br i1 %cmp92, label %cond.end98, label %cond.false95

cond.false95:                                     ; preds = %if.else91
  %type96 = getelementptr inbounds %struct.obj, ptr %63, i64 0, i32 1
  %64 = load i16, ptr %type96, align 2, !tbaa !14
  %conv97 = sext i16 %64 to i32
  br label %cond.end98

cond.end98:                                       ; preds = %if.else91, %cond.false95
  %cond99 = phi i32 [ %conv97, %cond.false95 ], [ 0, %if.else91 ]
  %call100 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %62, ptr noundef nonnull dereferenceable(1) @.str.120, i32 noundef %cond99, ptr noundef %63) #33
  %65 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %puts_fcn.i226 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 1
  %66 = load ptr, ptr %puts_fcn.i226, align 8, !tbaa !33
  %cb_argument.i227 = getelementptr inbounds %struct.gen_printio, ptr %f, i64 0, i32 2
  %67 = load ptr, ptr %cb_argument.i227, align 8, !tbaa !34
  %call.i228 = call i32 %66(ptr noundef %65, ptr noundef %67) #33
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then89, %cond.end98, %if.end78, %subr_kind_str.exit, %sw.bb36, %if.end35, %if.end22, %sw.bb
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_c_file(ptr noundef %p, ptr noundef readnone %deflt) local_unnamed_addr #6 {
entry:
  %cmp = icmp eq ptr %p, null
  %tobool = icmp ne ptr %deflt, null
  %or.cond = and i1 %cmp, %tobool
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  br i1 %cmp, label %if.then4, label %cond.false

cond.false:                                       ; preds = %if.end
  %type = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 17
  br i1 %1, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end, %cond.false
  %call = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %p)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 2
  %2 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %tobool6.not = icmp eq ptr %2, null
  br i1 %tobool6.not, label %if.then7, label %return

if.then7:                                         ; preds = %if.end5
  %call8 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %p)
  %.pre = load ptr, ptr %storage_as, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %if.end5, %if.then7, %entry
  %retval.0 = phi ptr [ %deflt, %entry ], [ %.pre, %if.then7 ], [ %2, %if.end5 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lprin1f(ptr noundef %exp, ptr noundef %f) local_unnamed_addr #6 {
entry:
  %s = alloca %struct.gen_printio, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %s) #33
  store ptr null, ptr %s, align 8, !tbaa !31
  %puts_fcn = getelementptr inbounds %struct.gen_printio, ptr %s, i64 0, i32 1
  store ptr @fputs_fcn, ptr %puts_fcn, align 8, !tbaa !33
  %cb_argument = getelementptr inbounds %struct.gen_printio, ptr %s, i64 0, i32 2
  store ptr %f, ptr %cb_argument, align 8, !tbaa !34
  %call = call ptr @lprin1g(ptr noundef %exp, ptr noundef nonnull %s)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %s) #33
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lprin1(ptr noundef %exp, ptr noundef %lf) #6 {
entry:
  %s.i = alloca %struct.gen_printio, align 8
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %lf, null
  %tobool.i = icmp ne ptr %0, null
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %get_c_file.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %lf, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %if.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %lf)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %lf, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %3, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %lf)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %entry, %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %0, %entry ], [ %.pre.i, %if.then7.i ], [ %3, %if.end5.i ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %s.i) #33
  store ptr null, ptr %s.i, align 8, !tbaa !31
  %puts_fcn.i = getelementptr inbounds %struct.gen_printio, ptr %s.i, i64 0, i32 1
  store ptr @fputs_fcn, ptr %puts_fcn.i, align 8, !tbaa !33
  %cb_argument.i = getelementptr inbounds %struct.gen_printio, ptr %s.i, i64 0, i32 2
  store ptr %retval.0.i, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i2 = call ptr @lprin1g(ptr noundef %exp, ptr noundef nonnull %s.i)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %s.i) #33
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadf(ptr noundef %f) local_unnamed_addr #6 {
entry:
  %s = alloca %struct.gen_readio, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %s) #33
  store ptr @f_getc, ptr %s, align 8, !tbaa !104
  %ungetc_fcn = getelementptr inbounds %struct.gen_readio, ptr %s, i64 0, i32 1
  store ptr @f_ungetc, ptr %ungetc_fcn, align 8, !tbaa !106
  %cb_argument = getelementptr inbounds %struct.gen_readio, ptr %s, i64 0, i32 2
  store ptr %f, ptr %cb_argument, align 8, !tbaa !107
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %call1.i4 = tail call i32 @getc(ptr noundef %f)
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %0, 0
  %1 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i = icmp eq i64 %1, 1
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp1.i3.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %f_getc.exit

if.then.i.i:                                      ; preds = %entry
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %f_getc.exit

f_getc.exit:                                      ; preds = %entry, %if.then.i.i
  %cmp.us31.i.i = icmp eq i32 %call1.i4, -1
  br i1 %cmp.us31.i.i, label %if.then.i, label %if.end3.us.i.i

if.end3.us.i.i:                                   ; preds = %f_getc.exit, %f_getc.exit11
  %call.us33.i.i = phi i32 [ %call1.i5, %f_getc.exit11 ], [ %call1.i4, %f_getc.exit ]
  %commentp.0.us32.i.i = phi i32 [ %commentp.1.us.i.i, %f_getc.exit11 ], [ 0, %f_getc.exit ]
  %tobool4.not.us.i.i = icmp eq i32 %commentp.0.us32.i.i, 0
  br i1 %tobool4.not.us.i.i, label %if.else9.us.i.i, label %if.then5.us.i.i

if.else9.us.i.i:                                  ; preds = %if.end3.us.i.i
  %cmp10.us.i.i = icmp eq i32 %call.us33.i.i, 59
  br i1 %cmp10.us.i.i, label %if.end18.us.i.i, label %if.else12.us.i.i

if.then5.us.i.i:                                  ; preds = %if.end3.us.i.i
  %cmp6.us.i.i = icmp ne i32 %call.us33.i.i, 10
  %spec.select.us.i.i = zext i1 %cmp6.us.i.i to i32
  br label %if.end18.us.i.i

if.else12.us.i.i:                                 ; preds = %if.else9.us.i.i
  %call13.us.i.i = tail call ptr @__ctype_b_loc() #37
  %2 = load ptr, ptr %call13.us.i.i, align 8, !tbaa !5
  %idxprom.us.i.i = sext i32 %call.us33.i.i to i64
  %arrayidx.us.i.i = getelementptr inbounds i16, ptr %2, i64 %idxprom.us.i.i
  %3 = load i16, ptr %arrayidx.us.i.i, align 2, !tbaa !29
  %4 = and i16 %3, 8192
  %tobool14.not.us.i.i = icmp eq i16 %4, 0
  br i1 %tobool14.not.us.i.i, label %if.end.i, label %if.end18.us.i.i

if.end18.us.i.i:                                  ; preds = %if.else12.us.i.i, %if.then5.us.i.i, %if.else9.us.i.i
  %commentp.1.us.i.i = phi i32 [ 0, %if.else12.us.i.i ], [ %spec.select.us.i.i, %if.then5.us.i.i ], [ 1, %if.else9.us.i.i ]
  %5 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %call1.i5 = tail call i32 @getc(ptr noundef %f)
  store i64 %5, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i6 = icmp eq i64 %5, 0
  %6 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i7 = icmp eq i64 %6, 1
  %or.cond.i.i8 = select i1 %cmp.i.i6, i1 %cmp1.i3.i7, i1 false
  br i1 %or.cond.i.i8, label %if.then.i.i10, label %f_getc.exit11

if.then.i.i10:                                    ; preds = %if.end18.us.i.i
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i9 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %f_getc.exit11

f_getc.exit11:                                    ; preds = %if.end18.us.i.i, %if.then.i.i10
  %cmp.us.i.i = icmp eq i32 %call1.i5, -1
  br i1 %cmp.us.i.i, label %if.then.i, label %if.end3.us.i.i

if.then.i:                                        ; preds = %f_getc.exit11, %f_getc.exit
  %7 = load ptr, ptr @eof_val, align 8, !tbaa !5
  br label %readtl.exit

if.end.i:                                         ; preds = %if.else12.us.i.i
  %call.i = tail call i32 @ungetc(i32 noundef %call.us33.i.i, ptr noundef %f)
  %call1.i = call ptr @lreadr(ptr noundef nonnull %s)
  br label %readtl.exit

readtl.exit:                                      ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi ptr [ %7, %if.then.i ], [ %call1.i, %if.end.i ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %s) #33
  ret ptr %retval.0.i
}

; Function Attrs: nounwind uwtable
define dso_local i32 @f_getc(ptr nocapture noundef %f) #6 {
entry:
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %call1 = tail call i32 @getc(ptr noundef %f)
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 0
  %1 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3 = icmp eq i64 %1, 1
  %or.cond.i = select i1 %cmp.i, i1 %cmp1.i3, i1 false
  br i1 %or.cond.i, label %if.then.i, label %no_interrupt.exit

if.then.i:                                        ; preds = %entry
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %entry, %if.then.i
  ret i32 %call1
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind uwtable
define dso_local void @f_ungetc(i32 noundef %c, ptr nocapture noundef %f) #1 {
entry:
  %call = tail call i32 @ungetc(i32 noundef %c, ptr noundef %f)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @ungetc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @flush_ws(ptr nocapture noundef readonly %f, ptr noundef %eoferr) local_unnamed_addr #6 {
entry:
  %cb_argument = getelementptr inbounds %struct.gen_readio, ptr %f, i64 0, i32 2
  %tobool.not = icmp eq ptr %eoferr, null
  br i1 %tobool.not, label %entry.split.us, label %while.cond

entry.split.us:                                   ; preds = %entry
  %0 = load ptr, ptr %f, align 8, !tbaa !104
  %1 = load ptr, ptr %cb_argument, align 8, !tbaa !107
  %call.us30 = tail call i32 %0(ptr noundef %1) #33
  %cmp.us31 = icmp eq i32 %call.us30, -1
  br i1 %cmp.us31, label %cleanup, label %if.end3.us

if.end3.us:                                       ; preds = %entry.split.us, %if.end18.us
  %call.us33 = phi i32 [ %call.us, %if.end18.us ], [ %call.us30, %entry.split.us ]
  %commentp.0.us32 = phi i32 [ %commentp.1.us, %if.end18.us ], [ 0, %entry.split.us ]
  %tobool4.not.us = icmp eq i32 %commentp.0.us32, 0
  br i1 %tobool4.not.us, label %if.else9.us, label %if.then5.us

if.else9.us:                                      ; preds = %if.end3.us
  %cmp10.us = icmp eq i32 %call.us33, 59
  br i1 %cmp10.us, label %if.end18.us, label %if.else12.us

if.then5.us:                                      ; preds = %if.end3.us
  %cmp6.us = icmp ne i32 %call.us33, 10
  %spec.select.us = zext i1 %cmp6.us to i32
  br label %if.end18.us

if.else12.us:                                     ; preds = %if.else9.us
  %call13.us = tail call ptr @__ctype_b_loc() #37
  %2 = load ptr, ptr %call13.us, align 8, !tbaa !5
  %idxprom.us = sext i32 %call.us33 to i64
  %arrayidx.us = getelementptr inbounds i16, ptr %2, i64 %idxprom.us
  %3 = load i16, ptr %arrayidx.us, align 2, !tbaa !29
  %4 = and i16 %3, 8192
  %tobool14.not.us = icmp eq i16 %4, 0
  br i1 %tobool14.not.us, label %cleanup, label %if.end18.us

if.end18.us:                                      ; preds = %if.else12.us, %if.then5.us, %if.else9.us
  %commentp.1.us = phi i32 [ 0, %if.else12.us ], [ %spec.select.us, %if.then5.us ], [ 1, %if.else9.us ]
  %5 = load ptr, ptr %f, align 8, !tbaa !104
  %6 = load ptr, ptr %cb_argument, align 8, !tbaa !107
  %call.us = tail call i32 %5(ptr noundef %6) #33
  %cmp.us = icmp eq i32 %call.us, -1
  br i1 %cmp.us, label %cleanup, label %if.end3.us

while.cond:                                       ; preds = %entry, %while.cond.backedge
  %commentp.0 = phi i32 [ %commentp.0.be, %while.cond.backedge ], [ 0, %entry ]
  %7 = load ptr, ptr %f, align 8, !tbaa !104
  %8 = load ptr, ptr %cb_argument, align 8, !tbaa !107
  %call = tail call i32 %7(ptr noundef %8) #33
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %while.cond
  %call2 = tail call ptr @err(ptr noundef nonnull %eoferr, ptr noundef null)
  %tobool4.not27 = icmp eq i32 %commentp.0, 0
  br i1 %tobool4.not27, label %if.else12, label %if.then5

if.end3:                                          ; preds = %while.cond
  %tobool4.not = icmp eq i32 %commentp.0, 0
  br i1 %tobool4.not, label %if.else9, label %if.then5

if.then5:                                         ; preds = %if.then, %if.end3
  %cmp6 = icmp ne i32 %call, 10
  %spec.select = zext i1 %cmp6 to i32
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then5, %if.else9, %if.else12
  %commentp.0.be = phi i32 [ 0, %if.else12 ], [ %spec.select, %if.then5 ], [ 1, %if.else9 ]
  br label %while.cond

if.else9:                                         ; preds = %if.end3
  %cmp10 = icmp eq i32 %call, 59
  br i1 %cmp10, label %while.cond.backedge, label %if.else12

if.else12:                                        ; preds = %if.then, %if.else9
  %call13 = tail call ptr @__ctype_b_loc() #37
  %9 = load ptr, ptr %call13, align 8, !tbaa !5
  %idxprom = sext i32 %call to i64
  %arrayidx = getelementptr inbounds i16, ptr %9, i64 %idxprom
  %10 = load i16, ptr %arrayidx, align 2, !tbaa !29
  %11 = and i16 %10, 8192
  %tobool14.not = icmp eq i16 %11, 0
  br i1 %tobool14.not, label %cleanup, label %while.cond.backedge

cleanup:                                          ; preds = %if.else12, %if.end18.us, %if.else12.us, %entry.split.us
  %.us-phi = phi i32 [ -1, %entry.split.us ], [ -1, %if.end18.us ], [ %call.us33, %if.else12.us ], [ %call, %if.else12 ]
  ret i32 %.us-phi
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() local_unnamed_addr #23

; Function Attrs: nounwind uwtable
define dso_local ptr @readtl(ptr noundef %f) local_unnamed_addr #6 {
entry:
  %cb_argument.i = getelementptr inbounds %struct.gen_readio, ptr %f, i64 0, i32 2
  %0 = load ptr, ptr %f, align 8, !tbaa !104
  %1 = load ptr, ptr %cb_argument.i, align 8, !tbaa !107
  %call.us30.i = tail call i32 %0(ptr noundef %1) #33
  %cmp.us31.i = icmp eq i32 %call.us30.i, -1
  br i1 %cmp.us31.i, label %if.then, label %if.end3.us.i

if.end3.us.i:                                     ; preds = %entry, %if.end18.us.i
  %call.us33.i = phi i32 [ %call.us.i, %if.end18.us.i ], [ %call.us30.i, %entry ]
  %commentp.0.us32.i = phi i32 [ %commentp.1.us.i, %if.end18.us.i ], [ 0, %entry ]
  %tobool4.not.us.i = icmp eq i32 %commentp.0.us32.i, 0
  br i1 %tobool4.not.us.i, label %if.else9.us.i, label %if.then5.us.i

if.else9.us.i:                                    ; preds = %if.end3.us.i
  %cmp10.us.i = icmp eq i32 %call.us33.i, 59
  br i1 %cmp10.us.i, label %if.end18.us.i, label %if.else12.us.i

if.then5.us.i:                                    ; preds = %if.end3.us.i
  %cmp6.us.i = icmp ne i32 %call.us33.i, 10
  %spec.select.us.i = zext i1 %cmp6.us.i to i32
  br label %if.end18.us.i

if.else12.us.i:                                   ; preds = %if.else9.us.i
  %call13.us.i = tail call ptr @__ctype_b_loc() #37
  %2 = load ptr, ptr %call13.us.i, align 8, !tbaa !5
  %idxprom.us.i = sext i32 %call.us33.i to i64
  %arrayidx.us.i = getelementptr inbounds i16, ptr %2, i64 %idxprom.us.i
  %3 = load i16, ptr %arrayidx.us.i, align 2, !tbaa !29
  %4 = and i16 %3, 8192
  %tobool14.not.us.i = icmp eq i16 %4, 0
  br i1 %tobool14.not.us.i, label %if.end, label %if.end18.us.i

if.end18.us.i:                                    ; preds = %if.else12.us.i, %if.then5.us.i, %if.else9.us.i
  %commentp.1.us.i = phi i32 [ 0, %if.else12.us.i ], [ %spec.select.us.i, %if.then5.us.i ], [ 1, %if.else9.us.i ]
  %5 = load ptr, ptr %f, align 8, !tbaa !104
  %6 = load ptr, ptr %cb_argument.i, align 8, !tbaa !107
  %call.us.i = tail call i32 %5(ptr noundef %6) #33
  %cmp.us.i = icmp eq i32 %call.us.i, -1
  br i1 %cmp.us.i, label %if.then, label %if.end3.us.i

if.then:                                          ; preds = %if.end18.us.i, %entry
  %7 = load ptr, ptr @eof_val, align 8, !tbaa !5
  br label %cleanup

if.end:                                           ; preds = %if.else12.us.i
  %ungetc_fcn = getelementptr inbounds %struct.gen_readio, ptr %f, i64 0, i32 1
  %8 = load ptr, ptr %ungetc_fcn, align 8, !tbaa !106
  %9 = load ptr, ptr %cb_argument.i, align 8, !tbaa !107
  tail call void %8(i32 noundef %call.us33.i, ptr noundef %9) #33
  %call1 = tail call ptr @lreadr(ptr noundef nonnull %f)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi ptr [ %7, %if.then ], [ %call1, %if.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadr(ptr noundef %f) local_unnamed_addr #6 {
entry:
  %f.addr = alloca ptr, align 8
  store ptr %f, ptr %f.addr, align 8, !tbaa !5
  %0 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %1 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %cmp = icmp ult ptr %f.addr, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call.i = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %.pre = load ptr, ptr %f.addr, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = phi ptr [ %.pre, %if.then ], [ %f, %entry ]
  %cb_argument.i = getelementptr inbounds %struct.gen_readio, ptr %2, i64 0, i32 2
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.backedge, %if.end
  %commentp.0.i = phi i32 [ 0, %if.end ], [ %commentp.0.i.be, %while.cond.i.backedge ]
  %3 = load ptr, ptr %2, align 8, !tbaa !104
  %4 = load ptr, ptr %cb_argument.i, align 8, !tbaa !107
  %call.i85 = call i32 %3(ptr noundef %4) #33
  %cmp.i = icmp eq i32 %call.i85, -1
  br i1 %cmp.i, label %if.then.i, label %if.end3.i

if.then.i:                                        ; preds = %while.cond.i
  %call2.i = call ptr @err(ptr noundef nonnull @.str.122, ptr noundef null)
  %tobool4.not27.i = icmp eq i32 %commentp.0.i, 0
  br i1 %tobool4.not27.i, label %if.else12.i, label %if.then5.i

if.end3.i:                                        ; preds = %while.cond.i
  %tobool4.not.i = icmp eq i32 %commentp.0.i, 0
  br i1 %tobool4.not.i, label %if.else9.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.end3.i, %if.then.i
  %cmp6.i = icmp ne i32 %call.i85, 10
  %spec.select.i = zext i1 %cmp6.i to i32
  br label %while.cond.i.backedge

if.else9.i:                                       ; preds = %if.end3.i
  %cmp10.i = icmp eq i32 %call.i85, 59
  br i1 %cmp10.i, label %while.cond.i.backedge, label %if.else12.i

if.else12.i:                                      ; preds = %if.else9.i, %if.then.i
  %call13.i = tail call ptr @__ctype_b_loc() #37
  %5 = load ptr, ptr %call13.i, align 8, !tbaa !5
  %idxprom.i = sext i32 %call.i85 to i64
  %arrayidx.i = getelementptr inbounds i16, ptr %5, i64 %idxprom.i
  %6 = load i16, ptr %arrayidx.i, align 2, !tbaa !29
  %7 = and i16 %6, 8192
  %tobool14.not.i = icmp eq i16 %7, 0
  br i1 %tobool14.not.i, label %flush_ws.exit, label %while.cond.i.backedge

while.cond.i.backedge:                            ; preds = %if.else12.i, %if.else9.i, %if.then5.i
  %commentp.0.i.be = phi i32 [ 0, %if.else12.i ], [ %spec.select.i, %if.then5.i ], [ 1, %if.else9.i ]
  br label %while.cond.i

flush_ws.exit:                                    ; preds = %if.else12.i
  switch i32 %call.i85, label %sw.default24 [
    i32 40, label %sw.bb
    i32 41, label %sw.bb2
    i32 39, label %sw.bb4
    i32 96, label %sw.bb8
    i32 44, label %sw.bb12
    i32 34, label %sw.bb20
    i32 35, label %sw.bb22
  ]

sw.bb:                                            ; preds = %flush_ws.exit
  %8 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %call1 = call ptr @lreadparen(ptr noundef %8)
  br label %cleanup

sw.bb2:                                           ; preds = %flush_ws.exit
  %call3 = call ptr @err(ptr noundef nonnull @.str.123, ptr noundef null)
  br label %sw.bb4

sw.bb4:                                           ; preds = %flush_ws.exit, %sw.bb2
  %9 = load ptr, ptr @sym_quote, align 8, !tbaa !5
  %10 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %call5 = call ptr @lreadr(ptr noundef %10)
  %11 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i86 = icmp eq i64 %11, 1
  br i1 %cmp.i86, label %if.then.i87, label %if.else.i

if.then.i87:                                      ; preds = %sw.bb4
  %12 = load ptr, ptr @heap, align 8, !tbaa !5
  %13 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %12, %13
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i87
  %call.i.i = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i87
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %12, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %sw.bb4
  %14 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %14, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %15 = phi ptr [ %.pre.i, %if.then4.i ], [ %14, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 2, i32 0, i32 1
  %16 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %16, ptr @freelist, align 8, !tbaa !5
  %17 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %17, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %12, %if.end.i ], [ %15, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %call5, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i88 = icmp eq i64 %18, 1
  br i1 %cmp.i88, label %if.then.i90, label %if.else.i96

if.then.i90:                                      ; preds = %cons.exit
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i89 = icmp ult ptr %19, %20
  br i1 %cmp1.not.i89, label %if.end.i94, label %if.then2.i92

if.then2.i92:                                     ; preds = %if.then.i90
  %call.i.i91 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i94

if.end.i94:                                       ; preds = %if.then2.i92, %if.then.i90
  %add.ptr.i93 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %add.ptr.i93, ptr @heap, align 8, !tbaa !5
  br label %cons.exit106

if.else.i96:                                      ; preds = %cons.exit
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i95 = icmp eq ptr %21, null
  br i1 %cmp3.i95, label %if.then4.i98, label %if.end5.i101

if.then4.i98:                                     ; preds = %if.else.i96
  call void @gc_for_newcell() #38
  %.pre.i97 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i101

if.end5.i101:                                     ; preds = %if.then4.i98, %if.else.i96
  %22 = phi ptr [ %.pre.i97, %if.then4.i98 ], [ %21, %if.else.i96 ]
  %cdr.i99 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i99, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i100 = add nsw i64 %24, 1
  store i64 %inc.i100, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit106

cons.exit106:                                     ; preds = %if.end.i94, %if.end5.i101
  %z.0.i102 = phi ptr [ %19, %if.end.i94 ], [ %22, %if.end5.i101 ]
  store i16 0, ptr %z.0.i102, align 8, !tbaa !35
  %type.i103 = getelementptr inbounds %struct.obj, ptr %z.0.i102, i64 0, i32 1
  store i16 1, ptr %type.i103, align 2, !tbaa !14
  %storage_as7.i104 = getelementptr inbounds %struct.obj, ptr %z.0.i102, i64 0, i32 2
  store ptr %9, ptr %storage_as7.i104, align 8, !tbaa !9
  %cdr9.i105 = getelementptr inbounds %struct.obj, ptr %z.0.i102, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i, ptr %cdr9.i105, align 8, !tbaa !9
  br label %cleanup

sw.bb8:                                           ; preds = %flush_ws.exit
  %call.i107 = call ptr @gen_intern(ptr noundef nonnull @.str.124, i64 noundef 0)
  %25 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %call10 = call ptr @lreadr(ptr noundef %25)
  %26 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i108 = icmp eq i64 %26, 1
  br i1 %cmp.i108, label %if.then.i110, label %if.else.i116

if.then.i110:                                     ; preds = %sw.bb8
  %27 = load ptr, ptr @heap, align 8, !tbaa !5
  %28 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i109 = icmp ult ptr %27, %28
  br i1 %cmp1.not.i109, label %if.end.i114, label %if.then2.i112

if.then2.i112:                                    ; preds = %if.then.i110
  %call.i.i111 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i114

if.end.i114:                                      ; preds = %if.then2.i112, %if.then.i110
  %add.ptr.i113 = getelementptr inbounds %struct.obj, ptr %27, i64 1
  store ptr %add.ptr.i113, ptr @heap, align 8, !tbaa !5
  br label %cons.exit126

if.else.i116:                                     ; preds = %sw.bb8
  %29 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i115 = icmp eq ptr %29, null
  br i1 %cmp3.i115, label %if.then4.i118, label %if.end5.i121

if.then4.i118:                                    ; preds = %if.else.i116
  call void @gc_for_newcell() #38
  %.pre.i117 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i121

if.end5.i121:                                     ; preds = %if.then4.i118, %if.else.i116
  %30 = phi ptr [ %.pre.i117, %if.then4.i118 ], [ %29, %if.else.i116 ]
  %cdr.i119 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2, i32 0, i32 1
  %31 = load ptr, ptr %cdr.i119, align 8, !tbaa !9
  store ptr %31, ptr @freelist, align 8, !tbaa !5
  %32 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i120 = add nsw i64 %32, 1
  store i64 %inc.i120, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit126

cons.exit126:                                     ; preds = %if.end.i114, %if.end5.i121
  %z.0.i122 = phi ptr [ %27, %if.end.i114 ], [ %30, %if.end5.i121 ]
  store i16 0, ptr %z.0.i122, align 8, !tbaa !35
  %type.i123 = getelementptr inbounds %struct.obj, ptr %z.0.i122, i64 0, i32 1
  store i16 1, ptr %type.i123, align 2, !tbaa !14
  %storage_as7.i124 = getelementptr inbounds %struct.obj, ptr %z.0.i122, i64 0, i32 2
  store ptr %call.i107, ptr %storage_as7.i124, align 8, !tbaa !9
  %cdr9.i125 = getelementptr inbounds %struct.obj, ptr %z.0.i122, i64 0, i32 2, i32 0, i32 1
  store ptr %call10, ptr %cdr9.i125, align 8, !tbaa !9
  br label %cleanup

sw.bb12:                                          ; preds = %flush_ws.exit
  %33 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %34 = load ptr, ptr %33, align 8, !tbaa !104
  %cb_argument = getelementptr inbounds %struct.gen_readio, ptr %33, i64 0, i32 2
  %35 = load ptr, ptr %cb_argument, align 8, !tbaa !107
  %call13 = call i32 %34(ptr noundef %35) #33
  switch i32 %call13, label %sw.default [
    i32 64, label %sw.epilog
    i32 46, label %sw.bb15
  ]

sw.bb15:                                          ; preds = %sw.bb12
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb12
  %36 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %ungetc_fcn = getelementptr inbounds %struct.gen_readio, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %ungetc_fcn, align 8, !tbaa !106
  %cb_argument16 = getelementptr inbounds %struct.gen_readio, ptr %36, i64 0, i32 2
  %38 = load ptr, ptr %cb_argument16, align 8, !tbaa !107
  call void %37(i32 noundef %call13, ptr noundef %38) #33
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb12, %sw.default, %sw.bb15
  %p.0 = phi ptr [ @.str.127, %sw.default ], [ @.str.126, %sw.bb15 ], [ @.str.125, %sw.bb12 ]
  %call.i127 = call ptr @gen_intern(ptr noundef nonnull %p.0, i64 noundef 0)
  %39 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %call18 = call ptr @lreadr(ptr noundef %39)
  %40 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i128 = icmp eq i64 %40, 1
  br i1 %cmp.i128, label %if.then.i130, label %if.else.i136

if.then.i130:                                     ; preds = %sw.epilog
  %41 = load ptr, ptr @heap, align 8, !tbaa !5
  %42 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i129 = icmp ult ptr %41, %42
  br i1 %cmp1.not.i129, label %if.end.i134, label %if.then2.i132

if.then2.i132:                                    ; preds = %if.then.i130
  %call.i.i131 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i134

if.end.i134:                                      ; preds = %if.then2.i132, %if.then.i130
  %add.ptr.i133 = getelementptr inbounds %struct.obj, ptr %41, i64 1
  store ptr %add.ptr.i133, ptr @heap, align 8, !tbaa !5
  br label %cons.exit146

if.else.i136:                                     ; preds = %sw.epilog
  %43 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i135 = icmp eq ptr %43, null
  br i1 %cmp3.i135, label %if.then4.i138, label %if.end5.i141

if.then4.i138:                                    ; preds = %if.else.i136
  call void @gc_for_newcell() #38
  %.pre.i137 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i141

if.end5.i141:                                     ; preds = %if.then4.i138, %if.else.i136
  %44 = phi ptr [ %.pre.i137, %if.then4.i138 ], [ %43, %if.else.i136 ]
  %cdr.i139 = getelementptr inbounds %struct.obj, ptr %44, i64 0, i32 2, i32 0, i32 1
  %45 = load ptr, ptr %cdr.i139, align 8, !tbaa !9
  store ptr %45, ptr @freelist, align 8, !tbaa !5
  %46 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i140 = add nsw i64 %46, 1
  store i64 %inc.i140, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit146

cons.exit146:                                     ; preds = %if.end.i134, %if.end5.i141
  %z.0.i142 = phi ptr [ %41, %if.end.i134 ], [ %44, %if.end5.i141 ]
  store i16 0, ptr %z.0.i142, align 8, !tbaa !35
  %type.i143 = getelementptr inbounds %struct.obj, ptr %z.0.i142, i64 0, i32 1
  store i16 1, ptr %type.i143, align 2, !tbaa !14
  %storage_as7.i144 = getelementptr inbounds %struct.obj, ptr %z.0.i142, i64 0, i32 2
  store ptr %call.i127, ptr %storage_as7.i144, align 8, !tbaa !9
  %cdr9.i145 = getelementptr inbounds %struct.obj, ptr %z.0.i142, i64 0, i32 2, i32 0, i32 1
  store ptr %call18, ptr %cdr9.i145, align 8, !tbaa !9
  br label %cleanup

sw.bb20:                                          ; preds = %flush_ws.exit
  %47 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %call21 = call ptr @lreadstring(ptr noundef %47) #33
  br label %cleanup

sw.bb22:                                          ; preds = %flush_ws.exit
  %48 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %call23 = call ptr @lreadsharp(ptr noundef %48) #33
  br label %cleanup

sw.default24:                                     ; preds = %flush_ws.exit
  %49 = load ptr, ptr @user_readm, align 8, !tbaa !5
  %cmp25.not = icmp eq ptr %49, null
  br i1 %cmp25.not, label %sw.epilog30, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.default24
  %50 = load ptr, ptr @user_ch_readm, align 8, !tbaa !5
  %call26 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %50, i32 noundef %call.i85) #34
  %tobool.not = icmp eq ptr %call26, null
  br i1 %tobool.not, label %sw.epilog30, label %if.then27

if.then27:                                        ; preds = %land.lhs.true
  %51 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %call28 = call ptr %49(i32 noundef %call.i85, ptr noundef %51) #33
  br label %cleanup

sw.epilog30:                                      ; preds = %sw.default24, %land.lhs.true
  %conv = trunc i32 %call.i85 to i8
  store i8 %conv, ptr %0, align 1, !tbaa !9
  br label %for.body

for.body:                                         ; preds = %sw.epilog30, %if.end58
  %.pn = phi ptr [ %0, %sw.epilog30 ], [ %p.1154, %if.end58 ]
  %j.0153 = phi i32 [ 1, %sw.epilog30 ], [ %inc, %if.end58 ]
  %p.1154 = getelementptr inbounds i8, ptr %.pn, i64 1
  %52 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %53 = load ptr, ptr %52, align 8, !tbaa !104
  %cb_argument34 = getelementptr inbounds %struct.gen_readio, ptr %52, i64 0, i32 2
  %54 = load ptr, ptr %cb_argument34, align 8, !tbaa !107
  %call35 = call i32 %53(ptr noundef %54) #33
  %cmp36 = icmp eq i32 %call35, -1
  br i1 %cmp36, label %if.then38, label %if.end41

if.then38:                                        ; preds = %for.body
  %conv39 = zext i32 %j.0153 to i64
  %call40 = call ptr @lreadtk(ptr noundef nonnull %0, i64 noundef %conv39)
  br label %cleanup

if.end41:                                         ; preds = %for.body
  %55 = load ptr, ptr %call13.i, align 8, !tbaa !5
  %idxprom = sext i32 %call35 to i64
  %arrayidx = getelementptr inbounds i16, ptr %55, i64 %idxprom
  %56 = load i16, ptr %arrayidx, align 2, !tbaa !29
  %57 = and i16 %56, 8192
  %tobool44.not = icmp eq i16 %57, 0
  br i1 %tobool44.not, label %if.end48, label %if.then45

if.then45:                                        ; preds = %if.end41
  %conv46 = zext i32 %j.0153 to i64
  %call47 = call ptr @lreadtk(ptr noundef nonnull %0, i64 noundef %conv46)
  br label %cleanup

if.end48:                                         ; preds = %if.end41
  %memchr = call ptr @memchr(ptr nonnull dereferenceable(1) @.str.128, i32 %call35, i64 8)
  %tobool50.not = icmp eq ptr %memchr, null
  br i1 %tobool50.not, label %lor.lhs.false, label %if.then53

lor.lhs.false:                                    ; preds = %if.end48
  %58 = load ptr, ptr @user_te_readm, align 8, !tbaa !5
  %call51 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %58, i32 noundef %call35) #34
  %tobool52.not = icmp eq ptr %call51, null
  br i1 %tobool52.not, label %if.end58, label %if.then53

if.then53:                                        ; preds = %lor.lhs.false, %if.end48
  %59 = load ptr, ptr %f.addr, align 8, !tbaa !5
  %ungetc_fcn54 = getelementptr inbounds %struct.gen_readio, ptr %59, i64 0, i32 1
  %60 = load ptr, ptr %ungetc_fcn54, align 8, !tbaa !106
  %cb_argument55 = getelementptr inbounds %struct.gen_readio, ptr %59, i64 0, i32 2
  %61 = load ptr, ptr %cb_argument55, align 8, !tbaa !107
  call void %60(i32 noundef %call35, ptr noundef %61) #33
  %conv56 = zext i32 %j.0153 to i64
  %call57 = call ptr @lreadtk(ptr noundef nonnull %0, i64 noundef %conv56)
  br label %cleanup

if.end58:                                         ; preds = %lor.lhs.false
  %conv59 = trunc i32 %call35 to i8
  store i8 %conv59, ptr %p.1154, align 1, !tbaa !9
  %inc = add nuw nsw i32 %j.0153, 1
  %exitcond.not = icmp eq i32 %inc, 5120
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !108

for.end:                                          ; preds = %if.end58
  %call61 = call ptr @err(ptr noundef nonnull @.str.129, ptr noundef null)
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then53, %if.then45, %if.then38, %if.then27, %sw.bb22, %sw.bb20, %cons.exit146, %cons.exit126, %cons.exit106, %sw.bb
  %retval.0 = phi ptr [ %call28, %if.then27 ], [ %call40, %if.then38 ], [ %call47, %if.then45 ], [ %call57, %if.then53 ], [ null, %for.end ], [ %call23, %sw.bb22 ], [ %call21, %sw.bb20 ], [ %z.0.i142, %cons.exit146 ], [ %z.0.i122, %cons.exit126 ], [ %z.0.i102, %cons.exit106 ], [ %call1, %sw.bb ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @set_read_hooks(ptr noundef %all_set, ptr noundef %end_set, ptr noundef %fcn1, ptr noundef %fcn2) local_unnamed_addr #10 {
entry:
  store ptr %all_set, ptr @user_ch_readm, align 8, !tbaa !5
  store ptr %end_set, ptr @user_te_readm, align 8, !tbaa !5
  store ptr %fcn1, ptr @user_readm, align 8, !tbaa !5
  store ptr %fcn2, ptr @user_readt, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadparen(ptr noundef %f) local_unnamed_addr #6 {
entry:
  %cb_argument.i = getelementptr inbounds %struct.gen_readio, ptr %f, i64 0, i32 2
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.backedge, %entry
  %commentp.0.i = phi i32 [ 0, %entry ], [ %commentp.0.i.be, %while.cond.i.backedge ]
  %0 = load ptr, ptr %f, align 8, !tbaa !104
  %1 = load ptr, ptr %cb_argument.i, align 8, !tbaa !107
  %call.i = tail call i32 %0(ptr noundef %1) #33
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %if.then.i, label %if.end3.i

if.then.i:                                        ; preds = %while.cond.i
  %call2.i = tail call ptr @err(ptr noundef nonnull @.str.130, ptr noundef null)
  %tobool4.not27.i = icmp eq i32 %commentp.0.i, 0
  br i1 %tobool4.not27.i, label %if.else12.i, label %if.then5.i

if.end3.i:                                        ; preds = %while.cond.i
  %tobool4.not.i = icmp eq i32 %commentp.0.i, 0
  br i1 %tobool4.not.i, label %if.else9.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.end3.i, %if.then.i
  %cmp6.i = icmp ne i32 %call.i, 10
  %spec.select.i = zext i1 %cmp6.i to i32
  br label %while.cond.i.backedge

if.else9.i:                                       ; preds = %if.end3.i
  %cmp10.i = icmp eq i32 %call.i, 59
  br i1 %cmp10.i, label %while.cond.i.backedge, label %if.else12.i

if.else12.i:                                      ; preds = %if.else9.i, %if.then.i
  %call13.i = tail call ptr @__ctype_b_loc() #37
  %2 = load ptr, ptr %call13.i, align 8, !tbaa !5
  %idxprom.i = sext i32 %call.i to i64
  %arrayidx.i = getelementptr inbounds i16, ptr %2, i64 %idxprom.i
  %3 = load i16, ptr %arrayidx.i, align 2, !tbaa !29
  %4 = and i16 %3, 8192
  %tobool14.not.i = icmp eq i16 %4, 0
  br i1 %tobool14.not.i, label %flush_ws.exit, label %while.cond.i.backedge

while.cond.i.backedge:                            ; preds = %if.else12.i, %if.else9.i, %if.then5.i
  %commentp.0.i.be = phi i32 [ 0, %if.else12.i ], [ %spec.select.i, %if.then5.i ], [ 1, %if.else9.i ]
  br label %while.cond.i

flush_ws.exit:                                    ; preds = %if.else12.i
  %cmp = icmp eq i32 %call.i, 41
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %flush_ws.exit
  %ungetc_fcn = getelementptr inbounds %struct.gen_readio, ptr %f, i64 0, i32 1
  %5 = load ptr, ptr %ungetc_fcn, align 8, !tbaa !106
  %6 = load ptr, ptr %cb_argument.i, align 8, !tbaa !107
  tail call void %5(i32 noundef %call.i, ptr noundef %6) #33
  %call1 = tail call ptr @lreadr(ptr noundef nonnull %f)
  %7 = load ptr, ptr @sym_dot, align 8, !tbaa !5
  %cmp2 = icmp eq ptr %call1, %7
  br i1 %cmp2, label %if.then3, label %if.end10

if.then3:                                         ; preds = %if.end
  %call4 = tail call ptr @lreadr(ptr noundef nonnull %f)
  br label %while.cond.i28

while.cond.i28:                                   ; preds = %while.cond.i28.backedge, %if.then3
  %commentp.0.i25 = phi i32 [ 0, %if.then3 ], [ %commentp.0.i25.be, %while.cond.i28.backedge ]
  %8 = load ptr, ptr %f, align 8, !tbaa !104
  %9 = load ptr, ptr %cb_argument.i, align 8, !tbaa !107
  %call.i26 = tail call i32 %8(ptr noundef %9) #33
  %cmp.i27 = icmp eq i32 %call.i26, -1
  br i1 %cmp.i27, label %if.then.i31, label %if.end3.i33

if.then.i31:                                      ; preds = %while.cond.i28
  %call2.i29 = tail call ptr @err(ptr noundef nonnull @.str.130, ptr noundef null)
  %tobool4.not27.i30 = icmp eq i32 %commentp.0.i25, 0
  br i1 %tobool4.not27.i30, label %if.else12.i43.thread, label %if.then5.i36

if.end3.i33:                                      ; preds = %while.cond.i28
  %tobool4.not.i32 = icmp eq i32 %commentp.0.i25, 0
  br i1 %tobool4.not.i32, label %if.else9.i38, label %if.then5.i36

if.then5.i36:                                     ; preds = %if.end3.i33, %if.then.i31
  %cmp6.i34 = icmp ne i32 %call.i26, 10
  %spec.select.i35 = zext i1 %cmp6.i34 to i32
  br label %while.cond.i28.backedge

if.else9.i38:                                     ; preds = %if.end3.i33
  %cmp10.i37 = icmp eq i32 %call.i26, 59
  br i1 %cmp10.i37, label %while.cond.i28.backedge, label %if.else12.i43

if.else12.i43:                                    ; preds = %if.else9.i38
  %10 = load ptr, ptr %call13.i, align 8, !tbaa !5
  %idxprom.i40 = sext i32 %call.i26 to i64
  %arrayidx.i41 = getelementptr inbounds i16, ptr %10, i64 %idxprom.i40
  %11 = load i16, ptr %arrayidx.i41, align 2, !tbaa !29
  %12 = and i16 %11, 8192
  %tobool14.not.i42 = icmp eq i16 %12, 0
  br i1 %tobool14.not.i42, label %flush_ws.exit46, label %while.cond.i28.backedge

if.else12.i43.thread:                             ; preds = %if.then.i31
  %13 = load ptr, ptr %call13.i, align 8, !tbaa !5
  %arrayidx.i4150 = getelementptr inbounds i16, ptr %13, i64 -1
  %14 = load i16, ptr %arrayidx.i4150, align 2, !tbaa !29
  %15 = and i16 %14, 8192
  %tobool14.not.i4251 = icmp eq i16 %15, 0
  br i1 %tobool14.not.i4251, label %if.then7, label %while.cond.i28.backedge

while.cond.i28.backedge:                          ; preds = %if.else12.i43.thread, %if.else12.i43, %if.else9.i38, %if.then5.i36
  %commentp.0.i25.be = phi i32 [ 0, %if.else12.i43 ], [ %spec.select.i35, %if.then5.i36 ], [ 1, %if.else9.i38 ], [ 0, %if.else12.i43.thread ]
  br label %while.cond.i28

flush_ws.exit46:                                  ; preds = %if.else12.i43
  %cmp6.not = icmp eq i32 %call.i26, 41
  br i1 %cmp6.not, label %cleanup, label %if.then7

if.then7:                                         ; preds = %if.else12.i43.thread, %flush_ws.exit46
  %call8 = tail call ptr @err(ptr noundef nonnull @.str.131, ptr noundef null)
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %call11 = tail call ptr @lreadparen(ptr noundef nonnull %f)
  %16 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i47 = icmp eq i64 %16, 1
  br i1 %cmp.i47, label %if.then.i48, label %if.else.i

if.then.i48:                                      ; preds = %if.end10
  %17 = load ptr, ptr @heap, align 8, !tbaa !5
  %18 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %17, %18
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i48
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i48
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %17, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %if.end10
  %19 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %19, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %20 = phi ptr [ %.pre.i, %if.then4.i ], [ %19, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %21 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %21, ptr @freelist, align 8, !tbaa !5
  %22 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %22, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %17, %if.end.i ], [ %20, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %call1, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %call11, ptr %cdr9.i, align 8, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %flush_ws.exit46, %if.then7, %flush_ws.exit, %cons.exit
  %retval.0 = phi ptr [ %z.0.i, %cons.exit ], [ null, %flush_ws.exit ], [ %call4, %if.then7 ], [ %call4, %flush_ws.exit46 ]
  ret ptr %retval.0
}

declare ptr @lreadstring(ptr noundef) local_unnamed_addr #13

declare ptr @lreadsharp(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadtk(ptr noundef %buffer, i64 noundef %j) local_unnamed_addr #6 {
entry:
  %flag = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flag) #33
  %arrayidx = getelementptr inbounds i8, ptr %buffer, i64 %j
  store i8 0, ptr %arrayidx, align 1, !tbaa !9
  %0 = load ptr, ptr @user_readt, align 8, !tbaa !5
  %cmp.not = icmp eq ptr %0, null
  br i1 %cmp.not, label %if.end2, label %if.then

if.then:                                          ; preds = %entry
  %call = call ptr %0(ptr noundef nonnull %buffer, i64 noundef %j, ptr noundef nonnull %flag) #33
  %1 = load i32, ptr %flag, align 4, !tbaa !109
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end2, label %cleanup

if.end2:                                          ; preds = %if.then, %entry
  %2 = load i8, ptr %buffer, align 1, !tbaa !9
  %cmp3 = icmp eq i8 %2, 45
  %spec.select.idx = zext i1 %cmp3 to i64
  %spec.select = getelementptr i8, ptr %buffer, i64 %spec.select.idx
  %call7 = tail call ptr @__ctype_b_loc() #37
  %3 = load ptr, ptr %call7, align 8, !tbaa !5
  %4 = load i8, ptr %spec.select, align 1, !tbaa !9
  %idxprom.peel = sext i8 %4 to i64
  %arrayidx9.peel = getelementptr inbounds i16, ptr %3, i64 %idxprom.peel
  %5 = load i16, ptr %arrayidx9.peel, align 2, !tbaa !29
  %6 = and i16 %5, 2048
  %tobool11.not.peel = icmp eq i16 %6, 0
  br i1 %tobool11.not.peel, label %while.end, label %while.cond

while.cond:                                       ; preds = %if.end2, %while.cond
  %spec.select.pn = phi ptr [ %p.1, %while.cond ], [ %spec.select, %if.end2 ]
  %p.1 = getelementptr inbounds i8, ptr %spec.select.pn, i64 1
  %7 = load i8, ptr %p.1, align 1, !tbaa !9
  %idxprom = sext i8 %7 to i64
  %arrayidx9 = getelementptr inbounds i16, ptr %3, i64 %idxprom
  %8 = load i16, ptr %arrayidx9, align 2, !tbaa !29
  %9 = and i16 %8, 2048
  %tobool11.not = icmp eq i16 %9, 0
  br i1 %tobool11.not, label %while.end, label %while.cond, !llvm.loop !111

while.end:                                        ; preds = %while.cond, %if.end2
  %p.1.lcssa = phi ptr [ %spec.select, %if.end2 ], [ %p.1, %while.cond ]
  %.lcssa = phi i8 [ %4, %if.end2 ], [ %7, %while.cond ]
  %cmp14 = icmp eq i8 %.lcssa, 46
  br i1 %cmp14, label %while.cond18.preheader, label %if.end29

while.cond18.preheader:                           ; preds = %while.end
  %p.2.peel = getelementptr inbounds i8, ptr %p.1.lcssa, i64 1
  %10 = load i8, ptr %p.2.peel, align 1, !tbaa !9
  %idxprom21.peel = sext i8 %10 to i64
  %arrayidx22.peel = getelementptr inbounds i16, ptr %3, i64 %idxprom21.peel
  %11 = load i16, ptr %arrayidx22.peel, align 2, !tbaa !29
  %12 = and i16 %11, 2048
  %tobool25.not.peel = icmp eq i16 %12, 0
  br i1 %tobool25.not.peel, label %if.end29, label %while.cond18

while.cond18:                                     ; preds = %while.cond18.preheader, %while.cond18
  %p.1.pn = phi ptr [ %p.2, %while.cond18 ], [ %p.2.peel, %while.cond18.preheader ]
  %p.2 = getelementptr inbounds i8, ptr %p.1.pn, i64 1
  %13 = load i8, ptr %p.2, align 1, !tbaa !9
  %idxprom21 = sext i8 %13 to i64
  %arrayidx22 = getelementptr inbounds i16, ptr %3, i64 %idxprom21
  %14 = load i16, ptr %arrayidx22, align 2, !tbaa !29
  %15 = and i16 %14, 2048
  %tobool25.not = icmp eq i16 %15, 0
  br i1 %tobool25.not, label %if.end32, label %while.cond18, !llvm.loop !113

if.end29:                                         ; preds = %while.cond18.preheader, %while.end
  %16 = phi i8 [ %.lcssa, %while.end ], [ %10, %while.cond18.preheader ]
  %p.3 = phi ptr [ %p.1.lcssa, %while.end ], [ %p.2.peel, %while.cond18.preheader ]
  br i1 %tobool11.not.peel, label %a_symbol, label %if.end32

if.end32:                                         ; preds = %while.cond18, %if.end29
  %p.3107 = phi ptr [ %p.3, %if.end29 ], [ %p.2, %while.cond18 ]
  %17 = phi i8 [ %16, %if.end29 ], [ %13, %while.cond18 ]
  %cmp34 = icmp eq i8 %17, 101
  br i1 %cmp34, label %if.then36, label %if.end68

if.then36:                                        ; preds = %if.end32
  %add.ptr37 = getelementptr inbounds i8, ptr %p.3107, i64 1
  %18 = load i8, ptr %add.ptr37, align 1, !tbaa !9
  switch i8 %18, label %if.end46 [
    i8 45, label %if.then44
    i8 43, label %if.then44
  ]

if.then44:                                        ; preds = %if.then36, %if.then36
  %add.ptr45 = getelementptr inbounds i8, ptr %p.3107, i64 2
  %.pre = load i8, ptr %add.ptr45, align 1, !tbaa !9
  br label %if.end46

if.end46:                                         ; preds = %if.then36, %if.then44
  %19 = phi i8 [ %.pre, %if.then44 ], [ %18, %if.then36 ]
  %p.4 = phi ptr [ %add.ptr45, %if.then44 ], [ %add.ptr37, %if.then36 ]
  %idxprom49 = sext i8 %19 to i64
  %arrayidx50 = getelementptr inbounds i16, ptr %3, i64 %idxprom49
  %20 = load i16, ptr %arrayidx50, align 2, !tbaa !29
  %21 = and i16 %20, 2048
  %tobool53.not = icmp eq i16 %21, 0
  br i1 %tobool53.not, label %a_symbol, label %while.cond57

while.cond57:                                     ; preds = %if.end46, %while.cond57
  %p.4.pn = phi ptr [ %p.5, %while.cond57 ], [ %p.4, %if.end46 ]
  %p.5 = getelementptr inbounds i8, ptr %p.4.pn, i64 1
  %22 = load i8, ptr %p.5, align 1, !tbaa !9
  %idxprom60 = sext i8 %22 to i64
  %arrayidx61 = getelementptr inbounds i16, ptr %3, i64 %idxprom60
  %23 = load i16, ptr %arrayidx61, align 2, !tbaa !29
  %24 = and i16 %23, 2048
  %tobool64.not = icmp eq i16 %24, 0
  br i1 %tobool64.not, label %if.end68, label %while.cond57, !llvm.loop !114

if.end68:                                         ; preds = %while.cond57, %if.end32
  %25 = phi i8 [ %17, %if.end32 ], [ %22, %while.cond57 ]
  %tobool69.not = icmp eq i8 %25, 0
  br i1 %tobool69.not, label %if.end71, label %a_symbol

if.end71:                                         ; preds = %if.end68
  %call.i = call double @strtod(ptr nocapture noundef nonnull %buffer, ptr noundef null) #33
  %26 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %26, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end71
  %conv.i = fptosi double %call.i to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %call.i, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %call.i, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %26, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %27 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %27, i64 %conv.i
  %28 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %cleanup

if.end.i:                                         ; preds = %land.lhs.true.i, %if.end71
  %29 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %29, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %30 = load ptr, ptr @heap, align 8, !tbaa !5
  %31 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %30, %31
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %30, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %32 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %32, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %33 = phi ptr [ %.pre.i, %if.then19.i ], [ %32, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %33, i64 0, i32 2, i32 0, i32 1
  %34 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %34, ptr @freelist, align 8, !tbaa !5
  %35 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %35, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %30, %if.end16.i ], [ %33, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %call.i, ptr %storage_as22.i, align 8, !tbaa !9
  br label %cleanup

a_symbol:                                         ; preds = %if.end68, %if.end46, %if.end29
  %call.i100 = call ptr @gen_intern(ptr noundef nonnull %buffer, i64 noundef 1)
  br label %cleanup

cleanup:                                          ; preds = %if.end21.i, %if.then.i, %if.then, %a_symbol
  %retval.0 = phi ptr [ %call.i100, %a_symbol ], [ %call, %if.then ], [ %28, %if.then.i ], [ %z.0.i, %if.end21.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flag) #33
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @copy_list(ptr noundef %x) #6 {
entry:
  %x.addr = alloca ptr, align 8
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %x, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %cmp1 = icmp ult ptr %x.addr, %0
  br i1 %cmp1, label %if.end3, label %cond.end.i

if.end3:                                          ; preds = %if.end
  %call.i = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %.pr = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %.pr, null
  br i1 %cmp.i, label %cdr.exit, label %cond.end.i

cond.end.i:                                       ; preds = %if.end, %if.end3
  %1 = phi ptr [ %.pr, %if.end3 ], [ %x, %if.end ]
  %type.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %2 to i32
  switch i32 %conv.i, label %car.exit [
    i32 0, label %cond.end.i11
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %cond.end.i11

car.exit:                                         ; preds = %cond.end.i
  %call.i7 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  %.pr20.pre = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp.i8 = icmp eq ptr %.pr20.pre, null
  br i1 %cmp.i8, label %cdr.exit, label %cond.end.i11

cond.end.i11:                                     ; preds = %sw.bb1.i, %cond.end.i, %car.exit
  %retval.0.i.ph29 = phi ptr [ null, %car.exit ], [ %3, %sw.bb1.i ], [ null, %cond.end.i ]
  %.pr2028 = phi ptr [ %.pr20.pre, %car.exit ], [ %1, %sw.bb1.i ], [ %1, %cond.end.i ]
  %type.i9 = getelementptr inbounds %struct.obj, ptr %.pr2028, i64 0, i32 1
  %4 = load i16, ptr %type.i9, align 2, !tbaa !14
  %conv.i10 = sext i16 %4 to i32
  switch i32 %conv.i10, label %sw.default.i14 [
    i32 0, label %cdr.exit
    i32 1, label %sw.bb1.i12
  ]

sw.bb1.i12:                                       ; preds = %cond.end.i11
  %cdr.i = getelementptr inbounds %struct.obj, ptr %.pr2028, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  br label %cdr.exit

sw.default.i14:                                   ; preds = %cond.end.i11
  %call.i13 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %.pr2028)
  br label %cdr.exit

cdr.exit:                                         ; preds = %if.end3, %car.exit, %cond.end.i11, %sw.bb1.i12, %sw.default.i14
  %retval.0.i23 = phi ptr [ %retval.0.i.ph29, %sw.default.i14 ], [ %retval.0.i.ph29, %sw.bb1.i12 ], [ %retval.0.i.ph29, %cond.end.i11 ], [ null, %car.exit ], [ null, %if.end3 ]
  %retval.0.i15 = phi ptr [ null, %sw.default.i14 ], [ %5, %sw.bb1.i12 ], [ null, %cond.end.i11 ], [ null, %car.exit ], [ null, %if.end3 ]
  %call5 = call ptr @copy_list(ptr noundef %retval.0.i15)
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i16 = icmp eq i64 %6, 1
  br i1 %cmp.i16, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %cdr.exit
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %7, %8
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %cdr.exit
  %9 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %9, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %10 = phi ptr [ %.pre.i, %if.then4.i ], [ %9, %if.else.i ]
  %cdr.i17 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i17, align 8, !tbaa !9
  store ptr %11, ptr @freelist, align 8, !tbaa !5
  %12 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %12, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %7, %if.end.i ], [ %10, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i18 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i18, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %retval.0.i23, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %call5, ptr %cdr9.i, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %entry, %cons.exit
  %retval.0 = phi ptr [ %z.0.i, %cons.exit ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @apropos(ptr noundef readonly %matchl) #6 {
entry:
  %l.055 = load ptr, ptr @oblistvar, align 8, !tbaa !9
  %cmp56 = icmp eq ptr %l.055, null
  br i1 %cmp56, label %for.end, label %cond.end.lr.ph

cond.end.lr.ph:                                   ; preds = %entry
  %cmp353 = icmp eq ptr %matchl, null
  br label %cond.end

cond.end:                                         ; preds = %cond.end.lr.ph, %for.inc
  %l.058 = phi ptr [ %l.055, %cond.end.lr.ph ], [ %l.0, %for.inc ]
  %result.057 = phi ptr [ null, %cond.end.lr.ph ], [ %result.1, %for.inc ]
  %type = getelementptr inbounds %struct.obj, ptr %l.058, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp1 = icmp eq i16 %0, 1
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %cond.end
  %storage_as = getelementptr inbounds %struct.obj, ptr %l.058, i64 0, i32 2
  %1 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %if.else15.i, label %cond.false.i

cond.false.i:                                     ; preds = %for.body
  %type.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  switch i16 %2, label %if.else15.i [
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then.i:                                        ; preds = %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false.i
  %data.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false.i, %for.body
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %1)
  br label %get_c_string.exit

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i, %if.else15.i
  %retval.0.i = phi ptr [ %3, %if.then.i ], [ %4, %if.then13.i ], [ null, %if.else15.i ]
  br i1 %cmp353, label %if.then, label %cond.end9

cond.end9:                                        ; preds = %get_c_string.exit, %while.body
  %ml.054 = phi ptr [ %8, %while.body ], [ %matchl, %get_c_string.exit ]
  %type7 = getelementptr inbounds %struct.obj, ptr %ml.054, i64 0, i32 1
  %5 = load i16, ptr %type7, align 2, !tbaa !14
  %cmp11 = icmp eq i16 %5, 1
  br i1 %cmp11, label %land.rhs, label %for.inc

land.rhs:                                         ; preds = %cond.end9
  %storage_as13 = getelementptr inbounds %struct.obj, ptr %ml.054, i64 0, i32 2
  %6 = load ptr, ptr %storage_as13, align 8, !tbaa !9
  %cmp.i34 = icmp eq ptr %6, null
  br i1 %cmp.i34, label %if.else15.i42, label %cond.false.i36

cond.false.i36:                                   ; preds = %land.rhs
  %type.i35 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 1
  %7 = load i16, ptr %type.i35, align 2, !tbaa !14
  switch i16 %7, label %if.else15.i42 [
    i16 3, label %if.then.i38
    i16 13, label %if.then13.i40
  ]

if.then.i38:                                      ; preds = %cond.false.i36
  %storage_as.i37 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2
  br label %get_c_string.exit44

if.then13.i40:                                    ; preds = %cond.false.i36
  %data.i39 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2, i32 0, i32 1
  br label %get_c_string.exit44

if.else15.i42:                                    ; preds = %cond.false.i36, %land.rhs
  %call.i41 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %6)
  unreachable

get_c_string.exit44:                              ; preds = %if.then.i38, %if.then13.i40
  %retval.0.i43.in = phi ptr [ %storage_as.i37, %if.then.i38 ], [ %data.i39, %if.then13.i40 ]
  %retval.0.i43 = load ptr, ptr %retval.0.i43.in, align 8, !tbaa !9
  %call16 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %retval.0.i, ptr noundef nonnull dereferenceable(1) %retval.0.i43) #34
  %tobool.not = icmp eq ptr %call16, null
  br i1 %tobool.not, label %for.inc, label %while.body

while.body:                                       ; preds = %get_c_string.exit44
  %cdr = getelementptr inbounds %struct.obj, ptr %ml.054, i64 0, i32 2, i32 0, i32 1
  %8 = load ptr, ptr %cdr, align 8, !tbaa !9
  %cmp3 = icmp eq ptr %8, null
  br i1 %cmp3, label %if.then, label %cond.end9, !llvm.loop !115

if.then:                                          ; preds = %while.body, %get_c_string.exit
  %9 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %10 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i45 = icmp eq i64 %10, 1
  br i1 %cmp.i45, label %if.then.i46, label %if.else.i

if.then.i46:                                      ; preds = %if.then
  %11 = load ptr, ptr @heap, align 8, !tbaa !5
  %12 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %11, %12
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i46
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i46
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %11, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %if.then
  %13 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %13, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %14 = phi ptr [ %.pre.i, %if.then4.i ], [ %13, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2, i32 0, i32 1
  %15 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %15, ptr @freelist, align 8, !tbaa !5
  %16 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %16, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %11, %if.end.i ], [ %14, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i47 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i47, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %9, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr %result.057, ptr %cdr9.i, align 8, !tbaa !9
  br label %for.inc

for.inc:                                          ; preds = %get_c_string.exit44, %cond.end9, %cons.exit
  %result.1 = phi ptr [ %z.0.i, %cons.exit ], [ %result.057, %cond.end9 ], [ %result.057, %get_c_string.exit44 ]
  %cdr24 = getelementptr inbounds %struct.obj, ptr %l.058, i64 0, i32 2, i32 0, i32 1
  %l.0 = load ptr, ptr %cdr24, align 8, !tbaa !9
  %cmp = icmp eq ptr %l.0, null
  br i1 %cmp, label %for.end, label %cond.end, !llvm.loop !116

for.end:                                          ; preds = %cond.end, %for.inc, %entry
  %result.0.lcssa = phi ptr [ null, %entry ], [ %result.1, %for.inc ], [ %result.057, %cond.end ]
  ret ptr %result.0.lcssa
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define dso_local ptr @fopen_cg(ptr nocapture noundef readonly %fcn, ptr noundef %name, ptr noundef %how) local_unnamed_addr #6 {
entry:
  %errmsg = alloca [256 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %errmsg) #33
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %1 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %1, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %2 = load ptr, ptr @heap, align 8, !tbaa !5
  %3 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %2, %3
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %2, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %newcell.exit

if.else.i:                                        ; preds = %entry
  %4 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %4, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %5 = phi ptr [ %.pre.i, %if.then4.i ], [ %4, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %6, ptr @freelist, align 8, !tbaa !5
  %7 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %7, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %newcell.exit

newcell.exit:                                     ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %2, %if.end.i ], [ %5, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 17, ptr %type7.i, align 2, !tbaa !14
  %storage_as = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  %name3 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %storage_as, i8 0, i64 16, i1 false)
  %call4 = tail call ptr %fcn(ptr noundef %name, ptr noundef %how) #33
  store ptr %call4, ptr %storage_as, align 8, !tbaa !9
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.then3.i, label %if.end

if.then3.i:                                       ; preds = %newcell.exit
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %errmsg, ptr noundef nonnull align 1 dereferenceable(15) @.str.132, i64 15, i1 false)
  %arrayidx.i = getelementptr inbounds i8, ptr %errmsg, i64 15
  store i8 0, ptr %arrayidx.i, align 1, !tbaa !9
  %call.i.i33 = call ptr @memchr(ptr noundef nonnull dereferenceable(1) %errmsg, i32 noundef 0, i64 noundef 256) #34
  %tobool.not.i.i = icmp eq ptr %call.i.i33, null
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %call.i.i33 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %errmsg to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %retval.0.i.i = select i1 %tobool.not.i.i, i64 256, i64 %sub.ptr.sub.i.i
  %arrayidx.i34 = getelementptr inbounds i8, ptr %errmsg, i64 %retval.0.i.i
  %sub.i = sub i64 256, %retval.0.i.i
  %cmp.i.i = icmp eq i64 %retval.0.i.i, 256
  br i1 %cmp.i.i, label %safe_strcat.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then3.i
  %call.i6.i = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %name) #34
  %cmp1.i.i = icmp ult i64 %call.i6.i, %sub.i
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  %tobool.not.i7.i = icmp eq i64 %call.i6.i, 0
  br i1 %tobool.not.i7.i, label %cleanup.sink.split.i.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %if.then2.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %arrayidx.i34, ptr align 1 %name, i64 %call.i6.i, i1 false)
  br label %cleanup.sink.split.i.i

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %arrayidx.i34, ptr align 1 %name, i64 %sub.i, i1 false)
  %sub.i.i = sub i64 255, %retval.0.i.i
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %if.else.i.i, %if.then3.i.i, %if.then2.i.i
  %call.sink.i.i = phi i64 [ %sub.i.i, %if.else.i.i ], [ %call.i6.i, %if.then3.i.i ], [ 0, %if.then2.i.i ]
  %arrayidx.i.i = getelementptr inbounds i8, ptr %arrayidx.i34, i64 %call.sink.i.i
  store i8 0, ptr %arrayidx.i.i, align 1, !tbaa !9
  br label %safe_strcat.exit

safe_strcat.exit:                                 ; preds = %if.then3.i, %cleanup.sink.split.i.i
  %call11 = call ptr @llast_c_errmsg(i32 noundef -1)
  %call12 = call ptr @err(ptr noundef nonnull %errmsg, ptr noundef %call11)
  br label %if.end

if.end:                                           ; preds = %safe_strcat.exit, %newcell.exit
  %call13 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %name) #34
  %add = add i64 %call13, 1
  %cond.i = call i64 @llvm.umax.i64(i64 %add, i64 1)
  %call.i35 = call noalias ptr @malloc(i64 noundef %cond.i) #39
  %cmp.i36 = icmp eq ptr %call.i35, null
  br i1 %cmp.i36, label %if.then.i37, label %must_malloc.exit

if.then.i37:                                      ; preds = %if.end
  %call1.i = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %must_malloc.exit

must_malloc.exit:                                 ; preds = %if.end, %if.then.i37
  store ptr %call.i35, ptr %name3, align 8, !tbaa !9
  %call19 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %call.i35, ptr noundef nonnull dereferenceable(1) %name) #33
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i39 = icmp eq i64 %0, 0
  %8 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i40 = icmp eq i64 %8, 1
  %or.cond.i = select i1 %cmp.i39, i1 %cmp1.i40, i1 false
  br i1 %or.cond.i, label %if.then.i42, label %no_interrupt.exit

if.then.i42:                                      ; preds = %must_malloc.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i41 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %must_malloc.exit, %if.then.i42
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %errmsg) #33
  ret ptr %z.0.i
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local ptr @safe_strcpy(ptr noundef returned writeonly %s1, i64 noundef %size1, ptr nocapture noundef readonly %s2) local_unnamed_addr #24 {
entry:
  %cmp = icmp eq i64 %size1, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %s2) #34
  %cmp1 = icmp ult i64 %call, %size1
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %tobool.not = icmp eq i64 %call, 0
  br i1 %tobool.not, label %cleanup.sink.split, label %if.then3

if.then3:                                         ; preds = %if.then2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %s1, ptr align 1 %s2, i64 %call, i1 false)
  br label %cleanup.sink.split

if.else:                                          ; preds = %if.end
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %s1, ptr align 1 %s2, i64 %size1, i1 false)
  %sub = add i64 %size1, -1
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then2, %if.then3, %if.else
  %call.sink = phi i64 [ %sub, %if.else ], [ %call, %if.then3 ], [ %call, %if.then2 ]
  %arrayidx = getelementptr inbounds i8, ptr %s1, i64 %call.sink
  store i8 0, ptr %arrayidx, align 1, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry
  ret ptr %s1
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local ptr @safe_strcat(ptr noundef returned %s1, i64 noundef %size1, ptr nocapture noundef readonly %s2) local_unnamed_addr #24 {
entry:
  %call.i = tail call ptr @memchr(ptr noundef %s1, i32 noundef 0, i64 noundef %size1) #34
  %tobool.not.i = icmp eq ptr %call.i, null
  %sub.ptr.lhs.cast.i = ptrtoint ptr %call.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint ptr %s1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %retval.0.i = select i1 %tobool.not.i, i64 %size1, i64 %sub.ptr.sub.i
  %arrayidx = getelementptr inbounds i8, ptr %s1, i64 %retval.0.i
  %sub = sub i64 %size1, %retval.0.i
  %cmp.i = icmp eq i64 %retval.0.i, %size1
  br i1 %cmp.i, label %safe_strcpy.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call.i6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %s2) #34
  %cmp1.i = icmp ult i64 %call.i6, %sub
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %if.end.i
  %tobool.not.i7 = icmp eq i64 %call.i6, 0
  br i1 %tobool.not.i7, label %cleanup.sink.split.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then2.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx, ptr align 1 %s2, i64 %call.i6, i1 false)
  br label %cleanup.sink.split.i

if.else.i:                                        ; preds = %if.end.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx, ptr align 1 %s2, i64 %sub, i1 false)
  %sub.i = add i64 %sub, -1
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.else.i, %if.then3.i, %if.then2.i
  %call.sink.i = phi i64 [ %sub.i, %if.else.i ], [ %call.i6, %if.then3.i ], [ 0, %if.then2.i ]
  %arrayidx.i = getelementptr inbounds i8, ptr %arrayidx, i64 %call.sink.i
  store i8 0, ptr %arrayidx.i, align 1, !tbaa !9
  br label %safe_strcpy.exit

safe_strcpy.exit:                                 ; preds = %entry, %cleanup.sink.split.i
  ret ptr %s1
}

; Function Attrs: nounwind uwtable
define dso_local ptr @llast_c_errmsg(i32 noundef %num) local_unnamed_addr #6 {
entry:
  %cmp = icmp slt i32 %num, 0
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %call = tail call ptr @__errno_location() #37
  %0 = load i32, ptr %call, align 4, !tbaa !109
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ %num, %entry ]
  %call1 = tail call ptr @strerror(i32 noundef %cond) #33
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %conv = sitofp i32 %cond to double
  %1 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %1, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then
  %conv.i = sext i32 %cond to i64
  %sub.i = fsub double %conv, %conv
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = icmp sgt i32 %cond, -1
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %1, %conv.i
  %or.cond32.i = and i1 %or.cond.i, %cmp8.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %2 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %2, i64 %conv.i
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %cleanup

if.end.i:                                         ; preds = %land.lhs.true.i, %if.then
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %4, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %5 = load ptr, ptr @heap, align 8, !tbaa !5
  %6 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %5, %6
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %5, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %7 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %7, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %8 = phi ptr [ %.pre.i, %if.then19.i ], [ %7, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %8, i64 0, i32 2, i32 0, i32 1
  %9 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %9, ptr @freelist, align 8, !tbaa !5
  %10 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %10, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %5, %if.end16.i ], [ %8, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %conv, ptr %storage_as22.i, align 8, !tbaa !9
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %call.i = tail call ptr @gen_intern(ptr noundef nonnull %call1, i64 noundef 0)
  br label %cleanup

cleanup:                                          ; preds = %if.end21.i, %if.then.i, %if.end
  %retval.0 = phi ptr [ %call.i, %if.end ], [ %3, %if.then.i ], [ %z.0.i, %if.end21.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @fopen_c(ptr noundef %name, ptr noundef %how) local_unnamed_addr #6 {
entry:
  %call = tail call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %name, ptr noundef %how)
  ret ptr %call
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) #5

; Function Attrs: nounwind uwtable
define dso_local ptr @fopen_l(ptr noundef %name, ptr noundef %how) #6 {
entry:
  %cmp.i = icmp eq ptr %name, null
  br i1 %cmp.i, label %if.else15.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %name, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  switch i16 %0, label %if.else15.i [
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then.i:                                        ; preds = %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %name, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false.i
  %data.i = getelementptr inbounds %struct.obj, ptr %name, i64 0, i32 2, i32 0, i32 1
  %2 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false.i, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %name)
  br label %get_c_string.exit

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i, %if.else15.i
  %retval.0.i = phi ptr [ %1, %if.then.i ], [ %2, %if.then13.i ], [ null, %if.else15.i ]
  %cmp = icmp eq ptr %how, null
  br i1 %cmp, label %cond.end, label %cond.false.i6

cond.false.i6:                                    ; preds = %get_c_string.exit
  %type.i5 = getelementptr inbounds %struct.obj, ptr %how, i64 0, i32 1
  %3 = load i16, ptr %type.i5, align 2, !tbaa !14
  switch i16 %3, label %if.else15.i12 [
    i16 3, label %if.then.i8
    i16 13, label %if.then13.i10
  ]

if.then.i8:                                       ; preds = %cond.false.i6
  %storage_as.i7 = getelementptr inbounds %struct.obj, ptr %how, i64 0, i32 2
  %4 = load ptr, ptr %storage_as.i7, align 8, !tbaa !9
  br label %cond.end

if.then13.i10:                                    ; preds = %cond.false.i6
  %data.i9 = getelementptr inbounds %struct.obj, ptr %how, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %data.i9, align 8, !tbaa !9
  br label %cond.end

if.else15.i12:                                    ; preds = %cond.false.i6
  %call.i11 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef nonnull %how)
  br label %cond.end

cond.end:                                         ; preds = %if.else15.i12, %if.then13.i10, %if.then.i8, %get_c_string.exit
  %cond = phi ptr [ @.str.133, %get_c_string.exit ], [ %4, %if.then.i8 ], [ %5, %if.then13.i10 ], [ null, %if.else15.i12 ]
  %call.i15 = tail call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %retval.0.i, ptr noundef %cond)
  ret ptr %call.i15
}

; Function Attrs: nounwind uwtable
define dso_local ptr @delq(ptr noundef %elem, ptr noundef %l) #6 {
entry:
  %elem.addr = alloca ptr, align 8
  store ptr %elem, ptr %elem.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %l, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %cmp1 = icmp ult ptr %elem.addr, %0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %call.i = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %.pre = load ptr, ptr %elem.addr, align 8, !tbaa !5
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %1 = phi ptr [ %.pre, %if.then2 ], [ %elem, %if.end ]
  %type.i = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 1
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %2 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %if.end3
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %if.end3
  %call.i18 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l)
  br label %car.exit

car.exit:                                         ; preds = %if.end3, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %3, %sw.bb1.i ], [ null, %if.end3 ]
  %cmp4 = icmp eq ptr %1, %retval.0.i
  %4 = load ptr, ptr %elem.addr, align 8, !tbaa !5
  %5 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i21 = sext i16 %5 to i32
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %car.exit
  switch i32 %conv.i21, label %sw.default.i25 [
    i32 0, label %cdr.exit
    i32 1, label %sw.bb1.i23
  ]

sw.bb1.i23:                                       ; preds = %if.then5
  %cdr.i = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  br label %cdr.exit

sw.default.i25:                                   ; preds = %if.then5
  %call.i24 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l)
  br label %cdr.exit

cdr.exit:                                         ; preds = %if.then5, %sw.bb1.i23, %sw.default.i25
  %retval.0.i26 = phi ptr [ null, %sw.default.i25 ], [ %6, %sw.bb1.i23 ], [ null, %if.then5 ]
  %call7 = call ptr @delq(ptr noundef %4, ptr noundef %retval.0.i26)
  br label %return

if.end8:                                          ; preds = %car.exit
  switch i32 %conv.i21, label %sw.default.i34 [
    i32 0, label %cdr.exit36
    i32 1, label %sw.bb1.i32
  ]

sw.bb1.i32:                                       ; preds = %if.end8
  %cdr.i31 = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 2, i32 0, i32 1
  %7 = load ptr, ptr %cdr.i31, align 8, !tbaa !9
  br label %cdr.exit36

sw.default.i34:                                   ; preds = %if.end8
  %call.i33 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l)
  br label %cdr.exit36

cdr.exit36:                                       ; preds = %if.end8, %sw.bb1.i32, %sw.default.i34
  %retval.0.i35 = phi ptr [ null, %sw.default.i34 ], [ %7, %sw.bb1.i32 ], [ null, %if.end8 ]
  %call10 = call ptr @delq(ptr noundef %4, ptr noundef %retval.0.i35)
  %8 = load i16, ptr %type.i, align 2, !tbaa !14
  %9 = icmp eq i16 %8, 1
  br i1 %9, label %setcdr.exit, label %if.then.i

if.then.i:                                        ; preds = %cdr.exit36
  %call.i39 = call ptr @err(ptr noundef nonnull @.str.30, ptr noundef nonnull %l)
  br label %setcdr.exit

setcdr.exit:                                      ; preds = %cdr.exit36, %if.then.i
  %cdr.i40 = getelementptr inbounds %struct.obj, ptr %l, i64 0, i32 2, i32 0, i32 1
  store ptr %call10, ptr %cdr.i40, align 8, !tbaa !9
  br label %return

return:                                           ; preds = %entry, %setcdr.exit, %cdr.exit
  %retval.0 = phi ptr [ %call7, %cdr.exit ], [ %l, %setcdr.exit ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @fclose_l(ptr noundef %p) #6 {
entry:
  %0 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %cmp = icmp eq ptr %p, null
  br i1 %cmp, label %if.then, label %cond.false

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %1 = load i16, ptr %type, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %cond.false
  %call3 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %p)
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %call.i = tail call i32 @fclose(ptr noundef nonnull %3)
  store ptr null, ptr %storage_as.i, align 8, !tbaa !9
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end
  %name.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 2, i32 0, i32 1
  %4 = load ptr, ptr %name.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %4, null
  br i1 %tobool6.not.i, label %file_gc_free.exit, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  tail call void @free(ptr noundef nonnull %4) #33
  store ptr null, ptr %name.i, align 8, !tbaa !9
  br label %file_gc_free.exit

file_gc_free.exit:                                ; preds = %if.end.i, %if.then7.i
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 0
  %5 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i8 = icmp eq i64 %5, 1
  %or.cond.i = select i1 %cmp.i, i1 %cmp1.i8, i1 false
  br i1 %or.cond.i, label %if.then.i9, label %no_interrupt.exit

if.then.i9:                                       ; preds = %file_gc_free.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %file_gc_free.exit, %if.then.i9
  ret ptr null
}

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #19

; Function Attrs: nounwind uwtable
define dso_local ptr @require(ptr noundef %fname) #6 {
entry:
  %call.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.141, i64 noundef 0)
  %call.i16 = tail call ptr @gen_intern(ptr noundef nonnull @.str.142, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i = icmp eq i64 %0, 1
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i:                                        ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %3, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i
  tail call void @gc_for_newcell() #38
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i
  %4 = phi ptr [ %.pre.i, %if.then4.i ], [ %3, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %6, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i, %if.end5.i
  %z.0.i = phi ptr [ %1, %if.end.i ], [ %4, %if.end5.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 1, ptr %type.i, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store ptr %call.i16, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  %7 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i17 = icmp eq i64 %7, 1
  br i1 %cmp.i17, label %if.then.i19, label %if.else.i25

if.then.i19:                                      ; preds = %cons.exit
  %8 = load ptr, ptr @heap, align 8, !tbaa !5
  %9 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i18 = icmp ult ptr %8, %9
  br i1 %cmp1.not.i18, label %if.end.i23, label %if.then2.i21

if.then2.i21:                                     ; preds = %if.then.i19
  %call.i.i20 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i23

if.end.i23:                                       ; preds = %if.then2.i21, %if.then.i19
  %add.ptr.i22 = getelementptr inbounds %struct.obj, ptr %8, i64 1
  store ptr %add.ptr.i22, ptr @heap, align 8, !tbaa !5
  br label %cons.exit35

if.else.i25:                                      ; preds = %cons.exit
  %10 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i24 = icmp eq ptr %10, null
  br i1 %cmp3.i24, label %if.then4.i27, label %if.end5.i30

if.then4.i27:                                     ; preds = %if.else.i25
  tail call void @gc_for_newcell() #38
  %.pre.i26 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i30

if.end5.i30:                                      ; preds = %if.then4.i27, %if.else.i25
  %11 = phi ptr [ %.pre.i26, %if.then4.i27 ], [ %10, %if.else.i25 ]
  %cdr.i28 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2, i32 0, i32 1
  %12 = load ptr, ptr %cdr.i28, align 8, !tbaa !9
  store ptr %12, ptr @freelist, align 8, !tbaa !5
  %13 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i29 = add nsw i64 %13, 1
  store i64 %inc.i29, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit35

cons.exit35:                                      ; preds = %if.end.i23, %if.end5.i30
  %z.0.i31 = phi ptr [ %8, %if.end.i23 ], [ %11, %if.end5.i30 ]
  store i16 0, ptr %z.0.i31, align 8, !tbaa !35
  %type.i32 = getelementptr inbounds %struct.obj, ptr %z.0.i31, i64 0, i32 1
  store i16 1, ptr %type.i32, align 2, !tbaa !14
  %storage_as7.i33 = getelementptr inbounds %struct.obj, ptr %z.0.i31, i64 0, i32 2
  store ptr %fname, ptr %storage_as7.i33, align 8, !tbaa !9
  %cdr9.i34 = getelementptr inbounds %struct.obj, ptr %z.0.i31, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i, ptr %cdr9.i34, align 8, !tbaa !9
  %14 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i36 = icmp eq i64 %14, 1
  br i1 %cmp.i36, label %if.then.i38, label %if.else.i44

if.then.i38:                                      ; preds = %cons.exit35
  %15 = load ptr, ptr @heap, align 8, !tbaa !5
  %16 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i37 = icmp ult ptr %15, %16
  br i1 %cmp1.not.i37, label %if.end.i42, label %if.then2.i40

if.then2.i40:                                     ; preds = %if.then.i38
  %call.i.i39 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i42

if.end.i42:                                       ; preds = %if.then2.i40, %if.then.i38
  %add.ptr.i41 = getelementptr inbounds %struct.obj, ptr %15, i64 1
  store ptr %add.ptr.i41, ptr @heap, align 8, !tbaa !5
  br label %cons.exit54

if.else.i44:                                      ; preds = %cons.exit35
  %17 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i43 = icmp eq ptr %17, null
  br i1 %cmp3.i43, label %if.then4.i46, label %if.end5.i49

if.then4.i46:                                     ; preds = %if.else.i44
  tail call void @gc_for_newcell() #38
  %.pre.i45 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i49

if.end5.i49:                                      ; preds = %if.then4.i46, %if.else.i44
  %18 = phi ptr [ %.pre.i45, %if.then4.i46 ], [ %17, %if.else.i44 ]
  %cdr.i47 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %cdr.i47, align 8, !tbaa !9
  store ptr %19, ptr @freelist, align 8, !tbaa !5
  %20 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i48 = add nsw i64 %20, 1
  store i64 %inc.i48, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit54

cons.exit54:                                      ; preds = %if.end.i42, %if.end5.i49
  %z.0.i50 = phi ptr [ %15, %if.end.i42 ], [ %18, %if.end5.i49 ]
  store i16 0, ptr %z.0.i50, align 8, !tbaa !35
  %type.i51 = getelementptr inbounds %struct.obj, ptr %z.0.i50, i64 0, i32 1
  store i16 1, ptr %type.i51, align 2, !tbaa !14
  %storage_as7.i52 = getelementptr inbounds %struct.obj, ptr %z.0.i50, i64 0, i32 2
  store ptr %call.i, ptr %storage_as7.i52, align 8, !tbaa !9
  %cdr9.i53 = getelementptr inbounds %struct.obj, ptr %z.0.i50, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i31, ptr %cdr9.i53, align 8, !tbaa !9
  %call5 = tail call ptr @string_append(ptr noundef nonnull %z.0.i50) #33
  %cmp.i.i = icmp eq ptr %call5, null
  br i1 %cmp.i.i, label %if.else15.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %cons.exit54
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call5, i64 0, i32 1
  %21 = load i16, ptr %type.i.i, align 2, !tbaa !14
  switch i16 %21, label %if.else15.i.i [
    i16 3, label %if.then.i.i
    i16 13, label %if.then13.i.i
  ]

if.then.i.i:                                      ; preds = %cond.false.i.i
  %storage_as.i.i = getelementptr inbounds %struct.obj, ptr %call5, i64 0, i32 2
  %22 = load ptr, ptr %storage_as.i.i, align 8, !tbaa !9
  br label %intern.exit

if.then13.i.i:                                    ; preds = %cond.false.i.i
  %data.i.i = getelementptr inbounds %struct.obj, ptr %call5, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %data.i.i, align 8, !tbaa !9
  br label %intern.exit

if.else15.i.i:                                    ; preds = %cond.false.i.i, %cons.exit54
  %call.i.i55 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %call5)
  br label %intern.exit

intern.exit:                                      ; preds = %if.then.i.i, %if.then13.i.i, %if.else15.i.i
  %retval.0.i.i = phi ptr [ %22, %if.then.i.i ], [ %23, %if.then13.i.i ], [ null, %if.else15.i.i ]
  %call.i2.i = tail call ptr @gen_intern(ptr noundef %retval.0.i.i, i64 noundef 1)
  %cmp.i56 = icmp eq ptr %call.i2.i, null
  br i1 %cmp.i56, label %if.then.i59, label %cond.false.i

cond.false.i:                                     ; preds = %intern.exit
  %type.i57 = getelementptr inbounds %struct.obj, ptr %call.i2.i, i64 0, i32 1
  %24 = load i16, ptr %type.i57, align 2, !tbaa !14
  %25 = icmp eq i16 %24, 3
  br i1 %25, label %if.end7.i, label %if.then.i59

if.then.i59:                                      ; preds = %cond.false.i, %intern.exit
  %call.i58 = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef %call.i2.i)
  br label %if.end7.i

if.end7.i:                                        ; preds = %cond.false.i, %if.then.i59
  %vcell.i = getelementptr inbounds %struct.obj, ptr %call.i2.i, i64 0, i32 2, i32 0, i32 1
  %26 = load ptr, ptr %vcell.i, align 8, !tbaa !9
  %27 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %cmp8.i = icmp eq ptr %26, %27
  %28 = load ptr, ptr @sym_t, align 8
  %29 = icmp eq ptr %28, null
  %30 = select i1 %cmp8.i, i1 true, i1 %29
  br i1 %30, label %if.then, label %cond.false.i63

cond.false.i63:                                   ; preds = %if.end7.i
  %type.i62 = getelementptr inbounds %struct.obj, ptr %call.i2.i, i64 0, i32 1
  %31 = load i16, ptr %type.i62, align 2, !tbaa !14
  %32 = icmp eq i16 %31, 3
  br i1 %32, label %if.end7.i71, label %if.then.i65

if.then.i65:                                      ; preds = %cond.false.i63
  %call.i64 = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef nonnull %call.i2.i)
  %.pre = load ptr, ptr %vcell.i, align 8, !tbaa !9
  %.pre93 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  br label %if.end7.i71

if.end7.i71:                                      ; preds = %cond.false.i63, %if.then.i65
  %33 = phi ptr [ %27, %cond.false.i63 ], [ %.pre93, %if.then.i65 ]
  %34 = phi ptr [ %26, %cond.false.i63 ], [ %.pre, %if.then.i65 ]
  %cmp9.i = icmp eq ptr %34, %33
  br i1 %cmp9.i, label %if.then11.i, label %symbol_value.exit

if.then11.i:                                      ; preds = %if.end7.i71
  %call.i.i72 = tail call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %call.i2.i)
  br label %symbol_value.exit

symbol_value.exit:                                ; preds = %if.end7.i71, %if.then11.i
  %cmp9 = icmp eq ptr %34, null
  br i1 %cmp9, label %symbol_value.exit.if.then_crit_edge, label %if.end

symbol_value.exit.if.then_crit_edge:              ; preds = %symbol_value.exit
  %.pre94 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %if.then

if.then:                                          ; preds = %symbol_value.exit.if.then_crit_edge, %if.end7.i
  %35 = phi ptr [ %.pre94, %symbol_value.exit.if.then_crit_edge ], [ %28, %if.end7.i ]
  %cmp.i85 = icmp eq ptr %fname, null
  br i1 %cmp.i85, label %if.else15.i, label %cond.false.i87

cond.false.i87:                                   ; preds = %if.then
  %type.i86 = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 1
  %36 = load i16, ptr %type.i86, align 2, !tbaa !14
  switch i16 %36, label %if.else15.i [
    i16 3, label %if.then.i89
    i16 13, label %if.then13.i
  ]

if.then.i89:                                      ; preds = %cond.false.i87
  %storage_as.i88 = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 2
  %37 = load ptr, ptr %storage_as.i88, align 8, !tbaa !9
  br label %cond.false.i77

if.then13.i:                                      ; preds = %cond.false.i87
  %data.i = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 2, i32 0, i32 1
  %38 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %cond.false.i77

if.else15.i:                                      ; preds = %cond.false.i87, %if.then
  %call.i90 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %fname)
  br label %cond.false.i77

cond.false.i77:                                   ; preds = %if.else15.i, %if.then13.i, %if.then.i89
  %retval.0.i91 = phi ptr [ %37, %if.then.i89 ], [ %38, %if.then13.i ], [ null, %if.else15.i ]
  %cmp1.i = icmp ne ptr %35, null
  %conv4.i = zext i1 %cmp1.i to i64
  %call5.i = tail call ptr @vload(ptr noundef %retval.0.i91, i64 noundef 0, i64 noundef %conv4.i)
  %39 = load ptr, ptr @sym_t, align 8, !tbaa !5
  %type.i76 = getelementptr inbounds %struct.obj, ptr %call.i2.i, i64 0, i32 1
  %40 = load i16, ptr %type.i76, align 2, !tbaa !14
  %41 = icmp eq i16 %40, 3
  br i1 %41, label %setvar.exit, label %if.then.i79

if.then.i79:                                      ; preds = %cond.false.i77
  %call.i78 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef nonnull %call.i2.i) #38
  br label %setvar.exit

setvar.exit:                                      ; preds = %cond.false.i77, %if.then.i79
  store ptr %39, ptr %vcell.i, align 8, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %setvar.exit, %symbol_value.exit
  ret ptr %call.i2.i
}

declare ptr @funcall1(ptr noundef, ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @load(ptr noundef %fname, ptr noundef readnone %cflag, ptr noundef readnone %rflag) #6 {
entry:
  %cmp.i = icmp eq ptr %fname, null
  br i1 %cmp.i, label %if.else15.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  switch i16 %0, label %if.else15.i [
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then.i:                                        ; preds = %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false.i
  %data.i = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 2, i32 0, i32 1
  %2 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false.i, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %fname)
  br label %get_c_string.exit

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i, %if.else15.i
  %retval.0.i = phi ptr [ %1, %if.then.i ], [ %2, %if.then13.i ], [ null, %if.else15.i ]
  %cmp = icmp ne ptr %cflag, null
  %conv = zext i1 %cmp to i64
  %cmp1 = icmp ne ptr %rflag, null
  %conv4 = zext i1 %cmp1 to i64
  %call5 = tail call ptr @vload(ptr noundef %retval.0.i, i64 noundef %conv, i64 noundef %conv4)
  ret ptr %call5
}

declare ptr @string_append(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @save_forms(ptr noundef %fname, ptr noundef %forms, ptr noundef %how) #6 {
entry:
  %s.i = alloca %struct.gen_printio, align 8
  %cmp.i = icmp eq ptr %fname, null
  br i1 %cmp.i, label %if.else15.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  switch i16 %0, label %if.else15.i [
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then.i:                                        ; preds = %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false.i
  %data.i = getelementptr inbounds %struct.obj, ptr %fname, i64 0, i32 2, i32 0, i32 1
  %2 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false.i, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %fname)
  br label %get_c_string.exit

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i, %if.else15.i
  %retval.0.i = phi ptr [ %1, %if.then.i ], [ %2, %if.then13.i ], [ null, %if.else15.i ]
  %cmp = icmp eq ptr %how, null
  br i1 %cmp, label %if.end6, label %if.else

if.else:                                          ; preds = %get_c_string.exit
  %call.i33 = tail call ptr @gen_intern(ptr noundef nonnull @.str.144, i64 noundef 0)
  %cmp2 = icmp eq ptr %call.i33, %how
  br i1 %cmp2, label %if.end6, label %if.else4

if.else4:                                         ; preds = %if.else
  %call5 = tail call ptr @err(ptr noundef nonnull @.str.145, ptr noundef nonnull %how)
  br label %if.end6

if.end6:                                          ; preds = %if.else, %get_c_string.exit, %if.else4
  %chow.0 = phi ptr [ null, %if.else4 ], [ @.str.143, %get_c_string.exit ], [ @.str.144, %if.else ]
  %3 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp7 = icmp sgt i64 %3, 2
  br i1 %cmp7, label %if.then8, label %if.end11

if.then8:                                         ; preds = %if.end6
  %4 = load i8, ptr %chow.0, align 1, !tbaa !9
  %cmp9 = icmp eq i8 %4, 97
  %cond = select i1 %cmp9, ptr @.str.146, ptr @.str.147
  %5 = load ptr, ptr @stdout, align 8, !tbaa !5
  %6 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i = tail call i32 @fputs(ptr nonnull %cond, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i = icmp eq i64 %6, 0
  %7 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i = icmp eq i64 %7, 1
  %or.cond.i.i.i = select i1 %cmp.i.i.i, i1 %cmp1.i3.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %put_st.exit

if.then.i.i.i:                                    ; preds = %if.then8
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %.pre = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %put_st.exit

put_st.exit:                                      ; preds = %if.then8, %if.then.i.i.i
  %8 = phi i64 [ %6, %if.then8 ], [ %.pre, %if.then.i.i.i ]
  %9 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %10 = tail call i64 @fwrite(ptr nonnull @.str.148, i64 10, i64 1, ptr %9)
  store i64 %8, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i35 = icmp eq i64 %8, 0
  %11 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i36 = icmp eq i64 %11, 1
  %or.cond.i.i.i37 = select i1 %cmp.i.i.i35, i1 %cmp1.i3.i.i36, i1 false
  br i1 %or.cond.i.i.i37, label %if.then.i.i.i39, label %put_st.exit40

if.then.i.i.i39:                                  ; preds = %put_st.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i38 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %.pre83 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %put_st.exit40

put_st.exit40:                                    ; preds = %put_st.exit, %if.then.i.i.i39
  %12 = phi i64 [ %8, %put_st.exit ], [ %.pre83, %if.then.i.i.i39 ]
  %13 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i.i41 = tail call i32 @fputs(ptr %retval.0.i, ptr %13)
  store i64 %12, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i42 = icmp eq i64 %12, 0
  %14 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i43 = icmp eq i64 %14, 1
  %or.cond.i.i.i44 = select i1 %cmp.i.i.i42, i1 %cmp1.i3.i.i43, i1 false
  br i1 %or.cond.i.i.i44, label %if.then.i.i.i46, label %put_st.exit47

if.then.i.i.i46:                                  ; preds = %put_st.exit40
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i45 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %.pre84 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %put_st.exit47

put_st.exit47:                                    ; preds = %put_st.exit40, %if.then.i.i.i46
  %15 = phi i64 [ %12, %put_st.exit40 ], [ %.pre84, %if.then.i.i.i46 ]
  %16 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputc = tail call i32 @fputc(i32 10, ptr %16)
  store i64 %15, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i49 = icmp eq i64 %15, 0
  %17 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i50 = icmp eq i64 %17, 1
  %or.cond.i.i.i51 = select i1 %cmp.i.i.i49, i1 %cmp1.i3.i.i50, i1 false
  br i1 %or.cond.i.i.i51, label %if.then.i.i.i53, label %if.end11

if.then.i.i.i53:                                  ; preds = %put_st.exit47
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i52 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end11

if.end11:                                         ; preds = %if.then.i.i.i53, %put_st.exit47, %if.end6
  %call.i55 = tail call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %retval.0.i, ptr noundef %chow.0)
  %storage_as = getelementptr inbounds %struct.obj, ptr %call.i55, i64 0, i32 2
  %18 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %cmp14.not81 = icmp eq ptr %forms, null
  br i1 %cmp14.not81, label %for.end.thread, label %cond.end.i.lr.ph

for.end.thread:                                   ; preds = %if.end11
  %19 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  br label %cond.false.i72

cond.end.i.lr.ph:                                 ; preds = %if.end11
  %puts_fcn.i = getelementptr inbounds %struct.gen_printio, ptr %s.i, i64 0, i32 1
  %cb_argument.i = getelementptr inbounds %struct.gen_printio, ptr %s.i, i64 0, i32 2
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.end.i.lr.ph, %cdr.exit
  %l.082 = phi ptr [ %forms, %cond.end.i.lr.ph ], [ %23, %cdr.exit ]
  %type.i57 = getelementptr inbounds %struct.obj, ptr %l.082, i64 0, i32 1
  %20 = load i16, ptr %type.i57, align 2, !tbaa !14
  %conv.i = sext i16 %20 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i58 = getelementptr inbounds %struct.obj, ptr %l.082, i64 0, i32 2
  %21 = load ptr, ptr %storage_as.i58, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i59 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.082)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i60 = phi ptr [ null, %sw.default.i ], [ %21, %sw.bb1.i ], [ null, %cond.end.i ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %s.i) #33
  store ptr null, ptr %s.i, align 8, !tbaa !31
  store ptr @fputs_fcn, ptr %puts_fcn.i, align 8, !tbaa !33
  store ptr %18, ptr %cb_argument.i, align 8, !tbaa !34
  %call.i61 = call ptr @lprin1g(ptr noundef %retval.0.i60, ptr noundef nonnull %s.i)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %s.i) #33
  %call18 = call i32 @putc(i32 noundef 10, ptr noundef %18)
  %22 = load i16, ptr %type.i57, align 2, !tbaa !14
  %conv.i64 = sext i16 %22 to i32
  switch i32 %conv.i64, label %sw.default.i68 [
    i32 0, label %for.end
    i32 1, label %cdr.exit
  ]

sw.default.i68:                                   ; preds = %car.exit
  %call.i67 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l.082)
  br label %for.end

cdr.exit:                                         ; preds = %car.exit
  %cdr.i = getelementptr inbounds %struct.obj, ptr %l.082, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp14.not = icmp eq ptr %23, null
  br i1 %cmp14.not, label %for.end, label %cond.end.i, !llvm.loop !117

for.end:                                          ; preds = %car.exit, %cdr.exit, %sw.default.i68
  %24 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i70 = icmp eq ptr %call.i55, null
  br i1 %cmp.i70, label %if.then.i73, label %cond.false.i72

cond.false.i72:                                   ; preds = %for.end.thread, %for.end
  %25 = phi i64 [ %19, %for.end.thread ], [ %24, %for.end ]
  %type.i71 = getelementptr inbounds %struct.obj, ptr %call.i55, i64 0, i32 1
  %26 = load i16, ptr %type.i71, align 2, !tbaa !14
  %27 = icmp eq i16 %26, 17
  br i1 %27, label %if.end.i, label %if.then.i73

if.then.i73:                                      ; preds = %cond.false.i72, %for.end
  %28 = phi i64 [ %25, %cond.false.i72 ], [ %24, %for.end ]
  %call3.i = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %call.i55)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i73, %cond.false.i72
  %29 = phi i64 [ %28, %if.then.i73 ], [ %25, %cond.false.i72 ]
  %30 = load ptr, ptr %storage_as, align 8, !tbaa !9
  %tobool.not.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  %call.i.i = call i32 @fclose(ptr noundef nonnull %30)
  store ptr null, ptr %storage_as, align 8, !tbaa !9
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.end.i
  %name.i.i = getelementptr inbounds %struct.obj, ptr %call.i55, i64 0, i32 2, i32 0, i32 1
  %31 = load ptr, ptr %name.i.i, align 8, !tbaa !9
  %tobool6.not.i.i = icmp eq ptr %31, null
  br i1 %tobool6.not.i.i, label %file_gc_free.exit.i, label %if.then7.i.i

if.then7.i.i:                                     ; preds = %if.end.i.i
  call void @free(ptr noundef nonnull %31) #33
  store ptr null, ptr %name.i.i, align 8, !tbaa !9
  br label %file_gc_free.exit.i

file_gc_free.exit.i:                              ; preds = %if.then7.i.i, %if.end.i.i
  store i64 %29, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %29, 0
  %32 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i8.i = icmp eq i64 %32, 1
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp1.i8.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i9.i, label %fclose_l.exit

if.then.i9.i:                                     ; preds = %file_gc_free.exit.i
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %fclose_l.exit

fclose_l.exit:                                    ; preds = %file_gc_free.exit.i, %if.then.i9.i
  %33 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %cmp21 = icmp sgt i64 %33, 2
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %fclose_l.exit
  %34 = load ptr, ptr @stdout, align 8, !tbaa !5
  %35 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %36 = call i64 @fwrite(ptr nonnull @.str.140, i64 6, i64 1, ptr %34)
  store i64 %35, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i75 = icmp eq i64 %35, 0
  %37 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i76 = icmp eq i64 %37, 1
  %or.cond.i.i.i77 = select i1 %cmp.i.i.i75, i1 %cmp1.i3.i.i76, i1 false
  br i1 %or.cond.i.i.i77, label %if.then.i.i.i79, label %if.end24

if.then.i.i.i79:                                  ; preds = %if.then23
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i78 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end24

if.end24:                                         ; preds = %if.then.i.i.i79, %if.then23, %fclose_l.exit
  %38 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %38
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @quit() #6 {
entry:
  %call = tail call ptr @err(ptr noundef null, ptr noundef null)
  ret ptr null
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @nullp(ptr noundef readnone %x) #8 {
entry:
  %cmp = icmp eq ptr %x, null
  %0 = load ptr, ptr @sym_t, align 8
  %retval.0 = select i1 %cmp, ptr %0, ptr null
  ret ptr %retval.0
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #25

; Function Attrs: nounwind uwtable
define dso_local ptr @lgetc(ptr noundef %p) #6 {
entry:
  %0 = load ptr, ptr @stdin, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %p, null
  %tobool.i = icmp ne ptr %0, null
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %get_c_file.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %if.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %p)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %3, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %p)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %entry, %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %0, %entry ], [ %.pre.i, %if.then7.i ], [ %3, %if.end5.i ]
  %4 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %call1.i = tail call i32 @getc(ptr noundef %retval.0.i)
  store i64 %4, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %4, 0
  %5 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i = icmp eq i64 %5, 1
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp1.i3.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %f_getc.exit

if.then.i.i:                                      ; preds = %get_c_file.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %f_getc.exit

f_getc.exit:                                      ; preds = %get_c_file.exit, %if.then.i.i
  %cmp = icmp eq i32 %call1.i, -1
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %f_getc.exit
  %conv = sitofp i32 %call1.i to double
  %6 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i4 = icmp sgt i64 %6, 0
  br i1 %cmp.i4, label %land.lhs.true.i, label %if.end.i6

land.lhs.true.i:                                  ; preds = %cond.false
  %conv.i = sext i32 %call1.i to i64
  %sub.i = fsub double %conv, %conv
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = icmp sgt i32 %call1.i, -1
  %or.cond.i5 = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %6, %conv.i
  %or.cond32.i = and i1 %or.cond.i5, %cmp8.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i6

if.then.i:                                        ; preds = %land.lhs.true.i
  %7 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %7, i64 %conv.i
  %8 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %cond.end

if.end.i6:                                        ; preds = %land.lhs.true.i, %cond.false
  %9 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %9, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i6
  %10 = load ptr, ptr @heap, align 8, !tbaa !5
  %11 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %10, %11
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %10, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i6
  %12 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %12, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i7 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %13 = phi ptr [ %.pre.i7, %if.then19.i ], [ %12, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %14, ptr @freelist, align 8, !tbaa !5
  %15 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %15, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %10, %if.end16.i ], [ %13, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i8 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i8, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %conv, ptr %storage_as22.i, align 8, !tbaa !9
  br label %cond.end

cond.end:                                         ; preds = %if.end21.i, %if.then.i, %f_getc.exit
  %cond = phi ptr [ null, %f_getc.exit ], [ %8, %if.then.i ], [ %z.0.i, %if.end21.i ]
  ret ptr %cond
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lungetc(ptr noundef %ii, ptr noundef %p) #6 {
entry:
  %cmp.not = icmp eq ptr %ii, null
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i64 @get_c_long(ptr noundef nonnull %ii) #33
  %conv = trunc i64 %call to i32
  %0 = load ptr, ptr @stdin, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %p, null
  %tobool.i = icmp ne ptr %0, null
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %get_c_file.exit, label %if.end.i

if.end.i:                                         ; preds = %if.then
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %if.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %p)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %3, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %p)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %if.then, %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %0, %if.then ], [ %.pre.i, %if.then7.i ], [ %3, %if.end5.i ]
  %call.i3 = tail call i32 @ungetc(i32 noundef %conv, ptr noundef %retval.0.i)
  br label %if.end

if.end:                                           ; preds = %get_c_file.exit, %entry
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lputc(ptr noundef %c, ptr noundef %p) #6 {
entry:
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %p, null
  %tobool.i = icmp ne ptr %0, null
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %get_c_file.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %if.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %p)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %3, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %p)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %entry, %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %0, %entry ], [ %.pre.i, %if.then7.i ], [ %3, %if.end5.i ]
  %cmp = icmp eq ptr %c, null
  br i1 %cmp, label %if.else15.i, label %cond.false

cond.false:                                       ; preds = %get_c_file.exit
  %type = getelementptr inbounds %struct.obj, ptr %c, i64 0, i32 1
  %4 = load i16, ptr %type, align 2, !tbaa !14
  switch i16 %4, label %if.else15.i [
    i16 2, label %if.then
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then:                                          ; preds = %cond.false
  %storage_as = getelementptr inbounds %struct.obj, ptr %c, i64 0, i32 2
  %5 = load double, ptr %storage_as, align 8, !tbaa !9
  %conv3 = fptosi double %5 to i32
  br label %if.end

if.then.i:                                        ; preds = %cond.false
  %storage_as.i15 = getelementptr inbounds %struct.obj, ptr %c, i64 0, i32 2
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false
  %data.i = getelementptr inbounds %struct.obj, ptr %c, i64 0, i32 2, i32 0, i32 1
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false, %get_c_file.exit
  %call.i16 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %c)
  unreachable

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i
  %retval.0.i17.in = phi ptr [ %storage_as.i15, %if.then.i ], [ %data.i, %if.then13.i ]
  %retval.0.i17 = load ptr, ptr %retval.0.i17.in, align 8, !tbaa !9
  %6 = load i8, ptr %retval.0.i17, align 1, !tbaa !9
  %conv5 = sext i8 %6 to i32
  br label %if.end

if.end:                                           ; preds = %get_c_string.exit, %if.then
  %i.0 = phi i32 [ %conv3, %if.then ], [ %conv5, %get_c_string.exit ]
  %7 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %call7 = tail call i32 @putc(i32 noundef %i.0, ptr noundef %retval.0.i)
  store i64 %7, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i19 = icmp eq i64 %7, 0
  %8 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i20 = icmp eq i64 %8, 1
  %or.cond.i21 = select i1 %cmp.i19, i1 %cmp1.i20, i1 false
  br i1 %or.cond.i21, label %if.then.i22, label %no_interrupt.exit

if.then.i22:                                      ; preds = %if.end
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %no_interrupt.exit

no_interrupt.exit:                                ; preds = %if.end, %if.then.i22
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lputs(ptr noundef %str, ptr noundef %p) #6 {
entry:
  %0 = load ptr, ptr @stdout, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %p, null
  %tobool.i = icmp ne ptr %0, null
  %or.cond.i = and i1 %cmp.i, %tobool.i
  br i1 %or.cond.i, label %get_c_file.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.end.i
  %type.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %2 = icmp eq i16 %1, 17
  br i1 %2, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %if.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %p)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 2
  %3 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %3, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %p)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %entry, %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %0, %entry ], [ %.pre.i, %if.then7.i ], [ %3, %if.end5.i ]
  %cmp.i2 = icmp eq ptr %str, null
  br i1 %cmp.i2, label %if.else15.i, label %cond.false.i4

cond.false.i4:                                    ; preds = %get_c_file.exit
  %type.i3 = getelementptr inbounds %struct.obj, ptr %str, i64 0, i32 1
  %4 = load i16, ptr %type.i3, align 2, !tbaa !14
  switch i16 %4, label %if.else15.i [
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then.i:                                        ; preds = %cond.false.i4
  %storage_as.i5 = getelementptr inbounds %struct.obj, ptr %str, i64 0, i32 2
  %5 = load ptr, ptr %storage_as.i5, align 8, !tbaa !9
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false.i4
  %data.i = getelementptr inbounds %struct.obj, ptr %str, i64 0, i32 2, i32 0, i32 1
  %6 = load ptr, ptr %data.i, align 8, !tbaa !9
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false.i4, %get_c_file.exit
  %call.i6 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %str)
  br label %get_c_string.exit

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i, %if.else15.i
  %retval.0.i7 = phi ptr [ %5, %if.then.i ], [ %6, %if.then13.i ], [ null, %if.else15.i ]
  %7 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %fputs.i = tail call i32 @fputs(ptr %retval.0.i7, ptr %retval.0.i)
  store i64 %7, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i = icmp eq i64 %7, 0
  %8 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i = icmp eq i64 %8, 1
  %or.cond.i.i = select i1 %cmp.i.i, i1 %cmp1.i3.i, i1 false
  br i1 %or.cond.i.i, label %if.then.i.i, label %fput_st.exit

if.then.i.i:                                      ; preds = %get_c_string.exit
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %fput_st.exit

fput_st.exit:                                     ; preds = %get_c_string.exit, %if.then.i.i
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lftell(ptr noundef %file) #6 {
entry:
  %cmp.i = icmp eq ptr %file, null
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %file, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 17
  br i1 %1, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %file)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %file, i64 0, i32 2
  %2 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %2, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %file)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %.pre.i, %if.then7.i ], [ %2, %if.end5.i ]
  %call1 = tail call i64 @ftell(ptr noundef %retval.0.i)
  %conv = sitofp i64 %call1 to double
  %3 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i3 = icmp sgt i64 %3, 0
  br i1 %cmp.i3, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %get_c_file.exit
  %conv.i = fptosi double %conv to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %conv, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = icmp sgt i64 %call1, -1
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %3, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %4 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %4, i64 %conv.i
  %5 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %flocons.exit

if.end.i:                                         ; preds = %land.lhs.true.i, %get_c_file.exit
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %6, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %7, %8
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %9 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %9, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i4 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %10 = phi ptr [ %.pre.i4, %if.then19.i ], [ %9, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %11, ptr @freelist, align 8, !tbaa !5
  %12 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %12, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %7, %if.end16.i ], [ %10, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i5 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i5, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %conv, ptr %storage_as22.i, align 8, !tbaa !9
  br label %flocons.exit

flocons.exit:                                     ; preds = %if.then.i, %if.end21.i
  %retval.0.i6 = phi ptr [ %5, %if.then.i ], [ %z.0.i, %if.end21.i ]
  ret ptr %retval.0.i6
}

; Function Attrs: nofree nounwind
declare noundef i64 @ftell(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local ptr @lfseek(ptr noundef %file, ptr noundef %offset, ptr noundef %direction) #6 {
entry:
  %cmp.i = icmp eq ptr %file, null
  br i1 %cmp.i, label %if.then4.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %file, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %1 = icmp eq i16 %0, 17
  br i1 %1, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %cond.false.i, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %file)
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %file, i64 0, i32 2
  %2 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %tobool6.not.i = icmp eq ptr %2, null
  br i1 %tobool6.not.i, label %if.then7.i, label %get_c_file.exit

if.then7.i:                                       ; preds = %if.end5.i
  %call8.i = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %file)
  %.pre.i = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %get_c_file.exit

get_c_file.exit:                                  ; preds = %if.end5.i, %if.then7.i
  %retval.0.i = phi ptr [ %.pre.i, %if.then7.i ], [ %2, %if.end5.i ]
  %call1 = tail call i64 @get_c_long(ptr noundef %offset) #33
  %call2 = tail call i64 @get_c_long(ptr noundef %direction) #33
  %conv = trunc i64 %call2 to i32
  %call3 = tail call i32 @fseek(ptr noundef %retval.0.i, i64 noundef %call1, i32 noundef %conv)
  %tobool.not = icmp eq i32 %call3, 0
  %3 = load ptr, ptr @sym_t, align 8
  %cond = select i1 %tobool.not, ptr %3, ptr null
  ret ptr %cond
}

; Function Attrs: nofree nounwind
declare noundef i32 @fseek(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local ptr @parse_number(ptr noundef %x) #6 {
entry:
  %cmp.i = icmp eq ptr %x, null
  br i1 %cmp.i, label %if.else15.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  switch i16 %0, label %if.else15.i [
    i16 3, label %if.then.i
    i16 13, label %if.then13.i
  ]

if.then.i:                                        ; preds = %cond.false.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  br label %get_c_string.exit

if.then13.i:                                      ; preds = %cond.false.i
  %data.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2, i32 0, i32 1
  br label %get_c_string.exit

if.else15.i:                                      ; preds = %cond.false.i, %entry
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %x)
  unreachable

get_c_string.exit:                                ; preds = %if.then.i, %if.then13.i
  %retval.0.i.in = phi ptr [ %storage_as.i, %if.then.i ], [ %data.i, %if.then13.i ]
  %retval.0.i = load ptr, ptr %retval.0.i.in, align 8, !tbaa !9
  %call.i3 = tail call double @strtod(ptr nocapture noundef nonnull %retval.0.i, ptr noundef null) #33
  %1 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i4 = icmp sgt i64 %1, 0
  br i1 %cmp.i4, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %get_c_string.exit
  %conv.i = fptosi double %call.i3 to i64
  %conv1.i = sitofp i64 %conv.i to double
  %sub.i = fsub double %call.i3, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %call.i3, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %1, %conv.i
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i5, label %if.end.i

if.then.i5:                                       ; preds = %land.lhs.true.i
  %2 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %2, i64 %conv.i
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %flocons.exit

if.end.i:                                         ; preds = %land.lhs.true.i, %get_c_string.exit
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %4, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %5 = load ptr, ptr @heap, align 8, !tbaa !5
  %6 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %5, %6
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %5, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %7 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %7, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %8 = phi ptr [ %.pre.i, %if.then19.i ], [ %7, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %8, i64 0, i32 2, i32 0, i32 1
  %9 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %9, ptr @freelist, align 8, !tbaa !5
  %10 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %10, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %5, %if.end16.i ], [ %8, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i6 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i6, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %call.i3, ptr %storage_as22.i, align 8, !tbaa !9
  br label %flocons.exit

flocons.exit:                                     ; preds = %if.then.i5, %if.end21.i
  %retval.0.i7 = phi ptr [ %3, %if.then.i5 ], [ %z.0.i, %if.end21.i ]
  ret ptr %retval.0.i7
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subrs() local_unnamed_addr #6 {
entry:
  tail call void @init_subrs_1()
  tail call void @init_subrs_a() #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subrs_1() local_unnamed_addr #6 {
entry:
  %call.i.i.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.153, i64 noundef 0)
  %0 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i = icmp eq i64 %0, 1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i = icmp ult ptr %1, %2
  br i1 %cmp1.not.i.i.i, label %if.end.i.i.i, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %if.then.i.i.i
  %call.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then2.i.i.i, %if.then.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %add.ptr.i.i.i, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i

if.else.i.i.i:                                    ; preds = %entry
  %3 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i = icmp eq ptr %3, null
  br i1 %cmp3.i.i.i, label %if.then4.i.i.i, label %if.end5.i.i.i

if.then4.i.i.i:                                   ; preds = %if.else.i.i.i
  tail call void @gc_for_newcell()
  %.pre.i.i.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then4.i.i.i, %if.else.i.i.i
  %4 = phi ptr [ %.pre.i.i.i, %if.then4.i.i.i ], [ %3, %if.else.i.i.i ]
  %cdr.i.i.i = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i.i.i, align 8, !tbaa !9
  store ptr %5, ptr @freelist, align 8, !tbaa !5
  %6 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i = add nsw i64 %6, 1
  store i64 %inc.i.i.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i

subrcons.exit.i.i:                                ; preds = %if.end5.i.i.i, %if.end.i.i.i
  %z.0.i.i.i = phi ptr [ %1, %if.end.i.i.i ], [ %4, %if.end5.i.i.i ]
  store i16 0, ptr %z.0.i.i.i, align 8, !tbaa !35
  %type7.i.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i, align 2, !tbaa !14
  %storage_as8.i.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i, i64 0, i32 2
  store ptr @.str.153, ptr %storage_as8.i.i.i, align 8, !tbaa !9
  %f11.i.i.i = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr @cons, ptr %f11.i.i.i, align 8, !tbaa !9
  %cmp.i4.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %cmp.i4.i.i, label %if.then.i6.i.i, label %cond.false.i.i.i

cond.false.i.i.i:                                 ; preds = %subrcons.exit.i.i
  %type.i.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i.i, i64 0, i32 1
  %7 = load i16, ptr %type.i.i.i, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %init_subr_2.exit, label %if.then.i6.i.i

if.then.i6.i.i:                                   ; preds = %cond.false.i.i.i, %subrcons.exit.i.i
  %call.i5.i.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i) #38
  br label %init_subr_2.exit

init_subr_2.exit:                                 ; preds = %cond.false.i.i.i, %if.then.i6.i.i
  %vcell.i.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i, ptr %vcell.i.i.i, align 8, !tbaa !9
  %call.i.i.i2 = tail call ptr @gen_intern(ptr noundef nonnull @.str.154, i64 noundef 0)
  %9 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i3 = icmp eq i64 %9, 1
  br i1 %cmp.i.i.i3, label %if.then.i.i.i5, label %if.else.i.i.i11

if.then.i.i.i5:                                   ; preds = %init_subr_2.exit
  %10 = load ptr, ptr @heap, align 8, !tbaa !5
  %11 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i4 = icmp ult ptr %10, %11
  br i1 %cmp1.not.i.i.i4, label %if.end.i.i.i9, label %if.then2.i.i.i7

if.then2.i.i.i7:                                  ; preds = %if.then.i.i.i5
  %call.i.i.i.i6 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i9

if.end.i.i.i9:                                    ; preds = %if.then2.i.i.i7, %if.then.i.i.i5
  %add.ptr.i.i.i8 = getelementptr inbounds %struct.obj, ptr %10, i64 1
  store ptr %add.ptr.i.i.i8, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i22

if.else.i.i.i11:                                  ; preds = %init_subr_2.exit
  %12 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i10 = icmp eq ptr %12, null
  br i1 %cmp3.i.i.i10, label %if.then4.i.i.i13, label %if.end5.i.i.i16

if.then4.i.i.i13:                                 ; preds = %if.else.i.i.i11
  tail call void @gc_for_newcell()
  %.pre.i.i.i12 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i16

if.end5.i.i.i16:                                  ; preds = %if.then4.i.i.i13, %if.else.i.i.i11
  %13 = phi ptr [ %.pre.i.i.i12, %if.then4.i.i.i13 ], [ %12, %if.else.i.i.i11 ]
  %cdr.i.i.i14 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %cdr.i.i.i14, align 8, !tbaa !9
  store ptr %14, ptr @freelist, align 8, !tbaa !5
  %15 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i15 = add nsw i64 %15, 1
  store i64 %inc.i.i.i15, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i22

subrcons.exit.i.i22:                              ; preds = %if.end5.i.i.i16, %if.end.i.i.i9
  %z.0.i.i.i17 = phi ptr [ %10, %if.end.i.i.i9 ], [ %13, %if.end5.i.i.i16 ]
  store i16 0, ptr %z.0.i.i.i17, align 8, !tbaa !35
  %type7.i.i.i18 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i17, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i18, align 2, !tbaa !14
  %storage_as8.i.i.i19 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i17, i64 0, i32 2
  store ptr @.str.154, ptr %storage_as8.i.i.i19, align 8, !tbaa !9
  %f11.i.i.i20 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i17, i64 0, i32 2, i32 0, i32 1
  store ptr @car, ptr %f11.i.i.i20, align 8, !tbaa !9
  %cmp.i4.i.i21 = icmp eq ptr %call.i.i.i2, null
  br i1 %cmp.i4.i.i21, label %if.then.i6.i.i26, label %cond.false.i.i.i24

cond.false.i.i.i24:                               ; preds = %subrcons.exit.i.i22
  %type.i.i.i23 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2, i64 0, i32 1
  %16 = load i16, ptr %type.i.i.i23, align 2, !tbaa !14
  %17 = icmp eq i16 %16, 3
  br i1 %17, label %init_subr_1.exit, label %if.then.i6.i.i26

if.then.i6.i.i26:                                 ; preds = %cond.false.i.i.i24, %subrcons.exit.i.i22
  %call.i5.i.i25 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2) #38
  br label %init_subr_1.exit

init_subr_1.exit:                                 ; preds = %cond.false.i.i.i24, %if.then.i6.i.i26
  %vcell.i.i.i27 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i17, ptr %vcell.i.i.i27, align 8, !tbaa !9
  %call.i.i.i28 = tail call ptr @gen_intern(ptr noundef nonnull @.str.155, i64 noundef 0)
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i29 = icmp eq i64 %18, 1
  br i1 %cmp.i.i.i29, label %if.then.i.i.i31, label %if.else.i.i.i37

if.then.i.i.i31:                                  ; preds = %init_subr_1.exit
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i30 = icmp ult ptr %19, %20
  br i1 %cmp1.not.i.i.i30, label %if.end.i.i.i35, label %if.then2.i.i.i33

if.then2.i.i.i33:                                 ; preds = %if.then.i.i.i31
  %call.i.i.i.i32 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i35

if.end.i.i.i35:                                   ; preds = %if.then2.i.i.i33, %if.then.i.i.i31
  %add.ptr.i.i.i34 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %add.ptr.i.i.i34, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i48

if.else.i.i.i37:                                  ; preds = %init_subr_1.exit
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i36 = icmp eq ptr %21, null
  br i1 %cmp3.i.i.i36, label %if.then4.i.i.i39, label %if.end5.i.i.i42

if.then4.i.i.i39:                                 ; preds = %if.else.i.i.i37
  tail call void @gc_for_newcell()
  %.pre.i.i.i38 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i42

if.end5.i.i.i42:                                  ; preds = %if.then4.i.i.i39, %if.else.i.i.i37
  %22 = phi ptr [ %.pre.i.i.i38, %if.then4.i.i.i39 ], [ %21, %if.else.i.i.i37 ]
  %cdr.i.i.i40 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %cdr.i.i.i40, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i41 = add nsw i64 %24, 1
  store i64 %inc.i.i.i41, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i48

subrcons.exit.i.i48:                              ; preds = %if.end5.i.i.i42, %if.end.i.i.i35
  %z.0.i.i.i43 = phi ptr [ %19, %if.end.i.i.i35 ], [ %22, %if.end5.i.i.i42 ]
  store i16 0, ptr %z.0.i.i.i43, align 8, !tbaa !35
  %type7.i.i.i44 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i43, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i44, align 2, !tbaa !14
  %storage_as8.i.i.i45 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i43, i64 0, i32 2
  store ptr @.str.155, ptr %storage_as8.i.i.i45, align 8, !tbaa !9
  %f11.i.i.i46 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i43, i64 0, i32 2, i32 0, i32 1
  store ptr @cdr, ptr %f11.i.i.i46, align 8, !tbaa !9
  %cmp.i4.i.i47 = icmp eq ptr %call.i.i.i28, null
  br i1 %cmp.i4.i.i47, label %if.then.i6.i.i52, label %cond.false.i.i.i50

cond.false.i.i.i50:                               ; preds = %subrcons.exit.i.i48
  %type.i.i.i49 = getelementptr inbounds %struct.obj, ptr %call.i.i.i28, i64 0, i32 1
  %25 = load i16, ptr %type.i.i.i49, align 2, !tbaa !14
  %26 = icmp eq i16 %25, 3
  br i1 %26, label %init_subr_1.exit54, label %if.then.i6.i.i52

if.then.i6.i.i52:                                 ; preds = %cond.false.i.i.i50, %subrcons.exit.i.i48
  %call.i5.i.i51 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i28) #38
  br label %init_subr_1.exit54

init_subr_1.exit54:                               ; preds = %cond.false.i.i.i50, %if.then.i6.i.i52
  %vcell.i.i.i53 = getelementptr inbounds %struct.obj, ptr %call.i.i.i28, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i43, ptr %vcell.i.i.i53, align 8, !tbaa !9
  %call.i.i.i55 = tail call ptr @gen_intern(ptr noundef nonnull @.str.156, i64 noundef 0)
  %27 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i56 = icmp eq i64 %27, 1
  br i1 %cmp.i.i.i56, label %if.then.i.i.i58, label %if.else.i.i.i64

if.then.i.i.i58:                                  ; preds = %init_subr_1.exit54
  %28 = load ptr, ptr @heap, align 8, !tbaa !5
  %29 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i57 = icmp ult ptr %28, %29
  br i1 %cmp1.not.i.i.i57, label %if.end.i.i.i62, label %if.then2.i.i.i60

if.then2.i.i.i60:                                 ; preds = %if.then.i.i.i58
  %call.i.i.i.i59 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i62

if.end.i.i.i62:                                   ; preds = %if.then2.i.i.i60, %if.then.i.i.i58
  %add.ptr.i.i.i61 = getelementptr inbounds %struct.obj, ptr %28, i64 1
  store ptr %add.ptr.i.i.i61, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i75

if.else.i.i.i64:                                  ; preds = %init_subr_1.exit54
  %30 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i63 = icmp eq ptr %30, null
  br i1 %cmp3.i.i.i63, label %if.then4.i.i.i66, label %if.end5.i.i.i69

if.then4.i.i.i66:                                 ; preds = %if.else.i.i.i64
  tail call void @gc_for_newcell()
  %.pre.i.i.i65 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i69

if.end5.i.i.i69:                                  ; preds = %if.then4.i.i.i66, %if.else.i.i.i64
  %31 = phi ptr [ %.pre.i.i.i65, %if.then4.i.i.i66 ], [ %30, %if.else.i.i.i64 ]
  %cdr.i.i.i67 = getelementptr inbounds %struct.obj, ptr %31, i64 0, i32 2, i32 0, i32 1
  %32 = load ptr, ptr %cdr.i.i.i67, align 8, !tbaa !9
  store ptr %32, ptr @freelist, align 8, !tbaa !5
  %33 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i68 = add nsw i64 %33, 1
  store i64 %inc.i.i.i68, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i75

subrcons.exit.i.i75:                              ; preds = %if.end5.i.i.i69, %if.end.i.i.i62
  %z.0.i.i.i70 = phi ptr [ %28, %if.end.i.i.i62 ], [ %31, %if.end5.i.i.i69 ]
  store i16 0, ptr %z.0.i.i.i70, align 8, !tbaa !35
  %type7.i.i.i71 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i70, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i71, align 2, !tbaa !14
  %storage_as8.i.i.i72 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i70, i64 0, i32 2
  store ptr @.str.156, ptr %storage_as8.i.i.i72, align 8, !tbaa !9
  %f11.i.i.i73 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i70, i64 0, i32 2, i32 0, i32 1
  store ptr @setcar, ptr %f11.i.i.i73, align 8, !tbaa !9
  %cmp.i4.i.i74 = icmp eq ptr %call.i.i.i55, null
  br i1 %cmp.i4.i.i74, label %if.then.i6.i.i79, label %cond.false.i.i.i77

cond.false.i.i.i77:                               ; preds = %subrcons.exit.i.i75
  %type.i.i.i76 = getelementptr inbounds %struct.obj, ptr %call.i.i.i55, i64 0, i32 1
  %34 = load i16, ptr %type.i.i.i76, align 2, !tbaa !14
  %35 = icmp eq i16 %34, 3
  br i1 %35, label %init_subr_2.exit81, label %if.then.i6.i.i79

if.then.i6.i.i79:                                 ; preds = %cond.false.i.i.i77, %subrcons.exit.i.i75
  %call.i5.i.i78 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i55) #38
  br label %init_subr_2.exit81

init_subr_2.exit81:                               ; preds = %cond.false.i.i.i77, %if.then.i6.i.i79
  %vcell.i.i.i80 = getelementptr inbounds %struct.obj, ptr %call.i.i.i55, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i70, ptr %vcell.i.i.i80, align 8, !tbaa !9
  %call.i.i.i82 = tail call ptr @gen_intern(ptr noundef nonnull @.str.157, i64 noundef 0)
  %36 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i83 = icmp eq i64 %36, 1
  br i1 %cmp.i.i.i83, label %if.then.i.i.i85, label %if.else.i.i.i91

if.then.i.i.i85:                                  ; preds = %init_subr_2.exit81
  %37 = load ptr, ptr @heap, align 8, !tbaa !5
  %38 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i84 = icmp ult ptr %37, %38
  br i1 %cmp1.not.i.i.i84, label %if.end.i.i.i89, label %if.then2.i.i.i87

if.then2.i.i.i87:                                 ; preds = %if.then.i.i.i85
  %call.i.i.i.i86 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i89

if.end.i.i.i89:                                   ; preds = %if.then2.i.i.i87, %if.then.i.i.i85
  %add.ptr.i.i.i88 = getelementptr inbounds %struct.obj, ptr %37, i64 1
  store ptr %add.ptr.i.i.i88, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i102

if.else.i.i.i91:                                  ; preds = %init_subr_2.exit81
  %39 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i90 = icmp eq ptr %39, null
  br i1 %cmp3.i.i.i90, label %if.then4.i.i.i93, label %if.end5.i.i.i96

if.then4.i.i.i93:                                 ; preds = %if.else.i.i.i91
  tail call void @gc_for_newcell()
  %.pre.i.i.i92 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i96

if.end5.i.i.i96:                                  ; preds = %if.then4.i.i.i93, %if.else.i.i.i91
  %40 = phi ptr [ %.pre.i.i.i92, %if.then4.i.i.i93 ], [ %39, %if.else.i.i.i91 ]
  %cdr.i.i.i94 = getelementptr inbounds %struct.obj, ptr %40, i64 0, i32 2, i32 0, i32 1
  %41 = load ptr, ptr %cdr.i.i.i94, align 8, !tbaa !9
  store ptr %41, ptr @freelist, align 8, !tbaa !5
  %42 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i95 = add nsw i64 %42, 1
  store i64 %inc.i.i.i95, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i102

subrcons.exit.i.i102:                             ; preds = %if.end5.i.i.i96, %if.end.i.i.i89
  %z.0.i.i.i97 = phi ptr [ %37, %if.end.i.i.i89 ], [ %40, %if.end5.i.i.i96 ]
  store i16 0, ptr %z.0.i.i.i97, align 8, !tbaa !35
  %type7.i.i.i98 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i97, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i98, align 2, !tbaa !14
  %storage_as8.i.i.i99 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i97, i64 0, i32 2
  store ptr @.str.157, ptr %storage_as8.i.i.i99, align 8, !tbaa !9
  %f11.i.i.i100 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i97, i64 0, i32 2, i32 0, i32 1
  store ptr @setcdr, ptr %f11.i.i.i100, align 8, !tbaa !9
  %cmp.i4.i.i101 = icmp eq ptr %call.i.i.i82, null
  br i1 %cmp.i4.i.i101, label %if.then.i6.i.i106, label %cond.false.i.i.i104

cond.false.i.i.i104:                              ; preds = %subrcons.exit.i.i102
  %type.i.i.i103 = getelementptr inbounds %struct.obj, ptr %call.i.i.i82, i64 0, i32 1
  %43 = load i16, ptr %type.i.i.i103, align 2, !tbaa !14
  %44 = icmp eq i16 %43, 3
  br i1 %44, label %init_subr_2.exit108, label %if.then.i6.i.i106

if.then.i6.i.i106:                                ; preds = %cond.false.i.i.i104, %subrcons.exit.i.i102
  %call.i5.i.i105 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i82) #38
  br label %init_subr_2.exit108

init_subr_2.exit108:                              ; preds = %cond.false.i.i.i104, %if.then.i6.i.i106
  %vcell.i.i.i107 = getelementptr inbounds %struct.obj, ptr %call.i.i.i82, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i97, ptr %vcell.i.i.i107, align 8, !tbaa !9
  %call.i.i.i109 = tail call ptr @gen_intern(ptr noundef nonnull @.str.158, i64 noundef 0)
  %45 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i110 = icmp eq i64 %45, 1
  br i1 %cmp.i.i.i110, label %if.then.i.i.i112, label %if.else.i.i.i118

if.then.i.i.i112:                                 ; preds = %init_subr_2.exit108
  %46 = load ptr, ptr @heap, align 8, !tbaa !5
  %47 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i111 = icmp ult ptr %46, %47
  br i1 %cmp1.not.i.i.i111, label %if.end.i.i.i116, label %if.then2.i.i.i114

if.then2.i.i.i114:                                ; preds = %if.then.i.i.i112
  %call.i.i.i.i113 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i116

if.end.i.i.i116:                                  ; preds = %if.then2.i.i.i114, %if.then.i.i.i112
  %add.ptr.i.i.i115 = getelementptr inbounds %struct.obj, ptr %46, i64 1
  store ptr %add.ptr.i.i.i115, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i129

if.else.i.i.i118:                                 ; preds = %init_subr_2.exit108
  %48 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i117 = icmp eq ptr %48, null
  br i1 %cmp3.i.i.i117, label %if.then4.i.i.i120, label %if.end5.i.i.i123

if.then4.i.i.i120:                                ; preds = %if.else.i.i.i118
  tail call void @gc_for_newcell()
  %.pre.i.i.i119 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i123

if.end5.i.i.i123:                                 ; preds = %if.then4.i.i.i120, %if.else.i.i.i118
  %49 = phi ptr [ %.pre.i.i.i119, %if.then4.i.i.i120 ], [ %48, %if.else.i.i.i118 ]
  %cdr.i.i.i121 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 2, i32 0, i32 1
  %50 = load ptr, ptr %cdr.i.i.i121, align 8, !tbaa !9
  store ptr %50, ptr @freelist, align 8, !tbaa !5
  %51 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i122 = add nsw i64 %51, 1
  store i64 %inc.i.i.i122, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i129

subrcons.exit.i.i129:                             ; preds = %if.end5.i.i.i123, %if.end.i.i.i116
  %z.0.i.i.i124 = phi ptr [ %46, %if.end.i.i.i116 ], [ %49, %if.end5.i.i.i123 ]
  store i16 0, ptr %z.0.i.i.i124, align 8, !tbaa !35
  %type7.i.i.i125 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i124, i64 0, i32 1
  store i16 21, ptr %type7.i.i.i125, align 2, !tbaa !14
  %storage_as8.i.i.i126 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i124, i64 0, i32 2
  store ptr @.str.158, ptr %storage_as8.i.i.i126, align 8, !tbaa !9
  %f11.i.i.i127 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i124, i64 0, i32 2, i32 0, i32 1
  store ptr @plus, ptr %f11.i.i.i127, align 8, !tbaa !9
  %cmp.i4.i.i128 = icmp eq ptr %call.i.i.i109, null
  br i1 %cmp.i4.i.i128, label %if.then.i6.i.i133, label %cond.false.i.i.i131

cond.false.i.i.i131:                              ; preds = %subrcons.exit.i.i129
  %type.i.i.i130 = getelementptr inbounds %struct.obj, ptr %call.i.i.i109, i64 0, i32 1
  %52 = load i16, ptr %type.i.i.i130, align 2, !tbaa !14
  %53 = icmp eq i16 %52, 3
  br i1 %53, label %init_subr_2n.exit, label %if.then.i6.i.i133

if.then.i6.i.i133:                                ; preds = %cond.false.i.i.i131, %subrcons.exit.i.i129
  %call.i5.i.i132 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i109) #38
  br label %init_subr_2n.exit

init_subr_2n.exit:                                ; preds = %cond.false.i.i.i131, %if.then.i6.i.i133
  %vcell.i.i.i134 = getelementptr inbounds %struct.obj, ptr %call.i.i.i109, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i124, ptr %vcell.i.i.i134, align 8, !tbaa !9
  %call.i.i.i135 = tail call ptr @gen_intern(ptr noundef nonnull @.str.159, i64 noundef 0)
  %54 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i136 = icmp eq i64 %54, 1
  br i1 %cmp.i.i.i136, label %if.then.i.i.i138, label %if.else.i.i.i144

if.then.i.i.i138:                                 ; preds = %init_subr_2n.exit
  %55 = load ptr, ptr @heap, align 8, !tbaa !5
  %56 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i137 = icmp ult ptr %55, %56
  br i1 %cmp1.not.i.i.i137, label %if.end.i.i.i142, label %if.then2.i.i.i140

if.then2.i.i.i140:                                ; preds = %if.then.i.i.i138
  %call.i.i.i.i139 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i142

if.end.i.i.i142:                                  ; preds = %if.then2.i.i.i140, %if.then.i.i.i138
  %add.ptr.i.i.i141 = getelementptr inbounds %struct.obj, ptr %55, i64 1
  store ptr %add.ptr.i.i.i141, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i155

if.else.i.i.i144:                                 ; preds = %init_subr_2n.exit
  %57 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i143 = icmp eq ptr %57, null
  br i1 %cmp3.i.i.i143, label %if.then4.i.i.i146, label %if.end5.i.i.i149

if.then4.i.i.i146:                                ; preds = %if.else.i.i.i144
  tail call void @gc_for_newcell()
  %.pre.i.i.i145 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i149

if.end5.i.i.i149:                                 ; preds = %if.then4.i.i.i146, %if.else.i.i.i144
  %58 = phi ptr [ %.pre.i.i.i145, %if.then4.i.i.i146 ], [ %57, %if.else.i.i.i144 ]
  %cdr.i.i.i147 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2, i32 0, i32 1
  %59 = load ptr, ptr %cdr.i.i.i147, align 8, !tbaa !9
  store ptr %59, ptr @freelist, align 8, !tbaa !5
  %60 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i148 = add nsw i64 %60, 1
  store i64 %inc.i.i.i148, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i155

subrcons.exit.i.i155:                             ; preds = %if.end5.i.i.i149, %if.end.i.i.i142
  %z.0.i.i.i150 = phi ptr [ %55, %if.end.i.i.i142 ], [ %58, %if.end5.i.i.i149 ]
  store i16 0, ptr %z.0.i.i.i150, align 8, !tbaa !35
  %type7.i.i.i151 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i150, i64 0, i32 1
  store i16 21, ptr %type7.i.i.i151, align 2, !tbaa !14
  %storage_as8.i.i.i152 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i150, i64 0, i32 2
  store ptr @.str.159, ptr %storage_as8.i.i.i152, align 8, !tbaa !9
  %f11.i.i.i153 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i150, i64 0, i32 2, i32 0, i32 1
  store ptr @difference, ptr %f11.i.i.i153, align 8, !tbaa !9
  %cmp.i4.i.i154 = icmp eq ptr %call.i.i.i135, null
  br i1 %cmp.i4.i.i154, label %if.then.i6.i.i159, label %cond.false.i.i.i157

cond.false.i.i.i157:                              ; preds = %subrcons.exit.i.i155
  %type.i.i.i156 = getelementptr inbounds %struct.obj, ptr %call.i.i.i135, i64 0, i32 1
  %61 = load i16, ptr %type.i.i.i156, align 2, !tbaa !14
  %62 = icmp eq i16 %61, 3
  br i1 %62, label %init_subr_2n.exit161, label %if.then.i6.i.i159

if.then.i6.i.i159:                                ; preds = %cond.false.i.i.i157, %subrcons.exit.i.i155
  %call.i5.i.i158 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i135) #38
  br label %init_subr_2n.exit161

init_subr_2n.exit161:                             ; preds = %cond.false.i.i.i157, %if.then.i6.i.i159
  %vcell.i.i.i160 = getelementptr inbounds %struct.obj, ptr %call.i.i.i135, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i150, ptr %vcell.i.i.i160, align 8, !tbaa !9
  %call.i.i.i162 = tail call ptr @gen_intern(ptr noundef nonnull @.str.141, i64 noundef 0)
  %63 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i163 = icmp eq i64 %63, 1
  br i1 %cmp.i.i.i163, label %if.then.i.i.i165, label %if.else.i.i.i171

if.then.i.i.i165:                                 ; preds = %init_subr_2n.exit161
  %64 = load ptr, ptr @heap, align 8, !tbaa !5
  %65 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i164 = icmp ult ptr %64, %65
  br i1 %cmp1.not.i.i.i164, label %if.end.i.i.i169, label %if.then2.i.i.i167

if.then2.i.i.i167:                                ; preds = %if.then.i.i.i165
  %call.i.i.i.i166 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i169

if.end.i.i.i169:                                  ; preds = %if.then2.i.i.i167, %if.then.i.i.i165
  %add.ptr.i.i.i168 = getelementptr inbounds %struct.obj, ptr %64, i64 1
  store ptr %add.ptr.i.i.i168, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i182

if.else.i.i.i171:                                 ; preds = %init_subr_2n.exit161
  %66 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i170 = icmp eq ptr %66, null
  br i1 %cmp3.i.i.i170, label %if.then4.i.i.i173, label %if.end5.i.i.i176

if.then4.i.i.i173:                                ; preds = %if.else.i.i.i171
  tail call void @gc_for_newcell()
  %.pre.i.i.i172 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i176

if.end5.i.i.i176:                                 ; preds = %if.then4.i.i.i173, %if.else.i.i.i171
  %67 = phi ptr [ %.pre.i.i.i172, %if.then4.i.i.i173 ], [ %66, %if.else.i.i.i171 ]
  %cdr.i.i.i174 = getelementptr inbounds %struct.obj, ptr %67, i64 0, i32 2, i32 0, i32 1
  %68 = load ptr, ptr %cdr.i.i.i174, align 8, !tbaa !9
  store ptr %68, ptr @freelist, align 8, !tbaa !5
  %69 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i175 = add nsw i64 %69, 1
  store i64 %inc.i.i.i175, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i182

subrcons.exit.i.i182:                             ; preds = %if.end5.i.i.i176, %if.end.i.i.i169
  %z.0.i.i.i177 = phi ptr [ %64, %if.end.i.i.i169 ], [ %67, %if.end5.i.i.i176 ]
  store i16 0, ptr %z.0.i.i.i177, align 8, !tbaa !35
  %type7.i.i.i178 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i177, i64 0, i32 1
  store i16 21, ptr %type7.i.i.i178, align 2, !tbaa !14
  %storage_as8.i.i.i179 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i177, i64 0, i32 2
  store ptr @.str.141, ptr %storage_as8.i.i.i179, align 8, !tbaa !9
  %f11.i.i.i180 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i177, i64 0, i32 2, i32 0, i32 1
  store ptr @ltimes, ptr %f11.i.i.i180, align 8, !tbaa !9
  %cmp.i4.i.i181 = icmp eq ptr %call.i.i.i162, null
  br i1 %cmp.i4.i.i181, label %if.then.i6.i.i186, label %cond.false.i.i.i184

cond.false.i.i.i184:                              ; preds = %subrcons.exit.i.i182
  %type.i.i.i183 = getelementptr inbounds %struct.obj, ptr %call.i.i.i162, i64 0, i32 1
  %70 = load i16, ptr %type.i.i.i183, align 2, !tbaa !14
  %71 = icmp eq i16 %70, 3
  br i1 %71, label %init_subr_2n.exit188, label %if.then.i6.i.i186

if.then.i6.i.i186:                                ; preds = %cond.false.i.i.i184, %subrcons.exit.i.i182
  %call.i5.i.i185 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i162) #38
  br label %init_subr_2n.exit188

init_subr_2n.exit188:                             ; preds = %cond.false.i.i.i184, %if.then.i6.i.i186
  %vcell.i.i.i187 = getelementptr inbounds %struct.obj, ptr %call.i.i.i162, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i177, ptr %vcell.i.i.i187, align 8, !tbaa !9
  %call.i.i.i189 = tail call ptr @gen_intern(ptr noundef nonnull @.str.137, i64 noundef 0)
  %72 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i190 = icmp eq i64 %72, 1
  br i1 %cmp.i.i.i190, label %if.then.i.i.i192, label %if.else.i.i.i198

if.then.i.i.i192:                                 ; preds = %init_subr_2n.exit188
  %73 = load ptr, ptr @heap, align 8, !tbaa !5
  %74 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i191 = icmp ult ptr %73, %74
  br i1 %cmp1.not.i.i.i191, label %if.end.i.i.i196, label %if.then2.i.i.i194

if.then2.i.i.i194:                                ; preds = %if.then.i.i.i192
  %call.i.i.i.i193 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i196

if.end.i.i.i196:                                  ; preds = %if.then2.i.i.i194, %if.then.i.i.i192
  %add.ptr.i.i.i195 = getelementptr inbounds %struct.obj, ptr %73, i64 1
  store ptr %add.ptr.i.i.i195, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i209

if.else.i.i.i198:                                 ; preds = %init_subr_2n.exit188
  %75 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i197 = icmp eq ptr %75, null
  br i1 %cmp3.i.i.i197, label %if.then4.i.i.i200, label %if.end5.i.i.i203

if.then4.i.i.i200:                                ; preds = %if.else.i.i.i198
  tail call void @gc_for_newcell()
  %.pre.i.i.i199 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i203

if.end5.i.i.i203:                                 ; preds = %if.then4.i.i.i200, %if.else.i.i.i198
  %76 = phi ptr [ %.pre.i.i.i199, %if.then4.i.i.i200 ], [ %75, %if.else.i.i.i198 ]
  %cdr.i.i.i201 = getelementptr inbounds %struct.obj, ptr %76, i64 0, i32 2, i32 0, i32 1
  %77 = load ptr, ptr %cdr.i.i.i201, align 8, !tbaa !9
  store ptr %77, ptr @freelist, align 8, !tbaa !5
  %78 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i202 = add nsw i64 %78, 1
  store i64 %inc.i.i.i202, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i209

subrcons.exit.i.i209:                             ; preds = %if.end5.i.i.i203, %if.end.i.i.i196
  %z.0.i.i.i204 = phi ptr [ %73, %if.end.i.i.i196 ], [ %76, %if.end5.i.i.i203 ]
  store i16 0, ptr %z.0.i.i.i204, align 8, !tbaa !35
  %type7.i.i.i205 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i204, i64 0, i32 1
  store i16 21, ptr %type7.i.i.i205, align 2, !tbaa !14
  %storage_as8.i.i.i206 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i204, i64 0, i32 2
  store ptr @.str.137, ptr %storage_as8.i.i.i206, align 8, !tbaa !9
  %f11.i.i.i207 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i204, i64 0, i32 2, i32 0, i32 1
  store ptr @Quotient, ptr %f11.i.i.i207, align 8, !tbaa !9
  %cmp.i4.i.i208 = icmp eq ptr %call.i.i.i189, null
  br i1 %cmp.i4.i.i208, label %if.then.i6.i.i213, label %cond.false.i.i.i211

cond.false.i.i.i211:                              ; preds = %subrcons.exit.i.i209
  %type.i.i.i210 = getelementptr inbounds %struct.obj, ptr %call.i.i.i189, i64 0, i32 1
  %79 = load i16, ptr %type.i.i.i210, align 2, !tbaa !14
  %80 = icmp eq i16 %79, 3
  br i1 %80, label %init_subr_2n.exit215, label %if.then.i6.i.i213

if.then.i6.i.i213:                                ; preds = %cond.false.i.i.i211, %subrcons.exit.i.i209
  %call.i5.i.i212 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i189) #38
  br label %init_subr_2n.exit215

init_subr_2n.exit215:                             ; preds = %cond.false.i.i.i211, %if.then.i6.i.i213
  %vcell.i.i.i214 = getelementptr inbounds %struct.obj, ptr %call.i.i.i189, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i204, ptr %vcell.i.i.i214, align 8, !tbaa !9
  %call.i.i.i216 = tail call ptr @gen_intern(ptr noundef nonnull @.str.160, i64 noundef 0)
  %81 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i217 = icmp eq i64 %81, 1
  br i1 %cmp.i.i.i217, label %if.then.i.i.i219, label %if.else.i.i.i225

if.then.i.i.i219:                                 ; preds = %init_subr_2n.exit215
  %82 = load ptr, ptr @heap, align 8, !tbaa !5
  %83 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i218 = icmp ult ptr %82, %83
  br i1 %cmp1.not.i.i.i218, label %if.end.i.i.i223, label %if.then2.i.i.i221

if.then2.i.i.i221:                                ; preds = %if.then.i.i.i219
  %call.i.i.i.i220 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i223

if.end.i.i.i223:                                  ; preds = %if.then2.i.i.i221, %if.then.i.i.i219
  %add.ptr.i.i.i222 = getelementptr inbounds %struct.obj, ptr %82, i64 1
  store ptr %add.ptr.i.i.i222, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i236

if.else.i.i.i225:                                 ; preds = %init_subr_2n.exit215
  %84 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i224 = icmp eq ptr %84, null
  br i1 %cmp3.i.i.i224, label %if.then4.i.i.i227, label %if.end5.i.i.i230

if.then4.i.i.i227:                                ; preds = %if.else.i.i.i225
  tail call void @gc_for_newcell()
  %.pre.i.i.i226 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i230

if.end5.i.i.i230:                                 ; preds = %if.then4.i.i.i227, %if.else.i.i.i225
  %85 = phi ptr [ %.pre.i.i.i226, %if.then4.i.i.i227 ], [ %84, %if.else.i.i.i225 ]
  %cdr.i.i.i228 = getelementptr inbounds %struct.obj, ptr %85, i64 0, i32 2, i32 0, i32 1
  %86 = load ptr, ptr %cdr.i.i.i228, align 8, !tbaa !9
  store ptr %86, ptr @freelist, align 8, !tbaa !5
  %87 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i229 = add nsw i64 %87, 1
  store i64 %inc.i.i.i229, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i236

subrcons.exit.i.i236:                             ; preds = %if.end5.i.i.i230, %if.end.i.i.i223
  %z.0.i.i.i231 = phi ptr [ %82, %if.end.i.i.i223 ], [ %85, %if.end5.i.i.i230 ]
  store i16 0, ptr %z.0.i.i.i231, align 8, !tbaa !35
  %type7.i.i.i232 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i231, i64 0, i32 1
  store i16 21, ptr %type7.i.i.i232, align 2, !tbaa !14
  %storage_as8.i.i.i233 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i231, i64 0, i32 2
  store ptr @.str.160, ptr %storage_as8.i.i.i233, align 8, !tbaa !9
  %f11.i.i.i234 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i231, i64 0, i32 2, i32 0, i32 1
  store ptr @lmin, ptr %f11.i.i.i234, align 8, !tbaa !9
  %cmp.i4.i.i235 = icmp eq ptr %call.i.i.i216, null
  br i1 %cmp.i4.i.i235, label %if.then.i6.i.i240, label %cond.false.i.i.i238

cond.false.i.i.i238:                              ; preds = %subrcons.exit.i.i236
  %type.i.i.i237 = getelementptr inbounds %struct.obj, ptr %call.i.i.i216, i64 0, i32 1
  %88 = load i16, ptr %type.i.i.i237, align 2, !tbaa !14
  %89 = icmp eq i16 %88, 3
  br i1 %89, label %init_subr_2n.exit242, label %if.then.i6.i.i240

if.then.i6.i.i240:                                ; preds = %cond.false.i.i.i238, %subrcons.exit.i.i236
  %call.i5.i.i239 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i216) #38
  br label %init_subr_2n.exit242

init_subr_2n.exit242:                             ; preds = %cond.false.i.i.i238, %if.then.i6.i.i240
  %vcell.i.i.i241 = getelementptr inbounds %struct.obj, ptr %call.i.i.i216, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i231, ptr %vcell.i.i.i241, align 8, !tbaa !9
  %call.i.i.i243 = tail call ptr @gen_intern(ptr noundef nonnull @.str.161, i64 noundef 0)
  %90 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i244 = icmp eq i64 %90, 1
  br i1 %cmp.i.i.i244, label %if.then.i.i.i246, label %if.else.i.i.i252

if.then.i.i.i246:                                 ; preds = %init_subr_2n.exit242
  %91 = load ptr, ptr @heap, align 8, !tbaa !5
  %92 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i245 = icmp ult ptr %91, %92
  br i1 %cmp1.not.i.i.i245, label %if.end.i.i.i250, label %if.then2.i.i.i248

if.then2.i.i.i248:                                ; preds = %if.then.i.i.i246
  %call.i.i.i.i247 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i250

if.end.i.i.i250:                                  ; preds = %if.then2.i.i.i248, %if.then.i.i.i246
  %add.ptr.i.i.i249 = getelementptr inbounds %struct.obj, ptr %91, i64 1
  store ptr %add.ptr.i.i.i249, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i263

if.else.i.i.i252:                                 ; preds = %init_subr_2n.exit242
  %93 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i251 = icmp eq ptr %93, null
  br i1 %cmp3.i.i.i251, label %if.then4.i.i.i254, label %if.end5.i.i.i257

if.then4.i.i.i254:                                ; preds = %if.else.i.i.i252
  tail call void @gc_for_newcell()
  %.pre.i.i.i253 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i257

if.end5.i.i.i257:                                 ; preds = %if.then4.i.i.i254, %if.else.i.i.i252
  %94 = phi ptr [ %.pre.i.i.i253, %if.then4.i.i.i254 ], [ %93, %if.else.i.i.i252 ]
  %cdr.i.i.i255 = getelementptr inbounds %struct.obj, ptr %94, i64 0, i32 2, i32 0, i32 1
  %95 = load ptr, ptr %cdr.i.i.i255, align 8, !tbaa !9
  store ptr %95, ptr @freelist, align 8, !tbaa !5
  %96 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i256 = add nsw i64 %96, 1
  store i64 %inc.i.i.i256, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i263

subrcons.exit.i.i263:                             ; preds = %if.end5.i.i.i257, %if.end.i.i.i250
  %z.0.i.i.i258 = phi ptr [ %91, %if.end.i.i.i250 ], [ %94, %if.end5.i.i.i257 ]
  store i16 0, ptr %z.0.i.i.i258, align 8, !tbaa !35
  %type7.i.i.i259 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i258, i64 0, i32 1
  store i16 21, ptr %type7.i.i.i259, align 2, !tbaa !14
  %storage_as8.i.i.i260 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i258, i64 0, i32 2
  store ptr @.str.161, ptr %storage_as8.i.i.i260, align 8, !tbaa !9
  %f11.i.i.i261 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i258, i64 0, i32 2, i32 0, i32 1
  store ptr @lmax, ptr %f11.i.i.i261, align 8, !tbaa !9
  %cmp.i4.i.i262 = icmp eq ptr %call.i.i.i243, null
  br i1 %cmp.i4.i.i262, label %if.then.i6.i.i267, label %cond.false.i.i.i265

cond.false.i.i.i265:                              ; preds = %subrcons.exit.i.i263
  %type.i.i.i264 = getelementptr inbounds %struct.obj, ptr %call.i.i.i243, i64 0, i32 1
  %97 = load i16, ptr %type.i.i.i264, align 2, !tbaa !14
  %98 = icmp eq i16 %97, 3
  br i1 %98, label %init_subr_2n.exit269, label %if.then.i6.i.i267

if.then.i6.i.i267:                                ; preds = %cond.false.i.i.i265, %subrcons.exit.i.i263
  %call.i5.i.i266 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i243) #38
  br label %init_subr_2n.exit269

init_subr_2n.exit269:                             ; preds = %cond.false.i.i.i265, %if.then.i6.i.i267
  %vcell.i.i.i268 = getelementptr inbounds %struct.obj, ptr %call.i.i.i243, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i258, ptr %vcell.i.i.i268, align 8, !tbaa !9
  %call.i.i.i270 = tail call ptr @gen_intern(ptr noundef nonnull @.str.162, i64 noundef 0)
  %99 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i271 = icmp eq i64 %99, 1
  br i1 %cmp.i.i.i271, label %if.then.i.i.i273, label %if.else.i.i.i279

if.then.i.i.i273:                                 ; preds = %init_subr_2n.exit269
  %100 = load ptr, ptr @heap, align 8, !tbaa !5
  %101 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i272 = icmp ult ptr %100, %101
  br i1 %cmp1.not.i.i.i272, label %if.end.i.i.i277, label %if.then2.i.i.i275

if.then2.i.i.i275:                                ; preds = %if.then.i.i.i273
  %call.i.i.i.i274 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i277

if.end.i.i.i277:                                  ; preds = %if.then2.i.i.i275, %if.then.i.i.i273
  %add.ptr.i.i.i276 = getelementptr inbounds %struct.obj, ptr %100, i64 1
  store ptr %add.ptr.i.i.i276, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i290

if.else.i.i.i279:                                 ; preds = %init_subr_2n.exit269
  %102 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i278 = icmp eq ptr %102, null
  br i1 %cmp3.i.i.i278, label %if.then4.i.i.i281, label %if.end5.i.i.i284

if.then4.i.i.i281:                                ; preds = %if.else.i.i.i279
  tail call void @gc_for_newcell()
  %.pre.i.i.i280 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i284

if.end5.i.i.i284:                                 ; preds = %if.then4.i.i.i281, %if.else.i.i.i279
  %103 = phi ptr [ %.pre.i.i.i280, %if.then4.i.i.i281 ], [ %102, %if.else.i.i.i279 ]
  %cdr.i.i.i282 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 2, i32 0, i32 1
  %104 = load ptr, ptr %cdr.i.i.i282, align 8, !tbaa !9
  store ptr %104, ptr @freelist, align 8, !tbaa !5
  %105 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i283 = add nsw i64 %105, 1
  store i64 %inc.i.i.i283, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i290

subrcons.exit.i.i290:                             ; preds = %if.end5.i.i.i284, %if.end.i.i.i277
  %z.0.i.i.i285 = phi ptr [ %100, %if.end.i.i.i277 ], [ %103, %if.end5.i.i.i284 ]
  store i16 0, ptr %z.0.i.i.i285, align 8, !tbaa !35
  %type7.i.i.i286 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i285, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i286, align 2, !tbaa !14
  %storage_as8.i.i.i287 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i285, i64 0, i32 2
  store ptr @.str.162, ptr %storage_as8.i.i.i287, align 8, !tbaa !9
  %f11.i.i.i288 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i285, i64 0, i32 2, i32 0, i32 1
  store ptr @lllabs, ptr %f11.i.i.i288, align 8, !tbaa !9
  %cmp.i4.i.i289 = icmp eq ptr %call.i.i.i270, null
  br i1 %cmp.i4.i.i289, label %if.then.i6.i.i294, label %cond.false.i.i.i292

cond.false.i.i.i292:                              ; preds = %subrcons.exit.i.i290
  %type.i.i.i291 = getelementptr inbounds %struct.obj, ptr %call.i.i.i270, i64 0, i32 1
  %106 = load i16, ptr %type.i.i.i291, align 2, !tbaa !14
  %107 = icmp eq i16 %106, 3
  br i1 %107, label %init_subr_1.exit296, label %if.then.i6.i.i294

if.then.i6.i.i294:                                ; preds = %cond.false.i.i.i292, %subrcons.exit.i.i290
  %call.i5.i.i293 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i270) #38
  br label %init_subr_1.exit296

init_subr_1.exit296:                              ; preds = %cond.false.i.i.i292, %if.then.i6.i.i294
  %vcell.i.i.i295 = getelementptr inbounds %struct.obj, ptr %call.i.i.i270, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i285, ptr %vcell.i.i.i295, align 8, !tbaa !9
  %call.i.i.i297 = tail call ptr @gen_intern(ptr noundef nonnull @.str.163, i64 noundef 0)
  %108 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i298 = icmp eq i64 %108, 1
  br i1 %cmp.i.i.i298, label %if.then.i.i.i300, label %if.else.i.i.i306

if.then.i.i.i300:                                 ; preds = %init_subr_1.exit296
  %109 = load ptr, ptr @heap, align 8, !tbaa !5
  %110 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i299 = icmp ult ptr %109, %110
  br i1 %cmp1.not.i.i.i299, label %if.end.i.i.i304, label %if.then2.i.i.i302

if.then2.i.i.i302:                                ; preds = %if.then.i.i.i300
  %call.i.i.i.i301 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i304

if.end.i.i.i304:                                  ; preds = %if.then2.i.i.i302, %if.then.i.i.i300
  %add.ptr.i.i.i303 = getelementptr inbounds %struct.obj, ptr %109, i64 1
  store ptr %add.ptr.i.i.i303, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i317

if.else.i.i.i306:                                 ; preds = %init_subr_1.exit296
  %111 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i305 = icmp eq ptr %111, null
  br i1 %cmp3.i.i.i305, label %if.then4.i.i.i308, label %if.end5.i.i.i311

if.then4.i.i.i308:                                ; preds = %if.else.i.i.i306
  tail call void @gc_for_newcell()
  %.pre.i.i.i307 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i311

if.end5.i.i.i311:                                 ; preds = %if.then4.i.i.i308, %if.else.i.i.i306
  %112 = phi ptr [ %.pre.i.i.i307, %if.then4.i.i.i308 ], [ %111, %if.else.i.i.i306 ]
  %cdr.i.i.i309 = getelementptr inbounds %struct.obj, ptr %112, i64 0, i32 2, i32 0, i32 1
  %113 = load ptr, ptr %cdr.i.i.i309, align 8, !tbaa !9
  store ptr %113, ptr @freelist, align 8, !tbaa !5
  %114 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i310 = add nsw i64 %114, 1
  store i64 %inc.i.i.i310, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i317

subrcons.exit.i.i317:                             ; preds = %if.end5.i.i.i311, %if.end.i.i.i304
  %z.0.i.i.i312 = phi ptr [ %109, %if.end.i.i.i304 ], [ %112, %if.end5.i.i.i311 ]
  store i16 0, ptr %z.0.i.i.i312, align 8, !tbaa !35
  %type7.i.i.i313 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i312, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i313, align 2, !tbaa !14
  %storage_as8.i.i.i314 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i312, i64 0, i32 2
  store ptr @.str.163, ptr %storage_as8.i.i.i314, align 8, !tbaa !9
  %f11.i.i.i315 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i312, i64 0, i32 2, i32 0, i32 1
  store ptr @lsqrt, ptr %f11.i.i.i315, align 8, !tbaa !9
  %cmp.i4.i.i316 = icmp eq ptr %call.i.i.i297, null
  br i1 %cmp.i4.i.i316, label %if.then.i6.i.i321, label %cond.false.i.i.i319

cond.false.i.i.i319:                              ; preds = %subrcons.exit.i.i317
  %type.i.i.i318 = getelementptr inbounds %struct.obj, ptr %call.i.i.i297, i64 0, i32 1
  %115 = load i16, ptr %type.i.i.i318, align 2, !tbaa !14
  %116 = icmp eq i16 %115, 3
  br i1 %116, label %init_subr_1.exit323, label %if.then.i6.i.i321

if.then.i6.i.i321:                                ; preds = %cond.false.i.i.i319, %subrcons.exit.i.i317
  %call.i5.i.i320 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i297) #38
  br label %init_subr_1.exit323

init_subr_1.exit323:                              ; preds = %cond.false.i.i.i319, %if.then.i6.i.i321
  %vcell.i.i.i322 = getelementptr inbounds %struct.obj, ptr %call.i.i.i297, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i312, ptr %vcell.i.i.i322, align 8, !tbaa !9
  %call.i.i.i324 = tail call ptr @gen_intern(ptr noundef nonnull @.str.118, i64 noundef 0)
  %117 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i325 = icmp eq i64 %117, 1
  br i1 %cmp.i.i.i325, label %if.then.i.i.i327, label %if.else.i.i.i333

if.then.i.i.i327:                                 ; preds = %init_subr_1.exit323
  %118 = load ptr, ptr @heap, align 8, !tbaa !5
  %119 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i326 = icmp ult ptr %118, %119
  br i1 %cmp1.not.i.i.i326, label %if.end.i.i.i331, label %if.then2.i.i.i329

if.then2.i.i.i329:                                ; preds = %if.then.i.i.i327
  %call.i.i.i.i328 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i331

if.end.i.i.i331:                                  ; preds = %if.then2.i.i.i329, %if.then.i.i.i327
  %add.ptr.i.i.i330 = getelementptr inbounds %struct.obj, ptr %118, i64 1
  store ptr %add.ptr.i.i.i330, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i344

if.else.i.i.i333:                                 ; preds = %init_subr_1.exit323
  %120 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i332 = icmp eq ptr %120, null
  br i1 %cmp3.i.i.i332, label %if.then4.i.i.i335, label %if.end5.i.i.i338

if.then4.i.i.i335:                                ; preds = %if.else.i.i.i333
  tail call void @gc_for_newcell()
  %.pre.i.i.i334 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i338

if.end5.i.i.i338:                                 ; preds = %if.then4.i.i.i335, %if.else.i.i.i333
  %121 = phi ptr [ %.pre.i.i.i334, %if.then4.i.i.i335 ], [ %120, %if.else.i.i.i333 ]
  %cdr.i.i.i336 = getelementptr inbounds %struct.obj, ptr %121, i64 0, i32 2, i32 0, i32 1
  %122 = load ptr, ptr %cdr.i.i.i336, align 8, !tbaa !9
  store ptr %122, ptr @freelist, align 8, !tbaa !5
  %123 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i337 = add nsw i64 %123, 1
  store i64 %inc.i.i.i337, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i344

subrcons.exit.i.i344:                             ; preds = %if.end5.i.i.i338, %if.end.i.i.i331
  %z.0.i.i.i339 = phi ptr [ %118, %if.end.i.i.i331 ], [ %121, %if.end5.i.i.i338 ]
  store i16 0, ptr %z.0.i.i.i339, align 8, !tbaa !35
  %type7.i.i.i340 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i339, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i340, align 2, !tbaa !14
  %storage_as8.i.i.i341 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i339, i64 0, i32 2
  store ptr @.str.118, ptr %storage_as8.i.i.i341, align 8, !tbaa !9
  %f11.i.i.i342 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i339, i64 0, i32 2, i32 0, i32 1
  store ptr @greaterp, ptr %f11.i.i.i342, align 8, !tbaa !9
  %cmp.i4.i.i343 = icmp eq ptr %call.i.i.i324, null
  br i1 %cmp.i4.i.i343, label %if.then.i6.i.i348, label %cond.false.i.i.i346

cond.false.i.i.i346:                              ; preds = %subrcons.exit.i.i344
  %type.i.i.i345 = getelementptr inbounds %struct.obj, ptr %call.i.i.i324, i64 0, i32 1
  %124 = load i16, ptr %type.i.i.i345, align 2, !tbaa !14
  %125 = icmp eq i16 %124, 3
  br i1 %125, label %init_subr_2.exit350, label %if.then.i6.i.i348

if.then.i6.i.i348:                                ; preds = %cond.false.i.i.i346, %subrcons.exit.i.i344
  %call.i5.i.i347 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i324) #38
  br label %init_subr_2.exit350

init_subr_2.exit350:                              ; preds = %cond.false.i.i.i346, %if.then.i6.i.i348
  %vcell.i.i.i349 = getelementptr inbounds %struct.obj, ptr %call.i.i.i324, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i339, ptr %vcell.i.i.i349, align 8, !tbaa !9
  %call.i.i.i351 = tail call ptr @gen_intern(ptr noundef nonnull @.str.164, i64 noundef 0)
  %126 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i352 = icmp eq i64 %126, 1
  br i1 %cmp.i.i.i352, label %if.then.i.i.i354, label %if.else.i.i.i360

if.then.i.i.i354:                                 ; preds = %init_subr_2.exit350
  %127 = load ptr, ptr @heap, align 8, !tbaa !5
  %128 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i353 = icmp ult ptr %127, %128
  br i1 %cmp1.not.i.i.i353, label %if.end.i.i.i358, label %if.then2.i.i.i356

if.then2.i.i.i356:                                ; preds = %if.then.i.i.i354
  %call.i.i.i.i355 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i358

if.end.i.i.i358:                                  ; preds = %if.then2.i.i.i356, %if.then.i.i.i354
  %add.ptr.i.i.i357 = getelementptr inbounds %struct.obj, ptr %127, i64 1
  store ptr %add.ptr.i.i.i357, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i371

if.else.i.i.i360:                                 ; preds = %init_subr_2.exit350
  %129 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i359 = icmp eq ptr %129, null
  br i1 %cmp3.i.i.i359, label %if.then4.i.i.i362, label %if.end5.i.i.i365

if.then4.i.i.i362:                                ; preds = %if.else.i.i.i360
  tail call void @gc_for_newcell()
  %.pre.i.i.i361 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i365

if.end5.i.i.i365:                                 ; preds = %if.then4.i.i.i362, %if.else.i.i.i360
  %130 = phi ptr [ %.pre.i.i.i361, %if.then4.i.i.i362 ], [ %129, %if.else.i.i.i360 ]
  %cdr.i.i.i363 = getelementptr inbounds %struct.obj, ptr %130, i64 0, i32 2, i32 0, i32 1
  %131 = load ptr, ptr %cdr.i.i.i363, align 8, !tbaa !9
  store ptr %131, ptr @freelist, align 8, !tbaa !5
  %132 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i364 = add nsw i64 %132, 1
  store i64 %inc.i.i.i364, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i371

subrcons.exit.i.i371:                             ; preds = %if.end5.i.i.i365, %if.end.i.i.i358
  %z.0.i.i.i366 = phi ptr [ %127, %if.end.i.i.i358 ], [ %130, %if.end5.i.i.i365 ]
  store i16 0, ptr %z.0.i.i.i366, align 8, !tbaa !35
  %type7.i.i.i367 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i366, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i367, align 2, !tbaa !14
  %storage_as8.i.i.i368 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i366, i64 0, i32 2
  store ptr @.str.164, ptr %storage_as8.i.i.i368, align 8, !tbaa !9
  %f11.i.i.i369 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i366, i64 0, i32 2, i32 0, i32 1
  store ptr @lessp, ptr %f11.i.i.i369, align 8, !tbaa !9
  %cmp.i4.i.i370 = icmp eq ptr %call.i.i.i351, null
  br i1 %cmp.i4.i.i370, label %if.then.i6.i.i375, label %cond.false.i.i.i373

cond.false.i.i.i373:                              ; preds = %subrcons.exit.i.i371
  %type.i.i.i372 = getelementptr inbounds %struct.obj, ptr %call.i.i.i351, i64 0, i32 1
  %133 = load i16, ptr %type.i.i.i372, align 2, !tbaa !14
  %134 = icmp eq i16 %133, 3
  br i1 %134, label %init_subr_2.exit377, label %if.then.i6.i.i375

if.then.i6.i.i375:                                ; preds = %cond.false.i.i.i373, %subrcons.exit.i.i371
  %call.i5.i.i374 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i351) #38
  br label %init_subr_2.exit377

init_subr_2.exit377:                              ; preds = %cond.false.i.i.i373, %if.then.i6.i.i375
  %vcell.i.i.i376 = getelementptr inbounds %struct.obj, ptr %call.i.i.i351, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i366, ptr %vcell.i.i.i376, align 8, !tbaa !9
  %call.i.i.i378 = tail call ptr @gen_intern(ptr noundef nonnull @.str.165, i64 noundef 0)
  %135 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i379 = icmp eq i64 %135, 1
  br i1 %cmp.i.i.i379, label %if.then.i.i.i381, label %if.else.i.i.i387

if.then.i.i.i381:                                 ; preds = %init_subr_2.exit377
  %136 = load ptr, ptr @heap, align 8, !tbaa !5
  %137 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i380 = icmp ult ptr %136, %137
  br i1 %cmp1.not.i.i.i380, label %if.end.i.i.i385, label %if.then2.i.i.i383

if.then2.i.i.i383:                                ; preds = %if.then.i.i.i381
  %call.i.i.i.i382 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i385

if.end.i.i.i385:                                  ; preds = %if.then2.i.i.i383, %if.then.i.i.i381
  %add.ptr.i.i.i384 = getelementptr inbounds %struct.obj, ptr %136, i64 1
  store ptr %add.ptr.i.i.i384, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i398

if.else.i.i.i387:                                 ; preds = %init_subr_2.exit377
  %138 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i386 = icmp eq ptr %138, null
  br i1 %cmp3.i.i.i386, label %if.then4.i.i.i389, label %if.end5.i.i.i392

if.then4.i.i.i389:                                ; preds = %if.else.i.i.i387
  tail call void @gc_for_newcell()
  %.pre.i.i.i388 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i392

if.end5.i.i.i392:                                 ; preds = %if.then4.i.i.i389, %if.else.i.i.i387
  %139 = phi ptr [ %.pre.i.i.i388, %if.then4.i.i.i389 ], [ %138, %if.else.i.i.i387 ]
  %cdr.i.i.i390 = getelementptr inbounds %struct.obj, ptr %139, i64 0, i32 2, i32 0, i32 1
  %140 = load ptr, ptr %cdr.i.i.i390, align 8, !tbaa !9
  store ptr %140, ptr @freelist, align 8, !tbaa !5
  %141 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i391 = add nsw i64 %141, 1
  store i64 %inc.i.i.i391, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i398

subrcons.exit.i.i398:                             ; preds = %if.end5.i.i.i392, %if.end.i.i.i385
  %z.0.i.i.i393 = phi ptr [ %136, %if.end.i.i.i385 ], [ %139, %if.end5.i.i.i392 ]
  store i16 0, ptr %z.0.i.i.i393, align 8, !tbaa !35
  %type7.i.i.i394 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i393, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i394, align 2, !tbaa !14
  %storage_as8.i.i.i395 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i393, i64 0, i32 2
  store ptr @.str.165, ptr %storage_as8.i.i.i395, align 8, !tbaa !9
  %f11.i.i.i396 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i393, i64 0, i32 2, i32 0, i32 1
  store ptr @greaterEp, ptr %f11.i.i.i396, align 8, !tbaa !9
  %cmp.i4.i.i397 = icmp eq ptr %call.i.i.i378, null
  br i1 %cmp.i4.i.i397, label %if.then.i6.i.i402, label %cond.false.i.i.i400

cond.false.i.i.i400:                              ; preds = %subrcons.exit.i.i398
  %type.i.i.i399 = getelementptr inbounds %struct.obj, ptr %call.i.i.i378, i64 0, i32 1
  %142 = load i16, ptr %type.i.i.i399, align 2, !tbaa !14
  %143 = icmp eq i16 %142, 3
  br i1 %143, label %init_subr_2.exit404, label %if.then.i6.i.i402

if.then.i6.i.i402:                                ; preds = %cond.false.i.i.i400, %subrcons.exit.i.i398
  %call.i5.i.i401 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i378) #38
  br label %init_subr_2.exit404

init_subr_2.exit404:                              ; preds = %cond.false.i.i.i400, %if.then.i6.i.i402
  %vcell.i.i.i403 = getelementptr inbounds %struct.obj, ptr %call.i.i.i378, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i393, ptr %vcell.i.i.i403, align 8, !tbaa !9
  %call.i.i.i405 = tail call ptr @gen_intern(ptr noundef nonnull @.str.166, i64 noundef 0)
  %144 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i406 = icmp eq i64 %144, 1
  br i1 %cmp.i.i.i406, label %if.then.i.i.i408, label %if.else.i.i.i414

if.then.i.i.i408:                                 ; preds = %init_subr_2.exit404
  %145 = load ptr, ptr @heap, align 8, !tbaa !5
  %146 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i407 = icmp ult ptr %145, %146
  br i1 %cmp1.not.i.i.i407, label %if.end.i.i.i412, label %if.then2.i.i.i410

if.then2.i.i.i410:                                ; preds = %if.then.i.i.i408
  %call.i.i.i.i409 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i412

if.end.i.i.i412:                                  ; preds = %if.then2.i.i.i410, %if.then.i.i.i408
  %add.ptr.i.i.i411 = getelementptr inbounds %struct.obj, ptr %145, i64 1
  store ptr %add.ptr.i.i.i411, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i425

if.else.i.i.i414:                                 ; preds = %init_subr_2.exit404
  %147 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i413 = icmp eq ptr %147, null
  br i1 %cmp3.i.i.i413, label %if.then4.i.i.i416, label %if.end5.i.i.i419

if.then4.i.i.i416:                                ; preds = %if.else.i.i.i414
  tail call void @gc_for_newcell()
  %.pre.i.i.i415 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i419

if.end5.i.i.i419:                                 ; preds = %if.then4.i.i.i416, %if.else.i.i.i414
  %148 = phi ptr [ %.pre.i.i.i415, %if.then4.i.i.i416 ], [ %147, %if.else.i.i.i414 ]
  %cdr.i.i.i417 = getelementptr inbounds %struct.obj, ptr %148, i64 0, i32 2, i32 0, i32 1
  %149 = load ptr, ptr %cdr.i.i.i417, align 8, !tbaa !9
  store ptr %149, ptr @freelist, align 8, !tbaa !5
  %150 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i418 = add nsw i64 %150, 1
  store i64 %inc.i.i.i418, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i425

subrcons.exit.i.i425:                             ; preds = %if.end5.i.i.i419, %if.end.i.i.i412
  %z.0.i.i.i420 = phi ptr [ %145, %if.end.i.i.i412 ], [ %148, %if.end5.i.i.i419 ]
  store i16 0, ptr %z.0.i.i.i420, align 8, !tbaa !35
  %type7.i.i.i421 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i420, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i421, align 2, !tbaa !14
  %storage_as8.i.i.i422 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i420, i64 0, i32 2
  store ptr @.str.166, ptr %storage_as8.i.i.i422, align 8, !tbaa !9
  %f11.i.i.i423 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i420, i64 0, i32 2, i32 0, i32 1
  store ptr @lessEp, ptr %f11.i.i.i423, align 8, !tbaa !9
  %cmp.i4.i.i424 = icmp eq ptr %call.i.i.i405, null
  br i1 %cmp.i4.i.i424, label %if.then.i6.i.i429, label %cond.false.i.i.i427

cond.false.i.i.i427:                              ; preds = %subrcons.exit.i.i425
  %type.i.i.i426 = getelementptr inbounds %struct.obj, ptr %call.i.i.i405, i64 0, i32 1
  %151 = load i16, ptr %type.i.i.i426, align 2, !tbaa !14
  %152 = icmp eq i16 %151, 3
  br i1 %152, label %init_subr_2.exit431, label %if.then.i6.i.i429

if.then.i6.i.i429:                                ; preds = %cond.false.i.i.i427, %subrcons.exit.i.i425
  %call.i5.i.i428 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i405) #38
  br label %init_subr_2.exit431

init_subr_2.exit431:                              ; preds = %cond.false.i.i.i427, %if.then.i6.i.i429
  %vcell.i.i.i430 = getelementptr inbounds %struct.obj, ptr %call.i.i.i405, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i420, ptr %vcell.i.i.i430, align 8, !tbaa !9
  %call.i.i.i432 = tail call ptr @gen_intern(ptr noundef nonnull @.str.167, i64 noundef 0)
  %153 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i433 = icmp eq i64 %153, 1
  br i1 %cmp.i.i.i433, label %if.then.i.i.i435, label %if.else.i.i.i441

if.then.i.i.i435:                                 ; preds = %init_subr_2.exit431
  %154 = load ptr, ptr @heap, align 8, !tbaa !5
  %155 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i434 = icmp ult ptr %154, %155
  br i1 %cmp1.not.i.i.i434, label %if.end.i.i.i439, label %if.then2.i.i.i437

if.then2.i.i.i437:                                ; preds = %if.then.i.i.i435
  %call.i.i.i.i436 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i439

if.end.i.i.i439:                                  ; preds = %if.then2.i.i.i437, %if.then.i.i.i435
  %add.ptr.i.i.i438 = getelementptr inbounds %struct.obj, ptr %154, i64 1
  store ptr %add.ptr.i.i.i438, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i452

if.else.i.i.i441:                                 ; preds = %init_subr_2.exit431
  %156 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i440 = icmp eq ptr %156, null
  br i1 %cmp3.i.i.i440, label %if.then4.i.i.i443, label %if.end5.i.i.i446

if.then4.i.i.i443:                                ; preds = %if.else.i.i.i441
  tail call void @gc_for_newcell()
  %.pre.i.i.i442 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i446

if.end5.i.i.i446:                                 ; preds = %if.then4.i.i.i443, %if.else.i.i.i441
  %157 = phi ptr [ %.pre.i.i.i442, %if.then4.i.i.i443 ], [ %156, %if.else.i.i.i441 ]
  %cdr.i.i.i444 = getelementptr inbounds %struct.obj, ptr %157, i64 0, i32 2, i32 0, i32 1
  %158 = load ptr, ptr %cdr.i.i.i444, align 8, !tbaa !9
  store ptr %158, ptr @freelist, align 8, !tbaa !5
  %159 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i445 = add nsw i64 %159, 1
  store i64 %inc.i.i.i445, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i452

subrcons.exit.i.i452:                             ; preds = %if.end5.i.i.i446, %if.end.i.i.i439
  %z.0.i.i.i447 = phi ptr [ %154, %if.end.i.i.i439 ], [ %157, %if.end5.i.i.i446 ]
  store i16 0, ptr %z.0.i.i.i447, align 8, !tbaa !35
  %type7.i.i.i448 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i447, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i448, align 2, !tbaa !14
  %storage_as8.i.i.i449 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i447, i64 0, i32 2
  store ptr @.str.167, ptr %storage_as8.i.i.i449, align 8, !tbaa !9
  %f11.i.i.i450 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i447, i64 0, i32 2, i32 0, i32 1
  store ptr @eq, ptr %f11.i.i.i450, align 8, !tbaa !9
  %cmp.i4.i.i451 = icmp eq ptr %call.i.i.i432, null
  br i1 %cmp.i4.i.i451, label %if.then.i6.i.i456, label %cond.false.i.i.i454

cond.false.i.i.i454:                              ; preds = %subrcons.exit.i.i452
  %type.i.i.i453 = getelementptr inbounds %struct.obj, ptr %call.i.i.i432, i64 0, i32 1
  %160 = load i16, ptr %type.i.i.i453, align 2, !tbaa !14
  %161 = icmp eq i16 %160, 3
  br i1 %161, label %init_subr_2.exit458, label %if.then.i6.i.i456

if.then.i6.i.i456:                                ; preds = %cond.false.i.i.i454, %subrcons.exit.i.i452
  %call.i5.i.i455 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i432) #38
  br label %init_subr_2.exit458

init_subr_2.exit458:                              ; preds = %cond.false.i.i.i454, %if.then.i6.i.i456
  %vcell.i.i.i457 = getelementptr inbounds %struct.obj, ptr %call.i.i.i432, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i447, ptr %vcell.i.i.i457, align 8, !tbaa !9
  %call.i.i.i459 = tail call ptr @gen_intern(ptr noundef nonnull @.str.168, i64 noundef 0)
  %162 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i460 = icmp eq i64 %162, 1
  br i1 %cmp.i.i.i460, label %if.then.i.i.i462, label %if.else.i.i.i468

if.then.i.i.i462:                                 ; preds = %init_subr_2.exit458
  %163 = load ptr, ptr @heap, align 8, !tbaa !5
  %164 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i461 = icmp ult ptr %163, %164
  br i1 %cmp1.not.i.i.i461, label %if.end.i.i.i466, label %if.then2.i.i.i464

if.then2.i.i.i464:                                ; preds = %if.then.i.i.i462
  %call.i.i.i.i463 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i466

if.end.i.i.i466:                                  ; preds = %if.then2.i.i.i464, %if.then.i.i.i462
  %add.ptr.i.i.i465 = getelementptr inbounds %struct.obj, ptr %163, i64 1
  store ptr %add.ptr.i.i.i465, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i479

if.else.i.i.i468:                                 ; preds = %init_subr_2.exit458
  %165 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i467 = icmp eq ptr %165, null
  br i1 %cmp3.i.i.i467, label %if.then4.i.i.i470, label %if.end5.i.i.i473

if.then4.i.i.i470:                                ; preds = %if.else.i.i.i468
  tail call void @gc_for_newcell()
  %.pre.i.i.i469 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i473

if.end5.i.i.i473:                                 ; preds = %if.then4.i.i.i470, %if.else.i.i.i468
  %166 = phi ptr [ %.pre.i.i.i469, %if.then4.i.i.i470 ], [ %165, %if.else.i.i.i468 ]
  %cdr.i.i.i471 = getelementptr inbounds %struct.obj, ptr %166, i64 0, i32 2, i32 0, i32 1
  %167 = load ptr, ptr %cdr.i.i.i471, align 8, !tbaa !9
  store ptr %167, ptr @freelist, align 8, !tbaa !5
  %168 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i472 = add nsw i64 %168, 1
  store i64 %inc.i.i.i472, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i479

subrcons.exit.i.i479:                             ; preds = %if.end5.i.i.i473, %if.end.i.i.i466
  %z.0.i.i.i474 = phi ptr [ %163, %if.end.i.i.i466 ], [ %166, %if.end5.i.i.i473 ]
  store i16 0, ptr %z.0.i.i.i474, align 8, !tbaa !35
  %type7.i.i.i475 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i474, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i475, align 2, !tbaa !14
  %storage_as8.i.i.i476 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i474, i64 0, i32 2
  store ptr @.str.168, ptr %storage_as8.i.i.i476, align 8, !tbaa !9
  %f11.i.i.i477 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i474, i64 0, i32 2, i32 0, i32 1
  store ptr @eql, ptr %f11.i.i.i477, align 8, !tbaa !9
  %cmp.i4.i.i478 = icmp eq ptr %call.i.i.i459, null
  br i1 %cmp.i4.i.i478, label %if.then.i6.i.i483, label %cond.false.i.i.i481

cond.false.i.i.i481:                              ; preds = %subrcons.exit.i.i479
  %type.i.i.i480 = getelementptr inbounds %struct.obj, ptr %call.i.i.i459, i64 0, i32 1
  %169 = load i16, ptr %type.i.i.i480, align 2, !tbaa !14
  %170 = icmp eq i16 %169, 3
  br i1 %170, label %init_subr_2.exit485, label %if.then.i6.i.i483

if.then.i6.i.i483:                                ; preds = %cond.false.i.i.i481, %subrcons.exit.i.i479
  %call.i5.i.i482 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i459) #38
  br label %init_subr_2.exit485

init_subr_2.exit485:                              ; preds = %cond.false.i.i.i481, %if.then.i6.i.i483
  %vcell.i.i.i484 = getelementptr inbounds %struct.obj, ptr %call.i.i.i459, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i474, ptr %vcell.i.i.i484, align 8, !tbaa !9
  %call.i.i.i486 = tail call ptr @gen_intern(ptr noundef nonnull @.str.169, i64 noundef 0)
  %171 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i487 = icmp eq i64 %171, 1
  br i1 %cmp.i.i.i487, label %if.then.i.i.i489, label %if.else.i.i.i495

if.then.i.i.i489:                                 ; preds = %init_subr_2.exit485
  %172 = load ptr, ptr @heap, align 8, !tbaa !5
  %173 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i488 = icmp ult ptr %172, %173
  br i1 %cmp1.not.i.i.i488, label %if.end.i.i.i493, label %if.then2.i.i.i491

if.then2.i.i.i491:                                ; preds = %if.then.i.i.i489
  %call.i.i.i.i490 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i493

if.end.i.i.i493:                                  ; preds = %if.then2.i.i.i491, %if.then.i.i.i489
  %add.ptr.i.i.i492 = getelementptr inbounds %struct.obj, ptr %172, i64 1
  store ptr %add.ptr.i.i.i492, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i506

if.else.i.i.i495:                                 ; preds = %init_subr_2.exit485
  %174 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i494 = icmp eq ptr %174, null
  br i1 %cmp3.i.i.i494, label %if.then4.i.i.i497, label %if.end5.i.i.i500

if.then4.i.i.i497:                                ; preds = %if.else.i.i.i495
  tail call void @gc_for_newcell()
  %.pre.i.i.i496 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i500

if.end5.i.i.i500:                                 ; preds = %if.then4.i.i.i497, %if.else.i.i.i495
  %175 = phi ptr [ %.pre.i.i.i496, %if.then4.i.i.i497 ], [ %174, %if.else.i.i.i495 ]
  %cdr.i.i.i498 = getelementptr inbounds %struct.obj, ptr %175, i64 0, i32 2, i32 0, i32 1
  %176 = load ptr, ptr %cdr.i.i.i498, align 8, !tbaa !9
  store ptr %176, ptr @freelist, align 8, !tbaa !5
  %177 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i499 = add nsw i64 %177, 1
  store i64 %inc.i.i.i499, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i506

subrcons.exit.i.i506:                             ; preds = %if.end5.i.i.i500, %if.end.i.i.i493
  %z.0.i.i.i501 = phi ptr [ %172, %if.end.i.i.i493 ], [ %175, %if.end5.i.i.i500 ]
  store i16 0, ptr %z.0.i.i.i501, align 8, !tbaa !35
  %type7.i.i.i502 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i501, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i502, align 2, !tbaa !14
  %storage_as8.i.i.i503 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i501, i64 0, i32 2
  store ptr @.str.169, ptr %storage_as8.i.i.i503, align 8, !tbaa !9
  %f11.i.i.i504 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i501, i64 0, i32 2, i32 0, i32 1
  store ptr @eql, ptr %f11.i.i.i504, align 8, !tbaa !9
  %cmp.i4.i.i505 = icmp eq ptr %call.i.i.i486, null
  br i1 %cmp.i4.i.i505, label %if.then.i6.i.i510, label %cond.false.i.i.i508

cond.false.i.i.i508:                              ; preds = %subrcons.exit.i.i506
  %type.i.i.i507 = getelementptr inbounds %struct.obj, ptr %call.i.i.i486, i64 0, i32 1
  %178 = load i16, ptr %type.i.i.i507, align 2, !tbaa !14
  %179 = icmp eq i16 %178, 3
  br i1 %179, label %init_subr_2.exit512, label %if.then.i6.i.i510

if.then.i6.i.i510:                                ; preds = %cond.false.i.i.i508, %subrcons.exit.i.i506
  %call.i5.i.i509 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i486) #38
  br label %init_subr_2.exit512

init_subr_2.exit512:                              ; preds = %cond.false.i.i.i508, %if.then.i6.i.i510
  %vcell.i.i.i511 = getelementptr inbounds %struct.obj, ptr %call.i.i.i486, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i501, ptr %vcell.i.i.i511, align 8, !tbaa !9
  %call.i.i.i513 = tail call ptr @gen_intern(ptr noundef nonnull @.str.170, i64 noundef 0)
  %180 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i514 = icmp eq i64 %180, 1
  br i1 %cmp.i.i.i514, label %if.then.i.i.i516, label %if.else.i.i.i522

if.then.i.i.i516:                                 ; preds = %init_subr_2.exit512
  %181 = load ptr, ptr @heap, align 8, !tbaa !5
  %182 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i515 = icmp ult ptr %181, %182
  br i1 %cmp1.not.i.i.i515, label %if.end.i.i.i520, label %if.then2.i.i.i518

if.then2.i.i.i518:                                ; preds = %if.then.i.i.i516
  %call.i.i.i.i517 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i520

if.end.i.i.i520:                                  ; preds = %if.then2.i.i.i518, %if.then.i.i.i516
  %add.ptr.i.i.i519 = getelementptr inbounds %struct.obj, ptr %181, i64 1
  store ptr %add.ptr.i.i.i519, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i533

if.else.i.i.i522:                                 ; preds = %init_subr_2.exit512
  %183 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i521 = icmp eq ptr %183, null
  br i1 %cmp3.i.i.i521, label %if.then4.i.i.i524, label %if.end5.i.i.i527

if.then4.i.i.i524:                                ; preds = %if.else.i.i.i522
  tail call void @gc_for_newcell()
  %.pre.i.i.i523 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i527

if.end5.i.i.i527:                                 ; preds = %if.then4.i.i.i524, %if.else.i.i.i522
  %184 = phi ptr [ %.pre.i.i.i523, %if.then4.i.i.i524 ], [ %183, %if.else.i.i.i522 ]
  %cdr.i.i.i525 = getelementptr inbounds %struct.obj, ptr %184, i64 0, i32 2, i32 0, i32 1
  %185 = load ptr, ptr %cdr.i.i.i525, align 8, !tbaa !9
  store ptr %185, ptr @freelist, align 8, !tbaa !5
  %186 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i526 = add nsw i64 %186, 1
  store i64 %inc.i.i.i526, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i533

subrcons.exit.i.i533:                             ; preds = %if.end5.i.i.i527, %if.end.i.i.i520
  %z.0.i.i.i528 = phi ptr [ %181, %if.end.i.i.i520 ], [ %184, %if.end5.i.i.i527 ]
  store i16 0, ptr %z.0.i.i.i528, align 8, !tbaa !35
  %type7.i.i.i529 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i528, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i529, align 2, !tbaa !14
  %storage_as8.i.i.i530 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i528, i64 0, i32 2
  store ptr @.str.170, ptr %storage_as8.i.i.i530, align 8, !tbaa !9
  %f11.i.i.i531 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i528, i64 0, i32 2, i32 0, i32 1
  store ptr @assq, ptr %f11.i.i.i531, align 8, !tbaa !9
  %cmp.i4.i.i532 = icmp eq ptr %call.i.i.i513, null
  br i1 %cmp.i4.i.i532, label %if.then.i6.i.i537, label %cond.false.i.i.i535

cond.false.i.i.i535:                              ; preds = %subrcons.exit.i.i533
  %type.i.i.i534 = getelementptr inbounds %struct.obj, ptr %call.i.i.i513, i64 0, i32 1
  %187 = load i16, ptr %type.i.i.i534, align 2, !tbaa !14
  %188 = icmp eq i16 %187, 3
  br i1 %188, label %init_subr_2.exit539, label %if.then.i6.i.i537

if.then.i6.i.i537:                                ; preds = %cond.false.i.i.i535, %subrcons.exit.i.i533
  %call.i5.i.i536 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i513) #38
  br label %init_subr_2.exit539

init_subr_2.exit539:                              ; preds = %cond.false.i.i.i535, %if.then.i6.i.i537
  %vcell.i.i.i538 = getelementptr inbounds %struct.obj, ptr %call.i.i.i513, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i528, ptr %vcell.i.i.i538, align 8, !tbaa !9
  %call.i.i.i540 = tail call ptr @gen_intern(ptr noundef nonnull @.str.171, i64 noundef 0)
  %189 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i541 = icmp eq i64 %189, 1
  br i1 %cmp.i.i.i541, label %if.then.i.i.i543, label %if.else.i.i.i549

if.then.i.i.i543:                                 ; preds = %init_subr_2.exit539
  %190 = load ptr, ptr @heap, align 8, !tbaa !5
  %191 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i542 = icmp ult ptr %190, %191
  br i1 %cmp1.not.i.i.i542, label %if.end.i.i.i547, label %if.then2.i.i.i545

if.then2.i.i.i545:                                ; preds = %if.then.i.i.i543
  %call.i.i.i.i544 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i547

if.end.i.i.i547:                                  ; preds = %if.then2.i.i.i545, %if.then.i.i.i543
  %add.ptr.i.i.i546 = getelementptr inbounds %struct.obj, ptr %190, i64 1
  store ptr %add.ptr.i.i.i546, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i560

if.else.i.i.i549:                                 ; preds = %init_subr_2.exit539
  %192 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i548 = icmp eq ptr %192, null
  br i1 %cmp3.i.i.i548, label %if.then4.i.i.i551, label %if.end5.i.i.i554

if.then4.i.i.i551:                                ; preds = %if.else.i.i.i549
  tail call void @gc_for_newcell()
  %.pre.i.i.i550 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i554

if.end5.i.i.i554:                                 ; preds = %if.then4.i.i.i551, %if.else.i.i.i549
  %193 = phi ptr [ %.pre.i.i.i550, %if.then4.i.i.i551 ], [ %192, %if.else.i.i.i549 ]
  %cdr.i.i.i552 = getelementptr inbounds %struct.obj, ptr %193, i64 0, i32 2, i32 0, i32 1
  %194 = load ptr, ptr %cdr.i.i.i552, align 8, !tbaa !9
  store ptr %194, ptr @freelist, align 8, !tbaa !5
  %195 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i553 = add nsw i64 %195, 1
  store i64 %inc.i.i.i553, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i560

subrcons.exit.i.i560:                             ; preds = %if.end5.i.i.i554, %if.end.i.i.i547
  %z.0.i.i.i555 = phi ptr [ %190, %if.end.i.i.i547 ], [ %193, %if.end5.i.i.i554 ]
  store i16 0, ptr %z.0.i.i.i555, align 8, !tbaa !35
  %type7.i.i.i556 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i555, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i556, align 2, !tbaa !14
  %storage_as8.i.i.i557 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i555, i64 0, i32 2
  store ptr @.str.171, ptr %storage_as8.i.i.i557, align 8, !tbaa !9
  %f11.i.i.i558 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i555, i64 0, i32 2, i32 0, i32 1
  store ptr @delq, ptr %f11.i.i.i558, align 8, !tbaa !9
  %cmp.i4.i.i559 = icmp eq ptr %call.i.i.i540, null
  br i1 %cmp.i4.i.i559, label %if.then.i6.i.i564, label %cond.false.i.i.i562

cond.false.i.i.i562:                              ; preds = %subrcons.exit.i.i560
  %type.i.i.i561 = getelementptr inbounds %struct.obj, ptr %call.i.i.i540, i64 0, i32 1
  %196 = load i16, ptr %type.i.i.i561, align 2, !tbaa !14
  %197 = icmp eq i16 %196, 3
  br i1 %197, label %init_subr_2.exit566, label %if.then.i6.i.i564

if.then.i6.i.i564:                                ; preds = %cond.false.i.i.i562, %subrcons.exit.i.i560
  %call.i5.i.i563 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i540) #38
  br label %init_subr_2.exit566

init_subr_2.exit566:                              ; preds = %cond.false.i.i.i562, %if.then.i6.i.i564
  %vcell.i.i.i565 = getelementptr inbounds %struct.obj, ptr %call.i.i.i540, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i555, ptr %vcell.i.i.i565, align 8, !tbaa !9
  %call.i.i.i567 = tail call ptr @gen_intern(ptr noundef nonnull @.str.172, i64 noundef 0)
  %198 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i568 = icmp eq i64 %198, 1
  br i1 %cmp.i.i.i568, label %if.then.i.i.i570, label %if.else.i.i.i576

if.then.i.i.i570:                                 ; preds = %init_subr_2.exit566
  %199 = load ptr, ptr @heap, align 8, !tbaa !5
  %200 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i569 = icmp ult ptr %199, %200
  br i1 %cmp1.not.i.i.i569, label %if.end.i.i.i574, label %if.then2.i.i.i572

if.then2.i.i.i572:                                ; preds = %if.then.i.i.i570
  %call.i.i.i.i571 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i574

if.end.i.i.i574:                                  ; preds = %if.then2.i.i.i572, %if.then.i.i.i570
  %add.ptr.i.i.i573 = getelementptr inbounds %struct.obj, ptr %199, i64 1
  store ptr %add.ptr.i.i.i573, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i587

if.else.i.i.i576:                                 ; preds = %init_subr_2.exit566
  %201 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i575 = icmp eq ptr %201, null
  br i1 %cmp3.i.i.i575, label %if.then4.i.i.i578, label %if.end5.i.i.i581

if.then4.i.i.i578:                                ; preds = %if.else.i.i.i576
  tail call void @gc_for_newcell()
  %.pre.i.i.i577 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i581

if.end5.i.i.i581:                                 ; preds = %if.then4.i.i.i578, %if.else.i.i.i576
  %202 = phi ptr [ %.pre.i.i.i577, %if.then4.i.i.i578 ], [ %201, %if.else.i.i.i576 ]
  %cdr.i.i.i579 = getelementptr inbounds %struct.obj, ptr %202, i64 0, i32 2, i32 0, i32 1
  %203 = load ptr, ptr %cdr.i.i.i579, align 8, !tbaa !9
  store ptr %203, ptr @freelist, align 8, !tbaa !5
  %204 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i580 = add nsw i64 %204, 1
  store i64 %inc.i.i.i580, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i587

subrcons.exit.i.i587:                             ; preds = %if.end5.i.i.i581, %if.end.i.i.i574
  %z.0.i.i.i582 = phi ptr [ %199, %if.end.i.i.i574 ], [ %202, %if.end5.i.i.i581 ]
  store i16 0, ptr %z.0.i.i.i582, align 8, !tbaa !35
  %type7.i.i.i583 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i582, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i583, align 2, !tbaa !14
  %storage_as8.i.i.i584 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i582, i64 0, i32 2
  store ptr @.str.172, ptr %storage_as8.i.i.i584, align 8, !tbaa !9
  %f11.i.i.i585 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i582, i64 0, i32 2, i32 0, i32 1
  store ptr @lread, ptr %f11.i.i.i585, align 8, !tbaa !9
  %cmp.i4.i.i586 = icmp eq ptr %call.i.i.i567, null
  br i1 %cmp.i4.i.i586, label %if.then.i6.i.i591, label %cond.false.i.i.i589

cond.false.i.i.i589:                              ; preds = %subrcons.exit.i.i587
  %type.i.i.i588 = getelementptr inbounds %struct.obj, ptr %call.i.i.i567, i64 0, i32 1
  %205 = load i16, ptr %type.i.i.i588, align 2, !tbaa !14
  %206 = icmp eq i16 %205, 3
  br i1 %206, label %init_subr_1.exit593, label %if.then.i6.i.i591

if.then.i6.i.i591:                                ; preds = %cond.false.i.i.i589, %subrcons.exit.i.i587
  %call.i5.i.i590 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i567) #38
  br label %init_subr_1.exit593

init_subr_1.exit593:                              ; preds = %cond.false.i.i.i589, %if.then.i6.i.i591
  %vcell.i.i.i592 = getelementptr inbounds %struct.obj, ptr %call.i.i.i567, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i582, ptr %vcell.i.i.i592, align 8, !tbaa !9
  %call.i.i.i594 = tail call ptr @gen_intern(ptr noundef nonnull @.str.173, i64 noundef 0)
  %207 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i595 = icmp eq i64 %207, 1
  br i1 %cmp.i.i.i595, label %if.then.i.i.i597, label %if.else.i.i.i603

if.then.i.i.i597:                                 ; preds = %init_subr_1.exit593
  %208 = load ptr, ptr @heap, align 8, !tbaa !5
  %209 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i596 = icmp ult ptr %208, %209
  br i1 %cmp1.not.i.i.i596, label %if.end.i.i.i601, label %if.then2.i.i.i599

if.then2.i.i.i599:                                ; preds = %if.then.i.i.i597
  %call.i.i.i.i598 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i601

if.end.i.i.i601:                                  ; preds = %if.then2.i.i.i599, %if.then.i.i.i597
  %add.ptr.i.i.i600 = getelementptr inbounds %struct.obj, ptr %208, i64 1
  store ptr %add.ptr.i.i.i600, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i614

if.else.i.i.i603:                                 ; preds = %init_subr_1.exit593
  %210 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i602 = icmp eq ptr %210, null
  br i1 %cmp3.i.i.i602, label %if.then4.i.i.i605, label %if.end5.i.i.i608

if.then4.i.i.i605:                                ; preds = %if.else.i.i.i603
  tail call void @gc_for_newcell()
  %.pre.i.i.i604 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i608

if.end5.i.i.i608:                                 ; preds = %if.then4.i.i.i605, %if.else.i.i.i603
  %211 = phi ptr [ %.pre.i.i.i604, %if.then4.i.i.i605 ], [ %210, %if.else.i.i.i603 ]
  %cdr.i.i.i606 = getelementptr inbounds %struct.obj, ptr %211, i64 0, i32 2, i32 0, i32 1
  %212 = load ptr, ptr %cdr.i.i.i606, align 8, !tbaa !9
  store ptr %212, ptr @freelist, align 8, !tbaa !5
  %213 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i607 = add nsw i64 %213, 1
  store i64 %inc.i.i.i607, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i614

subrcons.exit.i.i614:                             ; preds = %if.end5.i.i.i608, %if.end.i.i.i601
  %z.0.i.i.i609 = phi ptr [ %208, %if.end.i.i.i601 ], [ %211, %if.end5.i.i.i608 ]
  store i16 0, ptr %z.0.i.i.i609, align 8, !tbaa !35
  %type7.i.i.i610 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i609, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i610, align 2, !tbaa !14
  %storage_as8.i.i.i611 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i609, i64 0, i32 2
  store ptr @.str.173, ptr %storage_as8.i.i.i611, align 8, !tbaa !9
  %f11.i.i.i612 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i609, i64 0, i32 2, i32 0, i32 1
  store ptr @parser_read, ptr %f11.i.i.i612, align 8, !tbaa !9
  %cmp.i4.i.i613 = icmp eq ptr %call.i.i.i594, null
  br i1 %cmp.i4.i.i613, label %if.then.i6.i.i618, label %cond.false.i.i.i616

cond.false.i.i.i616:                              ; preds = %subrcons.exit.i.i614
  %type.i.i.i615 = getelementptr inbounds %struct.obj, ptr %call.i.i.i594, i64 0, i32 1
  %214 = load i16, ptr %type.i.i.i615, align 2, !tbaa !14
  %215 = icmp eq i16 %214, 3
  br i1 %215, label %init_subr_1.exit620, label %if.then.i6.i.i618

if.then.i6.i.i618:                                ; preds = %cond.false.i.i.i616, %subrcons.exit.i.i614
  %call.i5.i.i617 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i594) #38
  br label %init_subr_1.exit620

init_subr_1.exit620:                              ; preds = %cond.false.i.i.i616, %if.then.i6.i.i618
  %vcell.i.i.i619 = getelementptr inbounds %struct.obj, ptr %call.i.i.i594, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i609, ptr %vcell.i.i.i619, align 8, !tbaa !9
  %call.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.174, i64 noundef 0)
  %216 = load ptr, ptr @sym_t, align 8, !tbaa !5
  %cmp.i = icmp eq ptr %call.i, null
  br i1 %cmp.i, label %if.then.i, label %cond.false.i

cond.false.i:                                     ; preds = %init_subr_1.exit620
  %type.i = getelementptr inbounds %struct.obj, ptr %call.i, i64 0, i32 1
  %217 = load i16, ptr %type.i, align 2, !tbaa !14
  %218 = icmp eq i16 %217, 3
  br i1 %218, label %setvar.exit, label %if.then.i

if.then.i:                                        ; preds = %cond.false.i, %init_subr_1.exit620
  %call.i621 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i) #38
  br label %setvar.exit

setvar.exit:                                      ; preds = %cond.false.i, %if.then.i
  %vcell.i = getelementptr inbounds %struct.obj, ptr %call.i, i64 0, i32 2, i32 0, i32 1
  store ptr %216, ptr %vcell.i, align 8, !tbaa !9
  %call.i.i.i622 = tail call ptr @gen_intern(ptr noundef nonnull @.str.175, i64 noundef 0)
  %219 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i623 = icmp eq i64 %219, 1
  br i1 %cmp.i.i.i623, label %if.then.i.i.i625, label %if.else.i.i.i631

if.then.i.i.i625:                                 ; preds = %setvar.exit
  %220 = load ptr, ptr @heap, align 8, !tbaa !5
  %221 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i624 = icmp ult ptr %220, %221
  br i1 %cmp1.not.i.i.i624, label %if.end.i.i.i629, label %if.then2.i.i.i627

if.then2.i.i.i627:                                ; preds = %if.then.i.i.i625
  %call.i.i.i.i626 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i629

if.end.i.i.i629:                                  ; preds = %if.then2.i.i.i627, %if.then.i.i.i625
  %add.ptr.i.i.i628 = getelementptr inbounds %struct.obj, ptr %220, i64 1
  store ptr %add.ptr.i.i.i628, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i642

if.else.i.i.i631:                                 ; preds = %setvar.exit
  %222 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i630 = icmp eq ptr %222, null
  br i1 %cmp3.i.i.i630, label %if.then4.i.i.i633, label %if.end5.i.i.i636

if.then4.i.i.i633:                                ; preds = %if.else.i.i.i631
  tail call void @gc_for_newcell()
  %.pre.i.i.i632 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i636

if.end5.i.i.i636:                                 ; preds = %if.then4.i.i.i633, %if.else.i.i.i631
  %223 = phi ptr [ %.pre.i.i.i632, %if.then4.i.i.i633 ], [ %222, %if.else.i.i.i631 ]
  %cdr.i.i.i634 = getelementptr inbounds %struct.obj, ptr %223, i64 0, i32 2, i32 0, i32 1
  %224 = load ptr, ptr %cdr.i.i.i634, align 8, !tbaa !9
  store ptr %224, ptr @freelist, align 8, !tbaa !5
  %225 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i635 = add nsw i64 %225, 1
  store i64 %inc.i.i.i635, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i642

subrcons.exit.i.i642:                             ; preds = %if.end5.i.i.i636, %if.end.i.i.i629
  %z.0.i.i.i637 = phi ptr [ %220, %if.end.i.i.i629 ], [ %223, %if.end5.i.i.i636 ]
  store i16 0, ptr %z.0.i.i.i637, align 8, !tbaa !35
  %type7.i.i.i638 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i637, i64 0, i32 1
  store i16 4, ptr %type7.i.i.i638, align 2, !tbaa !14
  %storage_as8.i.i.i639 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i637, i64 0, i32 2
  store ptr @.str.175, ptr %storage_as8.i.i.i639, align 8, !tbaa !9
  %f11.i.i.i640 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i637, i64 0, i32 2, i32 0, i32 1
  store ptr @get_eof_val, ptr %f11.i.i.i640, align 8, !tbaa !9
  %cmp.i4.i.i641 = icmp eq ptr %call.i.i.i622, null
  br i1 %cmp.i4.i.i641, label %if.then.i6.i.i646, label %cond.false.i.i.i644

cond.false.i.i.i644:                              ; preds = %subrcons.exit.i.i642
  %type.i.i.i643 = getelementptr inbounds %struct.obj, ptr %call.i.i.i622, i64 0, i32 1
  %226 = load i16, ptr %type.i.i.i643, align 2, !tbaa !14
  %227 = icmp eq i16 %226, 3
  br i1 %227, label %init_subr_0.exit, label %if.then.i6.i.i646

if.then.i6.i.i646:                                ; preds = %cond.false.i.i.i644, %subrcons.exit.i.i642
  %call.i5.i.i645 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i622) #38
  br label %init_subr_0.exit

init_subr_0.exit:                                 ; preds = %cond.false.i.i.i644, %if.then.i6.i.i646
  %vcell.i.i.i647 = getelementptr inbounds %struct.obj, ptr %call.i.i.i622, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i637, ptr %vcell.i.i.i647, align 8, !tbaa !9
  %call.i.i.i648 = tail call ptr @gen_intern(ptr noundef nonnull @.str.176, i64 noundef 0)
  %228 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i649 = icmp eq i64 %228, 1
  br i1 %cmp.i.i.i649, label %if.then.i.i.i651, label %if.else.i.i.i657

if.then.i.i.i651:                                 ; preds = %init_subr_0.exit
  %229 = load ptr, ptr @heap, align 8, !tbaa !5
  %230 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i650 = icmp ult ptr %229, %230
  br i1 %cmp1.not.i.i.i650, label %if.end.i.i.i655, label %if.then2.i.i.i653

if.then2.i.i.i653:                                ; preds = %if.then.i.i.i651
  %call.i.i.i.i652 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i655

if.end.i.i.i655:                                  ; preds = %if.then2.i.i.i653, %if.then.i.i.i651
  %add.ptr.i.i.i654 = getelementptr inbounds %struct.obj, ptr %229, i64 1
  store ptr %add.ptr.i.i.i654, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i668

if.else.i.i.i657:                                 ; preds = %init_subr_0.exit
  %231 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i656 = icmp eq ptr %231, null
  br i1 %cmp3.i.i.i656, label %if.then4.i.i.i659, label %if.end5.i.i.i662

if.then4.i.i.i659:                                ; preds = %if.else.i.i.i657
  tail call void @gc_for_newcell()
  %.pre.i.i.i658 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i662

if.end5.i.i.i662:                                 ; preds = %if.then4.i.i.i659, %if.else.i.i.i657
  %232 = phi ptr [ %.pre.i.i.i658, %if.then4.i.i.i659 ], [ %231, %if.else.i.i.i657 ]
  %cdr.i.i.i660 = getelementptr inbounds %struct.obj, ptr %232, i64 0, i32 2, i32 0, i32 1
  %233 = load ptr, ptr %cdr.i.i.i660, align 8, !tbaa !9
  store ptr %233, ptr @freelist, align 8, !tbaa !5
  %234 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i661 = add nsw i64 %234, 1
  store i64 %inc.i.i.i661, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i668

subrcons.exit.i.i668:                             ; preds = %if.end5.i.i.i662, %if.end.i.i.i655
  %z.0.i.i.i663 = phi ptr [ %229, %if.end.i.i.i655 ], [ %232, %if.end5.i.i.i662 ]
  store i16 0, ptr %z.0.i.i.i663, align 8, !tbaa !35
  %type7.i.i.i664 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i663, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i664, align 2, !tbaa !14
  %storage_as8.i.i.i665 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i663, i64 0, i32 2
  store ptr @.str.176, ptr %storage_as8.i.i.i665, align 8, !tbaa !9
  %f11.i.i.i666 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i663, i64 0, i32 2, i32 0, i32 1
  store ptr @lprint, ptr %f11.i.i.i666, align 8, !tbaa !9
  %cmp.i4.i.i667 = icmp eq ptr %call.i.i.i648, null
  br i1 %cmp.i4.i.i667, label %if.then.i6.i.i672, label %cond.false.i.i.i670

cond.false.i.i.i670:                              ; preds = %subrcons.exit.i.i668
  %type.i.i.i669 = getelementptr inbounds %struct.obj, ptr %call.i.i.i648, i64 0, i32 1
  %235 = load i16, ptr %type.i.i.i669, align 2, !tbaa !14
  %236 = icmp eq i16 %235, 3
  br i1 %236, label %init_subr_2.exit674, label %if.then.i6.i.i672

if.then.i6.i.i672:                                ; preds = %cond.false.i.i.i670, %subrcons.exit.i.i668
  %call.i5.i.i671 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i648) #38
  br label %init_subr_2.exit674

init_subr_2.exit674:                              ; preds = %cond.false.i.i.i670, %if.then.i6.i.i672
  %vcell.i.i.i673 = getelementptr inbounds %struct.obj, ptr %call.i.i.i648, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i663, ptr %vcell.i.i.i673, align 8, !tbaa !9
  %call.i.i.i675 = tail call ptr @gen_intern(ptr noundef nonnull @.str.177, i64 noundef 0)
  %237 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i676 = icmp eq i64 %237, 1
  br i1 %cmp.i.i.i676, label %if.then.i.i.i678, label %if.else.i.i.i684

if.then.i.i.i678:                                 ; preds = %init_subr_2.exit674
  %238 = load ptr, ptr @heap, align 8, !tbaa !5
  %239 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i677 = icmp ult ptr %238, %239
  br i1 %cmp1.not.i.i.i677, label %if.end.i.i.i682, label %if.then2.i.i.i680

if.then2.i.i.i680:                                ; preds = %if.then.i.i.i678
  %call.i.i.i.i679 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i682

if.end.i.i.i682:                                  ; preds = %if.then2.i.i.i680, %if.then.i.i.i678
  %add.ptr.i.i.i681 = getelementptr inbounds %struct.obj, ptr %238, i64 1
  store ptr %add.ptr.i.i.i681, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i695

if.else.i.i.i684:                                 ; preds = %init_subr_2.exit674
  %240 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i683 = icmp eq ptr %240, null
  br i1 %cmp3.i.i.i683, label %if.then4.i.i.i686, label %if.end5.i.i.i689

if.then4.i.i.i686:                                ; preds = %if.else.i.i.i684
  tail call void @gc_for_newcell()
  %.pre.i.i.i685 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i689

if.end5.i.i.i689:                                 ; preds = %if.then4.i.i.i686, %if.else.i.i.i684
  %241 = phi ptr [ %.pre.i.i.i685, %if.then4.i.i.i686 ], [ %240, %if.else.i.i.i684 ]
  %cdr.i.i.i687 = getelementptr inbounds %struct.obj, ptr %241, i64 0, i32 2, i32 0, i32 1
  %242 = load ptr, ptr %cdr.i.i.i687, align 8, !tbaa !9
  store ptr %242, ptr @freelist, align 8, !tbaa !5
  %243 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i688 = add nsw i64 %243, 1
  store i64 %inc.i.i.i688, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i695

subrcons.exit.i.i695:                             ; preds = %if.end5.i.i.i689, %if.end.i.i.i682
  %z.0.i.i.i690 = phi ptr [ %238, %if.end.i.i.i682 ], [ %241, %if.end5.i.i.i689 ]
  store i16 0, ptr %z.0.i.i.i690, align 8, !tbaa !35
  %type7.i.i.i691 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i690, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i691, align 2, !tbaa !14
  %storage_as8.i.i.i692 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i690, i64 0, i32 2
  store ptr @.str.177, ptr %storage_as8.i.i.i692, align 8, !tbaa !9
  %f11.i.i.i693 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i690, i64 0, i32 2, i32 0, i32 1
  store ptr @lprin1, ptr %f11.i.i.i693, align 8, !tbaa !9
  %cmp.i4.i.i694 = icmp eq ptr %call.i.i.i675, null
  br i1 %cmp.i4.i.i694, label %if.then.i6.i.i699, label %cond.false.i.i.i697

cond.false.i.i.i697:                              ; preds = %subrcons.exit.i.i695
  %type.i.i.i696 = getelementptr inbounds %struct.obj, ptr %call.i.i.i675, i64 0, i32 1
  %244 = load i16, ptr %type.i.i.i696, align 2, !tbaa !14
  %245 = icmp eq i16 %244, 3
  br i1 %245, label %init_subr_2.exit701, label %if.then.i6.i.i699

if.then.i6.i.i699:                                ; preds = %cond.false.i.i.i697, %subrcons.exit.i.i695
  %call.i5.i.i698 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i675) #38
  br label %init_subr_2.exit701

init_subr_2.exit701:                              ; preds = %cond.false.i.i.i697, %if.then.i6.i.i699
  %vcell.i.i.i700 = getelementptr inbounds %struct.obj, ptr %call.i.i.i675, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i690, ptr %vcell.i.i.i700, align 8, !tbaa !9
  %call.i.i.i702 = tail call ptr @gen_intern(ptr noundef nonnull @.str.178, i64 noundef 0)
  %246 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i703 = icmp eq i64 %246, 1
  br i1 %cmp.i.i.i703, label %if.then.i.i.i705, label %if.else.i.i.i711

if.then.i.i.i705:                                 ; preds = %init_subr_2.exit701
  %247 = load ptr, ptr @heap, align 8, !tbaa !5
  %248 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i704 = icmp ult ptr %247, %248
  br i1 %cmp1.not.i.i.i704, label %if.end.i.i.i709, label %if.then2.i.i.i707

if.then2.i.i.i707:                                ; preds = %if.then.i.i.i705
  %call.i.i.i.i706 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i709

if.end.i.i.i709:                                  ; preds = %if.then2.i.i.i707, %if.then.i.i.i705
  %add.ptr.i.i.i708 = getelementptr inbounds %struct.obj, ptr %247, i64 1
  store ptr %add.ptr.i.i.i708, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i722

if.else.i.i.i711:                                 ; preds = %init_subr_2.exit701
  %249 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i710 = icmp eq ptr %249, null
  br i1 %cmp3.i.i.i710, label %if.then4.i.i.i713, label %if.end5.i.i.i716

if.then4.i.i.i713:                                ; preds = %if.else.i.i.i711
  tail call void @gc_for_newcell()
  %.pre.i.i.i712 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i716

if.end5.i.i.i716:                                 ; preds = %if.then4.i.i.i713, %if.else.i.i.i711
  %250 = phi ptr [ %.pre.i.i.i712, %if.then4.i.i.i713 ], [ %249, %if.else.i.i.i711 ]
  %cdr.i.i.i714 = getelementptr inbounds %struct.obj, ptr %250, i64 0, i32 2, i32 0, i32 1
  %251 = load ptr, ptr %cdr.i.i.i714, align 8, !tbaa !9
  store ptr %251, ptr @freelist, align 8, !tbaa !5
  %252 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i715 = add nsw i64 %252, 1
  store i64 %inc.i.i.i715, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i722

subrcons.exit.i.i722:                             ; preds = %if.end5.i.i.i716, %if.end.i.i.i709
  %z.0.i.i.i717 = phi ptr [ %247, %if.end.i.i.i709 ], [ %250, %if.end5.i.i.i716 ]
  store i16 0, ptr %z.0.i.i.i717, align 8, !tbaa !35
  %type7.i.i.i718 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i717, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i718, align 2, !tbaa !14
  %storage_as8.i.i.i719 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i717, i64 0, i32 2
  store ptr @.str.178, ptr %storage_as8.i.i.i719, align 8, !tbaa !9
  %f11.i.i.i720 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i717, i64 0, i32 2, i32 0, i32 1
  store ptr @leval, ptr %f11.i.i.i720, align 8, !tbaa !9
  %cmp.i4.i.i721 = icmp eq ptr %call.i.i.i702, null
  br i1 %cmp.i4.i.i721, label %if.then.i6.i.i726, label %cond.false.i.i.i724

cond.false.i.i.i724:                              ; preds = %subrcons.exit.i.i722
  %type.i.i.i723 = getelementptr inbounds %struct.obj, ptr %call.i.i.i702, i64 0, i32 1
  %253 = load i16, ptr %type.i.i.i723, align 2, !tbaa !14
  %254 = icmp eq i16 %253, 3
  br i1 %254, label %init_subr_2.exit728, label %if.then.i6.i.i726

if.then.i6.i.i726:                                ; preds = %cond.false.i.i.i724, %subrcons.exit.i.i722
  %call.i5.i.i725 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i702) #38
  br label %init_subr_2.exit728

init_subr_2.exit728:                              ; preds = %cond.false.i.i.i724, %if.then.i6.i.i726
  %vcell.i.i.i727 = getelementptr inbounds %struct.obj, ptr %call.i.i.i702, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i717, ptr %vcell.i.i.i727, align 8, !tbaa !9
  %call.i.i.i729 = tail call ptr @gen_intern(ptr noundef nonnull @.str.179, i64 noundef 0)
  %255 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i730 = icmp eq i64 %255, 1
  br i1 %cmp.i.i.i730, label %if.then.i.i.i732, label %if.else.i.i.i738

if.then.i.i.i732:                                 ; preds = %init_subr_2.exit728
  %256 = load ptr, ptr @heap, align 8, !tbaa !5
  %257 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i731 = icmp ult ptr %256, %257
  br i1 %cmp1.not.i.i.i731, label %if.end.i.i.i736, label %if.then2.i.i.i734

if.then2.i.i.i734:                                ; preds = %if.then.i.i.i732
  %call.i.i.i.i733 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i736

if.end.i.i.i736:                                  ; preds = %if.then2.i.i.i734, %if.then.i.i.i732
  %add.ptr.i.i.i735 = getelementptr inbounds %struct.obj, ptr %256, i64 1
  store ptr %add.ptr.i.i.i735, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i749

if.else.i.i.i738:                                 ; preds = %init_subr_2.exit728
  %258 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i737 = icmp eq ptr %258, null
  br i1 %cmp3.i.i.i737, label %if.then4.i.i.i740, label %if.end5.i.i.i743

if.then4.i.i.i740:                                ; preds = %if.else.i.i.i738
  tail call void @gc_for_newcell()
  %.pre.i.i.i739 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i743

if.end5.i.i.i743:                                 ; preds = %if.then4.i.i.i740, %if.else.i.i.i738
  %259 = phi ptr [ %.pre.i.i.i739, %if.then4.i.i.i740 ], [ %258, %if.else.i.i.i738 ]
  %cdr.i.i.i741 = getelementptr inbounds %struct.obj, ptr %259, i64 0, i32 2, i32 0, i32 1
  %260 = load ptr, ptr %cdr.i.i.i741, align 8, !tbaa !9
  store ptr %260, ptr @freelist, align 8, !tbaa !5
  %261 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i742 = add nsw i64 %261, 1
  store i64 %inc.i.i.i742, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i749

subrcons.exit.i.i749:                             ; preds = %if.end5.i.i.i743, %if.end.i.i.i736
  %z.0.i.i.i744 = phi ptr [ %256, %if.end.i.i.i736 ], [ %259, %if.end5.i.i.i743 ]
  store i16 0, ptr %z.0.i.i.i744, align 8, !tbaa !35
  %type7.i.i.i745 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i744, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i745, align 2, !tbaa !14
  %storage_as8.i.i.i746 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i744, i64 0, i32 2
  store ptr @.str.179, ptr %storage_as8.i.i.i746, align 8, !tbaa !9
  %f11.i.i.i747 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i744, i64 0, i32 2, i32 0, i32 1
  store ptr @lapply, ptr %f11.i.i.i747, align 8, !tbaa !9
  %cmp.i4.i.i748 = icmp eq ptr %call.i.i.i729, null
  br i1 %cmp.i4.i.i748, label %if.then.i6.i.i753, label %cond.false.i.i.i751

cond.false.i.i.i751:                              ; preds = %subrcons.exit.i.i749
  %type.i.i.i750 = getelementptr inbounds %struct.obj, ptr %call.i.i.i729, i64 0, i32 1
  %262 = load i16, ptr %type.i.i.i750, align 2, !tbaa !14
  %263 = icmp eq i16 %262, 3
  br i1 %263, label %init_subr_2.exit755, label %if.then.i6.i.i753

if.then.i6.i.i753:                                ; preds = %cond.false.i.i.i751, %subrcons.exit.i.i749
  %call.i5.i.i752 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i729) #38
  br label %init_subr_2.exit755

init_subr_2.exit755:                              ; preds = %cond.false.i.i.i751, %if.then.i6.i.i753
  %vcell.i.i.i754 = getelementptr inbounds %struct.obj, ptr %call.i.i.i729, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i744, ptr %vcell.i.i.i754, align 8, !tbaa !9
  %call.i.i.i756 = tail call ptr @gen_intern(ptr noundef nonnull @.str.180, i64 noundef 0)
  %264 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i757 = icmp eq i64 %264, 1
  br i1 %cmp.i.i.i757, label %if.then.i.i.i759, label %if.else.i.i.i765

if.then.i.i.i759:                                 ; preds = %init_subr_2.exit755
  %265 = load ptr, ptr @heap, align 8, !tbaa !5
  %266 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i758 = icmp ult ptr %265, %266
  br i1 %cmp1.not.i.i.i758, label %if.end.i.i.i763, label %if.then2.i.i.i761

if.then2.i.i.i761:                                ; preds = %if.then.i.i.i759
  %call.i.i.i.i760 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i763

if.end.i.i.i763:                                  ; preds = %if.then2.i.i.i761, %if.then.i.i.i759
  %add.ptr.i.i.i762 = getelementptr inbounds %struct.obj, ptr %265, i64 1
  store ptr %add.ptr.i.i.i762, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i776

if.else.i.i.i765:                                 ; preds = %init_subr_2.exit755
  %267 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i764 = icmp eq ptr %267, null
  br i1 %cmp3.i.i.i764, label %if.then4.i.i.i767, label %if.end5.i.i.i770

if.then4.i.i.i767:                                ; preds = %if.else.i.i.i765
  tail call void @gc_for_newcell()
  %.pre.i.i.i766 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i770

if.end5.i.i.i770:                                 ; preds = %if.then4.i.i.i767, %if.else.i.i.i765
  %268 = phi ptr [ %.pre.i.i.i766, %if.then4.i.i.i767 ], [ %267, %if.else.i.i.i765 ]
  %cdr.i.i.i768 = getelementptr inbounds %struct.obj, ptr %268, i64 0, i32 2, i32 0, i32 1
  %269 = load ptr, ptr %cdr.i.i.i768, align 8, !tbaa !9
  store ptr %269, ptr @freelist, align 8, !tbaa !5
  %270 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i769 = add nsw i64 %270, 1
  store i64 %inc.i.i.i769, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i776

subrcons.exit.i.i776:                             ; preds = %if.end5.i.i.i770, %if.end.i.i.i763
  %z.0.i.i.i771 = phi ptr [ %265, %if.end.i.i.i763 ], [ %268, %if.end5.i.i.i770 ]
  store i16 0, ptr %z.0.i.i.i771, align 8, !tbaa !35
  %type7.i.i.i772 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i771, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i772, align 2, !tbaa !14
  %storage_as8.i.i.i773 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i771, i64 0, i32 2
  store ptr @.str.180, ptr %storage_as8.i.i.i773, align 8, !tbaa !9
  %f11.i.i.i774 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i771, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_define, ptr %f11.i.i.i774, align 8, !tbaa !9
  %cmp.i4.i.i775 = icmp eq ptr %call.i.i.i756, null
  br i1 %cmp.i4.i.i775, label %if.then.i6.i.i780, label %cond.false.i.i.i778

cond.false.i.i.i778:                              ; preds = %subrcons.exit.i.i776
  %type.i.i.i777 = getelementptr inbounds %struct.obj, ptr %call.i.i.i756, i64 0, i32 1
  %271 = load i16, ptr %type.i.i.i777, align 2, !tbaa !14
  %272 = icmp eq i16 %271, 3
  br i1 %272, label %init_fsubr.exit, label %if.then.i6.i.i780

if.then.i6.i.i780:                                ; preds = %cond.false.i.i.i778, %subrcons.exit.i.i776
  %call.i5.i.i779 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i756) #38
  br label %init_fsubr.exit

init_fsubr.exit:                                  ; preds = %cond.false.i.i.i778, %if.then.i6.i.i780
  %vcell.i.i.i781 = getelementptr inbounds %struct.obj, ptr %call.i.i.i756, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i771, ptr %vcell.i.i.i781, align 8, !tbaa !9
  %call.i.i.i782 = tail call ptr @gen_intern(ptr noundef nonnull @.str.66, i64 noundef 0)
  %273 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i783 = icmp eq i64 %273, 1
  br i1 %cmp.i.i.i783, label %if.then.i.i.i785, label %if.else.i.i.i791

if.then.i.i.i785:                                 ; preds = %init_fsubr.exit
  %274 = load ptr, ptr @heap, align 8, !tbaa !5
  %275 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i784 = icmp ult ptr %274, %275
  br i1 %cmp1.not.i.i.i784, label %if.end.i.i.i789, label %if.then2.i.i.i787

if.then2.i.i.i787:                                ; preds = %if.then.i.i.i785
  %call.i.i.i.i786 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i789

if.end.i.i.i789:                                  ; preds = %if.then2.i.i.i787, %if.then.i.i.i785
  %add.ptr.i.i.i788 = getelementptr inbounds %struct.obj, ptr %274, i64 1
  store ptr %add.ptr.i.i.i788, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i802

if.else.i.i.i791:                                 ; preds = %init_fsubr.exit
  %276 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i790 = icmp eq ptr %276, null
  br i1 %cmp3.i.i.i790, label %if.then4.i.i.i793, label %if.end5.i.i.i796

if.then4.i.i.i793:                                ; preds = %if.else.i.i.i791
  tail call void @gc_for_newcell()
  %.pre.i.i.i792 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i796

if.end5.i.i.i796:                                 ; preds = %if.then4.i.i.i793, %if.else.i.i.i791
  %277 = phi ptr [ %.pre.i.i.i792, %if.then4.i.i.i793 ], [ %276, %if.else.i.i.i791 ]
  %cdr.i.i.i794 = getelementptr inbounds %struct.obj, ptr %277, i64 0, i32 2, i32 0, i32 1
  %278 = load ptr, ptr %cdr.i.i.i794, align 8, !tbaa !9
  store ptr %278, ptr @freelist, align 8, !tbaa !5
  %279 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i795 = add nsw i64 %279, 1
  store i64 %inc.i.i.i795, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i802

subrcons.exit.i.i802:                             ; preds = %if.end5.i.i.i796, %if.end.i.i.i789
  %z.0.i.i.i797 = phi ptr [ %274, %if.end.i.i.i789 ], [ %277, %if.end5.i.i.i796 ]
  store i16 0, ptr %z.0.i.i.i797, align 8, !tbaa !35
  %type7.i.i.i798 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i797, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i798, align 2, !tbaa !14
  %storage_as8.i.i.i799 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i797, i64 0, i32 2
  store ptr @.str.66, ptr %storage_as8.i.i.i799, align 8, !tbaa !9
  %f11.i.i.i800 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i797, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_lambda, ptr %f11.i.i.i800, align 8, !tbaa !9
  %cmp.i4.i.i801 = icmp eq ptr %call.i.i.i782, null
  br i1 %cmp.i4.i.i801, label %if.then.i6.i.i806, label %cond.false.i.i.i804

cond.false.i.i.i804:                              ; preds = %subrcons.exit.i.i802
  %type.i.i.i803 = getelementptr inbounds %struct.obj, ptr %call.i.i.i782, i64 0, i32 1
  %280 = load i16, ptr %type.i.i.i803, align 2, !tbaa !14
  %281 = icmp eq i16 %280, 3
  br i1 %281, label %init_fsubr.exit808, label %if.then.i6.i.i806

if.then.i6.i.i806:                                ; preds = %cond.false.i.i.i804, %subrcons.exit.i.i802
  %call.i5.i.i805 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i782) #38
  br label %init_fsubr.exit808

init_fsubr.exit808:                               ; preds = %cond.false.i.i.i804, %if.then.i6.i.i806
  %vcell.i.i.i807 = getelementptr inbounds %struct.obj, ptr %call.i.i.i782, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i797, ptr %vcell.i.i.i807, align 8, !tbaa !9
  %call.i.i.i809 = tail call ptr @gen_intern(ptr noundef nonnull @.str.181, i64 noundef 0)
  %282 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i810 = icmp eq i64 %282, 1
  br i1 %cmp.i.i.i810, label %if.then.i.i.i812, label %if.else.i.i.i818

if.then.i.i.i812:                                 ; preds = %init_fsubr.exit808
  %283 = load ptr, ptr @heap, align 8, !tbaa !5
  %284 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i811 = icmp ult ptr %283, %284
  br i1 %cmp1.not.i.i.i811, label %if.end.i.i.i816, label %if.then2.i.i.i814

if.then2.i.i.i814:                                ; preds = %if.then.i.i.i812
  %call.i.i.i.i813 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i816

if.end.i.i.i816:                                  ; preds = %if.then2.i.i.i814, %if.then.i.i.i812
  %add.ptr.i.i.i815 = getelementptr inbounds %struct.obj, ptr %283, i64 1
  store ptr %add.ptr.i.i.i815, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i829

if.else.i.i.i818:                                 ; preds = %init_fsubr.exit808
  %285 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i817 = icmp eq ptr %285, null
  br i1 %cmp3.i.i.i817, label %if.then4.i.i.i820, label %if.end5.i.i.i823

if.then4.i.i.i820:                                ; preds = %if.else.i.i.i818
  tail call void @gc_for_newcell()
  %.pre.i.i.i819 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i823

if.end5.i.i.i823:                                 ; preds = %if.then4.i.i.i820, %if.else.i.i.i818
  %286 = phi ptr [ %.pre.i.i.i819, %if.then4.i.i.i820 ], [ %285, %if.else.i.i.i818 ]
  %cdr.i.i.i821 = getelementptr inbounds %struct.obj, ptr %286, i64 0, i32 2, i32 0, i32 1
  %287 = load ptr, ptr %cdr.i.i.i821, align 8, !tbaa !9
  store ptr %287, ptr @freelist, align 8, !tbaa !5
  %288 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i822 = add nsw i64 %288, 1
  store i64 %inc.i.i.i822, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i829

subrcons.exit.i.i829:                             ; preds = %if.end5.i.i.i823, %if.end.i.i.i816
  %z.0.i.i.i824 = phi ptr [ %283, %if.end.i.i.i816 ], [ %286, %if.end5.i.i.i823 ]
  store i16 0, ptr %z.0.i.i.i824, align 8, !tbaa !35
  %type7.i.i.i825 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i824, i64 0, i32 1
  store i16 10, ptr %type7.i.i.i825, align 2, !tbaa !14
  %storage_as8.i.i.i826 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i824, i64 0, i32 2
  store ptr @.str.181, ptr %storage_as8.i.i.i826, align 8, !tbaa !9
  %f11.i.i.i827 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i824, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_if, ptr %f11.i.i.i827, align 8, !tbaa !9
  %cmp.i4.i.i828 = icmp eq ptr %call.i.i.i809, null
  br i1 %cmp.i4.i.i828, label %if.then.i6.i.i833, label %cond.false.i.i.i831

cond.false.i.i.i831:                              ; preds = %subrcons.exit.i.i829
  %type.i.i.i830 = getelementptr inbounds %struct.obj, ptr %call.i.i.i809, i64 0, i32 1
  %289 = load i16, ptr %type.i.i.i830, align 2, !tbaa !14
  %290 = icmp eq i16 %289, 3
  br i1 %290, label %init_msubr.exit, label %if.then.i6.i.i833

if.then.i6.i.i833:                                ; preds = %cond.false.i.i.i831, %subrcons.exit.i.i829
  %call.i5.i.i832 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i809) #38
  br label %init_msubr.exit

init_msubr.exit:                                  ; preds = %cond.false.i.i.i831, %if.then.i6.i.i833
  %vcell.i.i.i834 = getelementptr inbounds %struct.obj, ptr %call.i.i.i809, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i824, ptr %vcell.i.i.i834, align 8, !tbaa !9
  %call.i.i.i835 = tail call ptr @gen_intern(ptr noundef nonnull @.str.182, i64 noundef 0)
  %291 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i836 = icmp eq i64 %291, 1
  br i1 %cmp.i.i.i836, label %if.then.i.i.i838, label %if.else.i.i.i844

if.then.i.i.i838:                                 ; preds = %init_msubr.exit
  %292 = load ptr, ptr @heap, align 8, !tbaa !5
  %293 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i837 = icmp ult ptr %292, %293
  br i1 %cmp1.not.i.i.i837, label %if.end.i.i.i842, label %if.then2.i.i.i840

if.then2.i.i.i840:                                ; preds = %if.then.i.i.i838
  %call.i.i.i.i839 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i842

if.end.i.i.i842:                                  ; preds = %if.then2.i.i.i840, %if.then.i.i.i838
  %add.ptr.i.i.i841 = getelementptr inbounds %struct.obj, ptr %292, i64 1
  store ptr %add.ptr.i.i.i841, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i855

if.else.i.i.i844:                                 ; preds = %init_msubr.exit
  %294 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i843 = icmp eq ptr %294, null
  br i1 %cmp3.i.i.i843, label %if.then4.i.i.i846, label %if.end5.i.i.i849

if.then4.i.i.i846:                                ; preds = %if.else.i.i.i844
  tail call void @gc_for_newcell()
  %.pre.i.i.i845 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i849

if.end5.i.i.i849:                                 ; preds = %if.then4.i.i.i846, %if.else.i.i.i844
  %295 = phi ptr [ %.pre.i.i.i845, %if.then4.i.i.i846 ], [ %294, %if.else.i.i.i844 ]
  %cdr.i.i.i847 = getelementptr inbounds %struct.obj, ptr %295, i64 0, i32 2, i32 0, i32 1
  %296 = load ptr, ptr %cdr.i.i.i847, align 8, !tbaa !9
  store ptr %296, ptr @freelist, align 8, !tbaa !5
  %297 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i848 = add nsw i64 %297, 1
  store i64 %inc.i.i.i848, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i855

subrcons.exit.i.i855:                             ; preds = %if.end5.i.i.i849, %if.end.i.i.i842
  %z.0.i.i.i850 = phi ptr [ %292, %if.end.i.i.i842 ], [ %295, %if.end5.i.i.i849 ]
  store i16 0, ptr %z.0.i.i.i850, align 8, !tbaa !35
  %type7.i.i.i851 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i850, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i851, align 2, !tbaa !14
  %storage_as8.i.i.i852 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i850, i64 0, i32 2
  store ptr @.str.182, ptr %storage_as8.i.i.i852, align 8, !tbaa !9
  %f11.i.i.i853 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i850, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_while, ptr %f11.i.i.i853, align 8, !tbaa !9
  %cmp.i4.i.i854 = icmp eq ptr %call.i.i.i835, null
  br i1 %cmp.i4.i.i854, label %if.then.i6.i.i859, label %cond.false.i.i.i857

cond.false.i.i.i857:                              ; preds = %subrcons.exit.i.i855
  %type.i.i.i856 = getelementptr inbounds %struct.obj, ptr %call.i.i.i835, i64 0, i32 1
  %298 = load i16, ptr %type.i.i.i856, align 2, !tbaa !14
  %299 = icmp eq i16 %298, 3
  br i1 %299, label %init_fsubr.exit861, label %if.then.i6.i.i859

if.then.i6.i.i859:                                ; preds = %cond.false.i.i.i857, %subrcons.exit.i.i855
  %call.i5.i.i858 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i835) #38
  br label %init_fsubr.exit861

init_fsubr.exit861:                               ; preds = %cond.false.i.i.i857, %if.then.i6.i.i859
  %vcell.i.i.i860 = getelementptr inbounds %struct.obj, ptr %call.i.i.i835, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i850, ptr %vcell.i.i.i860, align 8, !tbaa !9
  %call.i.i.i862 = tail call ptr @gen_intern(ptr noundef nonnull @.str.65, i64 noundef 0)
  %300 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i863 = icmp eq i64 %300, 1
  br i1 %cmp.i.i.i863, label %if.then.i.i.i865, label %if.else.i.i.i871

if.then.i.i.i865:                                 ; preds = %init_fsubr.exit861
  %301 = load ptr, ptr @heap, align 8, !tbaa !5
  %302 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i864 = icmp ult ptr %301, %302
  br i1 %cmp1.not.i.i.i864, label %if.end.i.i.i869, label %if.then2.i.i.i867

if.then2.i.i.i867:                                ; preds = %if.then.i.i.i865
  %call.i.i.i.i866 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i869

if.end.i.i.i869:                                  ; preds = %if.then2.i.i.i867, %if.then.i.i.i865
  %add.ptr.i.i.i868 = getelementptr inbounds %struct.obj, ptr %301, i64 1
  store ptr %add.ptr.i.i.i868, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i882

if.else.i.i.i871:                                 ; preds = %init_fsubr.exit861
  %303 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i870 = icmp eq ptr %303, null
  br i1 %cmp3.i.i.i870, label %if.then4.i.i.i873, label %if.end5.i.i.i876

if.then4.i.i.i873:                                ; preds = %if.else.i.i.i871
  tail call void @gc_for_newcell()
  %.pre.i.i.i872 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i876

if.end5.i.i.i876:                                 ; preds = %if.then4.i.i.i873, %if.else.i.i.i871
  %304 = phi ptr [ %.pre.i.i.i872, %if.then4.i.i.i873 ], [ %303, %if.else.i.i.i871 ]
  %cdr.i.i.i874 = getelementptr inbounds %struct.obj, ptr %304, i64 0, i32 2, i32 0, i32 1
  %305 = load ptr, ptr %cdr.i.i.i874, align 8, !tbaa !9
  store ptr %305, ptr @freelist, align 8, !tbaa !5
  %306 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i875 = add nsw i64 %306, 1
  store i64 %inc.i.i.i875, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i882

subrcons.exit.i.i882:                             ; preds = %if.end5.i.i.i876, %if.end.i.i.i869
  %z.0.i.i.i877 = phi ptr [ %301, %if.end.i.i.i869 ], [ %304, %if.end5.i.i.i876 ]
  store i16 0, ptr %z.0.i.i.i877, align 8, !tbaa !35
  %type7.i.i.i878 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i877, i64 0, i32 1
  store i16 10, ptr %type7.i.i.i878, align 2, !tbaa !14
  %storage_as8.i.i.i879 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i877, i64 0, i32 2
  store ptr @.str.65, ptr %storage_as8.i.i.i879, align 8, !tbaa !9
  %f11.i.i.i880 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i877, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_progn, ptr %f11.i.i.i880, align 8, !tbaa !9
  %cmp.i4.i.i881 = icmp eq ptr %call.i.i.i862, null
  br i1 %cmp.i4.i.i881, label %if.then.i6.i.i886, label %cond.false.i.i.i884

cond.false.i.i.i884:                              ; preds = %subrcons.exit.i.i882
  %type.i.i.i883 = getelementptr inbounds %struct.obj, ptr %call.i.i.i862, i64 0, i32 1
  %307 = load i16, ptr %type.i.i.i883, align 2, !tbaa !14
  %308 = icmp eq i16 %307, 3
  br i1 %308, label %init_msubr.exit888, label %if.then.i6.i.i886

if.then.i6.i.i886:                                ; preds = %cond.false.i.i.i884, %subrcons.exit.i.i882
  %call.i5.i.i885 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i862) #38
  br label %init_msubr.exit888

init_msubr.exit888:                               ; preds = %cond.false.i.i.i884, %if.then.i6.i.i886
  %vcell.i.i.i887 = getelementptr inbounds %struct.obj, ptr %call.i.i.i862, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i877, ptr %vcell.i.i.i887, align 8, !tbaa !9
  %call.i.i.i889 = tail call ptr @gen_intern(ptr noundef nonnull @.str.95, i64 noundef 0)
  %309 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i890 = icmp eq i64 %309, 1
  br i1 %cmp.i.i.i890, label %if.then.i.i.i892, label %if.else.i.i.i898

if.then.i.i.i892:                                 ; preds = %init_msubr.exit888
  %310 = load ptr, ptr @heap, align 8, !tbaa !5
  %311 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i891 = icmp ult ptr %310, %311
  br i1 %cmp1.not.i.i.i891, label %if.end.i.i.i896, label %if.then2.i.i.i894

if.then2.i.i.i894:                                ; preds = %if.then.i.i.i892
  %call.i.i.i.i893 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i896

if.end.i.i.i896:                                  ; preds = %if.then2.i.i.i894, %if.then.i.i.i892
  %add.ptr.i.i.i895 = getelementptr inbounds %struct.obj, ptr %310, i64 1
  store ptr %add.ptr.i.i.i895, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i909

if.else.i.i.i898:                                 ; preds = %init_msubr.exit888
  %312 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i897 = icmp eq ptr %312, null
  br i1 %cmp3.i.i.i897, label %if.then4.i.i.i900, label %if.end5.i.i.i903

if.then4.i.i.i900:                                ; preds = %if.else.i.i.i898
  tail call void @gc_for_newcell()
  %.pre.i.i.i899 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i903

if.end5.i.i.i903:                                 ; preds = %if.then4.i.i.i900, %if.else.i.i.i898
  %313 = phi ptr [ %.pre.i.i.i899, %if.then4.i.i.i900 ], [ %312, %if.else.i.i.i898 ]
  %cdr.i.i.i901 = getelementptr inbounds %struct.obj, ptr %313, i64 0, i32 2, i32 0, i32 1
  %314 = load ptr, ptr %cdr.i.i.i901, align 8, !tbaa !9
  store ptr %314, ptr @freelist, align 8, !tbaa !5
  %315 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i902 = add nsw i64 %315, 1
  store i64 %inc.i.i.i902, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i909

subrcons.exit.i.i909:                             ; preds = %if.end5.i.i.i903, %if.end.i.i.i896
  %z.0.i.i.i904 = phi ptr [ %310, %if.end.i.i.i896 ], [ %313, %if.end5.i.i.i903 ]
  store i16 0, ptr %z.0.i.i.i904, align 8, !tbaa !35
  %type7.i.i.i905 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i904, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i905, align 2, !tbaa !14
  %storage_as8.i.i.i906 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i904, i64 0, i32 2
  store ptr @.str.95, ptr %storage_as8.i.i.i906, align 8, !tbaa !9
  %f11.i.i.i907 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i904, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_setq, ptr %f11.i.i.i907, align 8, !tbaa !9
  %cmp.i4.i.i908 = icmp eq ptr %call.i.i.i889, null
  br i1 %cmp.i4.i.i908, label %if.then.i6.i.i913, label %cond.false.i.i.i911

cond.false.i.i.i911:                              ; preds = %subrcons.exit.i.i909
  %type.i.i.i910 = getelementptr inbounds %struct.obj, ptr %call.i.i.i889, i64 0, i32 1
  %316 = load i16, ptr %type.i.i.i910, align 2, !tbaa !14
  %317 = icmp eq i16 %316, 3
  br i1 %317, label %init_fsubr.exit915, label %if.then.i6.i.i913

if.then.i6.i.i913:                                ; preds = %cond.false.i.i.i911, %subrcons.exit.i.i909
  %call.i5.i.i912 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i889) #38
  br label %init_fsubr.exit915

init_fsubr.exit915:                               ; preds = %cond.false.i.i.i911, %if.then.i6.i.i913
  %vcell.i.i.i914 = getelementptr inbounds %struct.obj, ptr %call.i.i.i889, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i904, ptr %vcell.i.i.i914, align 8, !tbaa !9
  %call.i.i.i916 = tail call ptr @gen_intern(ptr noundef nonnull @.str.183, i64 noundef 0)
  %318 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i917 = icmp eq i64 %318, 1
  br i1 %cmp.i.i.i917, label %if.then.i.i.i919, label %if.else.i.i.i925

if.then.i.i.i919:                                 ; preds = %init_fsubr.exit915
  %319 = load ptr, ptr @heap, align 8, !tbaa !5
  %320 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i918 = icmp ult ptr %319, %320
  br i1 %cmp1.not.i.i.i918, label %if.end.i.i.i923, label %if.then2.i.i.i921

if.then2.i.i.i921:                                ; preds = %if.then.i.i.i919
  %call.i.i.i.i920 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i923

if.end.i.i.i923:                                  ; preds = %if.then2.i.i.i921, %if.then.i.i.i919
  %add.ptr.i.i.i922 = getelementptr inbounds %struct.obj, ptr %319, i64 1
  store ptr %add.ptr.i.i.i922, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i936

if.else.i.i.i925:                                 ; preds = %init_fsubr.exit915
  %321 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i924 = icmp eq ptr %321, null
  br i1 %cmp3.i.i.i924, label %if.then4.i.i.i927, label %if.end5.i.i.i930

if.then4.i.i.i927:                                ; preds = %if.else.i.i.i925
  tail call void @gc_for_newcell()
  %.pre.i.i.i926 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i930

if.end5.i.i.i930:                                 ; preds = %if.then4.i.i.i927, %if.else.i.i.i925
  %322 = phi ptr [ %.pre.i.i.i926, %if.then4.i.i.i927 ], [ %321, %if.else.i.i.i925 ]
  %cdr.i.i.i928 = getelementptr inbounds %struct.obj, ptr %322, i64 0, i32 2, i32 0, i32 1
  %323 = load ptr, ptr %cdr.i.i.i928, align 8, !tbaa !9
  store ptr %323, ptr @freelist, align 8, !tbaa !5
  %324 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i929 = add nsw i64 %324, 1
  store i64 %inc.i.i.i929, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i936

subrcons.exit.i.i936:                             ; preds = %if.end5.i.i.i930, %if.end.i.i.i923
  %z.0.i.i.i931 = phi ptr [ %319, %if.end.i.i.i923 ], [ %322, %if.end5.i.i.i930 ]
  store i16 0, ptr %z.0.i.i.i931, align 8, !tbaa !35
  %type7.i.i.i932 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i931, i64 0, i32 1
  store i16 10, ptr %type7.i.i.i932, align 2, !tbaa !14
  %storage_as8.i.i.i933 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i931, i64 0, i32 2
  store ptr @.str.183, ptr %storage_as8.i.i.i933, align 8, !tbaa !9
  %f11.i.i.i934 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i931, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_or, ptr %f11.i.i.i934, align 8, !tbaa !9
  %cmp.i4.i.i935 = icmp eq ptr %call.i.i.i916, null
  br i1 %cmp.i4.i.i935, label %if.then.i6.i.i940, label %cond.false.i.i.i938

cond.false.i.i.i938:                              ; preds = %subrcons.exit.i.i936
  %type.i.i.i937 = getelementptr inbounds %struct.obj, ptr %call.i.i.i916, i64 0, i32 1
  %325 = load i16, ptr %type.i.i.i937, align 2, !tbaa !14
  %326 = icmp eq i16 %325, 3
  br i1 %326, label %init_msubr.exit942, label %if.then.i6.i.i940

if.then.i6.i.i940:                                ; preds = %cond.false.i.i.i938, %subrcons.exit.i.i936
  %call.i5.i.i939 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i916) #38
  br label %init_msubr.exit942

init_msubr.exit942:                               ; preds = %cond.false.i.i.i938, %if.then.i6.i.i940
  %vcell.i.i.i941 = getelementptr inbounds %struct.obj, ptr %call.i.i.i916, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i931, ptr %vcell.i.i.i941, align 8, !tbaa !9
  %call.i.i.i943 = tail call ptr @gen_intern(ptr noundef nonnull @.str.184, i64 noundef 0)
  %327 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i944 = icmp eq i64 %327, 1
  br i1 %cmp.i.i.i944, label %if.then.i.i.i946, label %if.else.i.i.i952

if.then.i.i.i946:                                 ; preds = %init_msubr.exit942
  %328 = load ptr, ptr @heap, align 8, !tbaa !5
  %329 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i945 = icmp ult ptr %328, %329
  br i1 %cmp1.not.i.i.i945, label %if.end.i.i.i950, label %if.then2.i.i.i948

if.then2.i.i.i948:                                ; preds = %if.then.i.i.i946
  %call.i.i.i.i947 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i950

if.end.i.i.i950:                                  ; preds = %if.then2.i.i.i948, %if.then.i.i.i946
  %add.ptr.i.i.i949 = getelementptr inbounds %struct.obj, ptr %328, i64 1
  store ptr %add.ptr.i.i.i949, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i963

if.else.i.i.i952:                                 ; preds = %init_msubr.exit942
  %330 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i951 = icmp eq ptr %330, null
  br i1 %cmp3.i.i.i951, label %if.then4.i.i.i954, label %if.end5.i.i.i957

if.then4.i.i.i954:                                ; preds = %if.else.i.i.i952
  tail call void @gc_for_newcell()
  %.pre.i.i.i953 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i957

if.end5.i.i.i957:                                 ; preds = %if.then4.i.i.i954, %if.else.i.i.i952
  %331 = phi ptr [ %.pre.i.i.i953, %if.then4.i.i.i954 ], [ %330, %if.else.i.i.i952 ]
  %cdr.i.i.i955 = getelementptr inbounds %struct.obj, ptr %331, i64 0, i32 2, i32 0, i32 1
  %332 = load ptr, ptr %cdr.i.i.i955, align 8, !tbaa !9
  store ptr %332, ptr @freelist, align 8, !tbaa !5
  %333 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i956 = add nsw i64 %333, 1
  store i64 %inc.i.i.i956, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i963

subrcons.exit.i.i963:                             ; preds = %if.end5.i.i.i957, %if.end.i.i.i950
  %z.0.i.i.i958 = phi ptr [ %328, %if.end.i.i.i950 ], [ %331, %if.end5.i.i.i957 ]
  store i16 0, ptr %z.0.i.i.i958, align 8, !tbaa !35
  %type7.i.i.i959 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i958, i64 0, i32 1
  store i16 10, ptr %type7.i.i.i959, align 2, !tbaa !14
  %storage_as8.i.i.i960 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i958, i64 0, i32 2
  store ptr @.str.184, ptr %storage_as8.i.i.i960, align 8, !tbaa !9
  %f11.i.i.i961 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i958, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_and, ptr %f11.i.i.i961, align 8, !tbaa !9
  %cmp.i4.i.i962 = icmp eq ptr %call.i.i.i943, null
  br i1 %cmp.i4.i.i962, label %if.then.i6.i.i967, label %cond.false.i.i.i965

cond.false.i.i.i965:                              ; preds = %subrcons.exit.i.i963
  %type.i.i.i964 = getelementptr inbounds %struct.obj, ptr %call.i.i.i943, i64 0, i32 1
  %334 = load i16, ptr %type.i.i.i964, align 2, !tbaa !14
  %335 = icmp eq i16 %334, 3
  br i1 %335, label %init_msubr.exit969, label %if.then.i6.i.i967

if.then.i6.i.i967:                                ; preds = %cond.false.i.i.i965, %subrcons.exit.i.i963
  %call.i5.i.i966 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i943) #38
  br label %init_msubr.exit969

init_msubr.exit969:                               ; preds = %cond.false.i.i.i965, %if.then.i6.i.i967
  %vcell.i.i.i968 = getelementptr inbounds %struct.obj, ptr %call.i.i.i943, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i958, ptr %vcell.i.i.i968, align 8, !tbaa !9
  %call.i.i.i970 = tail call ptr @gen_intern(ptr noundef nonnull @.str.185, i64 noundef 0)
  %336 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i971 = icmp eq i64 %336, 1
  br i1 %cmp.i.i.i971, label %if.then.i.i.i973, label %if.else.i.i.i979

if.then.i.i.i973:                                 ; preds = %init_msubr.exit969
  %337 = load ptr, ptr @heap, align 8, !tbaa !5
  %338 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i972 = icmp ult ptr %337, %338
  br i1 %cmp1.not.i.i.i972, label %if.end.i.i.i977, label %if.then2.i.i.i975

if.then2.i.i.i975:                                ; preds = %if.then.i.i.i973
  %call.i.i.i.i974 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i977

if.end.i.i.i977:                                  ; preds = %if.then2.i.i.i975, %if.then.i.i.i973
  %add.ptr.i.i.i976 = getelementptr inbounds %struct.obj, ptr %337, i64 1
  store ptr %add.ptr.i.i.i976, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i990

if.else.i.i.i979:                                 ; preds = %init_msubr.exit969
  %339 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i978 = icmp eq ptr %339, null
  br i1 %cmp3.i.i.i978, label %if.then4.i.i.i981, label %if.end5.i.i.i984

if.then4.i.i.i981:                                ; preds = %if.else.i.i.i979
  tail call void @gc_for_newcell()
  %.pre.i.i.i980 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i984

if.end5.i.i.i984:                                 ; preds = %if.then4.i.i.i981, %if.else.i.i.i979
  %340 = phi ptr [ %.pre.i.i.i980, %if.then4.i.i.i981 ], [ %339, %if.else.i.i.i979 ]
  %cdr.i.i.i982 = getelementptr inbounds %struct.obj, ptr %340, i64 0, i32 2, i32 0, i32 1
  %341 = load ptr, ptr %cdr.i.i.i982, align 8, !tbaa !9
  store ptr %341, ptr @freelist, align 8, !tbaa !5
  %342 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i983 = add nsw i64 %342, 1
  store i64 %inc.i.i.i983, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i990

subrcons.exit.i.i990:                             ; preds = %if.end5.i.i.i984, %if.end.i.i.i977
  %z.0.i.i.i985 = phi ptr [ %337, %if.end.i.i.i977 ], [ %340, %if.end5.i.i.i984 ]
  store i16 0, ptr %z.0.i.i.i985, align 8, !tbaa !35
  %type7.i.i.i986 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i985, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i986, align 2, !tbaa !14
  %storage_as8.i.i.i987 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i985, i64 0, i32 2
  store ptr @.str.185, ptr %storage_as8.i.i.i987, align 8, !tbaa !9
  %f11.i.i.i988 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i985, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_catch, ptr %f11.i.i.i988, align 8, !tbaa !9
  %cmp.i4.i.i989 = icmp eq ptr %call.i.i.i970, null
  br i1 %cmp.i4.i.i989, label %if.then.i6.i.i994, label %cond.false.i.i.i992

cond.false.i.i.i992:                              ; preds = %subrcons.exit.i.i990
  %type.i.i.i991 = getelementptr inbounds %struct.obj, ptr %call.i.i.i970, i64 0, i32 1
  %343 = load i16, ptr %type.i.i.i991, align 2, !tbaa !14
  %344 = icmp eq i16 %343, 3
  br i1 %344, label %init_fsubr.exit996, label %if.then.i6.i.i994

if.then.i6.i.i994:                                ; preds = %cond.false.i.i.i992, %subrcons.exit.i.i990
  %call.i5.i.i993 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i970) #38
  br label %init_fsubr.exit996

init_fsubr.exit996:                               ; preds = %cond.false.i.i.i992, %if.then.i6.i.i994
  %vcell.i.i.i995 = getelementptr inbounds %struct.obj, ptr %call.i.i.i970, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i985, ptr %vcell.i.i.i995, align 8, !tbaa !9
  %call.i.i.i997 = tail call ptr @gen_intern(ptr noundef nonnull @.str.186, i64 noundef 0)
  %345 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i998 = icmp eq i64 %345, 1
  br i1 %cmp.i.i.i998, label %if.then.i.i.i1000, label %if.else.i.i.i1006

if.then.i.i.i1000:                                ; preds = %init_fsubr.exit996
  %346 = load ptr, ptr @heap, align 8, !tbaa !5
  %347 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i999 = icmp ult ptr %346, %347
  br i1 %cmp1.not.i.i.i999, label %if.end.i.i.i1004, label %if.then2.i.i.i1002

if.then2.i.i.i1002:                               ; preds = %if.then.i.i.i1000
  %call.i.i.i.i1001 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1004

if.end.i.i.i1004:                                 ; preds = %if.then2.i.i.i1002, %if.then.i.i.i1000
  %add.ptr.i.i.i1003 = getelementptr inbounds %struct.obj, ptr %346, i64 1
  store ptr %add.ptr.i.i.i1003, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1017

if.else.i.i.i1006:                                ; preds = %init_fsubr.exit996
  %348 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1005 = icmp eq ptr %348, null
  br i1 %cmp3.i.i.i1005, label %if.then4.i.i.i1008, label %if.end5.i.i.i1011

if.then4.i.i.i1008:                               ; preds = %if.else.i.i.i1006
  tail call void @gc_for_newcell()
  %.pre.i.i.i1007 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1011

if.end5.i.i.i1011:                                ; preds = %if.then4.i.i.i1008, %if.else.i.i.i1006
  %349 = phi ptr [ %.pre.i.i.i1007, %if.then4.i.i.i1008 ], [ %348, %if.else.i.i.i1006 ]
  %cdr.i.i.i1009 = getelementptr inbounds %struct.obj, ptr %349, i64 0, i32 2, i32 0, i32 1
  %350 = load ptr, ptr %cdr.i.i.i1009, align 8, !tbaa !9
  store ptr %350, ptr @freelist, align 8, !tbaa !5
  %351 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1010 = add nsw i64 %351, 1
  store i64 %inc.i.i.i1010, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1017

subrcons.exit.i.i1017:                            ; preds = %if.end5.i.i.i1011, %if.end.i.i.i1004
  %z.0.i.i.i1012 = phi ptr [ %346, %if.end.i.i.i1004 ], [ %349, %if.end5.i.i.i1011 ]
  store i16 0, ptr %z.0.i.i.i1012, align 8, !tbaa !35
  %type7.i.i.i1013 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1012, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1013, align 2, !tbaa !14
  %storage_as8.i.i.i1014 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1012, i64 0, i32 2
  store ptr @.str.186, ptr %storage_as8.i.i.i1014, align 8, !tbaa !9
  %f11.i.i.i1015 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1012, i64 0, i32 2, i32 0, i32 1
  store ptr @lthrow, ptr %f11.i.i.i1015, align 8, !tbaa !9
  %cmp.i4.i.i1016 = icmp eq ptr %call.i.i.i997, null
  br i1 %cmp.i4.i.i1016, label %if.then.i6.i.i1021, label %cond.false.i.i.i1019

cond.false.i.i.i1019:                             ; preds = %subrcons.exit.i.i1017
  %type.i.i.i1018 = getelementptr inbounds %struct.obj, ptr %call.i.i.i997, i64 0, i32 1
  %352 = load i16, ptr %type.i.i.i1018, align 2, !tbaa !14
  %353 = icmp eq i16 %352, 3
  br i1 %353, label %init_subr_2.exit1023, label %if.then.i6.i.i1021

if.then.i6.i.i1021:                               ; preds = %cond.false.i.i.i1019, %subrcons.exit.i.i1017
  %call.i5.i.i1020 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i997) #38
  br label %init_subr_2.exit1023

init_subr_2.exit1023:                             ; preds = %cond.false.i.i.i1019, %if.then.i6.i.i1021
  %vcell.i.i.i1022 = getelementptr inbounds %struct.obj, ptr %call.i.i.i997, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1012, ptr %vcell.i.i.i1022, align 8, !tbaa !9
  %call.i.i.i1024 = tail call ptr @gen_intern(ptr noundef nonnull @.str.67, i64 noundef 0)
  %354 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1025 = icmp eq i64 %354, 1
  br i1 %cmp.i.i.i1025, label %if.then.i.i.i1027, label %if.else.i.i.i1033

if.then.i.i.i1027:                                ; preds = %init_subr_2.exit1023
  %355 = load ptr, ptr @heap, align 8, !tbaa !5
  %356 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1026 = icmp ult ptr %355, %356
  br i1 %cmp1.not.i.i.i1026, label %if.end.i.i.i1031, label %if.then2.i.i.i1029

if.then2.i.i.i1029:                               ; preds = %if.then.i.i.i1027
  %call.i.i.i.i1028 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1031

if.end.i.i.i1031:                                 ; preds = %if.then2.i.i.i1029, %if.then.i.i.i1027
  %add.ptr.i.i.i1030 = getelementptr inbounds %struct.obj, ptr %355, i64 1
  store ptr %add.ptr.i.i.i1030, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1044

if.else.i.i.i1033:                                ; preds = %init_subr_2.exit1023
  %357 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1032 = icmp eq ptr %357, null
  br i1 %cmp3.i.i.i1032, label %if.then4.i.i.i1035, label %if.end5.i.i.i1038

if.then4.i.i.i1035:                               ; preds = %if.else.i.i.i1033
  tail call void @gc_for_newcell()
  %.pre.i.i.i1034 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1038

if.end5.i.i.i1038:                                ; preds = %if.then4.i.i.i1035, %if.else.i.i.i1033
  %358 = phi ptr [ %.pre.i.i.i1034, %if.then4.i.i.i1035 ], [ %357, %if.else.i.i.i1033 ]
  %cdr.i.i.i1036 = getelementptr inbounds %struct.obj, ptr %358, i64 0, i32 2, i32 0, i32 1
  %359 = load ptr, ptr %cdr.i.i.i1036, align 8, !tbaa !9
  store ptr %359, ptr @freelist, align 8, !tbaa !5
  %360 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1037 = add nsw i64 %360, 1
  store i64 %inc.i.i.i1037, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1044

subrcons.exit.i.i1044:                            ; preds = %if.end5.i.i.i1038, %if.end.i.i.i1031
  %z.0.i.i.i1039 = phi ptr [ %355, %if.end.i.i.i1031 ], [ %358, %if.end5.i.i.i1038 ]
  store i16 0, ptr %z.0.i.i.i1039, align 8, !tbaa !35
  %type7.i.i.i1040 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1039, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i1040, align 2, !tbaa !14
  %storage_as8.i.i.i1041 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1039, i64 0, i32 2
  store ptr @.str.67, ptr %storage_as8.i.i.i1041, align 8, !tbaa !9
  %f11.i.i.i1042 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1039, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_quote, ptr %f11.i.i.i1042, align 8, !tbaa !9
  %cmp.i4.i.i1043 = icmp eq ptr %call.i.i.i1024, null
  br i1 %cmp.i4.i.i1043, label %if.then.i6.i.i1048, label %cond.false.i.i.i1046

cond.false.i.i.i1046:                             ; preds = %subrcons.exit.i.i1044
  %type.i.i.i1045 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1024, i64 0, i32 1
  %361 = load i16, ptr %type.i.i.i1045, align 2, !tbaa !14
  %362 = icmp eq i16 %361, 3
  br i1 %362, label %init_fsubr.exit1050, label %if.then.i6.i.i1048

if.then.i6.i.i1048:                               ; preds = %cond.false.i.i.i1046, %subrcons.exit.i.i1044
  %call.i5.i.i1047 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1024) #38
  br label %init_fsubr.exit1050

init_fsubr.exit1050:                              ; preds = %cond.false.i.i.i1046, %if.then.i6.i.i1048
  %vcell.i.i.i1049 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1024, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1039, ptr %vcell.i.i.i1049, align 8, !tbaa !9
  %call.i.i.i1051 = tail call ptr @gen_intern(ptr noundef nonnull @.str.187, i64 noundef 0)
  %363 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1052 = icmp eq i64 %363, 1
  br i1 %cmp.i.i.i1052, label %if.then.i.i.i1054, label %if.else.i.i.i1060

if.then.i.i.i1054:                                ; preds = %init_fsubr.exit1050
  %364 = load ptr, ptr @heap, align 8, !tbaa !5
  %365 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1053 = icmp ult ptr %364, %365
  br i1 %cmp1.not.i.i.i1053, label %if.end.i.i.i1058, label %if.then2.i.i.i1056

if.then2.i.i.i1056:                               ; preds = %if.then.i.i.i1054
  %call.i.i.i.i1055 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1058

if.end.i.i.i1058:                                 ; preds = %if.then2.i.i.i1056, %if.then.i.i.i1054
  %add.ptr.i.i.i1057 = getelementptr inbounds %struct.obj, ptr %364, i64 1
  store ptr %add.ptr.i.i.i1057, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1071

if.else.i.i.i1060:                                ; preds = %init_fsubr.exit1050
  %366 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1059 = icmp eq ptr %366, null
  br i1 %cmp3.i.i.i1059, label %if.then4.i.i.i1062, label %if.end5.i.i.i1065

if.then4.i.i.i1062:                               ; preds = %if.else.i.i.i1060
  tail call void @gc_for_newcell()
  %.pre.i.i.i1061 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1065

if.end5.i.i.i1065:                                ; preds = %if.then4.i.i.i1062, %if.else.i.i.i1060
  %367 = phi ptr [ %.pre.i.i.i1061, %if.then4.i.i.i1062 ], [ %366, %if.else.i.i.i1060 ]
  %cdr.i.i.i1063 = getelementptr inbounds %struct.obj, ptr %367, i64 0, i32 2, i32 0, i32 1
  %368 = load ptr, ptr %cdr.i.i.i1063, align 8, !tbaa !9
  store ptr %368, ptr @freelist, align 8, !tbaa !5
  %369 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1064 = add nsw i64 %369, 1
  store i64 %inc.i.i.i1064, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1071

subrcons.exit.i.i1071:                            ; preds = %if.end5.i.i.i1065, %if.end.i.i.i1058
  %z.0.i.i.i1066 = phi ptr [ %364, %if.end.i.i.i1058 ], [ %367, %if.end5.i.i.i1065 ]
  store i16 0, ptr %z.0.i.i.i1066, align 8, !tbaa !35
  %type7.i.i.i1067 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1066, i64 0, i32 1
  store i16 8, ptr %type7.i.i.i1067, align 2, !tbaa !14
  %storage_as8.i.i.i1068 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1066, i64 0, i32 2
  store ptr @.str.187, ptr %storage_as8.i.i.i1068, align 8, !tbaa !9
  %f11.i.i.i1069 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1066, i64 0, i32 2, i32 0, i32 1
  store ptr @apropos, ptr %f11.i.i.i1069, align 8, !tbaa !9
  %cmp.i4.i.i1070 = icmp eq ptr %call.i.i.i1051, null
  br i1 %cmp.i4.i.i1070, label %if.then.i6.i.i1075, label %cond.false.i.i.i1073

cond.false.i.i.i1073:                             ; preds = %subrcons.exit.i.i1071
  %type.i.i.i1072 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1051, i64 0, i32 1
  %370 = load i16, ptr %type.i.i.i1072, align 2, !tbaa !14
  %371 = icmp eq i16 %370, 3
  br i1 %371, label %init_lsubr.exit, label %if.then.i6.i.i1075

if.then.i6.i.i1075:                               ; preds = %cond.false.i.i.i1073, %subrcons.exit.i.i1071
  %call.i5.i.i1074 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1051) #38
  br label %init_lsubr.exit

init_lsubr.exit:                                  ; preds = %cond.false.i.i.i1073, %if.then.i6.i.i1075
  %vcell.i.i.i1076 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1051, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1066, ptr %vcell.i.i.i1076, align 8, !tbaa !9
  %call.i.i.i1077 = tail call ptr @gen_intern(ptr noundef nonnull @.str.188, i64 noundef 0)
  %372 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1078 = icmp eq i64 %372, 1
  br i1 %cmp.i.i.i1078, label %if.then.i.i.i1080, label %if.else.i.i.i1086

if.then.i.i.i1080:                                ; preds = %init_lsubr.exit
  %373 = load ptr, ptr @heap, align 8, !tbaa !5
  %374 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1079 = icmp ult ptr %373, %374
  br i1 %cmp1.not.i.i.i1079, label %if.end.i.i.i1084, label %if.then2.i.i.i1082

if.then2.i.i.i1082:                               ; preds = %if.then.i.i.i1080
  %call.i.i.i.i1081 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1084

if.end.i.i.i1084:                                 ; preds = %if.then2.i.i.i1082, %if.then.i.i.i1080
  %add.ptr.i.i.i1083 = getelementptr inbounds %struct.obj, ptr %373, i64 1
  store ptr %add.ptr.i.i.i1083, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1097

if.else.i.i.i1086:                                ; preds = %init_lsubr.exit
  %375 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1085 = icmp eq ptr %375, null
  br i1 %cmp3.i.i.i1085, label %if.then4.i.i.i1088, label %if.end5.i.i.i1091

if.then4.i.i.i1088:                               ; preds = %if.else.i.i.i1086
  tail call void @gc_for_newcell()
  %.pre.i.i.i1087 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1091

if.end5.i.i.i1091:                                ; preds = %if.then4.i.i.i1088, %if.else.i.i.i1086
  %376 = phi ptr [ %.pre.i.i.i1087, %if.then4.i.i.i1088 ], [ %375, %if.else.i.i.i1086 ]
  %cdr.i.i.i1089 = getelementptr inbounds %struct.obj, ptr %376, i64 0, i32 2, i32 0, i32 1
  %377 = load ptr, ptr %cdr.i.i.i1089, align 8, !tbaa !9
  store ptr %377, ptr @freelist, align 8, !tbaa !5
  %378 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1090 = add nsw i64 %378, 1
  store i64 %inc.i.i.i1090, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1097

subrcons.exit.i.i1097:                            ; preds = %if.end5.i.i.i1091, %if.end.i.i.i1084
  %z.0.i.i.i1092 = phi ptr [ %373, %if.end.i.i.i1084 ], [ %376, %if.end5.i.i.i1091 ]
  store i16 0, ptr %z.0.i.i.i1092, align 8, !tbaa !35
  %type7.i.i.i1093 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1092, i64 0, i32 1
  store i16 8, ptr %type7.i.i.i1093, align 2, !tbaa !14
  %storage_as8.i.i.i1094 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1092, i64 0, i32 2
  store ptr @.str.188, ptr %storage_as8.i.i.i1094, align 8, !tbaa !9
  %f11.i.i.i1095 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1092, i64 0, i32 2, i32 0, i32 1
  store ptr @siod_verbose, ptr %f11.i.i.i1095, align 8, !tbaa !9
  %cmp.i4.i.i1096 = icmp eq ptr %call.i.i.i1077, null
  br i1 %cmp.i4.i.i1096, label %if.then.i6.i.i1101, label %cond.false.i.i.i1099

cond.false.i.i.i1099:                             ; preds = %subrcons.exit.i.i1097
  %type.i.i.i1098 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1077, i64 0, i32 1
  %379 = load i16, ptr %type.i.i.i1098, align 2, !tbaa !14
  %380 = icmp eq i16 %379, 3
  br i1 %380, label %init_lsubr.exit1103, label %if.then.i6.i.i1101

if.then.i6.i.i1101:                               ; preds = %cond.false.i.i.i1099, %subrcons.exit.i.i1097
  %call.i5.i.i1100 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1077) #38
  br label %init_lsubr.exit1103

init_lsubr.exit1103:                              ; preds = %cond.false.i.i.i1099, %if.then.i6.i.i1101
  %vcell.i.i.i1102 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1077, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1092, ptr %vcell.i.i.i1102, align 8, !tbaa !9
  %call.i.i.i1104 = tail call ptr @gen_intern(ptr noundef nonnull @.str.189, i64 noundef 0)
  %381 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1105 = icmp eq i64 %381, 1
  br i1 %cmp.i.i.i1105, label %if.then.i.i.i1107, label %if.else.i.i.i1113

if.then.i.i.i1107:                                ; preds = %init_lsubr.exit1103
  %382 = load ptr, ptr @heap, align 8, !tbaa !5
  %383 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1106 = icmp ult ptr %382, %383
  br i1 %cmp1.not.i.i.i1106, label %if.end.i.i.i1111, label %if.then2.i.i.i1109

if.then2.i.i.i1109:                               ; preds = %if.then.i.i.i1107
  %call.i.i.i.i1108 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1111

if.end.i.i.i1111:                                 ; preds = %if.then2.i.i.i1109, %if.then.i.i.i1107
  %add.ptr.i.i.i1110 = getelementptr inbounds %struct.obj, ptr %382, i64 1
  store ptr %add.ptr.i.i.i1110, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1124

if.else.i.i.i1113:                                ; preds = %init_lsubr.exit1103
  %384 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1112 = icmp eq ptr %384, null
  br i1 %cmp3.i.i.i1112, label %if.then4.i.i.i1115, label %if.end5.i.i.i1118

if.then4.i.i.i1115:                               ; preds = %if.else.i.i.i1113
  tail call void @gc_for_newcell()
  %.pre.i.i.i1114 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1118

if.end5.i.i.i1118:                                ; preds = %if.then4.i.i.i1115, %if.else.i.i.i1113
  %385 = phi ptr [ %.pre.i.i.i1114, %if.then4.i.i.i1115 ], [ %384, %if.else.i.i.i1113 ]
  %cdr.i.i.i1116 = getelementptr inbounds %struct.obj, ptr %385, i64 0, i32 2, i32 0, i32 1
  %386 = load ptr, ptr %cdr.i.i.i1116, align 8, !tbaa !9
  store ptr %386, ptr @freelist, align 8, !tbaa !5
  %387 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1117 = add nsw i64 %387, 1
  store i64 %inc.i.i.i1117, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1124

subrcons.exit.i.i1124:                            ; preds = %if.end5.i.i.i1118, %if.end.i.i.i1111
  %z.0.i.i.i1119 = phi ptr [ %382, %if.end.i.i.i1111 ], [ %385, %if.end5.i.i.i1118 ]
  store i16 0, ptr %z.0.i.i.i1119, align 8, !tbaa !35
  %type7.i.i.i1120 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1119, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1120, align 2, !tbaa !14
  %storage_as8.i.i.i1121 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1119, i64 0, i32 2
  store ptr @.str.189, ptr %storage_as8.i.i.i1121, align 8, !tbaa !9
  %f11.i.i.i1122 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1119, i64 0, i32 2, i32 0, i32 1
  store ptr @copy_list, ptr %f11.i.i.i1122, align 8, !tbaa !9
  %cmp.i4.i.i1123 = icmp eq ptr %call.i.i.i1104, null
  br i1 %cmp.i4.i.i1123, label %if.then.i6.i.i1128, label %cond.false.i.i.i1126

cond.false.i.i.i1126:                             ; preds = %subrcons.exit.i.i1124
  %type.i.i.i1125 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1104, i64 0, i32 1
  %388 = load i16, ptr %type.i.i.i1125, align 2, !tbaa !14
  %389 = icmp eq i16 %388, 3
  br i1 %389, label %init_subr_1.exit1130, label %if.then.i6.i.i1128

if.then.i6.i.i1128:                               ; preds = %cond.false.i.i.i1126, %subrcons.exit.i.i1124
  %call.i5.i.i1127 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1104) #38
  br label %init_subr_1.exit1130

init_subr_1.exit1130:                             ; preds = %cond.false.i.i.i1126, %if.then.i6.i.i1128
  %vcell.i.i.i1129 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1104, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1119, ptr %vcell.i.i.i1129, align 8, !tbaa !9
  %call.i.i.i1131 = tail call ptr @gen_intern(ptr noundef nonnull @.str.190, i64 noundef 0)
  %390 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1132 = icmp eq i64 %390, 1
  br i1 %cmp.i.i.i1132, label %if.then.i.i.i1134, label %if.else.i.i.i1140

if.then.i.i.i1134:                                ; preds = %init_subr_1.exit1130
  %391 = load ptr, ptr @heap, align 8, !tbaa !5
  %392 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1133 = icmp ult ptr %391, %392
  br i1 %cmp1.not.i.i.i1133, label %if.end.i.i.i1138, label %if.then2.i.i.i1136

if.then2.i.i.i1136:                               ; preds = %if.then.i.i.i1134
  %call.i.i.i.i1135 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1138

if.end.i.i.i1138:                                 ; preds = %if.then2.i.i.i1136, %if.then.i.i.i1134
  %add.ptr.i.i.i1137 = getelementptr inbounds %struct.obj, ptr %391, i64 1
  store ptr %add.ptr.i.i.i1137, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1151

if.else.i.i.i1140:                                ; preds = %init_subr_1.exit1130
  %393 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1139 = icmp eq ptr %393, null
  br i1 %cmp3.i.i.i1139, label %if.then4.i.i.i1142, label %if.end5.i.i.i1145

if.then4.i.i.i1142:                               ; preds = %if.else.i.i.i1140
  tail call void @gc_for_newcell()
  %.pre.i.i.i1141 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1145

if.end5.i.i.i1145:                                ; preds = %if.then4.i.i.i1142, %if.else.i.i.i1140
  %394 = phi ptr [ %.pre.i.i.i1141, %if.then4.i.i.i1142 ], [ %393, %if.else.i.i.i1140 ]
  %cdr.i.i.i1143 = getelementptr inbounds %struct.obj, ptr %394, i64 0, i32 2, i32 0, i32 1
  %395 = load ptr, ptr %cdr.i.i.i1143, align 8, !tbaa !9
  store ptr %395, ptr @freelist, align 8, !tbaa !5
  %396 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1144 = add nsw i64 %396, 1
  store i64 %inc.i.i.i1144, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1151

subrcons.exit.i.i1151:                            ; preds = %if.end5.i.i.i1145, %if.end.i.i.i1138
  %z.0.i.i.i1146 = phi ptr [ %391, %if.end.i.i.i1138 ], [ %394, %if.end5.i.i.i1145 ]
  store i16 0, ptr %z.0.i.i.i1146, align 8, !tbaa !35
  %type7.i.i.i1147 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1146, i64 0, i32 1
  store i16 8, ptr %type7.i.i.i1147, align 2, !tbaa !14
  %storage_as8.i.i.i1148 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1146, i64 0, i32 2
  store ptr @.str.190, ptr %storage_as8.i.i.i1148, align 8, !tbaa !9
  %f11.i.i.i1149 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1146, i64 0, i32 2, i32 0, i32 1
  store ptr @gc_status, ptr %f11.i.i.i1149, align 8, !tbaa !9
  %cmp.i4.i.i1150 = icmp eq ptr %call.i.i.i1131, null
  br i1 %cmp.i4.i.i1150, label %if.then.i6.i.i1155, label %cond.false.i.i.i1153

cond.false.i.i.i1153:                             ; preds = %subrcons.exit.i.i1151
  %type.i.i.i1152 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1131, i64 0, i32 1
  %397 = load i16, ptr %type.i.i.i1152, align 2, !tbaa !14
  %398 = icmp eq i16 %397, 3
  br i1 %398, label %init_lsubr.exit1157, label %if.then.i6.i.i1155

if.then.i6.i.i1155:                               ; preds = %cond.false.i.i.i1153, %subrcons.exit.i.i1151
  %call.i5.i.i1154 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1131) #38
  br label %init_lsubr.exit1157

init_lsubr.exit1157:                              ; preds = %cond.false.i.i.i1153, %if.then.i6.i.i1155
  %vcell.i.i.i1156 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1131, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1146, ptr %vcell.i.i.i1156, align 8, !tbaa !9
  %call.i.i.i1158 = tail call ptr @gen_intern(ptr noundef nonnull @.str.191, i64 noundef 0)
  %399 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1159 = icmp eq i64 %399, 1
  br i1 %cmp.i.i.i1159, label %if.then.i.i.i1161, label %if.else.i.i.i1167

if.then.i.i.i1161:                                ; preds = %init_lsubr.exit1157
  %400 = load ptr, ptr @heap, align 8, !tbaa !5
  %401 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1160 = icmp ult ptr %400, %401
  br i1 %cmp1.not.i.i.i1160, label %if.end.i.i.i1165, label %if.then2.i.i.i1163

if.then2.i.i.i1163:                               ; preds = %if.then.i.i.i1161
  %call.i.i.i.i1162 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1165

if.end.i.i.i1165:                                 ; preds = %if.then2.i.i.i1163, %if.then.i.i.i1161
  %add.ptr.i.i.i1164 = getelementptr inbounds %struct.obj, ptr %400, i64 1
  store ptr %add.ptr.i.i.i1164, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1178

if.else.i.i.i1167:                                ; preds = %init_lsubr.exit1157
  %402 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1166 = icmp eq ptr %402, null
  br i1 %cmp3.i.i.i1166, label %if.then4.i.i.i1169, label %if.end5.i.i.i1172

if.then4.i.i.i1169:                               ; preds = %if.else.i.i.i1167
  tail call void @gc_for_newcell()
  %.pre.i.i.i1168 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1172

if.end5.i.i.i1172:                                ; preds = %if.then4.i.i.i1169, %if.else.i.i.i1167
  %403 = phi ptr [ %.pre.i.i.i1168, %if.then4.i.i.i1169 ], [ %402, %if.else.i.i.i1167 ]
  %cdr.i.i.i1170 = getelementptr inbounds %struct.obj, ptr %403, i64 0, i32 2, i32 0, i32 1
  %404 = load ptr, ptr %cdr.i.i.i1170, align 8, !tbaa !9
  store ptr %404, ptr @freelist, align 8, !tbaa !5
  %405 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1171 = add nsw i64 %405, 1
  store i64 %inc.i.i.i1171, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1178

subrcons.exit.i.i1178:                            ; preds = %if.end5.i.i.i1172, %if.end.i.i.i1165
  %z.0.i.i.i1173 = phi ptr [ %400, %if.end.i.i.i1165 ], [ %403, %if.end5.i.i.i1172 ]
  store i16 0, ptr %z.0.i.i.i1173, align 8, !tbaa !35
  %type7.i.i.i1174 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1173, i64 0, i32 1
  store i16 8, ptr %type7.i.i.i1174, align 2, !tbaa !14
  %storage_as8.i.i.i1175 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1173, i64 0, i32 2
  store ptr @.str.191, ptr %storage_as8.i.i.i1175, align 8, !tbaa !9
  %f11.i.i.i1176 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1173, i64 0, i32 2, i32 0, i32 1
  store ptr @user_gc, ptr %f11.i.i.i1176, align 8, !tbaa !9
  %cmp.i4.i.i1177 = icmp eq ptr %call.i.i.i1158, null
  br i1 %cmp.i4.i.i1177, label %if.then.i6.i.i1182, label %cond.false.i.i.i1180

cond.false.i.i.i1180:                             ; preds = %subrcons.exit.i.i1178
  %type.i.i.i1179 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1158, i64 0, i32 1
  %406 = load i16, ptr %type.i.i.i1179, align 2, !tbaa !14
  %407 = icmp eq i16 %406, 3
  br i1 %407, label %init_lsubr.exit1184, label %if.then.i6.i.i1182

if.then.i6.i.i1182:                               ; preds = %cond.false.i.i.i1180, %subrcons.exit.i.i1178
  %call.i5.i.i1181 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1158) #38
  br label %init_lsubr.exit1184

init_lsubr.exit1184:                              ; preds = %cond.false.i.i.i1180, %if.then.i6.i.i1182
  %vcell.i.i.i1183 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1158, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1173, ptr %vcell.i.i.i1183, align 8, !tbaa !9
  %call.i.i.i1185 = tail call ptr @gen_intern(ptr noundef nonnull @.str.192, i64 noundef 0)
  %408 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1186 = icmp eq i64 %408, 1
  br i1 %cmp.i.i.i1186, label %if.then.i.i.i1188, label %if.else.i.i.i1194

if.then.i.i.i1188:                                ; preds = %init_lsubr.exit1184
  %409 = load ptr, ptr @heap, align 8, !tbaa !5
  %410 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1187 = icmp ult ptr %409, %410
  br i1 %cmp1.not.i.i.i1187, label %if.end.i.i.i1192, label %if.then2.i.i.i1190

if.then2.i.i.i1190:                               ; preds = %if.then.i.i.i1188
  %call.i.i.i.i1189 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1192

if.end.i.i.i1192:                                 ; preds = %if.then2.i.i.i1190, %if.then.i.i.i1188
  %add.ptr.i.i.i1191 = getelementptr inbounds %struct.obj, ptr %409, i64 1
  store ptr %add.ptr.i.i.i1191, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1205

if.else.i.i.i1194:                                ; preds = %init_lsubr.exit1184
  %411 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1193 = icmp eq ptr %411, null
  br i1 %cmp3.i.i.i1193, label %if.then4.i.i.i1196, label %if.end5.i.i.i1199

if.then4.i.i.i1196:                               ; preds = %if.else.i.i.i1194
  tail call void @gc_for_newcell()
  %.pre.i.i.i1195 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1199

if.end5.i.i.i1199:                                ; preds = %if.then4.i.i.i1196, %if.else.i.i.i1194
  %412 = phi ptr [ %.pre.i.i.i1195, %if.then4.i.i.i1196 ], [ %411, %if.else.i.i.i1194 ]
  %cdr.i.i.i1197 = getelementptr inbounds %struct.obj, ptr %412, i64 0, i32 2, i32 0, i32 1
  %413 = load ptr, ptr %cdr.i.i.i1197, align 8, !tbaa !9
  store ptr %413, ptr @freelist, align 8, !tbaa !5
  %414 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1198 = add nsw i64 %414, 1
  store i64 %inc.i.i.i1198, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1205

subrcons.exit.i.i1205:                            ; preds = %if.end5.i.i.i1199, %if.end.i.i.i1192
  %z.0.i.i.i1200 = phi ptr [ %409, %if.end.i.i.i1192 ], [ %412, %if.end5.i.i.i1199 ]
  store i16 0, ptr %z.0.i.i.i1200, align 8, !tbaa !35
  %type7.i.i.i1201 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1200, i64 0, i32 1
  store i16 7, ptr %type7.i.i.i1201, align 2, !tbaa !14
  %storage_as8.i.i.i1202 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1200, i64 0, i32 2
  store ptr @.str.192, ptr %storage_as8.i.i.i1202, align 8, !tbaa !9
  %f11.i.i.i1203 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1200, i64 0, i32 2, i32 0, i32 1
  store ptr @load, ptr %f11.i.i.i1203, align 8, !tbaa !9
  %cmp.i4.i.i1204 = icmp eq ptr %call.i.i.i1185, null
  br i1 %cmp.i4.i.i1204, label %if.then.i6.i.i1209, label %cond.false.i.i.i1207

cond.false.i.i.i1207:                             ; preds = %subrcons.exit.i.i1205
  %type.i.i.i1206 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1185, i64 0, i32 1
  %415 = load i16, ptr %type.i.i.i1206, align 2, !tbaa !14
  %416 = icmp eq i16 %415, 3
  br i1 %416, label %init_subr_3.exit, label %if.then.i6.i.i1209

if.then.i6.i.i1209:                               ; preds = %cond.false.i.i.i1207, %subrcons.exit.i.i1205
  %call.i5.i.i1208 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1185) #38
  br label %init_subr_3.exit

init_subr_3.exit:                                 ; preds = %cond.false.i.i.i1207, %if.then.i6.i.i1209
  %vcell.i.i.i1210 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1185, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1200, ptr %vcell.i.i.i1210, align 8, !tbaa !9
  %call.i.i.i1211 = tail call ptr @gen_intern(ptr noundef nonnull @.str.193, i64 noundef 0)
  %417 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1212 = icmp eq i64 %417, 1
  br i1 %cmp.i.i.i1212, label %if.then.i.i.i1214, label %if.else.i.i.i1220

if.then.i.i.i1214:                                ; preds = %init_subr_3.exit
  %418 = load ptr, ptr @heap, align 8, !tbaa !5
  %419 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1213 = icmp ult ptr %418, %419
  br i1 %cmp1.not.i.i.i1213, label %if.end.i.i.i1218, label %if.then2.i.i.i1216

if.then2.i.i.i1216:                               ; preds = %if.then.i.i.i1214
  %call.i.i.i.i1215 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1218

if.end.i.i.i1218:                                 ; preds = %if.then2.i.i.i1216, %if.then.i.i.i1214
  %add.ptr.i.i.i1217 = getelementptr inbounds %struct.obj, ptr %418, i64 1
  store ptr %add.ptr.i.i.i1217, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1231

if.else.i.i.i1220:                                ; preds = %init_subr_3.exit
  %420 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1219 = icmp eq ptr %420, null
  br i1 %cmp3.i.i.i1219, label %if.then4.i.i.i1222, label %if.end5.i.i.i1225

if.then4.i.i.i1222:                               ; preds = %if.else.i.i.i1220
  tail call void @gc_for_newcell()
  %.pre.i.i.i1221 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1225

if.end5.i.i.i1225:                                ; preds = %if.then4.i.i.i1222, %if.else.i.i.i1220
  %421 = phi ptr [ %.pre.i.i.i1221, %if.then4.i.i.i1222 ], [ %420, %if.else.i.i.i1220 ]
  %cdr.i.i.i1223 = getelementptr inbounds %struct.obj, ptr %421, i64 0, i32 2, i32 0, i32 1
  %422 = load ptr, ptr %cdr.i.i.i1223, align 8, !tbaa !9
  store ptr %422, ptr @freelist, align 8, !tbaa !5
  %423 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1224 = add nsw i64 %423, 1
  store i64 %inc.i.i.i1224, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1231

subrcons.exit.i.i1231:                            ; preds = %if.end5.i.i.i1225, %if.end.i.i.i1218
  %z.0.i.i.i1226 = phi ptr [ %418, %if.end.i.i.i1218 ], [ %421, %if.end5.i.i.i1225 ]
  store i16 0, ptr %z.0.i.i.i1226, align 8, !tbaa !35
  %type7.i.i.i1227 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1226, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1227, align 2, !tbaa !14
  %storage_as8.i.i.i1228 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1226, i64 0, i32 2
  store ptr @.str.193, ptr %storage_as8.i.i.i1228, align 8, !tbaa !9
  %f11.i.i.i1229 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1226, i64 0, i32 2, i32 0, i32 1
  store ptr @require, ptr %f11.i.i.i1229, align 8, !tbaa !9
  %cmp.i4.i.i1230 = icmp eq ptr %call.i.i.i1211, null
  br i1 %cmp.i4.i.i1230, label %if.then.i6.i.i1235, label %cond.false.i.i.i1233

cond.false.i.i.i1233:                             ; preds = %subrcons.exit.i.i1231
  %type.i.i.i1232 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1211, i64 0, i32 1
  %424 = load i16, ptr %type.i.i.i1232, align 2, !tbaa !14
  %425 = icmp eq i16 %424, 3
  br i1 %425, label %init_subr_1.exit1237, label %if.then.i6.i.i1235

if.then.i6.i.i1235:                               ; preds = %cond.false.i.i.i1233, %subrcons.exit.i.i1231
  %call.i5.i.i1234 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1211) #38
  br label %init_subr_1.exit1237

init_subr_1.exit1237:                             ; preds = %cond.false.i.i.i1233, %if.then.i6.i.i1235
  %vcell.i.i.i1236 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1211, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1226, ptr %vcell.i.i.i1236, align 8, !tbaa !9
  %call.i.i.i1238 = tail call ptr @gen_intern(ptr noundef nonnull @.str.194, i64 noundef 0)
  %426 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1239 = icmp eq i64 %426, 1
  br i1 %cmp.i.i.i1239, label %if.then.i.i.i1241, label %if.else.i.i.i1247

if.then.i.i.i1241:                                ; preds = %init_subr_1.exit1237
  %427 = load ptr, ptr @heap, align 8, !tbaa !5
  %428 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1240 = icmp ult ptr %427, %428
  br i1 %cmp1.not.i.i.i1240, label %if.end.i.i.i1245, label %if.then2.i.i.i1243

if.then2.i.i.i1243:                               ; preds = %if.then.i.i.i1241
  %call.i.i.i.i1242 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1245

if.end.i.i.i1245:                                 ; preds = %if.then2.i.i.i1243, %if.then.i.i.i1241
  %add.ptr.i.i.i1244 = getelementptr inbounds %struct.obj, ptr %427, i64 1
  store ptr %add.ptr.i.i.i1244, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1258

if.else.i.i.i1247:                                ; preds = %init_subr_1.exit1237
  %429 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1246 = icmp eq ptr %429, null
  br i1 %cmp3.i.i.i1246, label %if.then4.i.i.i1249, label %if.end5.i.i.i1252

if.then4.i.i.i1249:                               ; preds = %if.else.i.i.i1247
  tail call void @gc_for_newcell()
  %.pre.i.i.i1248 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1252

if.end5.i.i.i1252:                                ; preds = %if.then4.i.i.i1249, %if.else.i.i.i1247
  %430 = phi ptr [ %.pre.i.i.i1248, %if.then4.i.i.i1249 ], [ %429, %if.else.i.i.i1247 ]
  %cdr.i.i.i1250 = getelementptr inbounds %struct.obj, ptr %430, i64 0, i32 2, i32 0, i32 1
  %431 = load ptr, ptr %cdr.i.i.i1250, align 8, !tbaa !9
  store ptr %431, ptr @freelist, align 8, !tbaa !5
  %432 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1251 = add nsw i64 %432, 1
  store i64 %inc.i.i.i1251, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1258

subrcons.exit.i.i1258:                            ; preds = %if.end5.i.i.i1252, %if.end.i.i.i1245
  %z.0.i.i.i1253 = phi ptr [ %427, %if.end.i.i.i1245 ], [ %430, %if.end5.i.i.i1252 ]
  store i16 0, ptr %z.0.i.i.i1253, align 8, !tbaa !35
  %type7.i.i.i1254 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1253, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1254, align 2, !tbaa !14
  %storage_as8.i.i.i1255 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1253, i64 0, i32 2
  store ptr @.str.194, ptr %storage_as8.i.i.i1255, align 8, !tbaa !9
  %f11.i.i.i1256 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1253, i64 0, i32 2, i32 0, i32 1
  store ptr @consp, ptr %f11.i.i.i1256, align 8, !tbaa !9
  %cmp.i4.i.i1257 = icmp eq ptr %call.i.i.i1238, null
  br i1 %cmp.i4.i.i1257, label %if.then.i6.i.i1262, label %cond.false.i.i.i1260

cond.false.i.i.i1260:                             ; preds = %subrcons.exit.i.i1258
  %type.i.i.i1259 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1238, i64 0, i32 1
  %433 = load i16, ptr %type.i.i.i1259, align 2, !tbaa !14
  %434 = icmp eq i16 %433, 3
  br i1 %434, label %init_subr_1.exit1264, label %if.then.i6.i.i1262

if.then.i6.i.i1262:                               ; preds = %cond.false.i.i.i1260, %subrcons.exit.i.i1258
  %call.i5.i.i1261 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1238) #38
  br label %init_subr_1.exit1264

init_subr_1.exit1264:                             ; preds = %cond.false.i.i.i1260, %if.then.i6.i.i1262
  %vcell.i.i.i1263 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1238, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1253, ptr %vcell.i.i.i1263, align 8, !tbaa !9
  %call.i.i.i1265 = tail call ptr @gen_intern(ptr noundef nonnull @.str.195, i64 noundef 0)
  %435 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1266 = icmp eq i64 %435, 1
  br i1 %cmp.i.i.i1266, label %if.then.i.i.i1268, label %if.else.i.i.i1274

if.then.i.i.i1268:                                ; preds = %init_subr_1.exit1264
  %436 = load ptr, ptr @heap, align 8, !tbaa !5
  %437 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1267 = icmp ult ptr %436, %437
  br i1 %cmp1.not.i.i.i1267, label %if.end.i.i.i1272, label %if.then2.i.i.i1270

if.then2.i.i.i1270:                               ; preds = %if.then.i.i.i1268
  %call.i.i.i.i1269 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1272

if.end.i.i.i1272:                                 ; preds = %if.then2.i.i.i1270, %if.then.i.i.i1268
  %add.ptr.i.i.i1271 = getelementptr inbounds %struct.obj, ptr %436, i64 1
  store ptr %add.ptr.i.i.i1271, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1285

if.else.i.i.i1274:                                ; preds = %init_subr_1.exit1264
  %438 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1273 = icmp eq ptr %438, null
  br i1 %cmp3.i.i.i1273, label %if.then4.i.i.i1276, label %if.end5.i.i.i1279

if.then4.i.i.i1276:                               ; preds = %if.else.i.i.i1274
  tail call void @gc_for_newcell()
  %.pre.i.i.i1275 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1279

if.end5.i.i.i1279:                                ; preds = %if.then4.i.i.i1276, %if.else.i.i.i1274
  %439 = phi ptr [ %.pre.i.i.i1275, %if.then4.i.i.i1276 ], [ %438, %if.else.i.i.i1274 ]
  %cdr.i.i.i1277 = getelementptr inbounds %struct.obj, ptr %439, i64 0, i32 2, i32 0, i32 1
  %440 = load ptr, ptr %cdr.i.i.i1277, align 8, !tbaa !9
  store ptr %440, ptr @freelist, align 8, !tbaa !5
  %441 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1278 = add nsw i64 %441, 1
  store i64 %inc.i.i.i1278, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1285

subrcons.exit.i.i1285:                            ; preds = %if.end5.i.i.i1279, %if.end.i.i.i1272
  %z.0.i.i.i1280 = phi ptr [ %436, %if.end.i.i.i1272 ], [ %439, %if.end5.i.i.i1279 ]
  store i16 0, ptr %z.0.i.i.i1280, align 8, !tbaa !35
  %type7.i.i.i1281 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1280, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1281, align 2, !tbaa !14
  %storage_as8.i.i.i1282 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1280, i64 0, i32 2
  store ptr @.str.195, ptr %storage_as8.i.i.i1282, align 8, !tbaa !9
  %f11.i.i.i1283 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1280, i64 0, i32 2, i32 0, i32 1
  store ptr @symbolp, ptr %f11.i.i.i1283, align 8, !tbaa !9
  %cmp.i4.i.i1284 = icmp eq ptr %call.i.i.i1265, null
  br i1 %cmp.i4.i.i1284, label %if.then.i6.i.i1289, label %cond.false.i.i.i1287

cond.false.i.i.i1287:                             ; preds = %subrcons.exit.i.i1285
  %type.i.i.i1286 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1265, i64 0, i32 1
  %442 = load i16, ptr %type.i.i.i1286, align 2, !tbaa !14
  %443 = icmp eq i16 %442, 3
  br i1 %443, label %init_subr_1.exit1291, label %if.then.i6.i.i1289

if.then.i6.i.i1289:                               ; preds = %cond.false.i.i.i1287, %subrcons.exit.i.i1285
  %call.i5.i.i1288 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1265) #38
  br label %init_subr_1.exit1291

init_subr_1.exit1291:                             ; preds = %cond.false.i.i.i1287, %if.then.i6.i.i1289
  %vcell.i.i.i1290 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1265, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1280, ptr %vcell.i.i.i1290, align 8, !tbaa !9
  %call.i.i.i1292 = tail call ptr @gen_intern(ptr noundef nonnull @.str.196, i64 noundef 0)
  %444 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1293 = icmp eq i64 %444, 1
  br i1 %cmp.i.i.i1293, label %if.then.i.i.i1295, label %if.else.i.i.i1301

if.then.i.i.i1295:                                ; preds = %init_subr_1.exit1291
  %445 = load ptr, ptr @heap, align 8, !tbaa !5
  %446 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1294 = icmp ult ptr %445, %446
  br i1 %cmp1.not.i.i.i1294, label %if.end.i.i.i1299, label %if.then2.i.i.i1297

if.then2.i.i.i1297:                               ; preds = %if.then.i.i.i1295
  %call.i.i.i.i1296 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1299

if.end.i.i.i1299:                                 ; preds = %if.then2.i.i.i1297, %if.then.i.i.i1295
  %add.ptr.i.i.i1298 = getelementptr inbounds %struct.obj, ptr %445, i64 1
  store ptr %add.ptr.i.i.i1298, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1312

if.else.i.i.i1301:                                ; preds = %init_subr_1.exit1291
  %447 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1300 = icmp eq ptr %447, null
  br i1 %cmp3.i.i.i1300, label %if.then4.i.i.i1303, label %if.end5.i.i.i1306

if.then4.i.i.i1303:                               ; preds = %if.else.i.i.i1301
  tail call void @gc_for_newcell()
  %.pre.i.i.i1302 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1306

if.end5.i.i.i1306:                                ; preds = %if.then4.i.i.i1303, %if.else.i.i.i1301
  %448 = phi ptr [ %.pre.i.i.i1302, %if.then4.i.i.i1303 ], [ %447, %if.else.i.i.i1301 ]
  %cdr.i.i.i1304 = getelementptr inbounds %struct.obj, ptr %448, i64 0, i32 2, i32 0, i32 1
  %449 = load ptr, ptr %cdr.i.i.i1304, align 8, !tbaa !9
  store ptr %449, ptr @freelist, align 8, !tbaa !5
  %450 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1305 = add nsw i64 %450, 1
  store i64 %inc.i.i.i1305, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1312

subrcons.exit.i.i1312:                            ; preds = %if.end5.i.i.i1306, %if.end.i.i.i1299
  %z.0.i.i.i1307 = phi ptr [ %445, %if.end.i.i.i1299 ], [ %448, %if.end5.i.i.i1306 ]
  store i16 0, ptr %z.0.i.i.i1307, align 8, !tbaa !35
  %type7.i.i.i1308 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1307, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1308, align 2, !tbaa !14
  %storage_as8.i.i.i1309 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1307, i64 0, i32 2
  store ptr @.str.196, ptr %storage_as8.i.i.i1309, align 8, !tbaa !9
  %f11.i.i.i1310 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1307, i64 0, i32 2, i32 0, i32 1
  store ptr @numberp, ptr %f11.i.i.i1310, align 8, !tbaa !9
  %cmp.i4.i.i1311 = icmp eq ptr %call.i.i.i1292, null
  br i1 %cmp.i4.i.i1311, label %if.then.i6.i.i1316, label %cond.false.i.i.i1314

cond.false.i.i.i1314:                             ; preds = %subrcons.exit.i.i1312
  %type.i.i.i1313 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1292, i64 0, i32 1
  %451 = load i16, ptr %type.i.i.i1313, align 2, !tbaa !14
  %452 = icmp eq i16 %451, 3
  br i1 %452, label %init_subr_1.exit1318, label %if.then.i6.i.i1316

if.then.i6.i.i1316:                               ; preds = %cond.false.i.i.i1314, %subrcons.exit.i.i1312
  %call.i5.i.i1315 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1292) #38
  br label %init_subr_1.exit1318

init_subr_1.exit1318:                             ; preds = %cond.false.i.i.i1314, %if.then.i6.i.i1316
  %vcell.i.i.i1317 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1292, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1307, ptr %vcell.i.i.i1317, align 8, !tbaa !9
  %call.i.i.i1319 = tail call ptr @gen_intern(ptr noundef nonnull @.str.96, i64 noundef 0)
  %453 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1320 = icmp eq i64 %453, 1
  br i1 %cmp.i.i.i1320, label %if.then.i.i.i1322, label %if.else.i.i.i1328

if.then.i.i.i1322:                                ; preds = %init_subr_1.exit1318
  %454 = load ptr, ptr @heap, align 8, !tbaa !5
  %455 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1321 = icmp ult ptr %454, %455
  br i1 %cmp1.not.i.i.i1321, label %if.end.i.i.i1326, label %if.then2.i.i.i1324

if.then2.i.i.i1324:                               ; preds = %if.then.i.i.i1322
  %call.i.i.i.i1323 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1326

if.end.i.i.i1326:                                 ; preds = %if.then2.i.i.i1324, %if.then.i.i.i1322
  %add.ptr.i.i.i1325 = getelementptr inbounds %struct.obj, ptr %454, i64 1
  store ptr %add.ptr.i.i.i1325, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1339

if.else.i.i.i1328:                                ; preds = %init_subr_1.exit1318
  %456 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1327 = icmp eq ptr %456, null
  br i1 %cmp3.i.i.i1327, label %if.then4.i.i.i1330, label %if.end5.i.i.i1333

if.then4.i.i.i1330:                               ; preds = %if.else.i.i.i1328
  tail call void @gc_for_newcell()
  %.pre.i.i.i1329 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1333

if.end5.i.i.i1333:                                ; preds = %if.then4.i.i.i1330, %if.else.i.i.i1328
  %457 = phi ptr [ %.pre.i.i.i1329, %if.then4.i.i.i1330 ], [ %456, %if.else.i.i.i1328 ]
  %cdr.i.i.i1331 = getelementptr inbounds %struct.obj, ptr %457, i64 0, i32 2, i32 0, i32 1
  %458 = load ptr, ptr %cdr.i.i.i1331, align 8, !tbaa !9
  store ptr %458, ptr @freelist, align 8, !tbaa !5
  %459 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1332 = add nsw i64 %459, 1
  store i64 %inc.i.i.i1332, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1339

subrcons.exit.i.i1339:                            ; preds = %if.end5.i.i.i1333, %if.end.i.i.i1326
  %z.0.i.i.i1334 = phi ptr [ %454, %if.end.i.i.i1326 ], [ %457, %if.end5.i.i.i1333 ]
  store i16 0, ptr %z.0.i.i.i1334, align 8, !tbaa !35
  %type7.i.i.i1335 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1334, i64 0, i32 1
  store i16 10, ptr %type7.i.i.i1335, align 2, !tbaa !14
  %storage_as8.i.i.i1336 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1334, i64 0, i32 2
  store ptr @.str.96, ptr %storage_as8.i.i.i1336, align 8, !tbaa !9
  %f11.i.i.i1337 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1334, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_let, ptr %f11.i.i.i1337, align 8, !tbaa !9
  %cmp.i4.i.i1338 = icmp eq ptr %call.i.i.i1319, null
  br i1 %cmp.i4.i.i1338, label %if.then.i6.i.i1343, label %cond.false.i.i.i1341

cond.false.i.i.i1341:                             ; preds = %subrcons.exit.i.i1339
  %type.i.i.i1340 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1319, i64 0, i32 1
  %460 = load i16, ptr %type.i.i.i1340, align 2, !tbaa !14
  %461 = icmp eq i16 %460, 3
  br i1 %461, label %init_msubr.exit1345, label %if.then.i6.i.i1343

if.then.i6.i.i1343:                               ; preds = %cond.false.i.i.i1341, %subrcons.exit.i.i1339
  %call.i5.i.i1342 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1319) #38
  br label %init_msubr.exit1345

init_msubr.exit1345:                              ; preds = %cond.false.i.i.i1341, %if.then.i6.i.i1343
  %vcell.i.i.i1344 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1319, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1334, ptr %vcell.i.i.i1344, align 8, !tbaa !9
  %call.i.i.i1346 = tail call ptr @gen_intern(ptr noundef nonnull @.str.58, i64 noundef 0)
  %462 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1347 = icmp eq i64 %462, 1
  br i1 %cmp.i.i.i1347, label %if.then.i.i.i1349, label %if.else.i.i.i1355

if.then.i.i.i1349:                                ; preds = %init_msubr.exit1345
  %463 = load ptr, ptr @heap, align 8, !tbaa !5
  %464 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1348 = icmp ult ptr %463, %464
  br i1 %cmp1.not.i.i.i1348, label %if.end.i.i.i1353, label %if.then2.i.i.i1351

if.then2.i.i.i1351:                               ; preds = %if.then.i.i.i1349
  %call.i.i.i.i1350 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1353

if.end.i.i.i1353:                                 ; preds = %if.then2.i.i.i1351, %if.then.i.i.i1349
  %add.ptr.i.i.i1352 = getelementptr inbounds %struct.obj, ptr %463, i64 1
  store ptr %add.ptr.i.i.i1352, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1366

if.else.i.i.i1355:                                ; preds = %init_msubr.exit1345
  %465 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1354 = icmp eq ptr %465, null
  br i1 %cmp3.i.i.i1354, label %if.then4.i.i.i1357, label %if.end5.i.i.i1360

if.then4.i.i.i1357:                               ; preds = %if.else.i.i.i1355
  tail call void @gc_for_newcell()
  %.pre.i.i.i1356 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1360

if.end5.i.i.i1360:                                ; preds = %if.then4.i.i.i1357, %if.else.i.i.i1355
  %466 = phi ptr [ %.pre.i.i.i1356, %if.then4.i.i.i1357 ], [ %465, %if.else.i.i.i1355 ]
  %cdr.i.i.i1358 = getelementptr inbounds %struct.obj, ptr %466, i64 0, i32 2, i32 0, i32 1
  %467 = load ptr, ptr %cdr.i.i.i1358, align 8, !tbaa !9
  store ptr %467, ptr @freelist, align 8, !tbaa !5
  %468 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1359 = add nsw i64 %468, 1
  store i64 %inc.i.i.i1359, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1366

subrcons.exit.i.i1366:                            ; preds = %if.end5.i.i.i1360, %if.end.i.i.i1353
  %z.0.i.i.i1361 = phi ptr [ %463, %if.end.i.i.i1353 ], [ %466, %if.end5.i.i.i1360 ]
  store i16 0, ptr %z.0.i.i.i1361, align 8, !tbaa !35
  %type7.i.i.i1362 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1361, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1362, align 2, !tbaa !14
  %storage_as8.i.i.i1363 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1361, i64 0, i32 2
  store ptr @.str.58, ptr %storage_as8.i.i.i1363, align 8, !tbaa !9
  %f11.i.i.i1364 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1361, i64 0, i32 2, i32 0, i32 1
  store ptr @let_macro, ptr %f11.i.i.i1364, align 8, !tbaa !9
  %cmp.i4.i.i1365 = icmp eq ptr %call.i.i.i1346, null
  br i1 %cmp.i4.i.i1365, label %if.then.i6.i.i1370, label %cond.false.i.i.i1368

cond.false.i.i.i1368:                             ; preds = %subrcons.exit.i.i1366
  %type.i.i.i1367 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1346, i64 0, i32 1
  %469 = load i16, ptr %type.i.i.i1367, align 2, !tbaa !14
  %470 = icmp eq i16 %469, 3
  br i1 %470, label %init_subr_1.exit1372, label %if.then.i6.i.i1370

if.then.i6.i.i1370:                               ; preds = %cond.false.i.i.i1368, %subrcons.exit.i.i1366
  %call.i5.i.i1369 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1346) #38
  br label %init_subr_1.exit1372

init_subr_1.exit1372:                             ; preds = %cond.false.i.i.i1368, %if.then.i6.i.i1370
  %vcell.i.i.i1371 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1346, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1361, ptr %vcell.i.i.i1371, align 8, !tbaa !9
  %call.i.i.i1373 = tail call ptr @gen_intern(ptr noundef nonnull @.str.60, i64 noundef 0)
  %471 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1374 = icmp eq i64 %471, 1
  br i1 %cmp.i.i.i1374, label %if.then.i.i.i1376, label %if.else.i.i.i1382

if.then.i.i.i1376:                                ; preds = %init_subr_1.exit1372
  %472 = load ptr, ptr @heap, align 8, !tbaa !5
  %473 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1375 = icmp ult ptr %472, %473
  br i1 %cmp1.not.i.i.i1375, label %if.end.i.i.i1380, label %if.then2.i.i.i1378

if.then2.i.i.i1378:                               ; preds = %if.then.i.i.i1376
  %call.i.i.i.i1377 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1380

if.end.i.i.i1380:                                 ; preds = %if.then2.i.i.i1378, %if.then.i.i.i1376
  %add.ptr.i.i.i1379 = getelementptr inbounds %struct.obj, ptr %472, i64 1
  store ptr %add.ptr.i.i.i1379, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1393

if.else.i.i.i1382:                                ; preds = %init_subr_1.exit1372
  %474 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1381 = icmp eq ptr %474, null
  br i1 %cmp3.i.i.i1381, label %if.then4.i.i.i1384, label %if.end5.i.i.i1387

if.then4.i.i.i1384:                               ; preds = %if.else.i.i.i1382
  tail call void @gc_for_newcell()
  %.pre.i.i.i1383 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1387

if.end5.i.i.i1387:                                ; preds = %if.then4.i.i.i1384, %if.else.i.i.i1382
  %475 = phi ptr [ %.pre.i.i.i1383, %if.then4.i.i.i1384 ], [ %474, %if.else.i.i.i1382 ]
  %cdr.i.i.i1385 = getelementptr inbounds %struct.obj, ptr %475, i64 0, i32 2, i32 0, i32 1
  %476 = load ptr, ptr %cdr.i.i.i1385, align 8, !tbaa !9
  store ptr %476, ptr @freelist, align 8, !tbaa !5
  %477 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1386 = add nsw i64 %477, 1
  store i64 %inc.i.i.i1386, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1393

subrcons.exit.i.i1393:                            ; preds = %if.end5.i.i.i1387, %if.end.i.i.i1380
  %z.0.i.i.i1388 = phi ptr [ %472, %if.end.i.i.i1380 ], [ %475, %if.end5.i.i.i1387 ]
  store i16 0, ptr %z.0.i.i.i1388, align 8, !tbaa !35
  %type7.i.i.i1389 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1388, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1389, align 2, !tbaa !14
  %storage_as8.i.i.i1390 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1388, i64 0, i32 2
  store ptr @.str.60, ptr %storage_as8.i.i.i1390, align 8, !tbaa !9
  %f11.i.i.i1391 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1388, i64 0, i32 2, i32 0, i32 1
  store ptr @letstar_macro, ptr %f11.i.i.i1391, align 8, !tbaa !9
  %cmp.i4.i.i1392 = icmp eq ptr %call.i.i.i1373, null
  br i1 %cmp.i4.i.i1392, label %if.then.i6.i.i1397, label %cond.false.i.i.i1395

cond.false.i.i.i1395:                             ; preds = %subrcons.exit.i.i1393
  %type.i.i.i1394 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1373, i64 0, i32 1
  %478 = load i16, ptr %type.i.i.i1394, align 2, !tbaa !14
  %479 = icmp eq i16 %478, 3
  br i1 %479, label %init_subr_1.exit1399, label %if.then.i6.i.i1397

if.then.i6.i.i1397:                               ; preds = %cond.false.i.i.i1395, %subrcons.exit.i.i1393
  %call.i5.i.i1396 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1373) #38
  br label %init_subr_1.exit1399

init_subr_1.exit1399:                             ; preds = %cond.false.i.i.i1395, %if.then.i6.i.i1397
  %vcell.i.i.i1398 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1373, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1388, ptr %vcell.i.i.i1398, align 8, !tbaa !9
  %call.i.i.i1400 = tail call ptr @gen_intern(ptr noundef nonnull @.str.62, i64 noundef 0)
  %480 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1401 = icmp eq i64 %480, 1
  br i1 %cmp.i.i.i1401, label %if.then.i.i.i1403, label %if.else.i.i.i1409

if.then.i.i.i1403:                                ; preds = %init_subr_1.exit1399
  %481 = load ptr, ptr @heap, align 8, !tbaa !5
  %482 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1402 = icmp ult ptr %481, %482
  br i1 %cmp1.not.i.i.i1402, label %if.end.i.i.i1407, label %if.then2.i.i.i1405

if.then2.i.i.i1405:                               ; preds = %if.then.i.i.i1403
  %call.i.i.i.i1404 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1407

if.end.i.i.i1407:                                 ; preds = %if.then2.i.i.i1405, %if.then.i.i.i1403
  %add.ptr.i.i.i1406 = getelementptr inbounds %struct.obj, ptr %481, i64 1
  store ptr %add.ptr.i.i.i1406, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1420

if.else.i.i.i1409:                                ; preds = %init_subr_1.exit1399
  %483 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1408 = icmp eq ptr %483, null
  br i1 %cmp3.i.i.i1408, label %if.then4.i.i.i1411, label %if.end5.i.i.i1414

if.then4.i.i.i1411:                               ; preds = %if.else.i.i.i1409
  tail call void @gc_for_newcell()
  %.pre.i.i.i1410 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1414

if.end5.i.i.i1414:                                ; preds = %if.then4.i.i.i1411, %if.else.i.i.i1409
  %484 = phi ptr [ %.pre.i.i.i1410, %if.then4.i.i.i1411 ], [ %483, %if.else.i.i.i1409 ]
  %cdr.i.i.i1412 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 2, i32 0, i32 1
  %485 = load ptr, ptr %cdr.i.i.i1412, align 8, !tbaa !9
  store ptr %485, ptr @freelist, align 8, !tbaa !5
  %486 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1413 = add nsw i64 %486, 1
  store i64 %inc.i.i.i1413, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1420

subrcons.exit.i.i1420:                            ; preds = %if.end5.i.i.i1414, %if.end.i.i.i1407
  %z.0.i.i.i1415 = phi ptr [ %481, %if.end.i.i.i1407 ], [ %484, %if.end5.i.i.i1414 ]
  store i16 0, ptr %z.0.i.i.i1415, align 8, !tbaa !35
  %type7.i.i.i1416 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1415, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1416, align 2, !tbaa !14
  %storage_as8.i.i.i1417 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1415, i64 0, i32 2
  store ptr @.str.62, ptr %storage_as8.i.i.i1417, align 8, !tbaa !9
  %f11.i.i.i1418 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1415, i64 0, i32 2, i32 0, i32 1
  store ptr @letrec_macro, ptr %f11.i.i.i1418, align 8, !tbaa !9
  %cmp.i4.i.i1419 = icmp eq ptr %call.i.i.i1400, null
  br i1 %cmp.i4.i.i1419, label %if.then.i6.i.i1424, label %cond.false.i.i.i1422

cond.false.i.i.i1422:                             ; preds = %subrcons.exit.i.i1420
  %type.i.i.i1421 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1400, i64 0, i32 1
  %487 = load i16, ptr %type.i.i.i1421, align 2, !tbaa !14
  %488 = icmp eq i16 %487, 3
  br i1 %488, label %init_subr_1.exit1426, label %if.then.i6.i.i1424

if.then.i6.i.i1424:                               ; preds = %cond.false.i.i.i1422, %subrcons.exit.i.i1420
  %call.i5.i.i1423 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1400) #38
  br label %init_subr_1.exit1426

init_subr_1.exit1426:                             ; preds = %cond.false.i.i.i1422, %if.then.i6.i.i1424
  %vcell.i.i.i1425 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1400, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1415, ptr %vcell.i.i.i1425, align 8, !tbaa !9
  %call.i.i.i1427 = tail call ptr @gen_intern(ptr noundef nonnull @.str.197, i64 noundef 0)
  %489 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1428 = icmp eq i64 %489, 1
  br i1 %cmp.i.i.i1428, label %if.then.i.i.i1430, label %if.else.i.i.i1436

if.then.i.i.i1430:                                ; preds = %init_subr_1.exit1426
  %490 = load ptr, ptr @heap, align 8, !tbaa !5
  %491 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1429 = icmp ult ptr %490, %491
  br i1 %cmp1.not.i.i.i1429, label %if.end.i.i.i1434, label %if.then2.i.i.i1432

if.then2.i.i.i1432:                               ; preds = %if.then.i.i.i1430
  %call.i.i.i.i1431 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1434

if.end.i.i.i1434:                                 ; preds = %if.then2.i.i.i1432, %if.then.i.i.i1430
  %add.ptr.i.i.i1433 = getelementptr inbounds %struct.obj, ptr %490, i64 1
  store ptr %add.ptr.i.i.i1433, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1447

if.else.i.i.i1436:                                ; preds = %init_subr_1.exit1426
  %492 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1435 = icmp eq ptr %492, null
  br i1 %cmp3.i.i.i1435, label %if.then4.i.i.i1438, label %if.end5.i.i.i1441

if.then4.i.i.i1438:                               ; preds = %if.else.i.i.i1436
  tail call void @gc_for_newcell()
  %.pre.i.i.i1437 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1441

if.end5.i.i.i1441:                                ; preds = %if.then4.i.i.i1438, %if.else.i.i.i1436
  %493 = phi ptr [ %.pre.i.i.i1437, %if.then4.i.i.i1438 ], [ %492, %if.else.i.i.i1436 ]
  %cdr.i.i.i1439 = getelementptr inbounds %struct.obj, ptr %493, i64 0, i32 2, i32 0, i32 1
  %494 = load ptr, ptr %cdr.i.i.i1439, align 8, !tbaa !9
  store ptr %494, ptr @freelist, align 8, !tbaa !5
  %495 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1440 = add nsw i64 %495, 1
  store i64 %inc.i.i.i1440, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1447

subrcons.exit.i.i1447:                            ; preds = %if.end5.i.i.i1441, %if.end.i.i.i1434
  %z.0.i.i.i1442 = phi ptr [ %490, %if.end.i.i.i1434 ], [ %493, %if.end5.i.i.i1441 ]
  store i16 0, ptr %z.0.i.i.i1442, align 8, !tbaa !35
  %type7.i.i.i1443 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1442, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1443, align 2, !tbaa !14
  %storage_as8.i.i.i1444 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1442, i64 0, i32 2
  store ptr @.str.197, ptr %storage_as8.i.i.i1444, align 8, !tbaa !9
  %f11.i.i.i1445 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1442, i64 0, i32 2, i32 0, i32 1
  store ptr @symbol_boundp, ptr %f11.i.i.i1445, align 8, !tbaa !9
  %cmp.i4.i.i1446 = icmp eq ptr %call.i.i.i1427, null
  br i1 %cmp.i4.i.i1446, label %if.then.i6.i.i1451, label %cond.false.i.i.i1449

cond.false.i.i.i1449:                             ; preds = %subrcons.exit.i.i1447
  %type.i.i.i1448 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1427, i64 0, i32 1
  %496 = load i16, ptr %type.i.i.i1448, align 2, !tbaa !14
  %497 = icmp eq i16 %496, 3
  br i1 %497, label %init_subr_2.exit1453, label %if.then.i6.i.i1451

if.then.i6.i.i1451:                               ; preds = %cond.false.i.i.i1449, %subrcons.exit.i.i1447
  %call.i5.i.i1450 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1427) #38
  br label %init_subr_2.exit1453

init_subr_2.exit1453:                             ; preds = %cond.false.i.i.i1449, %if.then.i6.i.i1451
  %vcell.i.i.i1452 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1427, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1442, ptr %vcell.i.i.i1452, align 8, !tbaa !9
  %call.i.i.i1454 = tail call ptr @gen_intern(ptr noundef nonnull @.str.198, i64 noundef 0)
  %498 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1455 = icmp eq i64 %498, 1
  br i1 %cmp.i.i.i1455, label %if.then.i.i.i1457, label %if.else.i.i.i1463

if.then.i.i.i1457:                                ; preds = %init_subr_2.exit1453
  %499 = load ptr, ptr @heap, align 8, !tbaa !5
  %500 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1456 = icmp ult ptr %499, %500
  br i1 %cmp1.not.i.i.i1456, label %if.end.i.i.i1461, label %if.then2.i.i.i1459

if.then2.i.i.i1459:                               ; preds = %if.then.i.i.i1457
  %call.i.i.i.i1458 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1461

if.end.i.i.i1461:                                 ; preds = %if.then2.i.i.i1459, %if.then.i.i.i1457
  %add.ptr.i.i.i1460 = getelementptr inbounds %struct.obj, ptr %499, i64 1
  store ptr %add.ptr.i.i.i1460, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1474

if.else.i.i.i1463:                                ; preds = %init_subr_2.exit1453
  %501 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1462 = icmp eq ptr %501, null
  br i1 %cmp3.i.i.i1462, label %if.then4.i.i.i1465, label %if.end5.i.i.i1468

if.then4.i.i.i1465:                               ; preds = %if.else.i.i.i1463
  tail call void @gc_for_newcell()
  %.pre.i.i.i1464 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1468

if.end5.i.i.i1468:                                ; preds = %if.then4.i.i.i1465, %if.else.i.i.i1463
  %502 = phi ptr [ %.pre.i.i.i1464, %if.then4.i.i.i1465 ], [ %501, %if.else.i.i.i1463 ]
  %cdr.i.i.i1466 = getelementptr inbounds %struct.obj, ptr %502, i64 0, i32 2, i32 0, i32 1
  %503 = load ptr, ptr %cdr.i.i.i1466, align 8, !tbaa !9
  store ptr %503, ptr @freelist, align 8, !tbaa !5
  %504 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1467 = add nsw i64 %504, 1
  store i64 %inc.i.i.i1467, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1474

subrcons.exit.i.i1474:                            ; preds = %if.end5.i.i.i1468, %if.end.i.i.i1461
  %z.0.i.i.i1469 = phi ptr [ %499, %if.end.i.i.i1461 ], [ %502, %if.end5.i.i.i1468 ]
  store i16 0, ptr %z.0.i.i.i1469, align 8, !tbaa !35
  %type7.i.i.i1470 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1469, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1470, align 2, !tbaa !14
  %storage_as8.i.i.i1471 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1469, i64 0, i32 2
  store ptr @.str.198, ptr %storage_as8.i.i.i1471, align 8, !tbaa !9
  %f11.i.i.i1472 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1469, i64 0, i32 2, i32 0, i32 1
  store ptr @symbol_value, ptr %f11.i.i.i1472, align 8, !tbaa !9
  %cmp.i4.i.i1473 = icmp eq ptr %call.i.i.i1454, null
  br i1 %cmp.i4.i.i1473, label %if.then.i6.i.i1478, label %cond.false.i.i.i1476

cond.false.i.i.i1476:                             ; preds = %subrcons.exit.i.i1474
  %type.i.i.i1475 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1454, i64 0, i32 1
  %505 = load i16, ptr %type.i.i.i1475, align 2, !tbaa !14
  %506 = icmp eq i16 %505, 3
  br i1 %506, label %init_subr_2.exit1480, label %if.then.i6.i.i1478

if.then.i6.i.i1478:                               ; preds = %cond.false.i.i.i1476, %subrcons.exit.i.i1474
  %call.i5.i.i1477 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1454) #38
  br label %init_subr_2.exit1480

init_subr_2.exit1480:                             ; preds = %cond.false.i.i.i1476, %if.then.i6.i.i1478
  %vcell.i.i.i1479 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1454, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1469, ptr %vcell.i.i.i1479, align 8, !tbaa !9
  %call.i.i.i1481 = tail call ptr @gen_intern(ptr noundef nonnull @.str.199, i64 noundef 0)
  %507 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1482 = icmp eq i64 %507, 1
  br i1 %cmp.i.i.i1482, label %if.then.i.i.i1484, label %if.else.i.i.i1490

if.then.i.i.i1484:                                ; preds = %init_subr_2.exit1480
  %508 = load ptr, ptr @heap, align 8, !tbaa !5
  %509 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1483 = icmp ult ptr %508, %509
  br i1 %cmp1.not.i.i.i1483, label %if.end.i.i.i1488, label %if.then2.i.i.i1486

if.then2.i.i.i1486:                               ; preds = %if.then.i.i.i1484
  %call.i.i.i.i1485 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1488

if.end.i.i.i1488:                                 ; preds = %if.then2.i.i.i1486, %if.then.i.i.i1484
  %add.ptr.i.i.i1487 = getelementptr inbounds %struct.obj, ptr %508, i64 1
  store ptr %add.ptr.i.i.i1487, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1501

if.else.i.i.i1490:                                ; preds = %init_subr_2.exit1480
  %510 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1489 = icmp eq ptr %510, null
  br i1 %cmp3.i.i.i1489, label %if.then4.i.i.i1492, label %if.end5.i.i.i1495

if.then4.i.i.i1492:                               ; preds = %if.else.i.i.i1490
  tail call void @gc_for_newcell()
  %.pre.i.i.i1491 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1495

if.end5.i.i.i1495:                                ; preds = %if.then4.i.i.i1492, %if.else.i.i.i1490
  %511 = phi ptr [ %.pre.i.i.i1491, %if.then4.i.i.i1492 ], [ %510, %if.else.i.i.i1490 ]
  %cdr.i.i.i1493 = getelementptr inbounds %struct.obj, ptr %511, i64 0, i32 2, i32 0, i32 1
  %512 = load ptr, ptr %cdr.i.i.i1493, align 8, !tbaa !9
  store ptr %512, ptr @freelist, align 8, !tbaa !5
  %513 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1494 = add nsw i64 %513, 1
  store i64 %inc.i.i.i1494, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1501

subrcons.exit.i.i1501:                            ; preds = %if.end5.i.i.i1495, %if.end.i.i.i1488
  %z.0.i.i.i1496 = phi ptr [ %508, %if.end.i.i.i1488 ], [ %511, %if.end5.i.i.i1495 ]
  store i16 0, ptr %z.0.i.i.i1496, align 8, !tbaa !35
  %type7.i.i.i1497 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1496, i64 0, i32 1
  store i16 7, ptr %type7.i.i.i1497, align 2, !tbaa !14
  %storage_as8.i.i.i1498 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1496, i64 0, i32 2
  store ptr @.str.199, ptr %storage_as8.i.i.i1498, align 8, !tbaa !9
  %f11.i.i.i1499 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1496, i64 0, i32 2, i32 0, i32 1
  store ptr @setvar, ptr %f11.i.i.i1499, align 8, !tbaa !9
  %cmp.i4.i.i1500 = icmp eq ptr %call.i.i.i1481, null
  br i1 %cmp.i4.i.i1500, label %if.then.i6.i.i1505, label %cond.false.i.i.i1503

cond.false.i.i.i1503:                             ; preds = %subrcons.exit.i.i1501
  %type.i.i.i1502 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1481, i64 0, i32 1
  %514 = load i16, ptr %type.i.i.i1502, align 2, !tbaa !14
  %515 = icmp eq i16 %514, 3
  br i1 %515, label %init_subr_3.exit1507, label %if.then.i6.i.i1505

if.then.i6.i.i1505:                               ; preds = %cond.false.i.i.i1503, %subrcons.exit.i.i1501
  %call.i5.i.i1504 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1481) #38
  br label %init_subr_3.exit1507

init_subr_3.exit1507:                             ; preds = %cond.false.i.i.i1503, %if.then.i6.i.i1505
  %vcell.i.i.i1506 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1481, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1496, ptr %vcell.i.i.i1506, align 8, !tbaa !9
  %call.i.i.i1508 = tail call ptr @gen_intern(ptr noundef nonnull @.str.200, i64 noundef 0)
  %516 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1509 = icmp eq i64 %516, 1
  br i1 %cmp.i.i.i1509, label %if.then.i.i.i1511, label %if.else.i.i.i1517

if.then.i.i.i1511:                                ; preds = %init_subr_3.exit1507
  %517 = load ptr, ptr @heap, align 8, !tbaa !5
  %518 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1510 = icmp ult ptr %517, %518
  br i1 %cmp1.not.i.i.i1510, label %if.end.i.i.i1515, label %if.then2.i.i.i1513

if.then2.i.i.i1513:                               ; preds = %if.then.i.i.i1511
  %call.i.i.i.i1512 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1515

if.end.i.i.i1515:                                 ; preds = %if.then2.i.i.i1513, %if.then.i.i.i1511
  %add.ptr.i.i.i1514 = getelementptr inbounds %struct.obj, ptr %517, i64 1
  store ptr %add.ptr.i.i.i1514, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1528

if.else.i.i.i1517:                                ; preds = %init_subr_3.exit1507
  %519 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1516 = icmp eq ptr %519, null
  br i1 %cmp3.i.i.i1516, label %if.then4.i.i.i1519, label %if.end5.i.i.i1522

if.then4.i.i.i1519:                               ; preds = %if.else.i.i.i1517
  tail call void @gc_for_newcell()
  %.pre.i.i.i1518 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1522

if.end5.i.i.i1522:                                ; preds = %if.then4.i.i.i1519, %if.else.i.i.i1517
  %520 = phi ptr [ %.pre.i.i.i1518, %if.then4.i.i.i1519 ], [ %519, %if.else.i.i.i1517 ]
  %cdr.i.i.i1520 = getelementptr inbounds %struct.obj, ptr %520, i64 0, i32 2, i32 0, i32 1
  %521 = load ptr, ptr %cdr.i.i.i1520, align 8, !tbaa !9
  store ptr %521, ptr @freelist, align 8, !tbaa !5
  %522 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1521 = add nsw i64 %522, 1
  store i64 %inc.i.i.i1521, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1528

subrcons.exit.i.i1528:                            ; preds = %if.end5.i.i.i1522, %if.end.i.i.i1515
  %z.0.i.i.i1523 = phi ptr [ %517, %if.end.i.i.i1515 ], [ %520, %if.end5.i.i.i1522 ]
  store i16 0, ptr %z.0.i.i.i1523, align 8, !tbaa !35
  %type7.i.i.i1524 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1523, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i1524, align 2, !tbaa !14
  %storage_as8.i.i.i1525 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1523, i64 0, i32 2
  store ptr @.str.200, ptr %storage_as8.i.i.i1525, align 8, !tbaa !9
  %f11.i.i.i1526 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1523, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_tenv, ptr %f11.i.i.i1526, align 8, !tbaa !9
  %cmp.i4.i.i1527 = icmp eq ptr %call.i.i.i1508, null
  br i1 %cmp.i4.i.i1527, label %if.then.i6.i.i1532, label %cond.false.i.i.i1530

cond.false.i.i.i1530:                             ; preds = %subrcons.exit.i.i1528
  %type.i.i.i1529 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1508, i64 0, i32 1
  %523 = load i16, ptr %type.i.i.i1529, align 2, !tbaa !14
  %524 = icmp eq i16 %523, 3
  br i1 %524, label %init_fsubr.exit1534, label %if.then.i6.i.i1532

if.then.i6.i.i1532:                               ; preds = %cond.false.i.i.i1530, %subrcons.exit.i.i1528
  %call.i5.i.i1531 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1508) #38
  br label %init_fsubr.exit1534

init_fsubr.exit1534:                              ; preds = %cond.false.i.i.i1530, %if.then.i6.i.i1532
  %vcell.i.i.i1533 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1508, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1523, ptr %vcell.i.i.i1533, align 8, !tbaa !9
  %call.i.i.i1535 = tail call ptr @gen_intern(ptr noundef nonnull @.str.201, i64 noundef 0)
  %525 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1536 = icmp eq i64 %525, 1
  br i1 %cmp.i.i.i1536, label %if.then.i.i.i1538, label %if.else.i.i.i1544

if.then.i.i.i1538:                                ; preds = %init_fsubr.exit1534
  %526 = load ptr, ptr @heap, align 8, !tbaa !5
  %527 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1537 = icmp ult ptr %526, %527
  br i1 %cmp1.not.i.i.i1537, label %if.end.i.i.i1542, label %if.then2.i.i.i1540

if.then2.i.i.i1540:                               ; preds = %if.then.i.i.i1538
  %call.i.i.i.i1539 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1542

if.end.i.i.i1542:                                 ; preds = %if.then2.i.i.i1540, %if.then.i.i.i1538
  %add.ptr.i.i.i1541 = getelementptr inbounds %struct.obj, ptr %526, i64 1
  store ptr %add.ptr.i.i.i1541, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1555

if.else.i.i.i1544:                                ; preds = %init_fsubr.exit1534
  %528 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1543 = icmp eq ptr %528, null
  br i1 %cmp3.i.i.i1543, label %if.then4.i.i.i1546, label %if.end5.i.i.i1549

if.then4.i.i.i1546:                               ; preds = %if.else.i.i.i1544
  tail call void @gc_for_newcell()
  %.pre.i.i.i1545 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1549

if.end5.i.i.i1549:                                ; preds = %if.then4.i.i.i1546, %if.else.i.i.i1544
  %529 = phi ptr [ %.pre.i.i.i1545, %if.then4.i.i.i1546 ], [ %528, %if.else.i.i.i1544 ]
  %cdr.i.i.i1547 = getelementptr inbounds %struct.obj, ptr %529, i64 0, i32 2, i32 0, i32 1
  %530 = load ptr, ptr %cdr.i.i.i1547, align 8, !tbaa !9
  store ptr %530, ptr @freelist, align 8, !tbaa !5
  %531 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1548 = add nsw i64 %531, 1
  store i64 %inc.i.i.i1548, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1555

subrcons.exit.i.i1555:                            ; preds = %if.end5.i.i.i1549, %if.end.i.i.i1542
  %z.0.i.i.i1550 = phi ptr [ %526, %if.end.i.i.i1542 ], [ %529, %if.end5.i.i.i1549 ]
  store i16 0, ptr %z.0.i.i.i1550, align 8, !tbaa !35
  %type7.i.i.i1551 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1550, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1551, align 2, !tbaa !14
  %storage_as8.i.i.i1552 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1550, i64 0, i32 2
  store ptr @.str.201, ptr %storage_as8.i.i.i1552, align 8, !tbaa !9
  %f11.i.i.i1553 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1550, i64 0, i32 2, i32 0, i32 1
  store ptr @lerr, ptr %f11.i.i.i1553, align 8, !tbaa !9
  %cmp.i4.i.i1554 = icmp eq ptr %call.i.i.i1535, null
  br i1 %cmp.i4.i.i1554, label %if.then.i6.i.i1559, label %cond.false.i.i.i1557

cond.false.i.i.i1557:                             ; preds = %subrcons.exit.i.i1555
  %type.i.i.i1556 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1535, i64 0, i32 1
  %532 = load i16, ptr %type.i.i.i1556, align 2, !tbaa !14
  %533 = icmp eq i16 %532, 3
  br i1 %533, label %init_subr_2.exit1561, label %if.then.i6.i.i1559

if.then.i6.i.i1559:                               ; preds = %cond.false.i.i.i1557, %subrcons.exit.i.i1555
  %call.i5.i.i1558 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1535) #38
  br label %init_subr_2.exit1561

init_subr_2.exit1561:                             ; preds = %cond.false.i.i.i1557, %if.then.i6.i.i1559
  %vcell.i.i.i1560 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1535, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1550, ptr %vcell.i.i.i1560, align 8, !tbaa !9
  %call.i.i.i1562 = tail call ptr @gen_intern(ptr noundef nonnull @.str.20, i64 noundef 0)
  %534 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1563 = icmp eq i64 %534, 1
  br i1 %cmp.i.i.i1563, label %if.then.i.i.i1565, label %if.else.i.i.i1571

if.then.i.i.i1565:                                ; preds = %init_subr_2.exit1561
  %535 = load ptr, ptr @heap, align 8, !tbaa !5
  %536 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1564 = icmp ult ptr %535, %536
  br i1 %cmp1.not.i.i.i1564, label %if.end.i.i.i1569, label %if.then2.i.i.i1567

if.then2.i.i.i1567:                               ; preds = %if.then.i.i.i1565
  %call.i.i.i.i1566 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1569

if.end.i.i.i1569:                                 ; preds = %if.then2.i.i.i1567, %if.then.i.i.i1565
  %add.ptr.i.i.i1568 = getelementptr inbounds %struct.obj, ptr %535, i64 1
  store ptr %add.ptr.i.i.i1568, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1582

if.else.i.i.i1571:                                ; preds = %init_subr_2.exit1561
  %537 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1570 = icmp eq ptr %537, null
  br i1 %cmp3.i.i.i1570, label %if.then4.i.i.i1573, label %if.end5.i.i.i1576

if.then4.i.i.i1573:                               ; preds = %if.else.i.i.i1571
  tail call void @gc_for_newcell()
  %.pre.i.i.i1572 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1576

if.end5.i.i.i1576:                                ; preds = %if.then4.i.i.i1573, %if.else.i.i.i1571
  %538 = phi ptr [ %.pre.i.i.i1572, %if.then4.i.i.i1573 ], [ %537, %if.else.i.i.i1571 ]
  %cdr.i.i.i1574 = getelementptr inbounds %struct.obj, ptr %538, i64 0, i32 2, i32 0, i32 1
  %539 = load ptr, ptr %cdr.i.i.i1574, align 8, !tbaa !9
  store ptr %539, ptr @freelist, align 8, !tbaa !5
  %540 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1575 = add nsw i64 %540, 1
  store i64 %inc.i.i.i1575, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1582

subrcons.exit.i.i1582:                            ; preds = %if.end5.i.i.i1576, %if.end.i.i.i1569
  %z.0.i.i.i1577 = phi ptr [ %535, %if.end.i.i.i1569 ], [ %538, %if.end5.i.i.i1576 ]
  store i16 0, ptr %z.0.i.i.i1577, align 8, !tbaa !35
  %type7.i.i.i1578 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1577, i64 0, i32 1
  store i16 4, ptr %type7.i.i.i1578, align 2, !tbaa !14
  %storage_as8.i.i.i1579 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1577, i64 0, i32 2
  store ptr @.str.20, ptr %storage_as8.i.i.i1579, align 8, !tbaa !9
  %f11.i.i.i1580 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1577, i64 0, i32 2, i32 0, i32 1
  store ptr @quit, ptr %f11.i.i.i1580, align 8, !tbaa !9
  %cmp.i4.i.i1581 = icmp eq ptr %call.i.i.i1562, null
  br i1 %cmp.i4.i.i1581, label %if.then.i6.i.i1586, label %cond.false.i.i.i1584

cond.false.i.i.i1584:                             ; preds = %subrcons.exit.i.i1582
  %type.i.i.i1583 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1562, i64 0, i32 1
  %541 = load i16, ptr %type.i.i.i1583, align 2, !tbaa !14
  %542 = icmp eq i16 %541, 3
  br i1 %542, label %init_subr_0.exit1588, label %if.then.i6.i.i1586

if.then.i6.i.i1586:                               ; preds = %cond.false.i.i.i1584, %subrcons.exit.i.i1582
  %call.i5.i.i1585 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1562) #38
  br label %init_subr_0.exit1588

init_subr_0.exit1588:                             ; preds = %cond.false.i.i.i1584, %if.then.i6.i.i1586
  %vcell.i.i.i1587 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1562, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1577, ptr %vcell.i.i.i1587, align 8, !tbaa !9
  %call.i.i.i1589 = tail call ptr @gen_intern(ptr noundef nonnull @.str.202, i64 noundef 0)
  %543 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1590 = icmp eq i64 %543, 1
  br i1 %cmp.i.i.i1590, label %if.then.i.i.i1592, label %if.else.i.i.i1598

if.then.i.i.i1592:                                ; preds = %init_subr_0.exit1588
  %544 = load ptr, ptr @heap, align 8, !tbaa !5
  %545 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1591 = icmp ult ptr %544, %545
  br i1 %cmp1.not.i.i.i1591, label %if.end.i.i.i1596, label %if.then2.i.i.i1594

if.then2.i.i.i1594:                               ; preds = %if.then.i.i.i1592
  %call.i.i.i.i1593 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1596

if.end.i.i.i1596:                                 ; preds = %if.then2.i.i.i1594, %if.then.i.i.i1592
  %add.ptr.i.i.i1595 = getelementptr inbounds %struct.obj, ptr %544, i64 1
  store ptr %add.ptr.i.i.i1595, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1609

if.else.i.i.i1598:                                ; preds = %init_subr_0.exit1588
  %546 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1597 = icmp eq ptr %546, null
  br i1 %cmp3.i.i.i1597, label %if.then4.i.i.i1600, label %if.end5.i.i.i1603

if.then4.i.i.i1600:                               ; preds = %if.else.i.i.i1598
  tail call void @gc_for_newcell()
  %.pre.i.i.i1599 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1603

if.end5.i.i.i1603:                                ; preds = %if.then4.i.i.i1600, %if.else.i.i.i1598
  %547 = phi ptr [ %.pre.i.i.i1599, %if.then4.i.i.i1600 ], [ %546, %if.else.i.i.i1598 ]
  %cdr.i.i.i1601 = getelementptr inbounds %struct.obj, ptr %547, i64 0, i32 2, i32 0, i32 1
  %548 = load ptr, ptr %cdr.i.i.i1601, align 8, !tbaa !9
  store ptr %548, ptr @freelist, align 8, !tbaa !5
  %549 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1602 = add nsw i64 %549, 1
  store i64 %inc.i.i.i1602, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1609

subrcons.exit.i.i1609:                            ; preds = %if.end5.i.i.i1603, %if.end.i.i.i1596
  %z.0.i.i.i1604 = phi ptr [ %544, %if.end.i.i.i1596 ], [ %547, %if.end5.i.i.i1603 ]
  store i16 0, ptr %z.0.i.i.i1604, align 8, !tbaa !35
  %type7.i.i.i1605 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1604, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1605, align 2, !tbaa !14
  %storage_as8.i.i.i1606 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1604, i64 0, i32 2
  store ptr @.str.202, ptr %storage_as8.i.i.i1606, align 8, !tbaa !9
  %f11.i.i.i1607 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1604, i64 0, i32 2, i32 0, i32 1
  store ptr @nullp, ptr %f11.i.i.i1607, align 8, !tbaa !9
  %cmp.i4.i.i1608 = icmp eq ptr %call.i.i.i1589, null
  br i1 %cmp.i4.i.i1608, label %if.then.i6.i.i1613, label %cond.false.i.i.i1611

cond.false.i.i.i1611:                             ; preds = %subrcons.exit.i.i1609
  %type.i.i.i1610 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1589, i64 0, i32 1
  %550 = load i16, ptr %type.i.i.i1610, align 2, !tbaa !14
  %551 = icmp eq i16 %550, 3
  br i1 %551, label %init_subr_1.exit1615, label %if.then.i6.i.i1613

if.then.i6.i.i1613:                               ; preds = %cond.false.i.i.i1611, %subrcons.exit.i.i1609
  %call.i5.i.i1612 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1589) #38
  br label %init_subr_1.exit1615

init_subr_1.exit1615:                             ; preds = %cond.false.i.i.i1611, %if.then.i6.i.i1613
  %vcell.i.i.i1614 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1589, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1604, ptr %vcell.i.i.i1614, align 8, !tbaa !9
  %call.i.i.i1616 = tail call ptr @gen_intern(ptr noundef nonnull @.str.203, i64 noundef 0)
  %552 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1617 = icmp eq i64 %552, 1
  br i1 %cmp.i.i.i1617, label %if.then.i.i.i1619, label %if.else.i.i.i1625

if.then.i.i.i1619:                                ; preds = %init_subr_1.exit1615
  %553 = load ptr, ptr @heap, align 8, !tbaa !5
  %554 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1618 = icmp ult ptr %553, %554
  br i1 %cmp1.not.i.i.i1618, label %if.end.i.i.i1623, label %if.then2.i.i.i1621

if.then2.i.i.i1621:                               ; preds = %if.then.i.i.i1619
  %call.i.i.i.i1620 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1623

if.end.i.i.i1623:                                 ; preds = %if.then2.i.i.i1621, %if.then.i.i.i1619
  %add.ptr.i.i.i1622 = getelementptr inbounds %struct.obj, ptr %553, i64 1
  store ptr %add.ptr.i.i.i1622, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1636

if.else.i.i.i1625:                                ; preds = %init_subr_1.exit1615
  %555 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1624 = icmp eq ptr %555, null
  br i1 %cmp3.i.i.i1624, label %if.then4.i.i.i1627, label %if.end5.i.i.i1630

if.then4.i.i.i1627:                               ; preds = %if.else.i.i.i1625
  tail call void @gc_for_newcell()
  %.pre.i.i.i1626 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1630

if.end5.i.i.i1630:                                ; preds = %if.then4.i.i.i1627, %if.else.i.i.i1625
  %556 = phi ptr [ %.pre.i.i.i1626, %if.then4.i.i.i1627 ], [ %555, %if.else.i.i.i1625 ]
  %cdr.i.i.i1628 = getelementptr inbounds %struct.obj, ptr %556, i64 0, i32 2, i32 0, i32 1
  %557 = load ptr, ptr %cdr.i.i.i1628, align 8, !tbaa !9
  store ptr %557, ptr @freelist, align 8, !tbaa !5
  %558 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1629 = add nsw i64 %558, 1
  store i64 %inc.i.i.i1629, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1636

subrcons.exit.i.i1636:                            ; preds = %if.end5.i.i.i1630, %if.end.i.i.i1623
  %z.0.i.i.i1631 = phi ptr [ %553, %if.end.i.i.i1623 ], [ %556, %if.end5.i.i.i1630 ]
  store i16 0, ptr %z.0.i.i.i1631, align 8, !tbaa !35
  %type7.i.i.i1632 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1631, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1632, align 2, !tbaa !14
  %storage_as8.i.i.i1633 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1631, i64 0, i32 2
  store ptr @.str.203, ptr %storage_as8.i.i.i1633, align 8, !tbaa !9
  %f11.i.i.i1634 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1631, i64 0, i32 2, i32 0, i32 1
  store ptr @nullp, ptr %f11.i.i.i1634, align 8, !tbaa !9
  %cmp.i4.i.i1635 = icmp eq ptr %call.i.i.i1616, null
  br i1 %cmp.i4.i.i1635, label %if.then.i6.i.i1640, label %cond.false.i.i.i1638

cond.false.i.i.i1638:                             ; preds = %subrcons.exit.i.i1636
  %type.i.i.i1637 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1616, i64 0, i32 1
  %559 = load i16, ptr %type.i.i.i1637, align 2, !tbaa !14
  %560 = icmp eq i16 %559, 3
  br i1 %560, label %init_subr_1.exit1642, label %if.then.i6.i.i1640

if.then.i6.i.i1640:                               ; preds = %cond.false.i.i.i1638, %subrcons.exit.i.i1636
  %call.i5.i.i1639 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1616) #38
  br label %init_subr_1.exit1642

init_subr_1.exit1642:                             ; preds = %cond.false.i.i.i1638, %if.then.i6.i.i1640
  %vcell.i.i.i1641 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1616, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1631, ptr %vcell.i.i.i1641, align 8, !tbaa !9
  %call.i.i.i1643 = tail call ptr @gen_intern(ptr noundef nonnull @.str.204, i64 noundef 0)
  %561 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1644 = icmp eq i64 %561, 1
  br i1 %cmp.i.i.i1644, label %if.then.i.i.i1646, label %if.else.i.i.i1652

if.then.i.i.i1646:                                ; preds = %init_subr_1.exit1642
  %562 = load ptr, ptr @heap, align 8, !tbaa !5
  %563 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1645 = icmp ult ptr %562, %563
  br i1 %cmp1.not.i.i.i1645, label %if.end.i.i.i1650, label %if.then2.i.i.i1648

if.then2.i.i.i1648:                               ; preds = %if.then.i.i.i1646
  %call.i.i.i.i1647 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1650

if.end.i.i.i1650:                                 ; preds = %if.then2.i.i.i1648, %if.then.i.i.i1646
  %add.ptr.i.i.i1649 = getelementptr inbounds %struct.obj, ptr %562, i64 1
  store ptr %add.ptr.i.i.i1649, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1663

if.else.i.i.i1652:                                ; preds = %init_subr_1.exit1642
  %564 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1651 = icmp eq ptr %564, null
  br i1 %cmp3.i.i.i1651, label %if.then4.i.i.i1654, label %if.end5.i.i.i1657

if.then4.i.i.i1654:                               ; preds = %if.else.i.i.i1652
  tail call void @gc_for_newcell()
  %.pre.i.i.i1653 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1657

if.end5.i.i.i1657:                                ; preds = %if.then4.i.i.i1654, %if.else.i.i.i1652
  %565 = phi ptr [ %.pre.i.i.i1653, %if.then4.i.i.i1654 ], [ %564, %if.else.i.i.i1652 ]
  %cdr.i.i.i1655 = getelementptr inbounds %struct.obj, ptr %565, i64 0, i32 2, i32 0, i32 1
  %566 = load ptr, ptr %cdr.i.i.i1655, align 8, !tbaa !9
  store ptr %566, ptr @freelist, align 8, !tbaa !5
  %567 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1656 = add nsw i64 %567, 1
  store i64 %inc.i.i.i1656, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1663

subrcons.exit.i.i1663:                            ; preds = %if.end5.i.i.i1657, %if.end.i.i.i1650
  %z.0.i.i.i1658 = phi ptr [ %562, %if.end.i.i.i1650 ], [ %565, %if.end5.i.i.i1657 ]
  store i16 0, ptr %z.0.i.i.i1658, align 8, !tbaa !35
  %type7.i.i.i1659 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1658, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1659, align 2, !tbaa !14
  %storage_as8.i.i.i1660 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1658, i64 0, i32 2
  store ptr @.str.204, ptr %storage_as8.i.i.i1660, align 8, !tbaa !9
  %f11.i.i.i1661 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1658, i64 0, i32 2, i32 0, i32 1
  store ptr @envlookup, ptr %f11.i.i.i1661, align 8, !tbaa !9
  %cmp.i4.i.i1662 = icmp eq ptr %call.i.i.i1643, null
  br i1 %cmp.i4.i.i1662, label %if.then.i6.i.i1667, label %cond.false.i.i.i1665

cond.false.i.i.i1665:                             ; preds = %subrcons.exit.i.i1663
  %type.i.i.i1664 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1643, i64 0, i32 1
  %568 = load i16, ptr %type.i.i.i1664, align 2, !tbaa !14
  %569 = icmp eq i16 %568, 3
  br i1 %569, label %init_subr_2.exit1669, label %if.then.i6.i.i1667

if.then.i6.i.i1667:                               ; preds = %cond.false.i.i.i1665, %subrcons.exit.i.i1663
  %call.i5.i.i1666 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1643) #38
  br label %init_subr_2.exit1669

init_subr_2.exit1669:                             ; preds = %cond.false.i.i.i1665, %if.then.i6.i.i1667
  %vcell.i.i.i1668 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1643, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1658, ptr %vcell.i.i.i1668, align 8, !tbaa !9
  %call.i.i.i1670 = tail call ptr @gen_intern(ptr noundef nonnull @.str.205, i64 noundef 0)
  %570 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1671 = icmp eq i64 %570, 1
  br i1 %cmp.i.i.i1671, label %if.then.i.i.i1673, label %if.else.i.i.i1679

if.then.i.i.i1673:                                ; preds = %init_subr_2.exit1669
  %571 = load ptr, ptr @heap, align 8, !tbaa !5
  %572 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1672 = icmp ult ptr %571, %572
  br i1 %cmp1.not.i.i.i1672, label %if.end.i.i.i1677, label %if.then2.i.i.i1675

if.then2.i.i.i1675:                               ; preds = %if.then.i.i.i1673
  %call.i.i.i.i1674 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1677

if.end.i.i.i1677:                                 ; preds = %if.then2.i.i.i1675, %if.then.i.i.i1673
  %add.ptr.i.i.i1676 = getelementptr inbounds %struct.obj, ptr %571, i64 1
  store ptr %add.ptr.i.i.i1676, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1690

if.else.i.i.i1679:                                ; preds = %init_subr_2.exit1669
  %573 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1678 = icmp eq ptr %573, null
  br i1 %cmp3.i.i.i1678, label %if.then4.i.i.i1681, label %if.end5.i.i.i1684

if.then4.i.i.i1681:                               ; preds = %if.else.i.i.i1679
  tail call void @gc_for_newcell()
  %.pre.i.i.i1680 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1684

if.end5.i.i.i1684:                                ; preds = %if.then4.i.i.i1681, %if.else.i.i.i1679
  %574 = phi ptr [ %.pre.i.i.i1680, %if.then4.i.i.i1681 ], [ %573, %if.else.i.i.i1679 ]
  %cdr.i.i.i1682 = getelementptr inbounds %struct.obj, ptr %574, i64 0, i32 2, i32 0, i32 1
  %575 = load ptr, ptr %cdr.i.i.i1682, align 8, !tbaa !9
  store ptr %575, ptr @freelist, align 8, !tbaa !5
  %576 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1683 = add nsw i64 %576, 1
  store i64 %inc.i.i.i1683, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1690

subrcons.exit.i.i1690:                            ; preds = %if.end5.i.i.i1684, %if.end.i.i.i1677
  %z.0.i.i.i1685 = phi ptr [ %571, %if.end.i.i.i1677 ], [ %574, %if.end5.i.i.i1684 ]
  store i16 0, ptr %z.0.i.i.i1685, align 8, !tbaa !35
  %type7.i.i.i1686 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1685, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1686, align 2, !tbaa !14
  %storage_as8.i.i.i1687 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1685, i64 0, i32 2
  store ptr @.str.205, ptr %storage_as8.i.i.i1687, align 8, !tbaa !9
  %f11.i.i.i1688 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1685, i64 0, i32 2, i32 0, i32 1
  store ptr @reverse, ptr %f11.i.i.i1688, align 8, !tbaa !9
  %cmp.i4.i.i1689 = icmp eq ptr %call.i.i.i1670, null
  br i1 %cmp.i4.i.i1689, label %if.then.i6.i.i1694, label %cond.false.i.i.i1692

cond.false.i.i.i1692:                             ; preds = %subrcons.exit.i.i1690
  %type.i.i.i1691 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1670, i64 0, i32 1
  %577 = load i16, ptr %type.i.i.i1691, align 2, !tbaa !14
  %578 = icmp eq i16 %577, 3
  br i1 %578, label %init_subr_1.exit1696, label %if.then.i6.i.i1694

if.then.i6.i.i1694:                               ; preds = %cond.false.i.i.i1692, %subrcons.exit.i.i1690
  %call.i5.i.i1693 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1670) #38
  br label %init_subr_1.exit1696

init_subr_1.exit1696:                             ; preds = %cond.false.i.i.i1692, %if.then.i6.i.i1694
  %vcell.i.i.i1695 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1670, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1685, ptr %vcell.i.i.i1695, align 8, !tbaa !9
  %call.i.i.i1697 = tail call ptr @gen_intern(ptr noundef nonnull @.str.206, i64 noundef 0)
  %579 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1698 = icmp eq i64 %579, 1
  br i1 %cmp.i.i.i1698, label %if.then.i.i.i1700, label %if.else.i.i.i1706

if.then.i.i.i1700:                                ; preds = %init_subr_1.exit1696
  %580 = load ptr, ptr @heap, align 8, !tbaa !5
  %581 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1699 = icmp ult ptr %580, %581
  br i1 %cmp1.not.i.i.i1699, label %if.end.i.i.i1704, label %if.then2.i.i.i1702

if.then2.i.i.i1702:                               ; preds = %if.then.i.i.i1700
  %call.i.i.i.i1701 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1704

if.end.i.i.i1704:                                 ; preds = %if.then2.i.i.i1702, %if.then.i.i.i1700
  %add.ptr.i.i.i1703 = getelementptr inbounds %struct.obj, ptr %580, i64 1
  store ptr %add.ptr.i.i.i1703, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1717

if.else.i.i.i1706:                                ; preds = %init_subr_1.exit1696
  %582 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1705 = icmp eq ptr %582, null
  br i1 %cmp3.i.i.i1705, label %if.then4.i.i.i1708, label %if.end5.i.i.i1711

if.then4.i.i.i1708:                               ; preds = %if.else.i.i.i1706
  tail call void @gc_for_newcell()
  %.pre.i.i.i1707 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1711

if.end5.i.i.i1711:                                ; preds = %if.then4.i.i.i1708, %if.else.i.i.i1706
  %583 = phi ptr [ %.pre.i.i.i1707, %if.then4.i.i.i1708 ], [ %582, %if.else.i.i.i1706 ]
  %cdr.i.i.i1709 = getelementptr inbounds %struct.obj, ptr %583, i64 0, i32 2, i32 0, i32 1
  %584 = load ptr, ptr %cdr.i.i.i1709, align 8, !tbaa !9
  store ptr %584, ptr @freelist, align 8, !tbaa !5
  %585 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1710 = add nsw i64 %585, 1
  store i64 %inc.i.i.i1710, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1717

subrcons.exit.i.i1717:                            ; preds = %if.end5.i.i.i1711, %if.end.i.i.i1704
  %z.0.i.i.i1712 = phi ptr [ %580, %if.end.i.i.i1704 ], [ %583, %if.end5.i.i.i1711 ]
  store i16 0, ptr %z.0.i.i.i1712, align 8, !tbaa !35
  %type7.i.i.i1713 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1712, i64 0, i32 1
  store i16 8, ptr %type7.i.i.i1713, align 2, !tbaa !14
  %storage_as8.i.i.i1714 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1712, i64 0, i32 2
  store ptr @.str.206, ptr %storage_as8.i.i.i1714, align 8, !tbaa !9
  %f11.i.i.i1715 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1712, i64 0, i32 2, i32 0, i32 1
  store ptr @symbolconc, ptr %f11.i.i.i1715, align 8, !tbaa !9
  %cmp.i4.i.i1716 = icmp eq ptr %call.i.i.i1697, null
  br i1 %cmp.i4.i.i1716, label %if.then.i6.i.i1721, label %cond.false.i.i.i1719

cond.false.i.i.i1719:                             ; preds = %subrcons.exit.i.i1717
  %type.i.i.i1718 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1697, i64 0, i32 1
  %586 = load i16, ptr %type.i.i.i1718, align 2, !tbaa !14
  %587 = icmp eq i16 %586, 3
  br i1 %587, label %init_lsubr.exit1723, label %if.then.i6.i.i1721

if.then.i6.i.i1721:                               ; preds = %cond.false.i.i.i1719, %subrcons.exit.i.i1717
  %call.i5.i.i1720 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1697) #38
  br label %init_lsubr.exit1723

init_lsubr.exit1723:                              ; preds = %cond.false.i.i.i1719, %if.then.i6.i.i1721
  %vcell.i.i.i1722 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1697, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1712, ptr %vcell.i.i.i1722, align 8, !tbaa !9
  %call.i.i.i1724 = tail call ptr @gen_intern(ptr noundef nonnull @.str.207, i64 noundef 0)
  %588 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1725 = icmp eq i64 %588, 1
  br i1 %cmp.i.i.i1725, label %if.then.i.i.i1727, label %if.else.i.i.i1733

if.then.i.i.i1727:                                ; preds = %init_lsubr.exit1723
  %589 = load ptr, ptr @heap, align 8, !tbaa !5
  %590 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1726 = icmp ult ptr %589, %590
  br i1 %cmp1.not.i.i.i1726, label %if.end.i.i.i1731, label %if.then2.i.i.i1729

if.then2.i.i.i1729:                               ; preds = %if.then.i.i.i1727
  %call.i.i.i.i1728 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1731

if.end.i.i.i1731:                                 ; preds = %if.then2.i.i.i1729, %if.then.i.i.i1727
  %add.ptr.i.i.i1730 = getelementptr inbounds %struct.obj, ptr %589, i64 1
  store ptr %add.ptr.i.i.i1730, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1744

if.else.i.i.i1733:                                ; preds = %init_lsubr.exit1723
  %591 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1732 = icmp eq ptr %591, null
  br i1 %cmp3.i.i.i1732, label %if.then4.i.i.i1735, label %if.end5.i.i.i1738

if.then4.i.i.i1735:                               ; preds = %if.else.i.i.i1733
  tail call void @gc_for_newcell()
  %.pre.i.i.i1734 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1738

if.end5.i.i.i1738:                                ; preds = %if.then4.i.i.i1735, %if.else.i.i.i1733
  %592 = phi ptr [ %.pre.i.i.i1734, %if.then4.i.i.i1735 ], [ %591, %if.else.i.i.i1733 ]
  %cdr.i.i.i1736 = getelementptr inbounds %struct.obj, ptr %592, i64 0, i32 2, i32 0, i32 1
  %593 = load ptr, ptr %cdr.i.i.i1736, align 8, !tbaa !9
  store ptr %593, ptr @freelist, align 8, !tbaa !5
  %594 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1737 = add nsw i64 %594, 1
  store i64 %inc.i.i.i1737, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1744

subrcons.exit.i.i1744:                            ; preds = %if.end5.i.i.i1738, %if.end.i.i.i1731
  %z.0.i.i.i1739 = phi ptr [ %589, %if.end.i.i.i1731 ], [ %592, %if.end5.i.i.i1738 ]
  store i16 0, ptr %z.0.i.i.i1739, align 8, !tbaa !35
  %type7.i.i.i1740 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1739, i64 0, i32 1
  store i16 7, ptr %type7.i.i.i1740, align 2, !tbaa !14
  %storage_as8.i.i.i1741 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1739, i64 0, i32 2
  store ptr @.str.207, ptr %storage_as8.i.i.i1741, align 8, !tbaa !9
  %f11.i.i.i1742 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1739, i64 0, i32 2, i32 0, i32 1
  store ptr @save_forms, ptr %f11.i.i.i1742, align 8, !tbaa !9
  %cmp.i4.i.i1743 = icmp eq ptr %call.i.i.i1724, null
  br i1 %cmp.i4.i.i1743, label %if.then.i6.i.i1748, label %cond.false.i.i.i1746

cond.false.i.i.i1746:                             ; preds = %subrcons.exit.i.i1744
  %type.i.i.i1745 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1724, i64 0, i32 1
  %595 = load i16, ptr %type.i.i.i1745, align 2, !tbaa !14
  %596 = icmp eq i16 %595, 3
  br i1 %596, label %init_subr_3.exit1750, label %if.then.i6.i.i1748

if.then.i6.i.i1748:                               ; preds = %cond.false.i.i.i1746, %subrcons.exit.i.i1744
  %call.i5.i.i1747 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1724) #38
  br label %init_subr_3.exit1750

init_subr_3.exit1750:                             ; preds = %cond.false.i.i.i1746, %if.then.i6.i.i1748
  %vcell.i.i.i1749 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1724, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1739, ptr %vcell.i.i.i1749, align 8, !tbaa !9
  %call.i.i.i1751 = tail call ptr @gen_intern(ptr noundef nonnull @.str.208, i64 noundef 0)
  %597 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1752 = icmp eq i64 %597, 1
  br i1 %cmp.i.i.i1752, label %if.then.i.i.i1754, label %if.else.i.i.i1760

if.then.i.i.i1754:                                ; preds = %init_subr_3.exit1750
  %598 = load ptr, ptr @heap, align 8, !tbaa !5
  %599 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1753 = icmp ult ptr %598, %599
  br i1 %cmp1.not.i.i.i1753, label %if.end.i.i.i1758, label %if.then2.i.i.i1756

if.then2.i.i.i1756:                               ; preds = %if.then.i.i.i1754
  %call.i.i.i.i1755 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1758

if.end.i.i.i1758:                                 ; preds = %if.then2.i.i.i1756, %if.then.i.i.i1754
  %add.ptr.i.i.i1757 = getelementptr inbounds %struct.obj, ptr %598, i64 1
  store ptr %add.ptr.i.i.i1757, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1771

if.else.i.i.i1760:                                ; preds = %init_subr_3.exit1750
  %600 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1759 = icmp eq ptr %600, null
  br i1 %cmp3.i.i.i1759, label %if.then4.i.i.i1762, label %if.end5.i.i.i1765

if.then4.i.i.i1762:                               ; preds = %if.else.i.i.i1760
  tail call void @gc_for_newcell()
  %.pre.i.i.i1761 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1765

if.end5.i.i.i1765:                                ; preds = %if.then4.i.i.i1762, %if.else.i.i.i1760
  %601 = phi ptr [ %.pre.i.i.i1761, %if.then4.i.i.i1762 ], [ %600, %if.else.i.i.i1760 ]
  %cdr.i.i.i1763 = getelementptr inbounds %struct.obj, ptr %601, i64 0, i32 2, i32 0, i32 1
  %602 = load ptr, ptr %cdr.i.i.i1763, align 8, !tbaa !9
  store ptr %602, ptr @freelist, align 8, !tbaa !5
  %603 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1764 = add nsw i64 %603, 1
  store i64 %inc.i.i.i1764, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1771

subrcons.exit.i.i1771:                            ; preds = %if.end5.i.i.i1765, %if.end.i.i.i1758
  %z.0.i.i.i1766 = phi ptr [ %598, %if.end.i.i.i1758 ], [ %601, %if.end5.i.i.i1765 ]
  store i16 0, ptr %z.0.i.i.i1766, align 8, !tbaa !35
  %type7.i.i.i1767 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1766, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1767, align 2, !tbaa !14
  %storage_as8.i.i.i1768 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1766, i64 0, i32 2
  store ptr @.str.208, ptr %storage_as8.i.i.i1768, align 8, !tbaa !9
  %f11.i.i.i1769 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1766, i64 0, i32 2, i32 0, i32 1
  store ptr @fopen_l, ptr %f11.i.i.i1769, align 8, !tbaa !9
  %cmp.i4.i.i1770 = icmp eq ptr %call.i.i.i1751, null
  br i1 %cmp.i4.i.i1770, label %if.then.i6.i.i1775, label %cond.false.i.i.i1773

cond.false.i.i.i1773:                             ; preds = %subrcons.exit.i.i1771
  %type.i.i.i1772 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1751, i64 0, i32 1
  %604 = load i16, ptr %type.i.i.i1772, align 2, !tbaa !14
  %605 = icmp eq i16 %604, 3
  br i1 %605, label %init_subr_2.exit1777, label %if.then.i6.i.i1775

if.then.i6.i.i1775:                               ; preds = %cond.false.i.i.i1773, %subrcons.exit.i.i1771
  %call.i5.i.i1774 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1751) #38
  br label %init_subr_2.exit1777

init_subr_2.exit1777:                             ; preds = %cond.false.i.i.i1773, %if.then.i6.i.i1775
  %vcell.i.i.i1776 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1751, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1766, ptr %vcell.i.i.i1776, align 8, !tbaa !9
  %call.i.i.i1778 = tail call ptr @gen_intern(ptr noundef nonnull @.str.209, i64 noundef 0)
  %606 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1779 = icmp eq i64 %606, 1
  br i1 %cmp.i.i.i1779, label %if.then.i.i.i1781, label %if.else.i.i.i1787

if.then.i.i.i1781:                                ; preds = %init_subr_2.exit1777
  %607 = load ptr, ptr @heap, align 8, !tbaa !5
  %608 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1780 = icmp ult ptr %607, %608
  br i1 %cmp1.not.i.i.i1780, label %if.end.i.i.i1785, label %if.then2.i.i.i1783

if.then2.i.i.i1783:                               ; preds = %if.then.i.i.i1781
  %call.i.i.i.i1782 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1785

if.end.i.i.i1785:                                 ; preds = %if.then2.i.i.i1783, %if.then.i.i.i1781
  %add.ptr.i.i.i1784 = getelementptr inbounds %struct.obj, ptr %607, i64 1
  store ptr %add.ptr.i.i.i1784, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1798

if.else.i.i.i1787:                                ; preds = %init_subr_2.exit1777
  %609 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1786 = icmp eq ptr %609, null
  br i1 %cmp3.i.i.i1786, label %if.then4.i.i.i1789, label %if.end5.i.i.i1792

if.then4.i.i.i1789:                               ; preds = %if.else.i.i.i1787
  tail call void @gc_for_newcell()
  %.pre.i.i.i1788 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1792

if.end5.i.i.i1792:                                ; preds = %if.then4.i.i.i1789, %if.else.i.i.i1787
  %610 = phi ptr [ %.pre.i.i.i1788, %if.then4.i.i.i1789 ], [ %609, %if.else.i.i.i1787 ]
  %cdr.i.i.i1790 = getelementptr inbounds %struct.obj, ptr %610, i64 0, i32 2, i32 0, i32 1
  %611 = load ptr, ptr %cdr.i.i.i1790, align 8, !tbaa !9
  store ptr %611, ptr @freelist, align 8, !tbaa !5
  %612 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1791 = add nsw i64 %612, 1
  store i64 %inc.i.i.i1791, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1798

subrcons.exit.i.i1798:                            ; preds = %if.end5.i.i.i1792, %if.end.i.i.i1785
  %z.0.i.i.i1793 = phi ptr [ %607, %if.end.i.i.i1785 ], [ %610, %if.end5.i.i.i1792 ]
  store i16 0, ptr %z.0.i.i.i1793, align 8, !tbaa !35
  %type7.i.i.i1794 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1793, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1794, align 2, !tbaa !14
  %storage_as8.i.i.i1795 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1793, i64 0, i32 2
  store ptr @.str.209, ptr %storage_as8.i.i.i1795, align 8, !tbaa !9
  %f11.i.i.i1796 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1793, i64 0, i32 2, i32 0, i32 1
  store ptr @fclose_l, ptr %f11.i.i.i1796, align 8, !tbaa !9
  %cmp.i4.i.i1797 = icmp eq ptr %call.i.i.i1778, null
  br i1 %cmp.i4.i.i1797, label %if.then.i6.i.i1802, label %cond.false.i.i.i1800

cond.false.i.i.i1800:                             ; preds = %subrcons.exit.i.i1798
  %type.i.i.i1799 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1778, i64 0, i32 1
  %613 = load i16, ptr %type.i.i.i1799, align 2, !tbaa !14
  %614 = icmp eq i16 %613, 3
  br i1 %614, label %init_subr_1.exit1804, label %if.then.i6.i.i1802

if.then.i6.i.i1802:                               ; preds = %cond.false.i.i.i1800, %subrcons.exit.i.i1798
  %call.i5.i.i1801 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1778) #38
  br label %init_subr_1.exit1804

init_subr_1.exit1804:                             ; preds = %cond.false.i.i.i1800, %if.then.i6.i.i1802
  %vcell.i.i.i1803 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1778, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1793, ptr %vcell.i.i.i1803, align 8, !tbaa !9
  %call.i.i.i1805 = tail call ptr @gen_intern(ptr noundef nonnull @.str.210, i64 noundef 0)
  %615 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1806 = icmp eq i64 %615, 1
  br i1 %cmp.i.i.i1806, label %if.then.i.i.i1808, label %if.else.i.i.i1814

if.then.i.i.i1808:                                ; preds = %init_subr_1.exit1804
  %616 = load ptr, ptr @heap, align 8, !tbaa !5
  %617 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1807 = icmp ult ptr %616, %617
  br i1 %cmp1.not.i.i.i1807, label %if.end.i.i.i1812, label %if.then2.i.i.i1810

if.then2.i.i.i1810:                               ; preds = %if.then.i.i.i1808
  %call.i.i.i.i1809 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1812

if.end.i.i.i1812:                                 ; preds = %if.then2.i.i.i1810, %if.then.i.i.i1808
  %add.ptr.i.i.i1811 = getelementptr inbounds %struct.obj, ptr %616, i64 1
  store ptr %add.ptr.i.i.i1811, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1825

if.else.i.i.i1814:                                ; preds = %init_subr_1.exit1804
  %618 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1813 = icmp eq ptr %618, null
  br i1 %cmp3.i.i.i1813, label %if.then4.i.i.i1816, label %if.end5.i.i.i1819

if.then4.i.i.i1816:                               ; preds = %if.else.i.i.i1814
  tail call void @gc_for_newcell()
  %.pre.i.i.i1815 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1819

if.end5.i.i.i1819:                                ; preds = %if.then4.i.i.i1816, %if.else.i.i.i1814
  %619 = phi ptr [ %.pre.i.i.i1815, %if.then4.i.i.i1816 ], [ %618, %if.else.i.i.i1814 ]
  %cdr.i.i.i1817 = getelementptr inbounds %struct.obj, ptr %619, i64 0, i32 2, i32 0, i32 1
  %620 = load ptr, ptr %cdr.i.i.i1817, align 8, !tbaa !9
  store ptr %620, ptr @freelist, align 8, !tbaa !5
  %621 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1818 = add nsw i64 %621, 1
  store i64 %inc.i.i.i1818, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1825

subrcons.exit.i.i1825:                            ; preds = %if.end5.i.i.i1819, %if.end.i.i.i1812
  %z.0.i.i.i1820 = phi ptr [ %616, %if.end.i.i.i1812 ], [ %619, %if.end5.i.i.i1819 ]
  store i16 0, ptr %z.0.i.i.i1820, align 8, !tbaa !35
  %type7.i.i.i1821 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1820, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1821, align 2, !tbaa !14
  %storage_as8.i.i.i1822 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1820, i64 0, i32 2
  store ptr @.str.210, ptr %storage_as8.i.i.i1822, align 8, !tbaa !9
  %f11.i.i.i1823 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1820, i64 0, i32 2, i32 0, i32 1
  store ptr @lgetc, ptr %f11.i.i.i1823, align 8, !tbaa !9
  %cmp.i4.i.i1824 = icmp eq ptr %call.i.i.i1805, null
  br i1 %cmp.i4.i.i1824, label %if.then.i6.i.i1829, label %cond.false.i.i.i1827

cond.false.i.i.i1827:                             ; preds = %subrcons.exit.i.i1825
  %type.i.i.i1826 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1805, i64 0, i32 1
  %622 = load i16, ptr %type.i.i.i1826, align 2, !tbaa !14
  %623 = icmp eq i16 %622, 3
  br i1 %623, label %init_subr_1.exit1831, label %if.then.i6.i.i1829

if.then.i6.i.i1829:                               ; preds = %cond.false.i.i.i1827, %subrcons.exit.i.i1825
  %call.i5.i.i1828 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1805) #38
  br label %init_subr_1.exit1831

init_subr_1.exit1831:                             ; preds = %cond.false.i.i.i1827, %if.then.i6.i.i1829
  %vcell.i.i.i1830 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1805, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1820, ptr %vcell.i.i.i1830, align 8, !tbaa !9
  %call.i.i.i1832 = tail call ptr @gen_intern(ptr noundef nonnull @.str.211, i64 noundef 0)
  %624 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1833 = icmp eq i64 %624, 1
  br i1 %cmp.i.i.i1833, label %if.then.i.i.i1835, label %if.else.i.i.i1841

if.then.i.i.i1835:                                ; preds = %init_subr_1.exit1831
  %625 = load ptr, ptr @heap, align 8, !tbaa !5
  %626 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1834 = icmp ult ptr %625, %626
  br i1 %cmp1.not.i.i.i1834, label %if.end.i.i.i1839, label %if.then2.i.i.i1837

if.then2.i.i.i1837:                               ; preds = %if.then.i.i.i1835
  %call.i.i.i.i1836 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1839

if.end.i.i.i1839:                                 ; preds = %if.then2.i.i.i1837, %if.then.i.i.i1835
  %add.ptr.i.i.i1838 = getelementptr inbounds %struct.obj, ptr %625, i64 1
  store ptr %add.ptr.i.i.i1838, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1852

if.else.i.i.i1841:                                ; preds = %init_subr_1.exit1831
  %627 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1840 = icmp eq ptr %627, null
  br i1 %cmp3.i.i.i1840, label %if.then4.i.i.i1843, label %if.end5.i.i.i1846

if.then4.i.i.i1843:                               ; preds = %if.else.i.i.i1841
  tail call void @gc_for_newcell()
  %.pre.i.i.i1842 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1846

if.end5.i.i.i1846:                                ; preds = %if.then4.i.i.i1843, %if.else.i.i.i1841
  %628 = phi ptr [ %.pre.i.i.i1842, %if.then4.i.i.i1843 ], [ %627, %if.else.i.i.i1841 ]
  %cdr.i.i.i1844 = getelementptr inbounds %struct.obj, ptr %628, i64 0, i32 2, i32 0, i32 1
  %629 = load ptr, ptr %cdr.i.i.i1844, align 8, !tbaa !9
  store ptr %629, ptr @freelist, align 8, !tbaa !5
  %630 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1845 = add nsw i64 %630, 1
  store i64 %inc.i.i.i1845, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1852

subrcons.exit.i.i1852:                            ; preds = %if.end5.i.i.i1846, %if.end.i.i.i1839
  %z.0.i.i.i1847 = phi ptr [ %625, %if.end.i.i.i1839 ], [ %628, %if.end5.i.i.i1846 ]
  store i16 0, ptr %z.0.i.i.i1847, align 8, !tbaa !35
  %type7.i.i.i1848 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1847, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1848, align 2, !tbaa !14
  %storage_as8.i.i.i1849 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1847, i64 0, i32 2
  store ptr @.str.211, ptr %storage_as8.i.i.i1849, align 8, !tbaa !9
  %f11.i.i.i1850 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1847, i64 0, i32 2, i32 0, i32 1
  store ptr @lungetc, ptr %f11.i.i.i1850, align 8, !tbaa !9
  %cmp.i4.i.i1851 = icmp eq ptr %call.i.i.i1832, null
  br i1 %cmp.i4.i.i1851, label %if.then.i6.i.i1856, label %cond.false.i.i.i1854

cond.false.i.i.i1854:                             ; preds = %subrcons.exit.i.i1852
  %type.i.i.i1853 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1832, i64 0, i32 1
  %631 = load i16, ptr %type.i.i.i1853, align 2, !tbaa !14
  %632 = icmp eq i16 %631, 3
  br i1 %632, label %init_subr_2.exit1858, label %if.then.i6.i.i1856

if.then.i6.i.i1856:                               ; preds = %cond.false.i.i.i1854, %subrcons.exit.i.i1852
  %call.i5.i.i1855 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1832) #38
  br label %init_subr_2.exit1858

init_subr_2.exit1858:                             ; preds = %cond.false.i.i.i1854, %if.then.i6.i.i1856
  %vcell.i.i.i1857 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1832, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1847, ptr %vcell.i.i.i1857, align 8, !tbaa !9
  %call.i.i.i1859 = tail call ptr @gen_intern(ptr noundef nonnull @.str.212, i64 noundef 0)
  %633 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1860 = icmp eq i64 %633, 1
  br i1 %cmp.i.i.i1860, label %if.then.i.i.i1862, label %if.else.i.i.i1868

if.then.i.i.i1862:                                ; preds = %init_subr_2.exit1858
  %634 = load ptr, ptr @heap, align 8, !tbaa !5
  %635 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1861 = icmp ult ptr %634, %635
  br i1 %cmp1.not.i.i.i1861, label %if.end.i.i.i1866, label %if.then2.i.i.i1864

if.then2.i.i.i1864:                               ; preds = %if.then.i.i.i1862
  %call.i.i.i.i1863 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1866

if.end.i.i.i1866:                                 ; preds = %if.then2.i.i.i1864, %if.then.i.i.i1862
  %add.ptr.i.i.i1865 = getelementptr inbounds %struct.obj, ptr %634, i64 1
  store ptr %add.ptr.i.i.i1865, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1879

if.else.i.i.i1868:                                ; preds = %init_subr_2.exit1858
  %636 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1867 = icmp eq ptr %636, null
  br i1 %cmp3.i.i.i1867, label %if.then4.i.i.i1870, label %if.end5.i.i.i1873

if.then4.i.i.i1870:                               ; preds = %if.else.i.i.i1868
  tail call void @gc_for_newcell()
  %.pre.i.i.i1869 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1873

if.end5.i.i.i1873:                                ; preds = %if.then4.i.i.i1870, %if.else.i.i.i1868
  %637 = phi ptr [ %.pre.i.i.i1869, %if.then4.i.i.i1870 ], [ %636, %if.else.i.i.i1868 ]
  %cdr.i.i.i1871 = getelementptr inbounds %struct.obj, ptr %637, i64 0, i32 2, i32 0, i32 1
  %638 = load ptr, ptr %cdr.i.i.i1871, align 8, !tbaa !9
  store ptr %638, ptr @freelist, align 8, !tbaa !5
  %639 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1872 = add nsw i64 %639, 1
  store i64 %inc.i.i.i1872, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1879

subrcons.exit.i.i1879:                            ; preds = %if.end5.i.i.i1873, %if.end.i.i.i1866
  %z.0.i.i.i1874 = phi ptr [ %634, %if.end.i.i.i1866 ], [ %637, %if.end5.i.i.i1873 ]
  store i16 0, ptr %z.0.i.i.i1874, align 8, !tbaa !35
  %type7.i.i.i1875 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1874, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1875, align 2, !tbaa !14
  %storage_as8.i.i.i1876 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1874, i64 0, i32 2
  store ptr @.str.212, ptr %storage_as8.i.i.i1876, align 8, !tbaa !9
  %f11.i.i.i1877 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1874, i64 0, i32 2, i32 0, i32 1
  store ptr @lputc, ptr %f11.i.i.i1877, align 8, !tbaa !9
  %cmp.i4.i.i1878 = icmp eq ptr %call.i.i.i1859, null
  br i1 %cmp.i4.i.i1878, label %if.then.i6.i.i1883, label %cond.false.i.i.i1881

cond.false.i.i.i1881:                             ; preds = %subrcons.exit.i.i1879
  %type.i.i.i1880 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1859, i64 0, i32 1
  %640 = load i16, ptr %type.i.i.i1880, align 2, !tbaa !14
  %641 = icmp eq i16 %640, 3
  br i1 %641, label %init_subr_2.exit1885, label %if.then.i6.i.i1883

if.then.i6.i.i1883:                               ; preds = %cond.false.i.i.i1881, %subrcons.exit.i.i1879
  %call.i5.i.i1882 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1859) #38
  br label %init_subr_2.exit1885

init_subr_2.exit1885:                             ; preds = %cond.false.i.i.i1881, %if.then.i6.i.i1883
  %vcell.i.i.i1884 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1859, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1874, ptr %vcell.i.i.i1884, align 8, !tbaa !9
  %call.i.i.i1886 = tail call ptr @gen_intern(ptr noundef nonnull @.str.213, i64 noundef 0)
  %642 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1887 = icmp eq i64 %642, 1
  br i1 %cmp.i.i.i1887, label %if.then.i.i.i1889, label %if.else.i.i.i1895

if.then.i.i.i1889:                                ; preds = %init_subr_2.exit1885
  %643 = load ptr, ptr @heap, align 8, !tbaa !5
  %644 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1888 = icmp ult ptr %643, %644
  br i1 %cmp1.not.i.i.i1888, label %if.end.i.i.i1893, label %if.then2.i.i.i1891

if.then2.i.i.i1891:                               ; preds = %if.then.i.i.i1889
  %call.i.i.i.i1890 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1893

if.end.i.i.i1893:                                 ; preds = %if.then2.i.i.i1891, %if.then.i.i.i1889
  %add.ptr.i.i.i1892 = getelementptr inbounds %struct.obj, ptr %643, i64 1
  store ptr %add.ptr.i.i.i1892, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1906

if.else.i.i.i1895:                                ; preds = %init_subr_2.exit1885
  %645 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1894 = icmp eq ptr %645, null
  br i1 %cmp3.i.i.i1894, label %if.then4.i.i.i1897, label %if.end5.i.i.i1900

if.then4.i.i.i1897:                               ; preds = %if.else.i.i.i1895
  tail call void @gc_for_newcell()
  %.pre.i.i.i1896 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1900

if.end5.i.i.i1900:                                ; preds = %if.then4.i.i.i1897, %if.else.i.i.i1895
  %646 = phi ptr [ %.pre.i.i.i1896, %if.then4.i.i.i1897 ], [ %645, %if.else.i.i.i1895 ]
  %cdr.i.i.i1898 = getelementptr inbounds %struct.obj, ptr %646, i64 0, i32 2, i32 0, i32 1
  %647 = load ptr, ptr %cdr.i.i.i1898, align 8, !tbaa !9
  store ptr %647, ptr @freelist, align 8, !tbaa !5
  %648 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1899 = add nsw i64 %648, 1
  store i64 %inc.i.i.i1899, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1906

subrcons.exit.i.i1906:                            ; preds = %if.end5.i.i.i1900, %if.end.i.i.i1893
  %z.0.i.i.i1901 = phi ptr [ %643, %if.end.i.i.i1893 ], [ %646, %if.end5.i.i.i1900 ]
  store i16 0, ptr %z.0.i.i.i1901, align 8, !tbaa !35
  %type7.i.i.i1902 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1901, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i1902, align 2, !tbaa !14
  %storage_as8.i.i.i1903 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1901, i64 0, i32 2
  store ptr @.str.213, ptr %storage_as8.i.i.i1903, align 8, !tbaa !9
  %f11.i.i.i1904 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1901, i64 0, i32 2, i32 0, i32 1
  store ptr @lputs, ptr %f11.i.i.i1904, align 8, !tbaa !9
  %cmp.i4.i.i1905 = icmp eq ptr %call.i.i.i1886, null
  br i1 %cmp.i4.i.i1905, label %if.then.i6.i.i1910, label %cond.false.i.i.i1908

cond.false.i.i.i1908:                             ; preds = %subrcons.exit.i.i1906
  %type.i.i.i1907 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1886, i64 0, i32 1
  %649 = load i16, ptr %type.i.i.i1907, align 2, !tbaa !14
  %650 = icmp eq i16 %649, 3
  br i1 %650, label %init_subr_2.exit1912, label %if.then.i6.i.i1910

if.then.i6.i.i1910:                               ; preds = %cond.false.i.i.i1908, %subrcons.exit.i.i1906
  %call.i5.i.i1909 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1886) #38
  br label %init_subr_2.exit1912

init_subr_2.exit1912:                             ; preds = %cond.false.i.i.i1908, %if.then.i6.i.i1910
  %vcell.i.i.i1911 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1886, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1901, ptr %vcell.i.i.i1911, align 8, !tbaa !9
  %call.i.i.i1913 = tail call ptr @gen_intern(ptr noundef nonnull @.str.214, i64 noundef 0)
  %651 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1914 = icmp eq i64 %651, 1
  br i1 %cmp.i.i.i1914, label %if.then.i.i.i1916, label %if.else.i.i.i1922

if.then.i.i.i1916:                                ; preds = %init_subr_2.exit1912
  %652 = load ptr, ptr @heap, align 8, !tbaa !5
  %653 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1915 = icmp ult ptr %652, %653
  br i1 %cmp1.not.i.i.i1915, label %if.end.i.i.i1920, label %if.then2.i.i.i1918

if.then2.i.i.i1918:                               ; preds = %if.then.i.i.i1916
  %call.i.i.i.i1917 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1920

if.end.i.i.i1920:                                 ; preds = %if.then2.i.i.i1918, %if.then.i.i.i1916
  %add.ptr.i.i.i1919 = getelementptr inbounds %struct.obj, ptr %652, i64 1
  store ptr %add.ptr.i.i.i1919, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1933

if.else.i.i.i1922:                                ; preds = %init_subr_2.exit1912
  %654 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1921 = icmp eq ptr %654, null
  br i1 %cmp3.i.i.i1921, label %if.then4.i.i.i1924, label %if.end5.i.i.i1927

if.then4.i.i.i1924:                               ; preds = %if.else.i.i.i1922
  tail call void @gc_for_newcell()
  %.pre.i.i.i1923 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1927

if.end5.i.i.i1927:                                ; preds = %if.then4.i.i.i1924, %if.else.i.i.i1922
  %655 = phi ptr [ %.pre.i.i.i1923, %if.then4.i.i.i1924 ], [ %654, %if.else.i.i.i1922 ]
  %cdr.i.i.i1925 = getelementptr inbounds %struct.obj, ptr %655, i64 0, i32 2, i32 0, i32 1
  %656 = load ptr, ptr %cdr.i.i.i1925, align 8, !tbaa !9
  store ptr %656, ptr @freelist, align 8, !tbaa !5
  %657 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1926 = add nsw i64 %657, 1
  store i64 %inc.i.i.i1926, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1933

subrcons.exit.i.i1933:                            ; preds = %if.end5.i.i.i1927, %if.end.i.i.i1920
  %z.0.i.i.i1928 = phi ptr [ %652, %if.end.i.i.i1920 ], [ %655, %if.end5.i.i.i1927 ]
  store i16 0, ptr %z.0.i.i.i1928, align 8, !tbaa !35
  %type7.i.i.i1929 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1928, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1929, align 2, !tbaa !14
  %storage_as8.i.i.i1930 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1928, i64 0, i32 2
  store ptr @.str.214, ptr %storage_as8.i.i.i1930, align 8, !tbaa !9
  %f11.i.i.i1931 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1928, i64 0, i32 2, i32 0, i32 1
  store ptr @lftell, ptr %f11.i.i.i1931, align 8, !tbaa !9
  %cmp.i4.i.i1932 = icmp eq ptr %call.i.i.i1913, null
  br i1 %cmp.i4.i.i1932, label %if.then.i6.i.i1937, label %cond.false.i.i.i1935

cond.false.i.i.i1935:                             ; preds = %subrcons.exit.i.i1933
  %type.i.i.i1934 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1913, i64 0, i32 1
  %658 = load i16, ptr %type.i.i.i1934, align 2, !tbaa !14
  %659 = icmp eq i16 %658, 3
  br i1 %659, label %init_subr_1.exit1939, label %if.then.i6.i.i1937

if.then.i6.i.i1937:                               ; preds = %cond.false.i.i.i1935, %subrcons.exit.i.i1933
  %call.i5.i.i1936 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1913) #38
  br label %init_subr_1.exit1939

init_subr_1.exit1939:                             ; preds = %cond.false.i.i.i1935, %if.then.i6.i.i1937
  %vcell.i.i.i1938 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1913, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1928, ptr %vcell.i.i.i1938, align 8, !tbaa !9
  %call.i.i.i1940 = tail call ptr @gen_intern(ptr noundef nonnull @.str.215, i64 noundef 0)
  %660 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1941 = icmp eq i64 %660, 1
  br i1 %cmp.i.i.i1941, label %if.then.i.i.i1943, label %if.else.i.i.i1949

if.then.i.i.i1943:                                ; preds = %init_subr_1.exit1939
  %661 = load ptr, ptr @heap, align 8, !tbaa !5
  %662 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1942 = icmp ult ptr %661, %662
  br i1 %cmp1.not.i.i.i1942, label %if.end.i.i.i1947, label %if.then2.i.i.i1945

if.then2.i.i.i1945:                               ; preds = %if.then.i.i.i1943
  %call.i.i.i.i1944 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1947

if.end.i.i.i1947:                                 ; preds = %if.then2.i.i.i1945, %if.then.i.i.i1943
  %add.ptr.i.i.i1946 = getelementptr inbounds %struct.obj, ptr %661, i64 1
  store ptr %add.ptr.i.i.i1946, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1960

if.else.i.i.i1949:                                ; preds = %init_subr_1.exit1939
  %663 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1948 = icmp eq ptr %663, null
  br i1 %cmp3.i.i.i1948, label %if.then4.i.i.i1951, label %if.end5.i.i.i1954

if.then4.i.i.i1951:                               ; preds = %if.else.i.i.i1949
  tail call void @gc_for_newcell()
  %.pre.i.i.i1950 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1954

if.end5.i.i.i1954:                                ; preds = %if.then4.i.i.i1951, %if.else.i.i.i1949
  %664 = phi ptr [ %.pre.i.i.i1950, %if.then4.i.i.i1951 ], [ %663, %if.else.i.i.i1949 ]
  %cdr.i.i.i1952 = getelementptr inbounds %struct.obj, ptr %664, i64 0, i32 2, i32 0, i32 1
  %665 = load ptr, ptr %cdr.i.i.i1952, align 8, !tbaa !9
  store ptr %665, ptr @freelist, align 8, !tbaa !5
  %666 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1953 = add nsw i64 %666, 1
  store i64 %inc.i.i.i1953, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1960

subrcons.exit.i.i1960:                            ; preds = %if.end5.i.i.i1954, %if.end.i.i.i1947
  %z.0.i.i.i1955 = phi ptr [ %661, %if.end.i.i.i1947 ], [ %664, %if.end5.i.i.i1954 ]
  store i16 0, ptr %z.0.i.i.i1955, align 8, !tbaa !35
  %type7.i.i.i1956 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1955, i64 0, i32 1
  store i16 7, ptr %type7.i.i.i1956, align 2, !tbaa !14
  %storage_as8.i.i.i1957 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1955, i64 0, i32 2
  store ptr @.str.215, ptr %storage_as8.i.i.i1957, align 8, !tbaa !9
  %f11.i.i.i1958 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1955, i64 0, i32 2, i32 0, i32 1
  store ptr @lfseek, ptr %f11.i.i.i1958, align 8, !tbaa !9
  %cmp.i4.i.i1959 = icmp eq ptr %call.i.i.i1940, null
  br i1 %cmp.i4.i.i1959, label %if.then.i6.i.i1964, label %cond.false.i.i.i1962

cond.false.i.i.i1962:                             ; preds = %subrcons.exit.i.i1960
  %type.i.i.i1961 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1940, i64 0, i32 1
  %667 = load i16, ptr %type.i.i.i1961, align 2, !tbaa !14
  %668 = icmp eq i16 %667, 3
  br i1 %668, label %init_subr_3.exit1966, label %if.then.i6.i.i1964

if.then.i6.i.i1964:                               ; preds = %cond.false.i.i.i1962, %subrcons.exit.i.i1960
  %call.i5.i.i1963 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1940) #38
  br label %init_subr_3.exit1966

init_subr_3.exit1966:                             ; preds = %cond.false.i.i.i1962, %if.then.i6.i.i1964
  %vcell.i.i.i1965 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1940, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1955, ptr %vcell.i.i.i1965, align 8, !tbaa !9
  %call.i.i.i1967 = tail call ptr @gen_intern(ptr noundef nonnull @.str.216, i64 noundef 0)
  %669 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1968 = icmp eq i64 %669, 1
  br i1 %cmp.i.i.i1968, label %if.then.i.i.i1970, label %if.else.i.i.i1976

if.then.i.i.i1970:                                ; preds = %init_subr_3.exit1966
  %670 = load ptr, ptr @heap, align 8, !tbaa !5
  %671 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1969 = icmp ult ptr %670, %671
  br i1 %cmp1.not.i.i.i1969, label %if.end.i.i.i1974, label %if.then2.i.i.i1972

if.then2.i.i.i1972:                               ; preds = %if.then.i.i.i1970
  %call.i.i.i.i1971 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i1974

if.end.i.i.i1974:                                 ; preds = %if.then2.i.i.i1972, %if.then.i.i.i1970
  %add.ptr.i.i.i1973 = getelementptr inbounds %struct.obj, ptr %670, i64 1
  store ptr %add.ptr.i.i.i1973, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i1987

if.else.i.i.i1976:                                ; preds = %init_subr_3.exit1966
  %672 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i1975 = icmp eq ptr %672, null
  br i1 %cmp3.i.i.i1975, label %if.then4.i.i.i1978, label %if.end5.i.i.i1981

if.then4.i.i.i1978:                               ; preds = %if.else.i.i.i1976
  tail call void @gc_for_newcell()
  %.pre.i.i.i1977 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i1981

if.end5.i.i.i1981:                                ; preds = %if.then4.i.i.i1978, %if.else.i.i.i1976
  %673 = phi ptr [ %.pre.i.i.i1977, %if.then4.i.i.i1978 ], [ %672, %if.else.i.i.i1976 ]
  %cdr.i.i.i1979 = getelementptr inbounds %struct.obj, ptr %673, i64 0, i32 2, i32 0, i32 1
  %674 = load ptr, ptr %cdr.i.i.i1979, align 8, !tbaa !9
  store ptr %674, ptr @freelist, align 8, !tbaa !5
  %675 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i1980 = add nsw i64 %675, 1
  store i64 %inc.i.i.i1980, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i1987

subrcons.exit.i.i1987:                            ; preds = %if.end5.i.i.i1981, %if.end.i.i.i1974
  %z.0.i.i.i1982 = phi ptr [ %670, %if.end.i.i.i1974 ], [ %673, %if.end5.i.i.i1981 ]
  store i16 0, ptr %z.0.i.i.i1982, align 8, !tbaa !35
  %type7.i.i.i1983 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1982, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i1983, align 2, !tbaa !14
  %storage_as8.i.i.i1984 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1982, i64 0, i32 2
  store ptr @.str.216, ptr %storage_as8.i.i.i1984, align 8, !tbaa !9
  %f11.i.i.i1985 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i1982, i64 0, i32 2, i32 0, i32 1
  store ptr @parse_number, ptr %f11.i.i.i1985, align 8, !tbaa !9
  %cmp.i4.i.i1986 = icmp eq ptr %call.i.i.i1967, null
  br i1 %cmp.i4.i.i1986, label %if.then.i6.i.i1991, label %cond.false.i.i.i1989

cond.false.i.i.i1989:                             ; preds = %subrcons.exit.i.i1987
  %type.i.i.i1988 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1967, i64 0, i32 1
  %676 = load i16, ptr %type.i.i.i1988, align 2, !tbaa !14
  %677 = icmp eq i16 %676, 3
  br i1 %677, label %init_subr_1.exit1993, label %if.then.i6.i.i1991

if.then.i6.i.i1991:                               ; preds = %cond.false.i.i.i1989, %subrcons.exit.i.i1987
  %call.i5.i.i1990 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1967) #38
  br label %init_subr_1.exit1993

init_subr_1.exit1993:                             ; preds = %cond.false.i.i.i1989, %if.then.i6.i.i1991
  %vcell.i.i.i1992 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1967, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i1982, ptr %vcell.i.i.i1992, align 8, !tbaa !9
  %call.i.i.i1994 = tail call ptr @gen_intern(ptr noundef nonnull @.str.217, i64 noundef 0)
  %678 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i1995 = icmp eq i64 %678, 1
  br i1 %cmp.i.i.i1995, label %if.then.i.i.i1997, label %if.else.i.i.i2003

if.then.i.i.i1997:                                ; preds = %init_subr_1.exit1993
  %679 = load ptr, ptr @heap, align 8, !tbaa !5
  %680 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i1996 = icmp ult ptr %679, %680
  br i1 %cmp1.not.i.i.i1996, label %if.end.i.i.i2001, label %if.then2.i.i.i1999

if.then2.i.i.i1999:                               ; preds = %if.then.i.i.i1997
  %call.i.i.i.i1998 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2001

if.end.i.i.i2001:                                 ; preds = %if.then2.i.i.i1999, %if.then.i.i.i1997
  %add.ptr.i.i.i2000 = getelementptr inbounds %struct.obj, ptr %679, i64 1
  store ptr %add.ptr.i.i.i2000, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2014

if.else.i.i.i2003:                                ; preds = %init_subr_1.exit1993
  %681 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2002 = icmp eq ptr %681, null
  br i1 %cmp3.i.i.i2002, label %if.then4.i.i.i2005, label %if.end5.i.i.i2008

if.then4.i.i.i2005:                               ; preds = %if.else.i.i.i2003
  tail call void @gc_for_newcell()
  %.pre.i.i.i2004 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2008

if.end5.i.i.i2008:                                ; preds = %if.then4.i.i.i2005, %if.else.i.i.i2003
  %682 = phi ptr [ %.pre.i.i.i2004, %if.then4.i.i.i2005 ], [ %681, %if.else.i.i.i2003 ]
  %cdr.i.i.i2006 = getelementptr inbounds %struct.obj, ptr %682, i64 0, i32 2, i32 0, i32 1
  %683 = load ptr, ptr %cdr.i.i.i2006, align 8, !tbaa !9
  store ptr %683, ptr @freelist, align 8, !tbaa !5
  %684 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2007 = add nsw i64 %684, 1
  store i64 %inc.i.i.i2007, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2014

subrcons.exit.i.i2014:                            ; preds = %if.end5.i.i.i2008, %if.end.i.i.i2001
  %z.0.i.i.i2009 = phi ptr [ %679, %if.end.i.i.i2001 ], [ %682, %if.end5.i.i.i2008 ]
  store i16 0, ptr %z.0.i.i.i2009, align 8, !tbaa !35
  %type7.i.i.i2010 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2009, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i2010, align 2, !tbaa !14
  %storage_as8.i.i.i2011 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2009, i64 0, i32 2
  store ptr @.str.217, ptr %storage_as8.i.i.i2011, align 8, !tbaa !9
  %f11.i.i.i2012 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2009, i64 0, i32 2, i32 0, i32 1
  store ptr @stack_limit, ptr %f11.i.i.i2012, align 8, !tbaa !9
  %cmp.i4.i.i2013 = icmp eq ptr %call.i.i.i1994, null
  br i1 %cmp.i4.i.i2013, label %if.then.i6.i.i2018, label %cond.false.i.i.i2016

cond.false.i.i.i2016:                             ; preds = %subrcons.exit.i.i2014
  %type.i.i.i2015 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1994, i64 0, i32 1
  %685 = load i16, ptr %type.i.i.i2015, align 2, !tbaa !14
  %686 = icmp eq i16 %685, 3
  br i1 %686, label %init_subr_2.exit2020, label %if.then.i6.i.i2018

if.then.i6.i.i2018:                               ; preds = %cond.false.i.i.i2016, %subrcons.exit.i.i2014
  %call.i5.i.i2017 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i1994) #38
  br label %init_subr_2.exit2020

init_subr_2.exit2020:                             ; preds = %cond.false.i.i.i2016, %if.then.i6.i.i2018
  %vcell.i.i.i2019 = getelementptr inbounds %struct.obj, ptr %call.i.i.i1994, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2009, ptr %vcell.i.i.i2019, align 8, !tbaa !9
  %call.i.i.i2021 = tail call ptr @gen_intern(ptr noundef nonnull @.str.218, i64 noundef 0)
  %687 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2022 = icmp eq i64 %687, 1
  br i1 %cmp.i.i.i2022, label %if.then.i.i.i2024, label %if.else.i.i.i2030

if.then.i.i.i2024:                                ; preds = %init_subr_2.exit2020
  %688 = load ptr, ptr @heap, align 8, !tbaa !5
  %689 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2023 = icmp ult ptr %688, %689
  br i1 %cmp1.not.i.i.i2023, label %if.end.i.i.i2028, label %if.then2.i.i.i2026

if.then2.i.i.i2026:                               ; preds = %if.then.i.i.i2024
  %call.i.i.i.i2025 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2028

if.end.i.i.i2028:                                 ; preds = %if.then2.i.i.i2026, %if.then.i.i.i2024
  %add.ptr.i.i.i2027 = getelementptr inbounds %struct.obj, ptr %688, i64 1
  store ptr %add.ptr.i.i.i2027, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2041

if.else.i.i.i2030:                                ; preds = %init_subr_2.exit2020
  %690 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2029 = icmp eq ptr %690, null
  br i1 %cmp3.i.i.i2029, label %if.then4.i.i.i2032, label %if.end5.i.i.i2035

if.then4.i.i.i2032:                               ; preds = %if.else.i.i.i2030
  tail call void @gc_for_newcell()
  %.pre.i.i.i2031 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2035

if.end5.i.i.i2035:                                ; preds = %if.then4.i.i.i2032, %if.else.i.i.i2030
  %691 = phi ptr [ %.pre.i.i.i2031, %if.then4.i.i.i2032 ], [ %690, %if.else.i.i.i2030 ]
  %cdr.i.i.i2033 = getelementptr inbounds %struct.obj, ptr %691, i64 0, i32 2, i32 0, i32 1
  %692 = load ptr, ptr %cdr.i.i.i2033, align 8, !tbaa !9
  store ptr %692, ptr @freelist, align 8, !tbaa !5
  %693 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2034 = add nsw i64 %693, 1
  store i64 %inc.i.i.i2034, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2041

subrcons.exit.i.i2041:                            ; preds = %if.end5.i.i.i2035, %if.end.i.i.i2028
  %z.0.i.i.i2036 = phi ptr [ %688, %if.end.i.i.i2028 ], [ %691, %if.end5.i.i.i2035 ]
  store i16 0, ptr %z.0.i.i.i2036, align 8, !tbaa !35
  %type7.i.i.i2037 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2036, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2037, align 2, !tbaa !14
  %storage_as8.i.i.i2038 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2036, i64 0, i32 2
  store ptr @.str.218, ptr %storage_as8.i.i.i2038, align 8, !tbaa !9
  %f11.i.i.i2039 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2036, i64 0, i32 2, i32 0, i32 1
  store ptr @intern, ptr %f11.i.i.i2039, align 8, !tbaa !9
  %cmp.i4.i.i2040 = icmp eq ptr %call.i.i.i2021, null
  br i1 %cmp.i4.i.i2040, label %if.then.i6.i.i2045, label %cond.false.i.i.i2043

cond.false.i.i.i2043:                             ; preds = %subrcons.exit.i.i2041
  %type.i.i.i2042 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2021, i64 0, i32 1
  %694 = load i16, ptr %type.i.i.i2042, align 2, !tbaa !14
  %695 = icmp eq i16 %694, 3
  br i1 %695, label %init_subr_1.exit2047, label %if.then.i6.i.i2045

if.then.i6.i.i2045:                               ; preds = %cond.false.i.i.i2043, %subrcons.exit.i.i2041
  %call.i5.i.i2044 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2021) #38
  br label %init_subr_1.exit2047

init_subr_1.exit2047:                             ; preds = %cond.false.i.i.i2043, %if.then.i6.i.i2045
  %vcell.i.i.i2046 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2021, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2036, ptr %vcell.i.i.i2046, align 8, !tbaa !9
  %call.i.i.i2048 = tail call ptr @gen_intern(ptr noundef nonnull @.str.219, i64 noundef 0)
  %696 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2049 = icmp eq i64 %696, 1
  br i1 %cmp.i.i.i2049, label %if.then.i.i.i2051, label %if.else.i.i.i2057

if.then.i.i.i2051:                                ; preds = %init_subr_1.exit2047
  %697 = load ptr, ptr @heap, align 8, !tbaa !5
  %698 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2050 = icmp ult ptr %697, %698
  br i1 %cmp1.not.i.i.i2050, label %if.end.i.i.i2055, label %if.then2.i.i.i2053

if.then2.i.i.i2053:                               ; preds = %if.then.i.i.i2051
  %call.i.i.i.i2052 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2055

if.end.i.i.i2055:                                 ; preds = %if.then2.i.i.i2053, %if.then.i.i.i2051
  %add.ptr.i.i.i2054 = getelementptr inbounds %struct.obj, ptr %697, i64 1
  store ptr %add.ptr.i.i.i2054, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2068

if.else.i.i.i2057:                                ; preds = %init_subr_1.exit2047
  %699 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2056 = icmp eq ptr %699, null
  br i1 %cmp3.i.i.i2056, label %if.then4.i.i.i2059, label %if.end5.i.i.i2062

if.then4.i.i.i2059:                               ; preds = %if.else.i.i.i2057
  tail call void @gc_for_newcell()
  %.pre.i.i.i2058 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2062

if.end5.i.i.i2062:                                ; preds = %if.then4.i.i.i2059, %if.else.i.i.i2057
  %700 = phi ptr [ %.pre.i.i.i2058, %if.then4.i.i.i2059 ], [ %699, %if.else.i.i.i2057 ]
  %cdr.i.i.i2060 = getelementptr inbounds %struct.obj, ptr %700, i64 0, i32 2, i32 0, i32 1
  %701 = load ptr, ptr %cdr.i.i.i2060, align 8, !tbaa !9
  store ptr %701, ptr @freelist, align 8, !tbaa !5
  %702 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2061 = add nsw i64 %702, 1
  store i64 %inc.i.i.i2061, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2068

subrcons.exit.i.i2068:                            ; preds = %if.end5.i.i.i2062, %if.end.i.i.i2055
  %z.0.i.i.i2063 = phi ptr [ %697, %if.end.i.i.i2055 ], [ %700, %if.end5.i.i.i2062 ]
  store i16 0, ptr %z.0.i.i.i2063, align 8, !tbaa !35
  %type7.i.i.i2064 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2063, i64 0, i32 1
  store i16 6, ptr %type7.i.i.i2064, align 2, !tbaa !14
  %storage_as8.i.i.i2065 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2063, i64 0, i32 2
  store ptr @.str.219, ptr %storage_as8.i.i.i2065, align 8, !tbaa !9
  %f11.i.i.i2066 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2063, i64 0, i32 2, i32 0, i32 1
  store ptr @closure, ptr %f11.i.i.i2066, align 8, !tbaa !9
  %cmp.i4.i.i2067 = icmp eq ptr %call.i.i.i2048, null
  br i1 %cmp.i4.i.i2067, label %if.then.i6.i.i2072, label %cond.false.i.i.i2070

cond.false.i.i.i2070:                             ; preds = %subrcons.exit.i.i2068
  %type.i.i.i2069 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2048, i64 0, i32 1
  %703 = load i16, ptr %type.i.i.i2069, align 2, !tbaa !14
  %704 = icmp eq i16 %703, 3
  br i1 %704, label %init_subr_2.exit2074, label %if.then.i6.i.i2072

if.then.i6.i.i2072:                               ; preds = %cond.false.i.i.i2070, %subrcons.exit.i.i2068
  %call.i5.i.i2071 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2048) #38
  br label %init_subr_2.exit2074

init_subr_2.exit2074:                             ; preds = %cond.false.i.i.i2070, %if.then.i6.i.i2072
  %vcell.i.i.i2073 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2048, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2063, ptr %vcell.i.i.i2073, align 8, !tbaa !9
  %call.i.i.i2075 = tail call ptr @gen_intern(ptr noundef nonnull @.str.220, i64 noundef 0)
  %705 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2076 = icmp eq i64 %705, 1
  br i1 %cmp.i.i.i2076, label %if.then.i.i.i2078, label %if.else.i.i.i2084

if.then.i.i.i2078:                                ; preds = %init_subr_2.exit2074
  %706 = load ptr, ptr @heap, align 8, !tbaa !5
  %707 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2077 = icmp ult ptr %706, %707
  br i1 %cmp1.not.i.i.i2077, label %if.end.i.i.i2082, label %if.then2.i.i.i2080

if.then2.i.i.i2080:                               ; preds = %if.then.i.i.i2078
  %call.i.i.i.i2079 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2082

if.end.i.i.i2082:                                 ; preds = %if.then2.i.i.i2080, %if.then.i.i.i2078
  %add.ptr.i.i.i2081 = getelementptr inbounds %struct.obj, ptr %706, i64 1
  store ptr %add.ptr.i.i.i2081, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2095

if.else.i.i.i2084:                                ; preds = %init_subr_2.exit2074
  %708 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2083 = icmp eq ptr %708, null
  br i1 %cmp3.i.i.i2083, label %if.then4.i.i.i2086, label %if.end5.i.i.i2089

if.then4.i.i.i2086:                               ; preds = %if.else.i.i.i2084
  tail call void @gc_for_newcell()
  %.pre.i.i.i2085 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2089

if.end5.i.i.i2089:                                ; preds = %if.then4.i.i.i2086, %if.else.i.i.i2084
  %709 = phi ptr [ %.pre.i.i.i2085, %if.then4.i.i.i2086 ], [ %708, %if.else.i.i.i2084 ]
  %cdr.i.i.i2087 = getelementptr inbounds %struct.obj, ptr %709, i64 0, i32 2, i32 0, i32 1
  %710 = load ptr, ptr %cdr.i.i.i2087, align 8, !tbaa !9
  store ptr %710, ptr @freelist, align 8, !tbaa !5
  %711 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2088 = add nsw i64 %711, 1
  store i64 %inc.i.i.i2088, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2095

subrcons.exit.i.i2095:                            ; preds = %if.end5.i.i.i2089, %if.end.i.i.i2082
  %z.0.i.i.i2090 = phi ptr [ %706, %if.end.i.i.i2082 ], [ %709, %if.end5.i.i.i2089 ]
  store i16 0, ptr %z.0.i.i.i2090, align 8, !tbaa !35
  %type7.i.i.i2091 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2090, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2091, align 2, !tbaa !14
  %storage_as8.i.i.i2092 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2090, i64 0, i32 2
  store ptr @.str.220, ptr %storage_as8.i.i.i2092, align 8, !tbaa !9
  %f11.i.i.i2093 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2090, i64 0, i32 2, i32 0, i32 1
  store ptr @closure_code, ptr %f11.i.i.i2093, align 8, !tbaa !9
  %cmp.i4.i.i2094 = icmp eq ptr %call.i.i.i2075, null
  br i1 %cmp.i4.i.i2094, label %if.then.i6.i.i2099, label %cond.false.i.i.i2097

cond.false.i.i.i2097:                             ; preds = %subrcons.exit.i.i2095
  %type.i.i.i2096 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2075, i64 0, i32 1
  %712 = load i16, ptr %type.i.i.i2096, align 2, !tbaa !14
  %713 = icmp eq i16 %712, 3
  br i1 %713, label %init_subr_1.exit2101, label %if.then.i6.i.i2099

if.then.i6.i.i2099:                               ; preds = %cond.false.i.i.i2097, %subrcons.exit.i.i2095
  %call.i5.i.i2098 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2075) #38
  br label %init_subr_1.exit2101

init_subr_1.exit2101:                             ; preds = %cond.false.i.i.i2097, %if.then.i6.i.i2099
  %vcell.i.i.i2100 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2075, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2090, ptr %vcell.i.i.i2100, align 8, !tbaa !9
  %call.i.i.i2102 = tail call ptr @gen_intern(ptr noundef nonnull @.str.221, i64 noundef 0)
  %714 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2103 = icmp eq i64 %714, 1
  br i1 %cmp.i.i.i2103, label %if.then.i.i.i2105, label %if.else.i.i.i2111

if.then.i.i.i2105:                                ; preds = %init_subr_1.exit2101
  %715 = load ptr, ptr @heap, align 8, !tbaa !5
  %716 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2104 = icmp ult ptr %715, %716
  br i1 %cmp1.not.i.i.i2104, label %if.end.i.i.i2109, label %if.then2.i.i.i2107

if.then2.i.i.i2107:                               ; preds = %if.then.i.i.i2105
  %call.i.i.i.i2106 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2109

if.end.i.i.i2109:                                 ; preds = %if.then2.i.i.i2107, %if.then.i.i.i2105
  %add.ptr.i.i.i2108 = getelementptr inbounds %struct.obj, ptr %715, i64 1
  store ptr %add.ptr.i.i.i2108, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2122

if.else.i.i.i2111:                                ; preds = %init_subr_1.exit2101
  %717 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2110 = icmp eq ptr %717, null
  br i1 %cmp3.i.i.i2110, label %if.then4.i.i.i2113, label %if.end5.i.i.i2116

if.then4.i.i.i2113:                               ; preds = %if.else.i.i.i2111
  tail call void @gc_for_newcell()
  %.pre.i.i.i2112 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2116

if.end5.i.i.i2116:                                ; preds = %if.then4.i.i.i2113, %if.else.i.i.i2111
  %718 = phi ptr [ %.pre.i.i.i2112, %if.then4.i.i.i2113 ], [ %717, %if.else.i.i.i2111 ]
  %cdr.i.i.i2114 = getelementptr inbounds %struct.obj, ptr %718, i64 0, i32 2, i32 0, i32 1
  %719 = load ptr, ptr %cdr.i.i.i2114, align 8, !tbaa !9
  store ptr %719, ptr @freelist, align 8, !tbaa !5
  %720 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2115 = add nsw i64 %720, 1
  store i64 %inc.i.i.i2115, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2122

subrcons.exit.i.i2122:                            ; preds = %if.end5.i.i.i2116, %if.end.i.i.i2109
  %z.0.i.i.i2117 = phi ptr [ %715, %if.end.i.i.i2109 ], [ %718, %if.end5.i.i.i2116 ]
  store i16 0, ptr %z.0.i.i.i2117, align 8, !tbaa !35
  %type7.i.i.i2118 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2117, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2118, align 2, !tbaa !14
  %storage_as8.i.i.i2119 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2117, i64 0, i32 2
  store ptr @.str.221, ptr %storage_as8.i.i.i2119, align 8, !tbaa !9
  %f11.i.i.i2120 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2117, i64 0, i32 2, i32 0, i32 1
  store ptr @closure_env, ptr %f11.i.i.i2120, align 8, !tbaa !9
  %cmp.i4.i.i2121 = icmp eq ptr %call.i.i.i2102, null
  br i1 %cmp.i4.i.i2121, label %if.then.i6.i.i2126, label %cond.false.i.i.i2124

cond.false.i.i.i2124:                             ; preds = %subrcons.exit.i.i2122
  %type.i.i.i2123 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2102, i64 0, i32 1
  %721 = load i16, ptr %type.i.i.i2123, align 2, !tbaa !14
  %722 = icmp eq i16 %721, 3
  br i1 %722, label %init_subr_1.exit2128, label %if.then.i6.i.i2126

if.then.i6.i.i2126:                               ; preds = %cond.false.i.i.i2124, %subrcons.exit.i.i2122
  %call.i5.i.i2125 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2102) #38
  br label %init_subr_1.exit2128

init_subr_1.exit2128:                             ; preds = %cond.false.i.i.i2124, %if.then.i6.i.i2126
  %vcell.i.i.i2127 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2102, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2117, ptr %vcell.i.i.i2127, align 8, !tbaa !9
  %call.i.i.i2129 = tail call ptr @gen_intern(ptr noundef nonnull @.str.182, i64 noundef 0)
  %723 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2130 = icmp eq i64 %723, 1
  br i1 %cmp.i.i.i2130, label %if.then.i.i.i2132, label %if.else.i.i.i2138

if.then.i.i.i2132:                                ; preds = %init_subr_1.exit2128
  %724 = load ptr, ptr @heap, align 8, !tbaa !5
  %725 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2131 = icmp ult ptr %724, %725
  br i1 %cmp1.not.i.i.i2131, label %if.end.i.i.i2136, label %if.then2.i.i.i2134

if.then2.i.i.i2134:                               ; preds = %if.then.i.i.i2132
  %call.i.i.i.i2133 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2136

if.end.i.i.i2136:                                 ; preds = %if.then2.i.i.i2134, %if.then.i.i.i2132
  %add.ptr.i.i.i2135 = getelementptr inbounds %struct.obj, ptr %724, i64 1
  store ptr %add.ptr.i.i.i2135, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2149

if.else.i.i.i2138:                                ; preds = %init_subr_1.exit2128
  %726 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2137 = icmp eq ptr %726, null
  br i1 %cmp3.i.i.i2137, label %if.then4.i.i.i2140, label %if.end5.i.i.i2143

if.then4.i.i.i2140:                               ; preds = %if.else.i.i.i2138
  tail call void @gc_for_newcell()
  %.pre.i.i.i2139 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2143

if.end5.i.i.i2143:                                ; preds = %if.then4.i.i.i2140, %if.else.i.i.i2138
  %727 = phi ptr [ %.pre.i.i.i2139, %if.then4.i.i.i2140 ], [ %726, %if.else.i.i.i2138 ]
  %cdr.i.i.i2141 = getelementptr inbounds %struct.obj, ptr %727, i64 0, i32 2, i32 0, i32 1
  %728 = load ptr, ptr %cdr.i.i.i2141, align 8, !tbaa !9
  store ptr %728, ptr @freelist, align 8, !tbaa !5
  %729 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2142 = add nsw i64 %729, 1
  store i64 %inc.i.i.i2142, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2149

subrcons.exit.i.i2149:                            ; preds = %if.end5.i.i.i2143, %if.end.i.i.i2136
  %z.0.i.i.i2144 = phi ptr [ %724, %if.end.i.i.i2136 ], [ %727, %if.end5.i.i.i2143 ]
  store i16 0, ptr %z.0.i.i.i2144, align 8, !tbaa !35
  %type7.i.i.i2145 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2144, i64 0, i32 1
  store i16 9, ptr %type7.i.i.i2145, align 2, !tbaa !14
  %storage_as8.i.i.i2146 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2144, i64 0, i32 2
  store ptr @.str.182, ptr %storage_as8.i.i.i2146, align 8, !tbaa !9
  %f11.i.i.i2147 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2144, i64 0, i32 2, i32 0, i32 1
  store ptr @lwhile, ptr %f11.i.i.i2147, align 8, !tbaa !9
  %cmp.i4.i.i2148 = icmp eq ptr %call.i.i.i2129, null
  br i1 %cmp.i4.i.i2148, label %if.then.i6.i.i2153, label %cond.false.i.i.i2151

cond.false.i.i.i2151:                             ; preds = %subrcons.exit.i.i2149
  %type.i.i.i2150 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2129, i64 0, i32 1
  %730 = load i16, ptr %type.i.i.i2150, align 2, !tbaa !14
  %731 = icmp eq i16 %730, 3
  br i1 %731, label %init_fsubr.exit2155, label %if.then.i6.i.i2153

if.then.i6.i.i2153:                               ; preds = %cond.false.i.i.i2151, %subrcons.exit.i.i2149
  %call.i5.i.i2152 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2129) #38
  br label %init_fsubr.exit2155

init_fsubr.exit2155:                              ; preds = %cond.false.i.i.i2151, %if.then.i6.i.i2153
  %vcell.i.i.i2154 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2129, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2144, ptr %vcell.i.i.i2154, align 8, !tbaa !9
  %call.i.i.i2156 = tail call ptr @gen_intern(ptr noundef nonnull @.str.222, i64 noundef 0)
  %732 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2157 = icmp eq i64 %732, 1
  br i1 %cmp.i.i.i2157, label %if.then.i.i.i2159, label %if.else.i.i.i2165

if.then.i.i.i2159:                                ; preds = %init_fsubr.exit2155
  %733 = load ptr, ptr @heap, align 8, !tbaa !5
  %734 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2158 = icmp ult ptr %733, %734
  br i1 %cmp1.not.i.i.i2158, label %if.end.i.i.i2163, label %if.then2.i.i.i2161

if.then2.i.i.i2161:                               ; preds = %if.then.i.i.i2159
  %call.i.i.i.i2160 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2163

if.end.i.i.i2163:                                 ; preds = %if.then2.i.i.i2161, %if.then.i.i.i2159
  %add.ptr.i.i.i2162 = getelementptr inbounds %struct.obj, ptr %733, i64 1
  store ptr %add.ptr.i.i.i2162, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2176

if.else.i.i.i2165:                                ; preds = %init_fsubr.exit2155
  %735 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2164 = icmp eq ptr %735, null
  br i1 %cmp3.i.i.i2164, label %if.then4.i.i.i2167, label %if.end5.i.i.i2170

if.then4.i.i.i2167:                               ; preds = %if.else.i.i.i2165
  tail call void @gc_for_newcell()
  %.pre.i.i.i2166 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2170

if.end5.i.i.i2170:                                ; preds = %if.then4.i.i.i2167, %if.else.i.i.i2165
  %736 = phi ptr [ %.pre.i.i.i2166, %if.then4.i.i.i2167 ], [ %735, %if.else.i.i.i2165 ]
  %cdr.i.i.i2168 = getelementptr inbounds %struct.obj, ptr %736, i64 0, i32 2, i32 0, i32 1
  %737 = load ptr, ptr %cdr.i.i.i2168, align 8, !tbaa !9
  store ptr %737, ptr @freelist, align 8, !tbaa !5
  %738 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2169 = add nsw i64 %738, 1
  store i64 %inc.i.i.i2169, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2176

subrcons.exit.i.i2176:                            ; preds = %if.end5.i.i.i2170, %if.end.i.i.i2163
  %z.0.i.i.i2171 = phi ptr [ %733, %if.end.i.i.i2163 ], [ %736, %if.end5.i.i.i2170 ]
  store i16 0, ptr %z.0.i.i.i2171, align 8, !tbaa !35
  %type7.i.i.i2172 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2171, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2172, align 2, !tbaa !14
  %storage_as8.i.i.i2173 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2171, i64 0, i32 2
  store ptr @.str.222, ptr %storage_as8.i.i.i2173, align 8, !tbaa !9
  %f11.i.i.i2174 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2171, i64 0, i32 2, i32 0, i32 1
  store ptr @nreverse, ptr %f11.i.i.i2174, align 8, !tbaa !9
  %cmp.i4.i.i2175 = icmp eq ptr %call.i.i.i2156, null
  br i1 %cmp.i4.i.i2175, label %if.then.i6.i.i2180, label %cond.false.i.i.i2178

cond.false.i.i.i2178:                             ; preds = %subrcons.exit.i.i2176
  %type.i.i.i2177 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2156, i64 0, i32 1
  %739 = load i16, ptr %type.i.i.i2177, align 2, !tbaa !14
  %740 = icmp eq i16 %739, 3
  br i1 %740, label %init_subr_1.exit2182, label %if.then.i6.i.i2180

if.then.i6.i.i2180:                               ; preds = %cond.false.i.i.i2178, %subrcons.exit.i.i2176
  %call.i5.i.i2179 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2156) #38
  br label %init_subr_1.exit2182

init_subr_1.exit2182:                             ; preds = %cond.false.i.i.i2178, %if.then.i6.i.i2180
  %vcell.i.i.i2181 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2156, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2171, ptr %vcell.i.i.i2181, align 8, !tbaa !9
  %call.i.i.i2183 = tail call ptr @gen_intern(ptr noundef nonnull @.str.223, i64 noundef 0)
  %741 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2184 = icmp eq i64 %741, 1
  br i1 %cmp.i.i.i2184, label %if.then.i.i.i2186, label %if.else.i.i.i2192

if.then.i.i.i2186:                                ; preds = %init_subr_1.exit2182
  %742 = load ptr, ptr @heap, align 8, !tbaa !5
  %743 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2185 = icmp ult ptr %742, %743
  br i1 %cmp1.not.i.i.i2185, label %if.end.i.i.i2190, label %if.then2.i.i.i2188

if.then2.i.i.i2188:                               ; preds = %if.then.i.i.i2186
  %call.i.i.i.i2187 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2190

if.end.i.i.i2190:                                 ; preds = %if.then2.i.i.i2188, %if.then.i.i.i2186
  %add.ptr.i.i.i2189 = getelementptr inbounds %struct.obj, ptr %742, i64 1
  store ptr %add.ptr.i.i.i2189, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2203

if.else.i.i.i2192:                                ; preds = %init_subr_1.exit2182
  %744 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2191 = icmp eq ptr %744, null
  br i1 %cmp3.i.i.i2191, label %if.then4.i.i.i2194, label %if.end5.i.i.i2197

if.then4.i.i.i2194:                               ; preds = %if.else.i.i.i2192
  tail call void @gc_for_newcell()
  %.pre.i.i.i2193 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2197

if.end5.i.i.i2197:                                ; preds = %if.then4.i.i.i2194, %if.else.i.i.i2192
  %745 = phi ptr [ %.pre.i.i.i2193, %if.then4.i.i.i2194 ], [ %744, %if.else.i.i.i2192 ]
  %cdr.i.i.i2195 = getelementptr inbounds %struct.obj, ptr %745, i64 0, i32 2, i32 0, i32 1
  %746 = load ptr, ptr %cdr.i.i.i2195, align 8, !tbaa !9
  store ptr %746, ptr @freelist, align 8, !tbaa !5
  %747 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2196 = add nsw i64 %747, 1
  store i64 %inc.i.i.i2196, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2203

subrcons.exit.i.i2203:                            ; preds = %if.end5.i.i.i2197, %if.end.i.i.i2190
  %z.0.i.i.i2198 = phi ptr [ %742, %if.end.i.i.i2190 ], [ %745, %if.end5.i.i.i2197 ]
  store i16 0, ptr %z.0.i.i.i2198, align 8, !tbaa !35
  %type7.i.i.i2199 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2198, i64 0, i32 1
  store i16 4, ptr %type7.i.i.i2199, align 2, !tbaa !14
  %storage_as8.i.i.i2200 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2198, i64 0, i32 2
  store ptr @.str.223, ptr %storage_as8.i.i.i2200, align 8, !tbaa !9
  %f11.i.i.i2201 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2198, i64 0, i32 2, i32 0, i32 1
  store ptr @allocate_aheap, ptr %f11.i.i.i2201, align 8, !tbaa !9
  %cmp.i4.i.i2202 = icmp eq ptr %call.i.i.i2183, null
  br i1 %cmp.i4.i.i2202, label %if.then.i6.i.i2207, label %cond.false.i.i.i2205

cond.false.i.i.i2205:                             ; preds = %subrcons.exit.i.i2203
  %type.i.i.i2204 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2183, i64 0, i32 1
  %748 = load i16, ptr %type.i.i.i2204, align 2, !tbaa !14
  %749 = icmp eq i16 %748, 3
  br i1 %749, label %init_subr_0.exit2209, label %if.then.i6.i.i2207

if.then.i6.i.i2207:                               ; preds = %cond.false.i.i.i2205, %subrcons.exit.i.i2203
  %call.i5.i.i2206 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2183) #38
  br label %init_subr_0.exit2209

init_subr_0.exit2209:                             ; preds = %cond.false.i.i.i2205, %if.then.i6.i.i2207
  %vcell.i.i.i2208 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2183, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2198, ptr %vcell.i.i.i2208, align 8, !tbaa !9
  %call.i.i.i2210 = tail call ptr @gen_intern(ptr noundef nonnull @.str.224, i64 noundef 0)
  %750 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2211 = icmp eq i64 %750, 1
  br i1 %cmp.i.i.i2211, label %if.then.i.i.i2213, label %if.else.i.i.i2219

if.then.i.i.i2213:                                ; preds = %init_subr_0.exit2209
  %751 = load ptr, ptr @heap, align 8, !tbaa !5
  %752 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2212 = icmp ult ptr %751, %752
  br i1 %cmp1.not.i.i.i2212, label %if.end.i.i.i2217, label %if.then2.i.i.i2215

if.then2.i.i.i2215:                               ; preds = %if.then.i.i.i2213
  %call.i.i.i.i2214 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2217

if.end.i.i.i2217:                                 ; preds = %if.then2.i.i.i2215, %if.then.i.i.i2213
  %add.ptr.i.i.i2216 = getelementptr inbounds %struct.obj, ptr %751, i64 1
  store ptr %add.ptr.i.i.i2216, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2230

if.else.i.i.i2219:                                ; preds = %init_subr_0.exit2209
  %753 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2218 = icmp eq ptr %753, null
  br i1 %cmp3.i.i.i2218, label %if.then4.i.i.i2221, label %if.end5.i.i.i2224

if.then4.i.i.i2221:                               ; preds = %if.else.i.i.i2219
  tail call void @gc_for_newcell()
  %.pre.i.i.i2220 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2224

if.end5.i.i.i2224:                                ; preds = %if.then4.i.i.i2221, %if.else.i.i.i2219
  %754 = phi ptr [ %.pre.i.i.i2220, %if.then4.i.i.i2221 ], [ %753, %if.else.i.i.i2219 ]
  %cdr.i.i.i2222 = getelementptr inbounds %struct.obj, ptr %754, i64 0, i32 2, i32 0, i32 1
  %755 = load ptr, ptr %cdr.i.i.i2222, align 8, !tbaa !9
  store ptr %755, ptr @freelist, align 8, !tbaa !5
  %756 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2223 = add nsw i64 %756, 1
  store i64 %inc.i.i.i2223, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2230

subrcons.exit.i.i2230:                            ; preds = %if.end5.i.i.i2224, %if.end.i.i.i2217
  %z.0.i.i.i2225 = phi ptr [ %751, %if.end.i.i.i2217 ], [ %754, %if.end5.i.i.i2224 ]
  store i16 0, ptr %z.0.i.i.i2225, align 8, !tbaa !35
  %type7.i.i.i2226 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2225, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2226, align 2, !tbaa !14
  %storage_as8.i.i.i2227 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2225, i64 0, i32 2
  store ptr @.str.224, ptr %storage_as8.i.i.i2227, align 8, !tbaa !9
  %f11.i.i.i2228 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2225, i64 0, i32 2, i32 0, i32 1
  store ptr @gc_info, ptr %f11.i.i.i2228, align 8, !tbaa !9
  %cmp.i4.i.i2229 = icmp eq ptr %call.i.i.i2210, null
  br i1 %cmp.i4.i.i2229, label %if.then.i6.i.i2234, label %cond.false.i.i.i2232

cond.false.i.i.i2232:                             ; preds = %subrcons.exit.i.i2230
  %type.i.i.i2231 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2210, i64 0, i32 1
  %757 = load i16, ptr %type.i.i.i2231, align 2, !tbaa !14
  %758 = icmp eq i16 %757, 3
  br i1 %758, label %init_subr_1.exit2236, label %if.then.i6.i.i2234

if.then.i6.i.i2234:                               ; preds = %cond.false.i.i.i2232, %subrcons.exit.i.i2230
  %call.i5.i.i2233 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2210) #38
  br label %init_subr_1.exit2236

init_subr_1.exit2236:                             ; preds = %cond.false.i.i.i2232, %if.then.i6.i.i2234
  %vcell.i.i.i2235 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2210, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2225, ptr %vcell.i.i.i2235, align 8, !tbaa !9
  %call.i.i.i2237 = tail call ptr @gen_intern(ptr noundef nonnull @.str.225, i64 noundef 0)
  %759 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2238 = icmp eq i64 %759, 1
  br i1 %cmp.i.i.i2238, label %if.then.i.i.i2240, label %if.else.i.i.i2246

if.then.i.i.i2240:                                ; preds = %init_subr_1.exit2236
  %760 = load ptr, ptr @heap, align 8, !tbaa !5
  %761 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2239 = icmp ult ptr %760, %761
  br i1 %cmp1.not.i.i.i2239, label %if.end.i.i.i2244, label %if.then2.i.i.i2242

if.then2.i.i.i2242:                               ; preds = %if.then.i.i.i2240
  %call.i.i.i.i2241 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2244

if.end.i.i.i2244:                                 ; preds = %if.then2.i.i.i2242, %if.then.i.i.i2240
  %add.ptr.i.i.i2243 = getelementptr inbounds %struct.obj, ptr %760, i64 1
  store ptr %add.ptr.i.i.i2243, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2257

if.else.i.i.i2246:                                ; preds = %init_subr_1.exit2236
  %762 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2245 = icmp eq ptr %762, null
  br i1 %cmp3.i.i.i2245, label %if.then4.i.i.i2248, label %if.end5.i.i.i2251

if.then4.i.i.i2248:                               ; preds = %if.else.i.i.i2246
  tail call void @gc_for_newcell()
  %.pre.i.i.i2247 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2251

if.end5.i.i.i2251:                                ; preds = %if.then4.i.i.i2248, %if.else.i.i.i2246
  %763 = phi ptr [ %.pre.i.i.i2247, %if.then4.i.i.i2248 ], [ %762, %if.else.i.i.i2246 ]
  %cdr.i.i.i2249 = getelementptr inbounds %struct.obj, ptr %763, i64 0, i32 2, i32 0, i32 1
  %764 = load ptr, ptr %cdr.i.i.i2249, align 8, !tbaa !9
  store ptr %764, ptr @freelist, align 8, !tbaa !5
  %765 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2250 = add nsw i64 %765, 1
  store i64 %inc.i.i.i2250, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2257

subrcons.exit.i.i2257:                            ; preds = %if.end5.i.i.i2251, %if.end.i.i.i2244
  %z.0.i.i.i2252 = phi ptr [ %760, %if.end.i.i.i2244 ], [ %763, %if.end5.i.i.i2251 ]
  store i16 0, ptr %z.0.i.i.i2252, align 8, !tbaa !35
  %type7.i.i.i2253 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2252, i64 0, i32 1
  store i16 4, ptr %type7.i.i.i2253, align 2, !tbaa !14
  %storage_as8.i.i.i2254 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2252, i64 0, i32 2
  store ptr @.str.225, ptr %storage_as8.i.i.i2254, align 8, !tbaa !9
  %f11.i.i.i2255 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2252, i64 0, i32 2, i32 0, i32 1
  store ptr @lruntime, ptr %f11.i.i.i2255, align 8, !tbaa !9
  %cmp.i4.i.i2256 = icmp eq ptr %call.i.i.i2237, null
  br i1 %cmp.i4.i.i2256, label %if.then.i6.i.i2261, label %cond.false.i.i.i2259

cond.false.i.i.i2259:                             ; preds = %subrcons.exit.i.i2257
  %type.i.i.i2258 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2237, i64 0, i32 1
  %766 = load i16, ptr %type.i.i.i2258, align 2, !tbaa !14
  %767 = icmp eq i16 %766, 3
  br i1 %767, label %init_subr_0.exit2263, label %if.then.i6.i.i2261

if.then.i6.i.i2261:                               ; preds = %cond.false.i.i.i2259, %subrcons.exit.i.i2257
  %call.i5.i.i2260 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2237) #38
  br label %init_subr_0.exit2263

init_subr_0.exit2263:                             ; preds = %cond.false.i.i.i2259, %if.then.i6.i.i2261
  %vcell.i.i.i2262 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2237, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2252, ptr %vcell.i.i.i2262, align 8, !tbaa !9
  %call.i.i.i2264 = tail call ptr @gen_intern(ptr noundef nonnull @.str.226, i64 noundef 0)
  %768 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2265 = icmp eq i64 %768, 1
  br i1 %cmp.i.i.i2265, label %if.then.i.i.i2267, label %if.else.i.i.i2273

if.then.i.i.i2267:                                ; preds = %init_subr_0.exit2263
  %769 = load ptr, ptr @heap, align 8, !tbaa !5
  %770 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2266 = icmp ult ptr %769, %770
  br i1 %cmp1.not.i.i.i2266, label %if.end.i.i.i2271, label %if.then2.i.i.i2269

if.then2.i.i.i2269:                               ; preds = %if.then.i.i.i2267
  %call.i.i.i.i2268 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2271

if.end.i.i.i2271:                                 ; preds = %if.then2.i.i.i2269, %if.then.i.i.i2267
  %add.ptr.i.i.i2270 = getelementptr inbounds %struct.obj, ptr %769, i64 1
  store ptr %add.ptr.i.i.i2270, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2284

if.else.i.i.i2273:                                ; preds = %init_subr_0.exit2263
  %771 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2272 = icmp eq ptr %771, null
  br i1 %cmp3.i.i.i2272, label %if.then4.i.i.i2275, label %if.end5.i.i.i2278

if.then4.i.i.i2275:                               ; preds = %if.else.i.i.i2273
  tail call void @gc_for_newcell()
  %.pre.i.i.i2274 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2278

if.end5.i.i.i2278:                                ; preds = %if.then4.i.i.i2275, %if.else.i.i.i2273
  %772 = phi ptr [ %.pre.i.i.i2274, %if.then4.i.i.i2275 ], [ %771, %if.else.i.i.i2273 ]
  %cdr.i.i.i2276 = getelementptr inbounds %struct.obj, ptr %772, i64 0, i32 2, i32 0, i32 1
  %773 = load ptr, ptr %cdr.i.i.i2276, align 8, !tbaa !9
  store ptr %773, ptr @freelist, align 8, !tbaa !5
  %774 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2277 = add nsw i64 %774, 1
  store i64 %inc.i.i.i2277, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2284

subrcons.exit.i.i2284:                            ; preds = %if.end5.i.i.i2278, %if.end.i.i.i2271
  %z.0.i.i.i2279 = phi ptr [ %769, %if.end.i.i.i2271 ], [ %772, %if.end5.i.i.i2278 ]
  store i16 0, ptr %z.0.i.i.i2279, align 8, !tbaa !35
  %type7.i.i.i2280 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2279, i64 0, i32 1
  store i16 4, ptr %type7.i.i.i2280, align 2, !tbaa !14
  %storage_as8.i.i.i2281 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2279, i64 0, i32 2
  store ptr @.str.226, ptr %storage_as8.i.i.i2281, align 8, !tbaa !9
  %f11.i.i.i2282 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2279, i64 0, i32 2, i32 0, i32 1
  store ptr @lrealtime, ptr %f11.i.i.i2282, align 8, !tbaa !9
  %cmp.i4.i.i2283 = icmp eq ptr %call.i.i.i2264, null
  br i1 %cmp.i4.i.i2283, label %if.then.i6.i.i2288, label %cond.false.i.i.i2286

cond.false.i.i.i2286:                             ; preds = %subrcons.exit.i.i2284
  %type.i.i.i2285 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2264, i64 0, i32 1
  %775 = load i16, ptr %type.i.i.i2285, align 2, !tbaa !14
  %776 = icmp eq i16 %775, 3
  br i1 %776, label %init_subr_0.exit2290, label %if.then.i6.i.i2288

if.then.i6.i.i2288:                               ; preds = %cond.false.i.i.i2286, %subrcons.exit.i.i2284
  %call.i5.i.i2287 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2264) #38
  br label %init_subr_0.exit2290

init_subr_0.exit2290:                             ; preds = %cond.false.i.i.i2286, %if.then.i6.i.i2288
  %vcell.i.i.i2289 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2264, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2279, ptr %vcell.i.i.i2289, align 8, !tbaa !9
  %call.i.i.i2291 = tail call ptr @gen_intern(ptr noundef nonnull @.str.227, i64 noundef 0)
  %777 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2292 = icmp eq i64 %777, 1
  br i1 %cmp.i.i.i2292, label %if.then.i.i.i2294, label %if.else.i.i.i2300

if.then.i.i.i2294:                                ; preds = %init_subr_0.exit2290
  %778 = load ptr, ptr @heap, align 8, !tbaa !5
  %779 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2293 = icmp ult ptr %778, %779
  br i1 %cmp1.not.i.i.i2293, label %if.end.i.i.i2298, label %if.then2.i.i.i2296

if.then2.i.i.i2296:                               ; preds = %if.then.i.i.i2294
  %call.i.i.i.i2295 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2298

if.end.i.i.i2298:                                 ; preds = %if.then2.i.i.i2296, %if.then.i.i.i2294
  %add.ptr.i.i.i2297 = getelementptr inbounds %struct.obj, ptr %778, i64 1
  store ptr %add.ptr.i.i.i2297, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2311

if.else.i.i.i2300:                                ; preds = %init_subr_0.exit2290
  %780 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2299 = icmp eq ptr %780, null
  br i1 %cmp3.i.i.i2299, label %if.then4.i.i.i2302, label %if.end5.i.i.i2305

if.then4.i.i.i2302:                               ; preds = %if.else.i.i.i2300
  tail call void @gc_for_newcell()
  %.pre.i.i.i2301 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2305

if.end5.i.i.i2305:                                ; preds = %if.then4.i.i.i2302, %if.else.i.i.i2300
  %781 = phi ptr [ %.pre.i.i.i2301, %if.then4.i.i.i2302 ], [ %780, %if.else.i.i.i2300 ]
  %cdr.i.i.i2303 = getelementptr inbounds %struct.obj, ptr %781, i64 0, i32 2, i32 0, i32 1
  %782 = load ptr, ptr %cdr.i.i.i2303, align 8, !tbaa !9
  store ptr %782, ptr @freelist, align 8, !tbaa !5
  %783 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2304 = add nsw i64 %783, 1
  store i64 %inc.i.i.i2304, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2311

subrcons.exit.i.i2311:                            ; preds = %if.end5.i.i.i2305, %if.end.i.i.i2298
  %z.0.i.i.i2306 = phi ptr [ %778, %if.end.i.i.i2298 ], [ %781, %if.end5.i.i.i2305 ]
  store i16 0, ptr %z.0.i.i.i2306, align 8, !tbaa !35
  %type7.i.i.i2307 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2306, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2307, align 2, !tbaa !14
  %storage_as8.i.i.i2308 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2306, i64 0, i32 2
  store ptr @.str.227, ptr %storage_as8.i.i.i2308, align 8, !tbaa !9
  %f11.i.i.i2309 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2306, i64 0, i32 2, i32 0, i32 1
  store ptr @caar, ptr %f11.i.i.i2309, align 8, !tbaa !9
  %cmp.i4.i.i2310 = icmp eq ptr %call.i.i.i2291, null
  br i1 %cmp.i4.i.i2310, label %if.then.i6.i.i2315, label %cond.false.i.i.i2313

cond.false.i.i.i2313:                             ; preds = %subrcons.exit.i.i2311
  %type.i.i.i2312 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2291, i64 0, i32 1
  %784 = load i16, ptr %type.i.i.i2312, align 2, !tbaa !14
  %785 = icmp eq i16 %784, 3
  br i1 %785, label %init_subr_1.exit2317, label %if.then.i6.i.i2315

if.then.i6.i.i2315:                               ; preds = %cond.false.i.i.i2313, %subrcons.exit.i.i2311
  %call.i5.i.i2314 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2291) #38
  br label %init_subr_1.exit2317

init_subr_1.exit2317:                             ; preds = %cond.false.i.i.i2313, %if.then.i6.i.i2315
  %vcell.i.i.i2316 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2291, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2306, ptr %vcell.i.i.i2316, align 8, !tbaa !9
  %call.i.i.i2318 = tail call ptr @gen_intern(ptr noundef nonnull @.str.228, i64 noundef 0)
  %786 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2319 = icmp eq i64 %786, 1
  br i1 %cmp.i.i.i2319, label %if.then.i.i.i2321, label %if.else.i.i.i2327

if.then.i.i.i2321:                                ; preds = %init_subr_1.exit2317
  %787 = load ptr, ptr @heap, align 8, !tbaa !5
  %788 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2320 = icmp ult ptr %787, %788
  br i1 %cmp1.not.i.i.i2320, label %if.end.i.i.i2325, label %if.then2.i.i.i2323

if.then2.i.i.i2323:                               ; preds = %if.then.i.i.i2321
  %call.i.i.i.i2322 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2325

if.end.i.i.i2325:                                 ; preds = %if.then2.i.i.i2323, %if.then.i.i.i2321
  %add.ptr.i.i.i2324 = getelementptr inbounds %struct.obj, ptr %787, i64 1
  store ptr %add.ptr.i.i.i2324, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2338

if.else.i.i.i2327:                                ; preds = %init_subr_1.exit2317
  %789 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2326 = icmp eq ptr %789, null
  br i1 %cmp3.i.i.i2326, label %if.then4.i.i.i2329, label %if.end5.i.i.i2332

if.then4.i.i.i2329:                               ; preds = %if.else.i.i.i2327
  tail call void @gc_for_newcell()
  %.pre.i.i.i2328 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2332

if.end5.i.i.i2332:                                ; preds = %if.then4.i.i.i2329, %if.else.i.i.i2327
  %790 = phi ptr [ %.pre.i.i.i2328, %if.then4.i.i.i2329 ], [ %789, %if.else.i.i.i2327 ]
  %cdr.i.i.i2330 = getelementptr inbounds %struct.obj, ptr %790, i64 0, i32 2, i32 0, i32 1
  %791 = load ptr, ptr %cdr.i.i.i2330, align 8, !tbaa !9
  store ptr %791, ptr @freelist, align 8, !tbaa !5
  %792 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2331 = add nsw i64 %792, 1
  store i64 %inc.i.i.i2331, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2338

subrcons.exit.i.i2338:                            ; preds = %if.end5.i.i.i2332, %if.end.i.i.i2325
  %z.0.i.i.i2333 = phi ptr [ %787, %if.end.i.i.i2325 ], [ %790, %if.end5.i.i.i2332 ]
  store i16 0, ptr %z.0.i.i.i2333, align 8, !tbaa !35
  %type7.i.i.i2334 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2333, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2334, align 2, !tbaa !14
  %storage_as8.i.i.i2335 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2333, i64 0, i32 2
  store ptr @.str.228, ptr %storage_as8.i.i.i2335, align 8, !tbaa !9
  %f11.i.i.i2336 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2333, i64 0, i32 2, i32 0, i32 1
  store ptr @cadr, ptr %f11.i.i.i2336, align 8, !tbaa !9
  %cmp.i4.i.i2337 = icmp eq ptr %call.i.i.i2318, null
  br i1 %cmp.i4.i.i2337, label %if.then.i6.i.i2342, label %cond.false.i.i.i2340

cond.false.i.i.i2340:                             ; preds = %subrcons.exit.i.i2338
  %type.i.i.i2339 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2318, i64 0, i32 1
  %793 = load i16, ptr %type.i.i.i2339, align 2, !tbaa !14
  %794 = icmp eq i16 %793, 3
  br i1 %794, label %init_subr_1.exit2344, label %if.then.i6.i.i2342

if.then.i6.i.i2342:                               ; preds = %cond.false.i.i.i2340, %subrcons.exit.i.i2338
  %call.i5.i.i2341 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2318) #38
  br label %init_subr_1.exit2344

init_subr_1.exit2344:                             ; preds = %cond.false.i.i.i2340, %if.then.i6.i.i2342
  %vcell.i.i.i2343 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2318, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2333, ptr %vcell.i.i.i2343, align 8, !tbaa !9
  %call.i.i.i2345 = tail call ptr @gen_intern(ptr noundef nonnull @.str.229, i64 noundef 0)
  %795 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2346 = icmp eq i64 %795, 1
  br i1 %cmp.i.i.i2346, label %if.then.i.i.i2348, label %if.else.i.i.i2354

if.then.i.i.i2348:                                ; preds = %init_subr_1.exit2344
  %796 = load ptr, ptr @heap, align 8, !tbaa !5
  %797 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2347 = icmp ult ptr %796, %797
  br i1 %cmp1.not.i.i.i2347, label %if.end.i.i.i2352, label %if.then2.i.i.i2350

if.then2.i.i.i2350:                               ; preds = %if.then.i.i.i2348
  %call.i.i.i.i2349 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2352

if.end.i.i.i2352:                                 ; preds = %if.then2.i.i.i2350, %if.then.i.i.i2348
  %add.ptr.i.i.i2351 = getelementptr inbounds %struct.obj, ptr %796, i64 1
  store ptr %add.ptr.i.i.i2351, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2365

if.else.i.i.i2354:                                ; preds = %init_subr_1.exit2344
  %798 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2353 = icmp eq ptr %798, null
  br i1 %cmp3.i.i.i2353, label %if.then4.i.i.i2356, label %if.end5.i.i.i2359

if.then4.i.i.i2356:                               ; preds = %if.else.i.i.i2354
  tail call void @gc_for_newcell()
  %.pre.i.i.i2355 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2359

if.end5.i.i.i2359:                                ; preds = %if.then4.i.i.i2356, %if.else.i.i.i2354
  %799 = phi ptr [ %.pre.i.i.i2355, %if.then4.i.i.i2356 ], [ %798, %if.else.i.i.i2354 ]
  %cdr.i.i.i2357 = getelementptr inbounds %struct.obj, ptr %799, i64 0, i32 2, i32 0, i32 1
  %800 = load ptr, ptr %cdr.i.i.i2357, align 8, !tbaa !9
  store ptr %800, ptr @freelist, align 8, !tbaa !5
  %801 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2358 = add nsw i64 %801, 1
  store i64 %inc.i.i.i2358, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2365

subrcons.exit.i.i2365:                            ; preds = %if.end5.i.i.i2359, %if.end.i.i.i2352
  %z.0.i.i.i2360 = phi ptr [ %796, %if.end.i.i.i2352 ], [ %799, %if.end5.i.i.i2359 ]
  store i16 0, ptr %z.0.i.i.i2360, align 8, !tbaa !35
  %type7.i.i.i2361 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2360, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2361, align 2, !tbaa !14
  %storage_as8.i.i.i2362 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2360, i64 0, i32 2
  store ptr @.str.229, ptr %storage_as8.i.i.i2362, align 8, !tbaa !9
  %f11.i.i.i2363 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2360, i64 0, i32 2, i32 0, i32 1
  store ptr @cdar, ptr %f11.i.i.i2363, align 8, !tbaa !9
  %cmp.i4.i.i2364 = icmp eq ptr %call.i.i.i2345, null
  br i1 %cmp.i4.i.i2364, label %if.then.i6.i.i2369, label %cond.false.i.i.i2367

cond.false.i.i.i2367:                             ; preds = %subrcons.exit.i.i2365
  %type.i.i.i2366 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2345, i64 0, i32 1
  %802 = load i16, ptr %type.i.i.i2366, align 2, !tbaa !14
  %803 = icmp eq i16 %802, 3
  br i1 %803, label %init_subr_1.exit2371, label %if.then.i6.i.i2369

if.then.i6.i.i2369:                               ; preds = %cond.false.i.i.i2367, %subrcons.exit.i.i2365
  %call.i5.i.i2368 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2345) #38
  br label %init_subr_1.exit2371

init_subr_1.exit2371:                             ; preds = %cond.false.i.i.i2367, %if.then.i6.i.i2369
  %vcell.i.i.i2370 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2345, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2360, ptr %vcell.i.i.i2370, align 8, !tbaa !9
  %call.i.i.i2372 = tail call ptr @gen_intern(ptr noundef nonnull @.str.230, i64 noundef 0)
  %804 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2373 = icmp eq i64 %804, 1
  br i1 %cmp.i.i.i2373, label %if.then.i.i.i2375, label %if.else.i.i.i2381

if.then.i.i.i2375:                                ; preds = %init_subr_1.exit2371
  %805 = load ptr, ptr @heap, align 8, !tbaa !5
  %806 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2374 = icmp ult ptr %805, %806
  br i1 %cmp1.not.i.i.i2374, label %if.end.i.i.i2379, label %if.then2.i.i.i2377

if.then2.i.i.i2377:                               ; preds = %if.then.i.i.i2375
  %call.i.i.i.i2376 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2379

if.end.i.i.i2379:                                 ; preds = %if.then2.i.i.i2377, %if.then.i.i.i2375
  %add.ptr.i.i.i2378 = getelementptr inbounds %struct.obj, ptr %805, i64 1
  store ptr %add.ptr.i.i.i2378, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2392

if.else.i.i.i2381:                                ; preds = %init_subr_1.exit2371
  %807 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2380 = icmp eq ptr %807, null
  br i1 %cmp3.i.i.i2380, label %if.then4.i.i.i2383, label %if.end5.i.i.i2386

if.then4.i.i.i2383:                               ; preds = %if.else.i.i.i2381
  tail call void @gc_for_newcell()
  %.pre.i.i.i2382 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2386

if.end5.i.i.i2386:                                ; preds = %if.then4.i.i.i2383, %if.else.i.i.i2381
  %808 = phi ptr [ %.pre.i.i.i2382, %if.then4.i.i.i2383 ], [ %807, %if.else.i.i.i2381 ]
  %cdr.i.i.i2384 = getelementptr inbounds %struct.obj, ptr %808, i64 0, i32 2, i32 0, i32 1
  %809 = load ptr, ptr %cdr.i.i.i2384, align 8, !tbaa !9
  store ptr %809, ptr @freelist, align 8, !tbaa !5
  %810 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2385 = add nsw i64 %810, 1
  store i64 %inc.i.i.i2385, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2392

subrcons.exit.i.i2392:                            ; preds = %if.end5.i.i.i2386, %if.end.i.i.i2379
  %z.0.i.i.i2387 = phi ptr [ %805, %if.end.i.i.i2379 ], [ %808, %if.end5.i.i.i2386 ]
  store i16 0, ptr %z.0.i.i.i2387, align 8, !tbaa !35
  %type7.i.i.i2388 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2387, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2388, align 2, !tbaa !14
  %storage_as8.i.i.i2389 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2387, i64 0, i32 2
  store ptr @.str.230, ptr %storage_as8.i.i.i2389, align 8, !tbaa !9
  %f11.i.i.i2390 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2387, i64 0, i32 2, i32 0, i32 1
  store ptr @cddr, ptr %f11.i.i.i2390, align 8, !tbaa !9
  %cmp.i4.i.i2391 = icmp eq ptr %call.i.i.i2372, null
  br i1 %cmp.i4.i.i2391, label %if.then.i6.i.i2396, label %cond.false.i.i.i2394

cond.false.i.i.i2394:                             ; preds = %subrcons.exit.i.i2392
  %type.i.i.i2393 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2372, i64 0, i32 1
  %811 = load i16, ptr %type.i.i.i2393, align 2, !tbaa !14
  %812 = icmp eq i16 %811, 3
  br i1 %812, label %init_subr_1.exit2398, label %if.then.i6.i.i2396

if.then.i6.i.i2396:                               ; preds = %cond.false.i.i.i2394, %subrcons.exit.i.i2392
  %call.i5.i.i2395 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2372) #38
  br label %init_subr_1.exit2398

init_subr_1.exit2398:                             ; preds = %cond.false.i.i.i2394, %if.then.i6.i.i2396
  %vcell.i.i.i2397 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2372, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2387, ptr %vcell.i.i.i2397, align 8, !tbaa !9
  %call.i.i.i2399 = tail call ptr @gen_intern(ptr noundef nonnull @.str.231, i64 noundef 0)
  %813 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2400 = icmp eq i64 %813, 1
  br i1 %cmp.i.i.i2400, label %if.then.i.i.i2402, label %if.else.i.i.i2408

if.then.i.i.i2402:                                ; preds = %init_subr_1.exit2398
  %814 = load ptr, ptr @heap, align 8, !tbaa !5
  %815 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2401 = icmp ult ptr %814, %815
  br i1 %cmp1.not.i.i.i2401, label %if.end.i.i.i2406, label %if.then2.i.i.i2404

if.then2.i.i.i2404:                               ; preds = %if.then.i.i.i2402
  %call.i.i.i.i2403 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2406

if.end.i.i.i2406:                                 ; preds = %if.then2.i.i.i2404, %if.then.i.i.i2402
  %add.ptr.i.i.i2405 = getelementptr inbounds %struct.obj, ptr %814, i64 1
  store ptr %add.ptr.i.i.i2405, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2419

if.else.i.i.i2408:                                ; preds = %init_subr_1.exit2398
  %816 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2407 = icmp eq ptr %816, null
  br i1 %cmp3.i.i.i2407, label %if.then4.i.i.i2410, label %if.end5.i.i.i2413

if.then4.i.i.i2410:                               ; preds = %if.else.i.i.i2408
  tail call void @gc_for_newcell()
  %.pre.i.i.i2409 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2413

if.end5.i.i.i2413:                                ; preds = %if.then4.i.i.i2410, %if.else.i.i.i2408
  %817 = phi ptr [ %.pre.i.i.i2409, %if.then4.i.i.i2410 ], [ %816, %if.else.i.i.i2408 ]
  %cdr.i.i.i2411 = getelementptr inbounds %struct.obj, ptr %817, i64 0, i32 2, i32 0, i32 1
  %818 = load ptr, ptr %cdr.i.i.i2411, align 8, !tbaa !9
  store ptr %818, ptr @freelist, align 8, !tbaa !5
  %819 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2412 = add nsw i64 %819, 1
  store i64 %inc.i.i.i2412, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2419

subrcons.exit.i.i2419:                            ; preds = %if.end5.i.i.i2413, %if.end.i.i.i2406
  %z.0.i.i.i2414 = phi ptr [ %814, %if.end.i.i.i2406 ], [ %817, %if.end5.i.i.i2413 ]
  store i16 0, ptr %z.0.i.i.i2414, align 8, !tbaa !35
  %type7.i.i.i2415 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2414, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2415, align 2, !tbaa !14
  %storage_as8.i.i.i2416 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2414, i64 0, i32 2
  store ptr @.str.231, ptr %storage_as8.i.i.i2416, align 8, !tbaa !9
  %f11.i.i.i2417 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2414, i64 0, i32 2, i32 0, i32 1
  store ptr @lrand, ptr %f11.i.i.i2417, align 8, !tbaa !9
  %cmp.i4.i.i2418 = icmp eq ptr %call.i.i.i2399, null
  br i1 %cmp.i4.i.i2418, label %if.then.i6.i.i2423, label %cond.false.i.i.i2421

cond.false.i.i.i2421:                             ; preds = %subrcons.exit.i.i2419
  %type.i.i.i2420 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2399, i64 0, i32 1
  %820 = load i16, ptr %type.i.i.i2420, align 2, !tbaa !14
  %821 = icmp eq i16 %820, 3
  br i1 %821, label %init_subr_1.exit2425, label %if.then.i6.i.i2423

if.then.i6.i.i2423:                               ; preds = %cond.false.i.i.i2421, %subrcons.exit.i.i2419
  %call.i5.i.i2422 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2399) #38
  br label %init_subr_1.exit2425

init_subr_1.exit2425:                             ; preds = %cond.false.i.i.i2421, %if.then.i6.i.i2423
  %vcell.i.i.i2424 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2399, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2414, ptr %vcell.i.i.i2424, align 8, !tbaa !9
  %call.i.i.i2426 = tail call ptr @gen_intern(ptr noundef nonnull @.str.232, i64 noundef 0)
  %822 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2427 = icmp eq i64 %822, 1
  br i1 %cmp.i.i.i2427, label %if.then.i.i.i2429, label %if.else.i.i.i2435

if.then.i.i.i2429:                                ; preds = %init_subr_1.exit2425
  %823 = load ptr, ptr @heap, align 8, !tbaa !5
  %824 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2428 = icmp ult ptr %823, %824
  br i1 %cmp1.not.i.i.i2428, label %if.end.i.i.i2433, label %if.then2.i.i.i2431

if.then2.i.i.i2431:                               ; preds = %if.then.i.i.i2429
  %call.i.i.i.i2430 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2433

if.end.i.i.i2433:                                 ; preds = %if.then2.i.i.i2431, %if.then.i.i.i2429
  %add.ptr.i.i.i2432 = getelementptr inbounds %struct.obj, ptr %823, i64 1
  store ptr %add.ptr.i.i.i2432, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2446

if.else.i.i.i2435:                                ; preds = %init_subr_1.exit2425
  %825 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2434 = icmp eq ptr %825, null
  br i1 %cmp3.i.i.i2434, label %if.then4.i.i.i2437, label %if.end5.i.i.i2440

if.then4.i.i.i2437:                               ; preds = %if.else.i.i.i2435
  tail call void @gc_for_newcell()
  %.pre.i.i.i2436 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2440

if.end5.i.i.i2440:                                ; preds = %if.then4.i.i.i2437, %if.else.i.i.i2435
  %826 = phi ptr [ %.pre.i.i.i2436, %if.then4.i.i.i2437 ], [ %825, %if.else.i.i.i2435 ]
  %cdr.i.i.i2438 = getelementptr inbounds %struct.obj, ptr %826, i64 0, i32 2, i32 0, i32 1
  %827 = load ptr, ptr %cdr.i.i.i2438, align 8, !tbaa !9
  store ptr %827, ptr @freelist, align 8, !tbaa !5
  %828 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2439 = add nsw i64 %828, 1
  store i64 %inc.i.i.i2439, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2446

subrcons.exit.i.i2446:                            ; preds = %if.end5.i.i.i2440, %if.end.i.i.i2433
  %z.0.i.i.i2441 = phi ptr [ %823, %if.end.i.i.i2433 ], [ %826, %if.end5.i.i.i2440 ]
  store i16 0, ptr %z.0.i.i.i2441, align 8, !tbaa !35
  %type7.i.i.i2442 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2441, i64 0, i32 1
  store i16 5, ptr %type7.i.i.i2442, align 2, !tbaa !14
  %storage_as8.i.i.i2443 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2441, i64 0, i32 2
  store ptr @.str.232, ptr %storage_as8.i.i.i2443, align 8, !tbaa !9
  %f11.i.i.i2444 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2441, i64 0, i32 2, i32 0, i32 1
  store ptr @lsrand, ptr %f11.i.i.i2444, align 8, !tbaa !9
  %cmp.i4.i.i2445 = icmp eq ptr %call.i.i.i2426, null
  br i1 %cmp.i4.i.i2445, label %if.then.i6.i.i2450, label %cond.false.i.i.i2448

cond.false.i.i.i2448:                             ; preds = %subrcons.exit.i.i2446
  %type.i.i.i2447 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2426, i64 0, i32 1
  %829 = load i16, ptr %type.i.i.i2447, align 2, !tbaa !14
  %830 = icmp eq i16 %829, 3
  br i1 %830, label %init_subr_1.exit2452, label %if.then.i6.i.i2450

if.then.i6.i.i2450:                               ; preds = %cond.false.i.i.i2448, %subrcons.exit.i.i2446
  %call.i5.i.i2449 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2426) #38
  br label %init_subr_1.exit2452

init_subr_1.exit2452:                             ; preds = %cond.false.i.i.i2448, %if.then.i6.i.i2450
  %vcell.i.i.i2451 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2426, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2441, ptr %vcell.i.i.i2451, align 8, !tbaa !9
  %call.i.i.i2453 = tail call ptr @gen_intern(ptr noundef nonnull @.str.233, i64 noundef 0)
  %831 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2454 = icmp eq i64 %831, 1
  br i1 %cmp.i.i.i2454, label %if.then.i.i.i2456, label %if.else.i.i.i2462

if.then.i.i.i2456:                                ; preds = %init_subr_1.exit2452
  %832 = load ptr, ptr @heap, align 8, !tbaa !5
  %833 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2455 = icmp ult ptr %832, %833
  br i1 %cmp1.not.i.i.i2455, label %if.end.i.i.i2460, label %if.then2.i.i.i2458

if.then2.i.i.i2458:                               ; preds = %if.then.i.i.i2456
  %call.i.i.i.i2457 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2460

if.end.i.i.i2460:                                 ; preds = %if.then2.i.i.i2458, %if.then.i.i.i2456
  %add.ptr.i.i.i2459 = getelementptr inbounds %struct.obj, ptr %832, i64 1
  store ptr %add.ptr.i.i.i2459, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2473

if.else.i.i.i2462:                                ; preds = %init_subr_1.exit2452
  %834 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2461 = icmp eq ptr %834, null
  br i1 %cmp3.i.i.i2461, label %if.then4.i.i.i2464, label %if.end5.i.i.i2467

if.then4.i.i.i2464:                               ; preds = %if.else.i.i.i2462
  tail call void @gc_for_newcell()
  %.pre.i.i.i2463 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2467

if.end5.i.i.i2467:                                ; preds = %if.then4.i.i.i2464, %if.else.i.i.i2462
  %835 = phi ptr [ %.pre.i.i.i2463, %if.then4.i.i.i2464 ], [ %834, %if.else.i.i.i2462 ]
  %cdr.i.i.i2465 = getelementptr inbounds %struct.obj, ptr %835, i64 0, i32 2, i32 0, i32 1
  %836 = load ptr, ptr %cdr.i.i.i2465, align 8, !tbaa !9
  store ptr %836, ptr @freelist, align 8, !tbaa !5
  %837 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2466 = add nsw i64 %837, 1
  store i64 %inc.i.i.i2466, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2473

subrcons.exit.i.i2473:                            ; preds = %if.end5.i.i.i2467, %if.end.i.i.i2460
  %z.0.i.i.i2468 = phi ptr [ %832, %if.end.i.i.i2460 ], [ %835, %if.end5.i.i.i2467 ]
  store i16 0, ptr %z.0.i.i.i2468, align 8, !tbaa !35
  %type7.i.i.i2469 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2468, i64 0, i32 1
  store i16 4, ptr %type7.i.i.i2469, align 2, !tbaa !14
  %storage_as8.i.i.i2470 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2468, i64 0, i32 2
  store ptr @.str.233, ptr %storage_as8.i.i.i2470, align 8, !tbaa !9
  %f11.i.i.i2471 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2468, i64 0, i32 2, i32 0, i32 1
  store ptr @lllast_c_errmsg, ptr %f11.i.i.i2471, align 8, !tbaa !9
  %cmp.i4.i.i2472 = icmp eq ptr %call.i.i.i2453, null
  br i1 %cmp.i4.i.i2472, label %if.then.i6.i.i2477, label %cond.false.i.i.i2475

cond.false.i.i.i2475:                             ; preds = %subrcons.exit.i.i2473
  %type.i.i.i2474 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2453, i64 0, i32 1
  %838 = load i16, ptr %type.i.i.i2474, align 2, !tbaa !14
  %839 = icmp eq i16 %838, 3
  br i1 %839, label %init_subr_0.exit2479, label %if.then.i6.i.i2477

if.then.i6.i.i2477:                               ; preds = %cond.false.i.i.i2475, %subrcons.exit.i.i2473
  %call.i5.i.i2476 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2453) #38
  br label %init_subr_0.exit2479

init_subr_0.exit2479:                             ; preds = %cond.false.i.i.i2475, %if.then.i6.i.i2477
  %vcell.i.i.i2478 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2453, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2468, ptr %vcell.i.i.i2478, align 8, !tbaa !9
  %call.i.i.i2480 = tail call ptr @gen_intern(ptr noundef nonnull @.str.234, i64 noundef 0)
  %840 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i.i.i2481 = icmp eq i64 %840, 1
  br i1 %cmp.i.i.i2481, label %if.then.i.i.i2483, label %if.else.i.i.i2489

if.then.i.i.i2483:                                ; preds = %init_subr_0.exit2479
  %841 = load ptr, ptr @heap, align 8, !tbaa !5
  %842 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i.i.i2482 = icmp ult ptr %841, %842
  br i1 %cmp1.not.i.i.i2482, label %if.end.i.i.i2487, label %if.then2.i.i.i2485

if.then2.i.i.i2485:                               ; preds = %if.then.i.i.i2483
  %call.i.i.i.i2484 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end.i.i.i2487

if.end.i.i.i2487:                                 ; preds = %if.then2.i.i.i2485, %if.then.i.i.i2483
  %add.ptr.i.i.i2486 = getelementptr inbounds %struct.obj, ptr %841, i64 1
  store ptr %add.ptr.i.i.i2486, ptr @heap, align 8, !tbaa !5
  br label %subrcons.exit.i.i2500

if.else.i.i.i2489:                                ; preds = %init_subr_0.exit2479
  %843 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i.i.i2488 = icmp eq ptr %843, null
  br i1 %cmp3.i.i.i2488, label %if.then4.i.i.i2491, label %if.end5.i.i.i2494

if.then4.i.i.i2491:                               ; preds = %if.else.i.i.i2489
  tail call void @gc_for_newcell()
  %.pre.i.i.i2490 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i.i.i2494

if.end5.i.i.i2494:                                ; preds = %if.then4.i.i.i2491, %if.else.i.i.i2489
  %844 = phi ptr [ %.pre.i.i.i2490, %if.then4.i.i.i2491 ], [ %843, %if.else.i.i.i2489 ]
  %cdr.i.i.i2492 = getelementptr inbounds %struct.obj, ptr %844, i64 0, i32 2, i32 0, i32 1
  %845 = load ptr, ptr %cdr.i.i.i2492, align 8, !tbaa !9
  store ptr %845, ptr @freelist, align 8, !tbaa !5
  %846 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i.i.i2493 = add nsw i64 %846, 1
  store i64 %inc.i.i.i2493, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %subrcons.exit.i.i2500

subrcons.exit.i.i2500:                            ; preds = %if.end5.i.i.i2494, %if.end.i.i.i2487
  %z.0.i.i.i2495 = phi ptr [ %841, %if.end.i.i.i2487 ], [ %844, %if.end5.i.i.i2494 ]
  store i16 0, ptr %z.0.i.i.i2495, align 8, !tbaa !35
  %type7.i.i.i2496 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2495, i64 0, i32 1
  store i16 4, ptr %type7.i.i.i2496, align 2, !tbaa !14
  %storage_as8.i.i.i2497 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2495, i64 0, i32 2
  store ptr @.str.234, ptr %storage_as8.i.i.i2497, align 8, !tbaa !9
  %f11.i.i.i2498 = getelementptr inbounds %struct.obj, ptr %z.0.i.i.i2495, i64 0, i32 2, i32 0, i32 1
  store ptr @os_classification, ptr %f11.i.i.i2498, align 8, !tbaa !9
  %cmp.i4.i.i2499 = icmp eq ptr %call.i.i.i2480, null
  br i1 %cmp.i4.i.i2499, label %if.then.i6.i.i2504, label %cond.false.i.i.i2502

cond.false.i.i.i2502:                             ; preds = %subrcons.exit.i.i2500
  %type.i.i.i2501 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2480, i64 0, i32 1
  %847 = load i16, ptr %type.i.i.i2501, align 2, !tbaa !14
  %848 = icmp eq i16 %847, 3
  br i1 %848, label %init_subr_0.exit2506, label %if.then.i6.i.i2504

if.then.i6.i.i2504:                               ; preds = %cond.false.i.i.i2502, %subrcons.exit.i.i2500
  %call.i5.i.i2503 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i.i2480) #38
  br label %init_subr_0.exit2506

init_subr_0.exit2506:                             ; preds = %cond.false.i.i.i2502, %if.then.i6.i.i2504
  %vcell.i.i.i2505 = getelementptr inbounds %struct.obj, ptr %call.i.i.i2480, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i.i.i2495, ptr %vcell.i.i.i2505, align 8, !tbaa !9
  %call.i.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.239, i64 noundef 0)
  %call.i3.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.240, i64 noundef 0)
  %cmp.i.i = icmp eq ptr %call.i.i, null
  br i1 %cmp.i.i, label %if.then.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %init_subr_0.exit2506
  %type.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 1
  %849 = load i16, ptr %type.i.i, align 2, !tbaa !14
  %850 = icmp eq i16 %849, 3
  br i1 %850, label %init_slib_version.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %cond.false.i.i, %init_subr_0.exit2506
  %call.i4.i = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %call.i.i) #38
  br label %init_slib_version.exit

init_slib_version.exit:                           ; preds = %cond.false.i.i, %if.then.i.i
  %vcell.i.i = getelementptr inbounds %struct.obj, ptr %call.i.i, i64 0, i32 2, i32 0, i32 1
  store ptr %call.i3.i, ptr %vcell.i.i, align 8, !tbaa !9
  ret void
}

declare void @init_subrs_a() local_unnamed_addr #13

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local ptr @closure_code(ptr nocapture noundef readonly %exp) #26 {
entry:
  %code = getelementptr inbounds %struct.obj, ptr %exp, i64 0, i32 2, i32 0, i32 1
  %0 = load ptr, ptr %code, align 8, !tbaa !9
  ret ptr %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local ptr @closure_env(ptr nocapture noundef readonly %exp) #26 {
entry:
  %storage_as = getelementptr inbounds %struct.obj, ptr %exp, i64 0, i32 2
  %0 = load ptr, ptr %storage_as, align 8, !tbaa !9
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lwhile(ptr noundef %form, ptr noundef %env) #6 {
entry:
  %cmp.i = icmp eq ptr %form, null
  %type.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 1
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2
  %cdr.i = getelementptr inbounds %struct.obj, ptr %form, i64 0, i32 2, i32 0, i32 1
  br i1 %cmp.i, label %while.cond.us, label %while.cond

while.cond.us:                                    ; preds = %entry, %while.cond.us
  %call140.us = tail call ptr @leval(ptr noundef null, ptr noundef %env)
  %cmp.not41.us = icmp eq ptr %call140.us, null
  br i1 %cmp.not41.us, label %while.end, label %while.cond.us, !llvm.loop !118

while.cond.loopexit.sink.split:                   ; preds = %car.exit28, %while.body
  %l.043.lcssa.sink = phi ptr [ %form, %while.body ], [ %l.043, %car.exit28 ]
  %call.i35 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %l.043.lcssa.sink)
  br label %while.cond.loopexit

while.cond.loopexit:                              ; preds = %car.exit28, %cdr.exit38, %while.cond.loopexit.sink.split, %while.body, %cdr.exit
  br label %while.cond, !llvm.loop !118

while.cond:                                       ; preds = %entry, %while.cond.loopexit
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %while.cond
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %while.cond
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %form)
  br label %car.exit

car.exit:                                         ; preds = %while.cond, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %1, %sw.bb1.i ], [ null, %while.cond ]
  %call1 = tail call ptr @leval(ptr noundef %retval.0.i, ptr noundef %env)
  %cmp.not = icmp eq ptr %call1, null
  br i1 %cmp.not, label %while.end, label %while.body

while.body:                                       ; preds = %car.exit
  %2 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i13 = sext i16 %2 to i32
  switch i32 %conv.i13, label %while.cond.loopexit.sink.split [
    i32 0, label %while.cond.loopexit
    i32 1, label %cdr.exit
  ]

cdr.exit:                                         ; preds = %while.body
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  %cmp3.not42 = icmp eq ptr %3, null
  br i1 %cmp3.not42, label %while.cond.loopexit, label %cond.end.i22

cond.end.i22:                                     ; preds = %cdr.exit, %cdr.exit38
  %l.043 = phi ptr [ %7, %cdr.exit38 ], [ %3, %cdr.exit ]
  %type.i20 = getelementptr inbounds %struct.obj, ptr %l.043, i64 0, i32 1
  %4 = load i16, ptr %type.i20, align 2, !tbaa !14
  %conv.i21 = sext i16 %4 to i32
  switch i32 %conv.i21, label %sw.default.i26 [
    i32 0, label %car.exit28
    i32 1, label %sw.bb1.i24
  ]

sw.bb1.i24:                                       ; preds = %cond.end.i22
  %storage_as.i23 = getelementptr inbounds %struct.obj, ptr %l.043, i64 0, i32 2
  %5 = load ptr, ptr %storage_as.i23, align 8, !tbaa !9
  br label %car.exit28

sw.default.i26:                                   ; preds = %cond.end.i22
  %call.i25 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %l.043)
  br label %car.exit28

car.exit28:                                       ; preds = %cond.end.i22, %sw.bb1.i24, %sw.default.i26
  %retval.0.i27 = phi ptr [ null, %sw.default.i26 ], [ %5, %sw.bb1.i24 ], [ null, %cond.end.i22 ]
  %call5 = tail call ptr @leval(ptr noundef %retval.0.i27, ptr noundef %env)
  %6 = load i16, ptr %type.i20, align 2, !tbaa !14
  %conv.i31 = sext i16 %6 to i32
  switch i32 %conv.i31, label %while.cond.loopexit.sink.split [
    i32 0, label %while.cond.loopexit
    i32 1, label %cdr.exit38
  ]

cdr.exit38:                                       ; preds = %car.exit28
  %cdr.i33 = getelementptr inbounds %struct.obj, ptr %l.043, i64 0, i32 2, i32 0, i32 1
  %7 = load ptr, ptr %cdr.i33, align 8, !tbaa !9
  %cmp3.not = icmp eq ptr %7, null
  br i1 %cmp3.not, label %while.cond.loopexit, label %cond.end.i22, !llvm.loop !119

while.end:                                        ; preds = %car.exit, %while.cond.us
  ret ptr null
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @nreverse(ptr noundef %x) #27 {
entry:
  %cmp12 = icmp eq ptr %x, null
  br i1 %cmp12, label %for.end, label %cond.end

cond.end:                                         ; preds = %entry, %for.body
  %newp.014 = phi ptr [ %oldp.013, %for.body ], [ null, %entry ]
  %oldp.013 = phi ptr [ %1, %for.body ], [ %x, %entry ]
  %type = getelementptr inbounds %struct.obj, ptr %oldp.013, i64 0, i32 1
  %0 = load i16, ptr %type, align 2, !tbaa !14
  %cmp1 = icmp eq i16 %0, 1
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %cond.end
  %cdr = getelementptr inbounds %struct.obj, ptr %oldp.013, i64 0, i32 2, i32 0, i32 1
  %1 = load ptr, ptr %cdr, align 8, !tbaa !9
  store ptr %newp.014, ptr %cdr, align 8, !tbaa !9
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %for.end, label %cond.end, !llvm.loop !120

for.end:                                          ; preds = %cond.end, %for.body, %entry
  %newp.0.lcssa = phi ptr [ null, %entry ], [ %oldp.013, %for.body ], [ %newp.014, %cond.end ]
  ret ptr %newp.0.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local ptr @siod_verbose(ptr noundef %arg) #6 {
entry:
  %cmp.not = icmp eq ptr %arg, null
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %cond.end.i

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  br label %if.end

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %arg, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %car.exit
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %arg, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %car.exit

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %arg)
  br label %car.exit

car.exit:                                         ; preds = %cond.end.i, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi ptr [ null, %sw.default.i ], [ %1, %sw.bb1.i ], [ null, %cond.end.i ]
  %call1 = tail call i64 @get_c_long(ptr noundef %retval.0.i) #33
  store i64 %call1, ptr @siod_verbose_level, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %entry.if.end_crit_edge, %car.exit
  %2 = phi i64 [ %.pre, %entry.if.end_crit_edge ], [ %call1, %car.exit ]
  %conv = sitofp i64 %2 to double
  %3 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i4 = icmp sgt i64 %3, 0
  br i1 %cmp.i4, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end
  %conv.i5 = fptosi double %conv to i64
  %conv1.i = sitofp i64 %conv.i5 to double
  %sub.i = fsub double %conv, %conv1.i
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = icmp sgt i64 %2, -1
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %3, %conv.i5
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %4 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %4, i64 %conv.i5
  %5 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %flocons.exit

if.end.i:                                         ; preds = %land.lhs.true.i, %if.end
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %6, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %7, %8
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %9 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %9, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %10 = phi ptr [ %.pre.i, %if.then19.i ], [ %9, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %11, ptr @freelist, align 8, !tbaa !5
  %12 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %12, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %7, %if.end16.i ], [ %10, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i6 = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i6, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %conv, ptr %storage_as22.i, align 8, !tbaa !9
  br label %flocons.exit

flocons.exit:                                     ; preds = %if.then.i, %if.end21.i
  %retval.0.i7 = phi ptr [ %5, %if.then.i ], [ %z.0.i, %if.end21.i ]
  ret ptr %retval.0.i7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local i32 @siod_verbose_check(i32 noundef %level) local_unnamed_addr #8 {
entry:
  %0 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %conv = sext i32 %level to i64
  %cmp.not = icmp sge i64 %0, %conv
  %cond = zext i1 %cmp.not to i32
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lruntime() #6 {
entry:
  %b.i = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %b.i) #33
  %call.i = call i64 @times(ptr noundef nonnull %b.i) #33
  %0 = load i64, ptr %b.i, align 8, !tbaa !36
  %conv.i = sitofp i64 %0 to double
  %tms_stime.i = getelementptr inbounds %struct.tms, ptr %b.i, i64 0, i32 1
  %1 = load i64, ptr %tms_stime.i, align 8, !tbaa !38
  %conv1.i = sitofp i64 %1 to double
  %add.i = fadd double %conv.i, %conv1.i
  %div.i = fdiv double %add.i, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %b.i) #33
  %2 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %2, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %entry
  %conv.i5 = fptosi double %div.i to i64
  %conv1.i6 = sitofp i64 %conv.i5 to double
  %sub.i = fsub double %div.i, %conv1.i6
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %div.i, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %2, %conv.i5
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %flocons.exit.thread, label %if.end.i

flocons.exit.thread:                              ; preds = %land.lhs.true.i
  %3 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %3, i64 %conv.i5
  %4 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %5 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  br label %land.lhs.true.i16

if.end.i:                                         ; preds = %land.lhs.true.i, %entry
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %6, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %7, %8
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %flocons.exit

if.else.i:                                        ; preds = %if.end.i
  %9 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %9, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %10 = phi ptr [ %.pre.i, %if.then19.i ], [ %9, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %11, ptr @freelist, align 8, !tbaa !5
  %12 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %12, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %flocons.exit

flocons.exit:                                     ; preds = %if.end16.i, %if.end20.i
  %z.0.i = phi ptr [ %7, %if.end16.i ], [ %10, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %div.i, ptr %storage_as22.i, align 8, !tbaa !9
  %.pre = load i64, ptr @inums_dim, align 8, !tbaa !10
  %13 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  %cmp.i7 = icmp sgt i64 %.pre, 0
  br i1 %cmp.i7, label %land.lhs.true.i16, label %if.end.i20

land.lhs.true.i16:                                ; preds = %flocons.exit.thread, %flocons.exit
  %14 = phi double [ %5, %flocons.exit.thread ], [ %13, %flocons.exit ]
  %retval.0.i74 = phi ptr [ %4, %flocons.exit.thread ], [ %z.0.i, %flocons.exit ]
  %15 = phi i64 [ %2, %flocons.exit.thread ], [ %.pre, %flocons.exit ]
  %conv.i8 = fptosi double %14 to i64
  %conv1.i9 = sitofp i64 %conv.i8 to double
  %sub.i10 = fsub double %14, %conv1.i9
  %cmp2.i11 = fcmp oeq double %sub.i10, 0.000000e+00
  %cmp5.i12 = fcmp oge double %14, 0.000000e+00
  %or.cond.i13 = and i1 %cmp5.i12, %cmp2.i11
  %cmp8.i14 = icmp sgt i64 %15, %conv.i8
  %or.cond32.i15 = and i1 %cmp8.i14, %or.cond.i13
  br i1 %or.cond32.i15, label %if.then.i18, label %if.end.i20

if.then.i18:                                      ; preds = %land.lhs.true.i16
  %16 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i17 = getelementptr inbounds ptr, ptr %16, i64 %conv.i8
  %17 = load ptr, ptr %arrayidx.i17, align 8, !tbaa !5
  br label %flocons.exit39

if.end.i20:                                       ; preds = %land.lhs.true.i16, %flocons.exit
  %18 = phi double [ %14, %land.lhs.true.i16 ], [ %13, %flocons.exit ]
  %retval.0.i73 = phi ptr [ %retval.0.i74, %land.lhs.true.i16 ], [ %z.0.i, %flocons.exit ]
  %19 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i19 = icmp eq i64 %19, 1
  br i1 %cmp10.i19, label %if.then12.i22, label %if.else.i28

if.then12.i22:                                    ; preds = %if.end.i20
  %20 = load ptr, ptr @heap, align 8, !tbaa !5
  %21 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i21 = icmp ult ptr %20, %21
  br i1 %cmp13.not.i21, label %if.end16.i26, label %if.then15.i24

if.then15.i24:                                    ; preds = %if.then12.i22
  %call.i.i23 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i26

if.end16.i26:                                     ; preds = %if.then15.i24, %if.then12.i22
  %add.ptr.i25 = getelementptr inbounds %struct.obj, ptr %20, i64 1
  store ptr %add.ptr.i25, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i37

if.else.i28:                                      ; preds = %if.end.i20
  %22 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i27 = icmp eq ptr %22, null
  br i1 %cmp17.i27, label %if.then19.i30, label %if.end20.i33

if.then19.i30:                                    ; preds = %if.else.i28
  tail call void @gc_for_newcell()
  %.pre.i29 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i33

if.end20.i33:                                     ; preds = %if.then19.i30, %if.else.i28
  %23 = phi ptr [ %.pre.i29, %if.then19.i30 ], [ %22, %if.else.i28 ]
  %cdr.i31 = getelementptr inbounds %struct.obj, ptr %23, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %cdr.i31, align 8, !tbaa !9
  store ptr %24, ptr @freelist, align 8, !tbaa !5
  %25 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i32 = add nsw i64 %25, 1
  store i64 %inc.i32, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i37

if.end21.i37:                                     ; preds = %if.end20.i33, %if.end16.i26
  %z.0.i34 = phi ptr [ %20, %if.end16.i26 ], [ %23, %if.end20.i33 ]
  store i16 0, ptr %z.0.i34, align 8, !tbaa !35
  %type.i35 = getelementptr inbounds %struct.obj, ptr %z.0.i34, i64 0, i32 1
  store i16 2, ptr %type.i35, align 2, !tbaa !14
  %storage_as22.i36 = getelementptr inbounds %struct.obj, ptr %z.0.i34, i64 0, i32 2
  store double %18, ptr %storage_as22.i36, align 8, !tbaa !9
  br label %flocons.exit39

flocons.exit39:                                   ; preds = %if.then.i18, %if.end21.i37
  %retval.0.i72 = phi ptr [ %retval.0.i74, %if.then.i18 ], [ %retval.0.i73, %if.end21.i37 ]
  %retval.0.i38 = phi ptr [ %17, %if.then.i18 ], [ %z.0.i34, %if.end21.i37 ]
  %26 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i40 = icmp eq i64 %26, 1
  br i1 %cmp.i40, label %if.then.i41, label %if.else.i45

if.then.i41:                                      ; preds = %flocons.exit39
  %27 = load ptr, ptr @heap, align 8, !tbaa !5
  %28 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i = icmp ult ptr %27, %28
  br i1 %cmp1.not.i, label %if.end.i44, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i41
  %call.i.i42 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i44

if.end.i44:                                       ; preds = %if.then2.i, %if.then.i41
  %add.ptr.i43 = getelementptr inbounds %struct.obj, ptr %27, i64 1
  store ptr %add.ptr.i43, ptr @heap, align 8, !tbaa !5
  br label %cons.exit

if.else.i45:                                      ; preds = %flocons.exit39
  %29 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i = icmp eq ptr %29, null
  br i1 %cmp3.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.else.i45
  tail call void @gc_for_newcell() #38
  %.pre.i46 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.else.i45
  %30 = phi ptr [ %.pre.i46, %if.then4.i ], [ %29, %if.else.i45 ]
  %cdr.i47 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2, i32 0, i32 1
  %31 = load ptr, ptr %cdr.i47, align 8, !tbaa !9
  store ptr %31, ptr @freelist, align 8, !tbaa !5
  %32 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i48 = add nsw i64 %32, 1
  store i64 %inc.i48, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit

cons.exit:                                        ; preds = %if.end.i44, %if.end5.i
  %z.0.i49 = phi ptr [ %27, %if.end.i44 ], [ %30, %if.end5.i ]
  store i16 0, ptr %z.0.i49, align 8, !tbaa !35
  %type.i50 = getelementptr inbounds %struct.obj, ptr %z.0.i49, i64 0, i32 1
  store i16 1, ptr %type.i50, align 2, !tbaa !14
  %storage_as7.i = getelementptr inbounds %struct.obj, ptr %z.0.i49, i64 0, i32 2
  store ptr %retval.0.i38, ptr %storage_as7.i, align 8, !tbaa !9
  %cdr9.i = getelementptr inbounds %struct.obj, ptr %z.0.i49, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %cdr9.i, align 8, !tbaa !9
  %33 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp.i51 = icmp eq i64 %33, 1
  br i1 %cmp.i51, label %if.then.i53, label %if.else.i59

if.then.i53:                                      ; preds = %cons.exit
  %34 = load ptr, ptr @heap, align 8, !tbaa !5
  %35 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp1.not.i52 = icmp ult ptr %34, %35
  br i1 %cmp1.not.i52, label %if.end.i57, label %if.then2.i55

if.then2.i55:                                     ; preds = %if.then.i53
  %call.i.i54 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %if.end.i57

if.end.i57:                                       ; preds = %if.then2.i55, %if.then.i53
  %add.ptr.i56 = getelementptr inbounds %struct.obj, ptr %34, i64 1
  store ptr %add.ptr.i56, ptr @heap, align 8, !tbaa !5
  br label %cons.exit69

if.else.i59:                                      ; preds = %cons.exit
  %36 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp3.i58 = icmp eq ptr %36, null
  br i1 %cmp3.i58, label %if.then4.i61, label %if.end5.i64

if.then4.i61:                                     ; preds = %if.else.i59
  tail call void @gc_for_newcell() #38
  %.pre.i60 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end5.i64

if.end5.i64:                                      ; preds = %if.then4.i61, %if.else.i59
  %37 = phi ptr [ %.pre.i60, %if.then4.i61 ], [ %36, %if.else.i59 ]
  %cdr.i62 = getelementptr inbounds %struct.obj, ptr %37, i64 0, i32 2, i32 0, i32 1
  %38 = load ptr, ptr %cdr.i62, align 8, !tbaa !9
  store ptr %38, ptr @freelist, align 8, !tbaa !5
  %39 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i63 = add nsw i64 %39, 1
  store i64 %inc.i63, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %cons.exit69

cons.exit69:                                      ; preds = %if.end.i57, %if.end5.i64
  %z.0.i65 = phi ptr [ %34, %if.end.i57 ], [ %37, %if.end5.i64 ]
  store i16 0, ptr %z.0.i65, align 8, !tbaa !35
  %type.i66 = getelementptr inbounds %struct.obj, ptr %z.0.i65, i64 0, i32 1
  store i16 1, ptr %type.i66, align 2, !tbaa !14
  %storage_as7.i67 = getelementptr inbounds %struct.obj, ptr %z.0.i65, i64 0, i32 2
  store ptr %retval.0.i72, ptr %storage_as7.i67, align 8, !tbaa !9
  %cdr9.i68 = getelementptr inbounds %struct.obj, ptr %z.0.i65, i64 0, i32 2, i32 0, i32 1
  store ptr %z.0.i49, ptr %cdr9.i68, align 8, !tbaa !9
  ret ptr %z.0.i65
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lrealtime() #6 {
entry:
  %x.i = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x.i) #33
  %call.i = call i32 @gettimeofday(ptr noundef nonnull %x.i, ptr noundef null) #33
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %myrealtime.exit

if.end.i:                                         ; preds = %entry
  %0 = load i64, ptr %x.i, align 8, !tbaa !45
  %conv.i = sitofp i64 %0 to double
  %tv_usec.i = getelementptr inbounds %struct.timeval, ptr %x.i, i64 0, i32 1
  %1 = load i64, ptr %tv_usec.i, align 8, !tbaa !47
  %conv1.i = sitofp i64 %1 to double
  %2 = tail call double @llvm.fmuladd.f64(double %conv1.i, double 0x3EB0C6F7A0B5ED8D, double %conv.i)
  br label %myrealtime.exit

myrealtime.exit:                                  ; preds = %entry, %if.end.i
  %retval.0.i = phi double [ %2, %if.end.i ], [ 0.000000e+00, %entry ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x.i) #33
  %3 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %3, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i4

land.lhs.true.i:                                  ; preds = %myrealtime.exit
  %conv.i2 = fptosi double %retval.0.i to i64
  %conv1.i3 = sitofp i64 %conv.i2 to double
  %sub.i = fsub double %retval.0.i, %conv1.i3
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = fcmp oge double %retval.0.i, 0.000000e+00
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %3, %conv.i2
  %or.cond32.i = and i1 %cmp8.i, %or.cond.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i4

if.then.i:                                        ; preds = %land.lhs.true.i
  %4 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %4, i64 %conv.i2
  %5 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %flocons.exit

if.end.i4:                                        ; preds = %land.lhs.true.i, %myrealtime.exit
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %6, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i4
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %7, %8
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i4
  %9 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %9, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %10 = phi ptr [ %.pre.i, %if.then19.i ], [ %9, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %11, ptr @freelist, align 8, !tbaa !5
  %12 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %12, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %7, %if.end16.i ], [ %10, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %retval.0.i, ptr %storage_as22.i, align 8, !tbaa !9
  br label %flocons.exit

flocons.exit:                                     ; preds = %if.then.i, %if.end21.i
  %retval.0.i5 = phi ptr [ %5, %if.then.i ], [ %z.0.i, %if.end21.i ]
  ret ptr %retval.0.i5
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cdar(ptr noundef %x) #6 {
entry:
  %cmp.i = icmp eq ptr %x, null
  br i1 %cmp.i, label %cdr.exit, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 1
  %0 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %0 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 0, label %cdr.exit
    i32 1, label %car.exit
  ]

sw.default.i:                                     ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %x)
  br label %cdr.exit

car.exit:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %x, i64 0, i32 2
  %1 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  %cmp.i2 = icmp eq ptr %1, null
  br i1 %cmp.i2, label %cdr.exit, label %cond.end.i5

cond.end.i5:                                      ; preds = %car.exit
  %type.i3 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %2 = load i16, ptr %type.i3, align 2, !tbaa !14
  %conv.i4 = sext i16 %2 to i32
  switch i32 %conv.i4, label %sw.default.i8 [
    i32 0, label %cdr.exit
    i32 1, label %sw.bb1.i6
  ]

sw.bb1.i6:                                        ; preds = %cond.end.i5
  %cdr.i = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  br label %cdr.exit

sw.default.i8:                                    ; preds = %cond.end.i5
  %call.i7 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %cdr.exit

cdr.exit:                                         ; preds = %entry, %cond.end.i, %sw.default.i, %car.exit, %cond.end.i5, %sw.bb1.i6, %sw.default.i8
  %retval.0.i9 = phi ptr [ null, %sw.default.i8 ], [ %3, %sw.bb1.i6 ], [ null, %cond.end.i5 ], [ null, %car.exit ], [ null, %sw.default.i ], [ null, %cond.end.i ], [ null, %entry ]
  ret ptr %retval.0.i9
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lrand(ptr noundef %m) #6 {
entry:
  %call = tail call i32 @rand() #33
  %cmp = icmp eq ptr %m, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %conv2 = sitofp i32 %call to double
  %0 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i = icmp sgt i64 %0, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then
  %conv.i = sext i32 %call to i64
  %sub.i = fsub double %conv2, %conv2
  %cmp2.i = fcmp oeq double %sub.i, 0.000000e+00
  %cmp5.i = icmp sgt i32 %call, -1
  %or.cond.i = and i1 %cmp5.i, %cmp2.i
  %cmp8.i = icmp sgt i64 %0, %conv.i
  %or.cond32.i = and i1 %or.cond.i, %cmp8.i
  br i1 %or.cond32.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %1 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %conv.i
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  br label %cleanup

if.end.i:                                         ; preds = %land.lhs.true.i, %if.then
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i = icmp eq i64 %3, 1
  br i1 %cmp10.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.end.i
  %4 = load ptr, ptr @heap, align 8, !tbaa !5
  %5 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i = icmp ult ptr %4, %5
  br i1 %cmp13.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i
  %call.i.i = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.then12.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %4, i64 1
  store ptr %add.ptr.i, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i

if.else.i:                                        ; preds = %if.end.i
  %6 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i = icmp eq ptr %6, null
  br i1 %cmp17.i, label %if.then19.i, label %if.end20.i

if.then19.i:                                      ; preds = %if.else.i
  tail call void @gc_for_newcell()
  %.pre.i = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.else.i
  %7 = phi ptr [ %.pre.i, %if.then19.i ], [ %6, %if.else.i ]
  %cdr.i = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2, i32 0, i32 1
  %8 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  store ptr %8, ptr @freelist, align 8, !tbaa !5
  %9 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i = add nsw i64 %9, 1
  store i64 %inc.i, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end20.i, %if.end16.i
  %z.0.i = phi ptr [ %4, %if.end16.i ], [ %7, %if.end20.i ]
  store i16 0, ptr %z.0.i, align 8, !tbaa !35
  %type.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 1
  store i16 2, ptr %type.i, align 2, !tbaa !14
  %storage_as22.i = getelementptr inbounds %struct.obj, ptr %z.0.i, i64 0, i32 2
  store double %conv2, ptr %storage_as22.i, align 8, !tbaa !9
  br label %cleanup

if.else:                                          ; preds = %entry
  %conv = sext i32 %call to i64
  %call4 = tail call i64 @get_c_long(ptr noundef nonnull %m) #33
  %rem = srem i64 %conv, %call4
  %conv5 = sitofp i64 %rem to double
  %10 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %cmp.i9 = icmp sgt i64 %10, 0
  br i1 %cmp.i9, label %land.lhs.true.i18, label %if.end.i22

land.lhs.true.i18:                                ; preds = %if.else
  %conv.i10 = fptosi double %conv5 to i64
  %conv1.i11 = sitofp i64 %conv.i10 to double
  %sub.i12 = fsub double %conv5, %conv1.i11
  %cmp2.i13 = fcmp oeq double %sub.i12, 0.000000e+00
  %cmp5.i14 = icmp sgt i64 %rem, -1
  %or.cond.i15 = and i1 %cmp5.i14, %cmp2.i13
  %cmp8.i16 = icmp sgt i64 %10, %conv.i10
  %or.cond32.i17 = and i1 %cmp8.i16, %or.cond.i15
  br i1 %or.cond32.i17, label %if.then.i20, label %if.end.i22

if.then.i20:                                      ; preds = %land.lhs.true.i18
  %11 = load ptr, ptr @inums, align 8, !tbaa !5
  %arrayidx.i19 = getelementptr inbounds ptr, ptr %11, i64 %conv.i10
  %12 = load ptr, ptr %arrayidx.i19, align 8, !tbaa !5
  br label %cleanup

if.end.i22:                                       ; preds = %land.lhs.true.i18, %if.else
  %13 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %cmp10.i21 = icmp eq i64 %13, 1
  br i1 %cmp10.i21, label %if.then12.i24, label %if.else.i30

if.then12.i24:                                    ; preds = %if.end.i22
  %14 = load ptr, ptr @heap, align 8, !tbaa !5
  %15 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %cmp13.not.i23 = icmp ult ptr %14, %15
  br i1 %cmp13.not.i23, label %if.end16.i28, label %if.then15.i26

if.then15.i26:                                    ; preds = %if.then12.i24
  %call.i.i25 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %if.end16.i28

if.end16.i28:                                     ; preds = %if.then15.i26, %if.then12.i24
  %add.ptr.i27 = getelementptr inbounds %struct.obj, ptr %14, i64 1
  store ptr %add.ptr.i27, ptr @heap, align 8, !tbaa !5
  br label %if.end21.i39

if.else.i30:                                      ; preds = %if.end.i22
  %16 = load ptr, ptr @freelist, align 8, !tbaa !5
  %cmp17.i29 = icmp eq ptr %16, null
  br i1 %cmp17.i29, label %if.then19.i32, label %if.end20.i35

if.then19.i32:                                    ; preds = %if.else.i30
  tail call void @gc_for_newcell()
  %.pre.i31 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %if.end20.i35

if.end20.i35:                                     ; preds = %if.then19.i32, %if.else.i30
  %17 = phi ptr [ %.pre.i31, %if.then19.i32 ], [ %16, %if.else.i30 ]
  %cdr.i33 = getelementptr inbounds %struct.obj, ptr %17, i64 0, i32 2, i32 0, i32 1
  %18 = load ptr, ptr %cdr.i33, align 8, !tbaa !9
  store ptr %18, ptr @freelist, align 8, !tbaa !5
  %19 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %inc.i34 = add nsw i64 %19, 1
  store i64 %inc.i34, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %if.end21.i39

if.end21.i39:                                     ; preds = %if.end20.i35, %if.end16.i28
  %z.0.i36 = phi ptr [ %14, %if.end16.i28 ], [ %17, %if.end20.i35 ]
  store i16 0, ptr %z.0.i36, align 8, !tbaa !35
  %type.i37 = getelementptr inbounds %struct.obj, ptr %z.0.i36, i64 0, i32 1
  store i16 2, ptr %type.i37, align 2, !tbaa !14
  %storage_as22.i38 = getelementptr inbounds %struct.obj, ptr %z.0.i36, i64 0, i32 2
  store double %conv5, ptr %storage_as22.i38, align 8, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %if.end21.i39, %if.then.i20, %if.end21.i, %if.then.i
  %retval.0 = phi ptr [ %2, %if.then.i ], [ %z.0.i, %if.end21.i ], [ %12, %if.then.i20 ], [ %z.0.i36, %if.end21.i39 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind
declare i32 @rand() local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lsrand(ptr noundef %s) #6 {
entry:
  %call = tail call i64 @get_c_long(ptr noundef %s) #33
  %conv = trunc i64 %call to i32
  tail call void @srand(i32 noundef %conv) #33
  ret ptr null
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @a_true_value() local_unnamed_addr #8 {
entry:
  %0 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @poparg(ptr nocapture noundef %ptr, ptr noundef readnone %defaultv) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr %ptr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %cleanup, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %type.i = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %1 = load i16, ptr %type.i, align 2, !tbaa !14
  %conv.i = sext i16 %1 to i32
  switch i32 %conv.i, label %car.exit [
    i32 0, label %cond.end.i8
    i32 1, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %cond.end.i
  %storage_as.i = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %storage_as.i, align 8, !tbaa !9
  br label %cond.end.i8

car.exit:                                         ; preds = %cond.end.i
  %call.i = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  %.pre = load ptr, ptr %ptr, align 8, !tbaa !5
  %cmp.i5 = icmp eq ptr %.pre, null
  br i1 %cmp.i5, label %cdr.exit, label %cond.end.i8

cond.end.i8:                                      ; preds = %cond.end.i, %sw.bb1.i, %car.exit
  %retval.0.i15 = phi ptr [ null, %car.exit ], [ null, %cond.end.i ], [ %2, %sw.bb1.i ]
  %3 = phi ptr [ %.pre, %car.exit ], [ %0, %cond.end.i ], [ %0, %sw.bb1.i ]
  %type.i6 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %4 = load i16, ptr %type.i6, align 2, !tbaa !14
  %conv.i7 = sext i16 %4 to i32
  switch i32 %conv.i7, label %sw.default.i11 [
    i32 0, label %cdr.exit
    i32 1, label %sw.bb1.i9
  ]

sw.bb1.i9:                                        ; preds = %cond.end.i8
  %cdr.i = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %cdr.i, align 8, !tbaa !9
  br label %cdr.exit

sw.default.i11:                                   ; preds = %cond.end.i8
  %call.i10 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %cdr.exit

cdr.exit:                                         ; preds = %car.exit, %cond.end.i8, %sw.bb1.i9, %sw.default.i11
  %retval.0.i16 = phi ptr [ %retval.0.i15, %sw.default.i11 ], [ %retval.0.i15, %sw.bb1.i9 ], [ %retval.0.i15, %cond.end.i8 ], [ null, %car.exit ]
  %retval.0.i12 = phi ptr [ null, %sw.default.i11 ], [ %5, %sw.bb1.i9 ], [ null, %cond.end.i8 ], [ null, %car.exit ]
  store ptr %retval.0.i12, ptr %ptr, align 8, !tbaa !5
  br label %cleanup

cleanup:                                          ; preds = %entry, %cdr.exit
  %retval.0 = phi ptr [ %retval.0.i16, %cdr.exit ], [ %defaultv, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @last_c_errmsg(i32 noundef %num) local_unnamed_addr #6 {
entry:
  %cmp = icmp slt i32 %num, 0
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %call = tail call ptr @__errno_location() #37
  %0 = load i32, ptr %call, align 4, !tbaa !109
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ %num, %entry ]
  %call1 = tail call ptr @strerror(i32 noundef %cond) #33
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %call2 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @last_c_errmsg.serrmsg, ptr noundef nonnull dereferenceable(1) @.str.152, i32 noundef %cond) #33
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %errmsg.0 = phi ptr [ %call1, %cond.end ], [ @last_c_errmsg.serrmsg, %if.then ]
  ret ptr %errmsg.0
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__errno_location() local_unnamed_addr #23

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define dso_local ptr @lllast_c_errmsg() #6 {
entry:
  %call = tail call ptr @llast_c_errmsg(i32 noundef -1)
  ret ptr %call
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @safe_strlen(ptr noundef %s, i64 noundef %size) local_unnamed_addr #28 {
entry:
  %call = tail call ptr @memchr(ptr noundef %s, i32 noundef 0, i64 noundef %size) #34
  %tobool.not = icmp eq ptr %call, null
  %sub.ptr.lhs.cast = ptrtoint ptr %call to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %s to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %retval.0 = select i1 %tobool.not, i64 %size, i64 %sub.ptr.sub
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal ptr @parser_read(ptr nocapture readnone %ignore) #6 {
entry:
  %call.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.172, i64 noundef 0)
  %call1 = tail call ptr @leval(ptr noundef %call.i, ptr noundef null)
  ret ptr %call1
}

; Function Attrs: nounwind uwtable
define internal ptr @os_classification() #6 {
entry:
  %call.i = tail call ptr @gen_intern(ptr noundef nonnull @.str.238, i64 noundef 0)
  ret ptr %call.i
}

; Function Attrs: nounwind uwtable
define dso_local void @err0() local_unnamed_addr #6 {
entry:
  %call = tail call ptr @err(ptr noundef nonnull @.str.235, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @pr(ptr noundef %p) local_unnamed_addr #6 {
entry:
  %type.i = getelementptr inbounds %struct.obj, ptr %p, i64 0, i32 1
  %0 = load i64, ptr @nheaps, align 8, !tbaa !10
  %cmp21.i = icmp sgt i64 %0, 0
  br i1 %cmp21.i, label %for.body.lr.ph.i, label %if.else

for.body.lr.ph.i:                                 ; preds = %entry
  %1 = load ptr, ptr @heaps, align 8, !tbaa !5
  %2 = load i64, ptr @heap_size, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %p to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %j.022.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %j.022.i
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %tobool.not.i = icmp ne ptr %3, null
  %cmp1.not.i = icmp ule ptr %3, %p
  %or.cond.not25.i = and i1 %tobool.not.i, %cmp1.not.i
  %add.ptr.i = getelementptr inbounds %struct.obj, ptr %3, i64 %2
  %cmp3.i = icmp ugt ptr %add.ptr.i, %p
  %or.cond24.i = select i1 %or.cond.not25.i, i1 %cmp3.i, i1 false
  br i1 %or.cond24.i, label %land.lhs.true4.i, label %for.inc.i

land.lhs.true4.i:                                 ; preds = %for.body.i
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %rem.i = urem i64 %sub.ptr.sub.i, 24
  %cmp5.i = icmp eq i64 %rem.i, 0
  br i1 %cmp5.i, label %land.lhs.true6.i, label %for.inc.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true4.i
  %4 = load i16, ptr %type.i, align 2, !tbaa !14
  %cmp8.not.i = icmp eq i16 %4, 12
  br i1 %cmp8.not.i, label %for.inc.i, label %if.then

for.inc.i:                                        ; preds = %land.lhs.true6.i, %land.lhs.true4.i, %for.body.i
  %inc.i = add nuw nsw i64 %j.022.i, 1
  %exitcond.not.i = icmp eq i64 %inc.i, %0
  br i1 %exitcond.not.i, label %if.else, label %for.body.i, !llvm.loop !78

if.then:                                          ; preds = %land.lhs.true6.i
  %call1 = tail call ptr @lprint(ptr noundef nonnull %p, ptr noundef null)
  br label %if.end

if.else:                                          ; preds = %for.inc.i, %entry
  %5 = load ptr, ptr @stdout, align 8, !tbaa !5
  %6 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %7 = tail call i64 @fwrite(ptr nonnull @.str.236, i64 8, i64 1, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %cmp.i.i.i = icmp eq i64 %6, 0
  %8 = load i64, ptr @interrupt_differed, align 8
  %cmp1.i3.i.i = icmp eq i64 %8, 1
  %or.cond.i.i.i = select i1 %cmp.i.i.i, i1 %cmp1.i3.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %if.end

if.then.i.i.i:                                    ; preds = %if.else
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %call.i.i.i.i = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then.i.i.i, %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @prp(ptr noundef readonly %p) local_unnamed_addr #6 {
entry:
  %tobool.not = icmp eq ptr %p, null
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr %p, align 8, !tbaa !5
  tail call void @pr(ptr noundef %0)
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #29

declare ptr @read_from_string(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define internal i32 @rcsp_puts(ptr nocapture noundef readonly %from, ptr nocapture noundef %cb) #6 {
entry:
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %from) #34
  %end = getelementptr inbounds %struct.rcsp_puts, ptr %cb, i64 0, i32 1
  %0 = load ptr, ptr %end, align 8, !tbaa !44
  %1 = load ptr, ptr %cb, align 8, !tbaa !42
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp sgt i64 %call, %sub.ptr.sub
  %cond = tail call i64 @llvm.smin.i64(i64 %call, i64 %sub.ptr.sub)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1, ptr align 1 %from, i64 %cond, i1 false)
  %2 = load ptr, ptr %cb, align 8, !tbaa !42
  %arrayidx = getelementptr inbounds i8, ptr %2, i64 %cond
  store ptr %arrayidx, ptr %cb, align 8, !tbaa !42
  store i8 0, ptr %arrayidx, align 1, !tbaa !9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call6 = tail call ptr @err(ptr noundef nonnull @.str.237, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 1
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #29

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #30

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #31

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #31

; Function Attrs: nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #32

; Function Attrs: nofree nounwind
declare noundef i32 @fputs(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #30

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #30

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #30

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #31

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nofree nounwind memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind returns_twice "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #12 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #19 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #20 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { returns_twice "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree nosync nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nofree nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { nofree nounwind }
attributes #31 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #32 = { nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" }
attributes #33 = { nounwind }
attributes #34 = { nounwind willreturn memory(read) }
attributes #35 = { noreturn nounwind }
attributes #36 = { nounwind returns_twice }
attributes #37 = { nounwind willreturn memory(none) }
attributes #38 = { "function-inline-cost-multiplier"="2" }
attributes #39 = { nounwind allocsize(0) }
attributes #40 = { "function-inline-cost-multiplier"="4" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"long", !7, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!15, !16, i64 2}
!15 = !{!"obj", !16, i64 0, !16, i64 2, !7, i64 8}
!16 = !{!"short", !7, i64 0}
!17 = !{!18, !6, i64 0}
!18 = !{!"catch_frame", !6, i64 0, !6, i64 8, !7, i64 16, !6, i64 216}
!19 = !{!18, !6, i64 8}
!20 = distinct !{!20, !13}
!21 = !{!22, !6, i64 0}
!22 = !{!"repl_hooks", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!23 = !{!22, !6, i64 8}
!24 = !{!22, !6, i64 16}
!25 = !{!22, !6, i64 24}
!26 = distinct !{!26, !13}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13}
!29 = !{!16, !16, i64 0}
!30 = distinct !{!30, !13}
!31 = !{!32, !6, i64 0}
!32 = !{!"gen_printio", !6, i64 0, !6, i64 8, !6, i64 16}
!33 = !{!32, !6, i64 8}
!34 = !{!32, !6, i64 16}
!35 = !{!15, !16, i64 0}
!36 = !{!37, !11, i64 0}
!37 = !{!"tms", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24}
!38 = !{!37, !11, i64 8}
!39 = !{!40, !40, i64 0}
!40 = !{!"double", !7, i64 0}
!41 = !{i64 0, i64 3}
!42 = !{!43, !6, i64 0}
!43 = !{!"rcsp_puts", !6, i64 0, !6, i64 8}
!44 = !{!43, !6, i64 8}
!45 = !{!46, !11, i64 0}
!46 = !{!"timeval", !11, i64 0, !11, i64 8}
!47 = !{!46, !11, i64 8}
!48 = !{!49, !6, i64 24}
!49 = !{!"user_type_hooks", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13}
!52 = !{!49, !6, i64 40}
!53 = distinct !{!53, !13}
!54 = distinct !{!54, !13}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13}
!57 = distinct !{!57, !13}
!58 = !{!59, !6, i64 0}
!59 = !{!"gc_protected", !6, i64 0, !11, i64 8, !6, i64 16}
!60 = !{!59, !11, i64 8}
!61 = !{!59, !6, i64 16}
!62 = !{!49, !6, i64 0}
!63 = distinct !{!63, !13}
!64 = distinct !{!64, !13}
!65 = !{!49, !6, i64 32}
!66 = distinct !{!66, !13}
!67 = distinct !{!67, !68}
!68 = !{!"llvm.loop.unroll.disable"}
!69 = distinct !{!69, !13}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !13}
!72 = !{!49, !6, i64 8}
!73 = !{!49, !6, i64 16}
!74 = distinct !{!74, !13}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13}
!77 = distinct !{!77, !13}
!78 = distinct !{!78, !13}
!79 = distinct !{!79, !13, !80}
!80 = !{!"llvm.loop.unswitch.partial.disable"}
!81 = distinct !{!81, !13}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !80}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13}
!86 = distinct !{!86, !13, !80}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13}
!91 = distinct !{!91, !13}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13}
!94 = distinct !{!94, !13}
!95 = !{!18, !6, i64 216}
!96 = distinct !{!96, !13}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13}
!101 = distinct !{!101, !13}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13}
!104 = !{!105, !6, i64 0}
!105 = !{!"gen_readio", !6, i64 0, !6, i64 8, !6, i64 16}
!106 = !{!105, !6, i64 8}
!107 = !{!105, !6, i64 16}
!108 = distinct !{!108, !13}
!109 = !{!110, !110, i64 0}
!110 = !{!"int", !7, i64 0}
!111 = distinct !{!111, !13, !112}
!112 = !{!"llvm.loop.peeled.count", i32 1}
!113 = distinct !{!113, !13, !112}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13}
!116 = distinct !{!116, !13}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13}
!119 = distinct !{!119, !13}
!120 = distinct !{!120, !13}
