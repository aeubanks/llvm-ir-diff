; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/siod/slib.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/siod/slib.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.ucontext_t = type { i64, ptr, %struct.stack_t, %struct.mcontext_t, %struct.__sigset_t, %struct._libc_fpstate, [4 x i64] }
%struct.stack_t = type { ptr, i32, i64 }
%struct.mcontext_t = type { [23 x i64], ptr, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%struct.obj = type { i16, i16, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { ptr, ptr }
%struct.catch_frame = type { ptr, ptr, [1 x %struct.__jmp_buf_tag], ptr }
%struct.repl_hooks = type { ptr, ptr, ptr, ptr }
%struct.gen_printio = type { ptr, ptr, ptr }
%struct.timeval = type { i64, i64 }
%struct.tms = type { i64, i64, i64, i64 }
%struct.rcsp_puts = type { ptr, ptr }
%struct.user_type_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.gc_protected = type { ptr, i64, ptr }
%struct.gen_readio = type { ptr, ptr, ptr }

@.str = private unnamed_addr constant [13 x i8] c"3.5 5-MAY-97\00", align 1
@nheaps = dso_local local_unnamed_addr global i64 2, align 8
@heap_size = dso_local local_unnamed_addr global i64 5000, align 8
@gc_status_flag = dso_local local_unnamed_addr global i64 1, align 8
@init_file = dso_local local_unnamed_addr global ptr null, align 8
@tkbuffer = dso_local local_unnamed_addr global ptr null, align 8
@gc_kind_copying = dso_local local_unnamed_addr global i64 0, align 8
@gc_cells_allocated = dso_local local_unnamed_addr global i64 0, align 8
@stack_start_ptr = dso_local local_unnamed_addr global ptr null, align 8
@errjmp_ok = dso_local local_unnamed_addr global i64 0, align 8
@nointerrupt = dso_local local_unnamed_addr global i64 1, align 8
@interrupt_differed = dso_local local_unnamed_addr global i64 0, align 8
@oblistvar = dso_local global ptr null, align 8
@sym_t = dso_local global ptr null, align 8
@eof_val = dso_local global ptr null, align 8
@sym_errobj = dso_local global ptr null, align 8
@sym_catchall = dso_local global ptr null, align 8
@sym_progn = dso_local global ptr null, align 8
@sym_lambda = dso_local global ptr null, align 8
@sym_quote = dso_local global ptr null, align 8
@sym_dot = dso_local global ptr null, align 8
@sym_after_gc = dso_local global ptr null, align 8
@sym_eval_history_ptr = dso_local global ptr null, align 8
@unbound_marker = dso_local global ptr null, align 8
@obarray_dim = dso_local local_unnamed_addr global i64 100, align 8
@catch_framep = dso_local local_unnamed_addr global ptr null, align 8
@repl_puts = dso_local local_unnamed_addr global ptr null, align 8
@repl_read = dso_local local_unnamed_addr global ptr null, align 8
@repl_eval = dso_local local_unnamed_addr global ptr null, align 8
@repl_print = dso_local local_unnamed_addr global ptr null, align 8
@inums_dim = dso_local local_unnamed_addr global i64 256, align 8
@user_types = dso_local local_unnamed_addr global ptr null, align 8
@user_tc_next = dso_local local_unnamed_addr global i64 50, align 8
@protected_registers = dso_local local_unnamed_addr global ptr null, align 8
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@user_ch_readm = dso_local local_unnamed_addr global ptr @.str.1, align 8
@user_te_readm = dso_local local_unnamed_addr global ptr @.str.1, align 8
@user_readm = dso_local local_unnamed_addr global ptr null, align 8
@user_readt = dso_local local_unnamed_addr global ptr null, align 8
@fatal_exit_hook = dso_local local_unnamed_addr global ptr null, align 8
@stack_limit_ptr = dso_local local_unnamed_addr global ptr null, align 8
@stack_size = dso_local local_unnamed_addr global i64 50000, align 8
@siod_verbose_level = dso_local local_unnamed_addr global i64 4, align 8
@.str.2 = private unnamed_addr constant [20 x i8] c"/usr/local/lib/siod\00", align 1
@siod_lib = dso_local local_unnamed_addr global ptr @.str.2, align 8
@process_cla.siod_lib_set = internal unnamed_addr global i1 false, align 4
@.str.3 = private unnamed_addr constant [9 x i8] c"SIOD_LIB\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"bad arg: %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"Welcome to SIOD, Scheme In One Defun, Version %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [61 x i8] c"%ld heaps. size = %ld cells, %ld bytes. %ld inums. GC is %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"stop and copy\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"mark and sweep\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"heaps[0] at %p, heaps[1] at %p\0A\00", align 1
@heaps = dso_local local_unnamed_addr global ptr null, align 8
@.str.11 = private unnamed_addr constant [16 x i8] c"heaps[0] at %p\0A\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"floating point exception\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"control-c interrupt\00", align 1
@repl_driver.osigint = internal unnamed_addr global ptr null, align 8
@repl_driver.osigfpe = internal unnamed_addr global ptr null, align 8
@errjmp = dso_local global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16
@repl_c_string_print_len = internal unnamed_addr global i64 0, align 8
@repl_c_string_out = internal unnamed_addr global ptr null, align 8
@repl_c_string_arg = internal unnamed_addr global ptr null, align 8
@repl_c_string_flag = internal unnamed_addr global i1 false, align 8
@stdout = external local_unnamed_addr global ptr, align 8
@heap = dso_local local_unnamed_addr global ptr null, align 8
@heap_end = dso_local local_unnamed_addr global ptr null, align 8
@.str.15 = private unnamed_addr constant [53 x i8] c"GC took %g seconds, %ld compressed to %ld, %ld free\0A\00", align 1
@old_heap_used = dso_local local_unnamed_addr global i64 0, align 8
@heap_org = dso_local local_unnamed_addr global ptr null, align 8
@.str.16 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@gc_time_taken = dso_local local_unnamed_addr global double 0.000000e+00, align 8
@inside_err = internal unnamed_addr global i1 false, align 8
@.str.17 = private unnamed_addr constant [11 x i8] c"ERROR: %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"ERROR: %s (errobj %s)\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"ERROR: %s (see errobj)\0A\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"BUG. Reached impossible case\00", align 1
@.str.23 = private unnamed_addr constant [52 x i8] c"the currently assigned stack limit has been exceded\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"Stack_size = %ld bytes, [%p,%p]\0A\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"not a symbol or string\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"ran out of storage\00", align 1
@freelist = dso_local local_unnamed_addr global ptr null, align 8
@.str.27 = private unnamed_addr constant [11 x i8] c"wta to car\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"wta to cdr\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"wta to setcar\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"wta to setcdr\00", align 1
@inums = dso_local local_unnamed_addr global ptr null, align 8
@.str.31 = private unnamed_addr constant [17 x i8] c"wta(1st) to plus\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"wta(2nd) to plus\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"wta(1st) to times\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"wta(2nd) to times\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"wta(1st) to difference\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"wta(2nd) to difference\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"wta(1st) to quotient\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"wta(2nd) to quotient\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"wta to abs\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"wta to sqrt\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"wta(1st) to greaterp\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"wta(2nd) to greaterp\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"wta(1st) to lessp\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"wta(2nd) to lessp\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"wta(1st) to max\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"wta(2nd) to max\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"wta(1st) to min\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"wta(2nd) to min\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"unbound variable\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"not a symbol\00", align 1
@.str.51 = private unnamed_addr constant [39 x i8] c"failed to allocate storage from system\00", align 1
@obarray = dso_local local_unnamed_addr global ptr null, align 8
@.str.52 = private unnamed_addr constant [24 x i8] c"invalid number of heaps\00", align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"**unbound-marker**\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"eof\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"let-internal-macro\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"let*\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"let*-macro\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"letrec\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"letrec-macro\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"errobj\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"begin\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"lambda\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.68 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"*after-gc*\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"*eval-history-ptr*\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"improper list to assq\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"type number out of range\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"ran out of user type codes\00", align 1
@.str.74 = private unnamed_addr constant [23 x i8] c"[allocating heap %ld]\0A\00", align 1
@save_regs_gc_mark = dso_local global %struct.ucontext_t zeroinitializer, align 8
@gc_rt = dso_local local_unnamed_addr global double 0.000000e+00, align 8
@gc_cells_collected = dso_local local_unnamed_addr global i64 0, align 8
@.str.76 = private unnamed_addr constant [47 x i8] c"[GC took %g cpu seconds, %ld cells collected]\0A\00", align 1
@.str.77 = private unnamed_addr constant [62 x i8] c"cannot perform operation with stop-and-copy GC mode. Use -g0\0A\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"garbage collection is on\0A\00", align 1
@.str.79 = private unnamed_addr constant [27 x i8] c"garbage collection is off\0A\00", align 1
@.str.80 = private unnamed_addr constant [24 x i8] c"%ld allocated %ld free\0A\00", align 1
@.str.81 = private unnamed_addr constant [28 x i8] c"garbage collection verbose\0A\00", align 1
@.str.82 = private unnamed_addr constant [27 x i8] c"garbage collection silent\0A\00", align 1
@.str.83 = private unnamed_addr constant [39 x i8] c"%ld/%ld heaps, %ld allocated %ld free\0A\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"bad syntax argument list\00", align 1
@.str.85 = private unnamed_addr constant [14 x i8] c"damaged frame\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"too few arguments\00", align 1
@.str.87 = private unnamed_addr constant [12 x i8] c"damaged env\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"closure code type not valid\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"bad function\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c"cannot be applied\00", align 1
@.str.91 = private unnamed_addr constant [27 x i8] c"have eval, dont know apply\00", align 1
@.str.92 = private unnamed_addr constant [26 x i8] c"wta(non-symbol) to setvar\00", align 1
@.str.93 = private unnamed_addr constant [26 x i8] c"wta(non-symbol) to define\00", align 1
@.str.94 = private unnamed_addr constant [30 x i8] c"no *catch found with this tag\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"set!\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"let-internal\00", align 1
@.str.97 = private unnamed_addr constant [30 x i8] c"wta(non-symbol) to symbolconc\00", align 1
@.str.98 = private unnamed_addr constant [27 x i8] c"symbolconc buffer overflow\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"subr_0\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"subr_1\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"subr_2\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"subr_2n\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"subr_3\00", align 1
@.str.104 = private unnamed_addr constant [7 x i8] c"subr_4\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"subr_5\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"lsubr\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"fsubr\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"msubr\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.110 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str.111 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.112 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c" . \00", align 1
@.str.114 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"#<%s \00", align 1
@.str.118 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.119 = private unnamed_addr constant [11 x i8] c"#<CLOSURE \00", align 1
@.str.120 = private unnamed_addr constant [17 x i8] c"#<UNKNOWN %d %p>\00", align 1
@stdin = external local_unnamed_addr global ptr, align 8
@.str.122 = private unnamed_addr constant [24 x i8] c"end of file inside read\00", align 1
@.str.123 = private unnamed_addr constant [23 x i8] c"unexpected close paren\00", align 1
@.str.124 = private unnamed_addr constant [20 x i8] c"+internal-backquote\00", align 1
@.str.125 = private unnamed_addr constant [23 x i8] c"+internal-comma-atsign\00", align 1
@.str.126 = private unnamed_addr constant [20 x i8] c"+internal-comma-dot\00", align 1
@.str.127 = private unnamed_addr constant [16 x i8] c"+internal-comma\00", align 1
@.str.128 = private unnamed_addr constant [8 x i8] c"()'`,;\22\00", align 1
@.str.129 = private unnamed_addr constant [28 x i8] c"token larger than TKBUFFERN\00", align 1
@.str.130 = private unnamed_addr constant [24 x i8] c"end of file inside list\00", align 1
@.str.131 = private unnamed_addr constant [20 x i8] c"missing close paren\00", align 1
@.str.132 = private unnamed_addr constant [16 x i8] c"could not open \00", align 1
@.str.133 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.134 = private unnamed_addr constant [11 x i8] c"not a file\00", align 1
@.str.135 = private unnamed_addr constant [8 x i8] c"parser:\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c".scm\00", align 1
@.str.137 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.138 = private unnamed_addr constant [9 x i8] c"loading \00", align 1
@.str.139 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"done.\0A\00", align 1
@.str.141 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"-loaded*\00", align 1
@.str.143 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.144 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.145 = private unnamed_addr constant [27 x i8] c"bad argument to save-forms\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"appending\00", align 1
@.str.147 = private unnamed_addr constant [7 x i8] c"saving\00", align 1
@.str.148 = private unnamed_addr constant [11 x i8] c" forms to \00", align 1
@.str.149 = private unnamed_addr constant [8 x i8] c"#<FILE \00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c" %p\00", align 1
@.str.151 = private unnamed_addr constant [15 x i8] c"file is closed\00", align 1
@last_c_errmsg.serrmsg = internal global [100 x i8] zeroinitializer, align 16
@.str.152 = private unnamed_addr constant [9 x i8] c"errno %d\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"cons\00", align 1
@.str.154 = private unnamed_addr constant [4 x i8] c"car\00", align 1
@.str.155 = private unnamed_addr constant [4 x i8] c"cdr\00", align 1
@.str.156 = private unnamed_addr constant [9 x i8] c"set-car!\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c"set-cdr!\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.159 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.162 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.164 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.165 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.167 = private unnamed_addr constant [4 x i8] c"eq?\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"eqv?\00", align 1
@.str.169 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"assq\00", align 1
@.str.171 = private unnamed_addr constant [5 x i8] c"delq\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.173 = private unnamed_addr constant [12 x i8] c"parser_read\00", align 1
@.str.174 = private unnamed_addr constant [25 x i8] c"*parser_read.scm-loaded*\00", align 1
@.str.175 = private unnamed_addr constant [8 x i8] c"eof-val\00", align 1
@.str.176 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"prin1\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"apply\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"define\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.182 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.184 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.185 = private unnamed_addr constant [7 x i8] c"*catch\00", align 1
@.str.186 = private unnamed_addr constant [7 x i8] c"*throw\00", align 1
@.str.187 = private unnamed_addr constant [8 x i8] c"apropos\00", align 1
@.str.188 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.189 = private unnamed_addr constant [10 x i8] c"copy-list\00", align 1
@.str.190 = private unnamed_addr constant [10 x i8] c"gc-status\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"gc\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"pair?\00", align 1
@.str.195 = private unnamed_addr constant [8 x i8] c"symbol?\00", align 1
@.str.196 = private unnamed_addr constant [8 x i8] c"number?\00", align 1
@.str.197 = private unnamed_addr constant [14 x i8] c"symbol-bound?\00", align 1
@.str.198 = private unnamed_addr constant [13 x i8] c"symbol-value\00", align 1
@.str.199 = private unnamed_addr constant [18 x i8] c"set-symbol-value!\00", align 1
@.str.200 = private unnamed_addr constant [16 x i8] c"the-environment\00", align 1
@.str.201 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.202 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.203 = private unnamed_addr constant [6 x i8] c"null?\00", align 1
@.str.204 = private unnamed_addr constant [11 x i8] c"env-lookup\00", align 1
@.str.205 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.206 = private unnamed_addr constant [11 x i8] c"symbolconc\00", align 1
@.str.207 = private unnamed_addr constant [11 x i8] c"save-forms\00", align 1
@.str.208 = private unnamed_addr constant [6 x i8] c"fopen\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"fclose\00", align 1
@.str.210 = private unnamed_addr constant [5 x i8] c"getc\00", align 1
@.str.211 = private unnamed_addr constant [7 x i8] c"ungetc\00", align 1
@.str.212 = private unnamed_addr constant [5 x i8] c"putc\00", align 1
@.str.213 = private unnamed_addr constant [5 x i8] c"puts\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"ftell\00", align 1
@.str.215 = private unnamed_addr constant [6 x i8] c"fseek\00", align 1
@.str.216 = private unnamed_addr constant [13 x i8] c"parse-number\00", align 1
@.str.217 = private unnamed_addr constant [14 x i8] c"%%stack-limit\00", align 1
@.str.218 = private unnamed_addr constant [7 x i8] c"intern\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"%%closure\00", align 1
@.str.220 = private unnamed_addr constant [15 x i8] c"%%closure-code\00", align 1
@.str.221 = private unnamed_addr constant [14 x i8] c"%%closure-env\00", align 1
@.str.222 = private unnamed_addr constant [9 x i8] c"nreverse\00", align 1
@.str.223 = private unnamed_addr constant [14 x i8] c"allocate-heap\00", align 1
@.str.224 = private unnamed_addr constant [8 x i8] c"gc-info\00", align 1
@.str.225 = private unnamed_addr constant [8 x i8] c"runtime\00", align 1
@.str.226 = private unnamed_addr constant [9 x i8] c"realtime\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"caar\00", align 1
@.str.228 = private unnamed_addr constant [5 x i8] c"cadr\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"cdar\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"cddr\00", align 1
@.str.231 = private unnamed_addr constant [5 x i8] c"rand\00", align 1
@.str.232 = private unnamed_addr constant [6 x i8] c"srand\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"last-c-error\00", align 1
@.str.234 = private unnamed_addr constant [18 x i8] c"os-classification\00", align 1
@.str.235 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.236 = private unnamed_addr constant [9 x i8] c"invalid\0A\00", align 1
@.str.237 = private unnamed_addr constant [29 x i8] c"repl_c_string_print overflow\00", align 1
@.str.238 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.239 = private unnamed_addr constant [15 x i8] c"*slib-version*\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"$Id$\00", align 1
@str = private unnamed_addr constant [49 x i8] c"(C) Copyright 1988-1994 Paradigm Associates Inc.\00", align 1
@str.241 = private unnamed_addr constant [14 x i8] c"[starting GC]\00", align 1
@str.242 = private unnamed_addr constant [52 x i8] c"FATAL ERROR DURING STARTUP OR CRITICAL CODE SECTION\00", align 1
@switch.table.lprin1g = private unnamed_addr constant [18 x ptr] [ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.103, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.109, ptr @.str.104, ptr @.str.105, ptr @.str.102], align 8

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local nonnull ptr @siod_version() local_unnamed_addr #0 {
  ret ptr @.str
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @process_cla(i32 noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = load i1, ptr @process_cla.siod_lib_set, align 4
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = tail call ptr @getenv(ptr noundef nonnull @.str.3) #33
  %7 = icmp eq ptr %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store ptr %6, ptr @siod_lib, align 8, !tbaa !5
  store i1 true, ptr @process_cla.siod_lib_set, align 4
  br label %9

9:                                                ; preds = %5, %8, %3
  %10 = icmp sgt i32 %0, 1
  br i1 %10, label %11, label %65

11:                                               ; preds = %9
  %12 = icmp eq i32 %2, 0
  %13 = zext i32 %0 to i64
  br label %14

14:                                               ; preds = %11, %62
  %15 = phi i64 [ 1, %11 ], [ %63, %62 ]
  %16 = getelementptr inbounds ptr, ptr %1, i64 %15
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %17) #34
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %62, label %20

20:                                               ; preds = %14
  %21 = load i8, ptr %17, align 1, !tbaa !9
  %22 = icmp eq i8 %21, 45
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  br i1 %12, label %62, label %24

24:                                               ; preds = %23
  %25 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4, ptr noundef nonnull %17)
  br label %62

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, ptr %17, i64 1
  %28 = load i8, ptr %27, align 1, !tbaa !9
  %29 = sext i8 %28 to i32
  switch i32 %29, label %59 [
    i32 108, label %30
    i32 104, label %32
    i32 111, label %42
    i32 105, label %45
    i32 110, label %47
    i32 103, label %50
    i32 115, label %53
    i32 118, label %56
  ]

30:                                               ; preds = %26
  %31 = getelementptr inbounds i8, ptr %17, i64 2
  store ptr %31, ptr @siod_lib, align 8, !tbaa !5
  br label %62

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, ptr %17, i64 2
  %34 = tail call i64 @strtol(ptr nocapture noundef nonnull %33, ptr noundef null, i32 noundef 10) #33
  store i64 %34, ptr @heap_size, align 8, !tbaa !10
  %35 = load ptr, ptr %16, align 8, !tbaa !5
  %36 = getelementptr inbounds i8, ptr %35, i64 2
  %37 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %36, i32 noundef 58) #34
  %38 = icmp eq ptr %37, null
  br i1 %38, label %62, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds i8, ptr %37, i64 1
  %41 = tail call i64 @strtol(ptr nocapture noundef nonnull %40, ptr noundef null, i32 noundef 10) #33
  store i64 %41, ptr @nheaps, align 8, !tbaa !10
  br label %62

42:                                               ; preds = %26
  %43 = getelementptr inbounds i8, ptr %17, i64 2
  %44 = tail call i64 @strtol(ptr nocapture noundef nonnull %43, ptr noundef null, i32 noundef 10) #33
  store i64 %44, ptr @obarray_dim, align 8, !tbaa !10
  br label %62

45:                                               ; preds = %26
  %46 = getelementptr inbounds i8, ptr %17, i64 2
  store ptr %46, ptr @init_file, align 8, !tbaa !5
  br label %62

47:                                               ; preds = %26
  %48 = getelementptr inbounds i8, ptr %17, i64 2
  %49 = tail call i64 @strtol(ptr nocapture noundef nonnull %48, ptr noundef null, i32 noundef 10) #33
  store i64 %49, ptr @inums_dim, align 8, !tbaa !10
  br label %62

50:                                               ; preds = %26
  %51 = getelementptr inbounds i8, ptr %17, i64 2
  %52 = tail call i64 @strtol(ptr nocapture noundef nonnull %51, ptr noundef null, i32 noundef 10) #33
  store i64 %52, ptr @gc_kind_copying, align 8, !tbaa !10
  br label %62

53:                                               ; preds = %26
  %54 = getelementptr inbounds i8, ptr %17, i64 2
  %55 = tail call i64 @strtol(ptr nocapture noundef nonnull %54, ptr noundef null, i32 noundef 10) #33
  store i64 %55, ptr @stack_size, align 8, !tbaa !10
  br label %62

56:                                               ; preds = %26
  %57 = getelementptr inbounds i8, ptr %17, i64 2
  %58 = tail call i64 @strtol(ptr nocapture noundef nonnull %57, ptr noundef null, i32 noundef 10) #33
  store i64 %58, ptr @siod_verbose_level, align 8, !tbaa !10
  br label %62

59:                                               ; preds = %26
  br i1 %12, label %62, label %60

60:                                               ; preds = %59
  %61 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4, ptr noundef nonnull %17)
  br label %62

62:                                               ; preds = %30, %42, %45, %47, %50, %53, %56, %39, %32, %60, %59, %23, %24, %14
  %63 = add nuw nsw i64 %15, 1
  %64 = icmp eq i64 %63, %13
  br i1 %64, label %65, label %14, !llvm.loop !12

65:                                               ; preds = %62, %9
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind memory(read)
declare noundef ptr @getenv(ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind uwtable
define dso_local void @print_welcome() local_unnamed_addr #1 {
  %1 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %2 = icmp sgt i64 %1, 1
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, ptr noundef nonnull @.str)
  %5 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %6

6:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @print_hs_1() local_unnamed_addr #1 {
  %1 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %2 = icmp sgt i64 %1, 1
  br i1 %2, label %3, label %12

3:                                                ; preds = %0
  %4 = load i64, ptr @nheaps, align 8, !tbaa !10
  %5 = load i64, ptr @heap_size, align 8, !tbaa !10
  %6 = mul i64 %5, 24
  %7 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %8 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %9 = icmp eq i64 %8, 1
  %10 = select i1 %9, ptr @.str.8, ptr @.str.9
  %11 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7, i64 noundef %4, i64 noundef %5, i64 noundef %6, i64 noundef %7, ptr noundef nonnull %10)
  br label %12

12:                                               ; preds = %3, %0
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @print_hs_2() local_unnamed_addr #1 {
  %1 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %2 = icmp sgt i64 %1, 1
  br i1 %2, label %3, label %14

3:                                                ; preds = %0
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  %6 = load ptr, ptr @heaps, align 8, !tbaa !5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  br i1 %5, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds ptr, ptr %6, i64 1
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10, ptr noundef %7, ptr noundef %10)
  br label %14

12:                                               ; preds = %3
  %13 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.11, ptr noundef %7)
  br label %14

14:                                               ; preds = %8, %12, %0
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i64 @no_interrupt(i64 noundef %0) local_unnamed_addr #6 {
  %2 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 %0, ptr @nointerrupt, align 8, !tbaa !10
  %3 = icmp eq i64 %0, 0
  %4 = load i64, ptr @interrupt_differed, align 8
  %5 = icmp eq i64 %4, 1
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %8 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %9

9:                                                ; preds = %7, %1
  ret i64 %2
}

; Function Attrs: nounwind uwtable
define dso_local void @err_ctrl_c() local_unnamed_addr #6 {
  %1 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @handle_sigfpe(i32 %0) #6 {
  %2 = tail call ptr @signal(i32 noundef 8, ptr noundef nonnull @handle_sigfpe) #33
  %3 = tail call ptr @err(ptr noundef nonnull @.str.12, ptr noundef null)
  ret void
}

; Function Attrs: nounwind
declare ptr @signal(i32 noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define dso_local ptr @err(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = load i1, ptr @inside_err, align 8
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %24

5:                                                ; preds = %2
  %6 = icmp eq ptr %1, null
  br i1 %6, label %68, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %9 = load i16, ptr %8, align 2, !tbaa !14
  %10 = icmp eq i16 %9, 1
  br i1 %10, label %11, label %32

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = icmp eq ptr %13, null
  br i1 %14, label %68, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 1
  %17 = load i16, ptr %16, align 2, !tbaa !14
  %18 = icmp eq i16 %17, 13
  br i1 %18, label %19, label %68

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  %22 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  br label %24

24:                                               ; preds = %2, %19
  %25 = phi ptr [ %1, %19 ], [ null, %2 ]
  %26 = phi ptr [ %23, %19 ], [ %1, %2 ]
  %27 = phi ptr [ %21, %19 ], [ %0, %2 ]
  %28 = icmp eq ptr %26, null
  br i1 %28, label %55, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  %31 = load i16, ptr %30, align 2, !tbaa !14
  br label %32

32:                                               ; preds = %29, %7
  %33 = phi i16 [ %31, %29 ], [ %9, %7 ]
  %34 = phi ptr [ %27, %29 ], [ null, %7 ]
  %35 = phi ptr [ %26, %29 ], [ %1, %7 ]
  %36 = phi ptr [ %25, %29 ], [ null, %7 ]
  switch i16 %33, label %49 [
    i16 3, label %37
    i16 13, label %39
  ]

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.obj, ptr %35, i64 0, i32 2
  br label %41

39:                                               ; preds = %32
  %40 = getelementptr inbounds %struct.obj, ptr %35, i64 0, i32 2, i32 0, i32 1
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi ptr [ %40, %39 ], [ %38, %37 ]
  %43 = load ptr, ptr %42, align 8, !tbaa !9
  %44 = icmp eq ptr %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = tail call ptr @memchr(ptr noundef nonnull dereferenceable(1) %43, i32 noundef 0, i64 noundef 80) #34
  %47 = icmp eq ptr %46, null
  %48 = select i1 %47, ptr null, ptr %43
  br label %49

49:                                               ; preds = %32, %45, %41
  %50 = phi ptr [ %48, %45 ], [ null, %41 ], [ null, %32 ]
  %51 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %52 = icmp sgt i64 %51, 0
  %53 = icmp ne ptr %34, null
  %54 = select i1 %52, i1 %53, i1 false
  br i1 %54, label %62, label %68

55:                                               ; preds = %24
  %56 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %57 = icmp sgt i64 %56, 0
  %58 = icmp ne ptr %27, null
  %59 = select i1 %57, i1 %58, i1 false
  br i1 %59, label %60, label %68

60:                                               ; preds = %55
  %61 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.17, ptr noundef nonnull %27)
  br label %68

62:                                               ; preds = %49
  %63 = icmp eq ptr %50, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.18, ptr noundef nonnull %34, ptr noundef nonnull %50)
  br label %68

66:                                               ; preds = %62
  %67 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.19, ptr noundef nonnull %34)
  br label %68

68:                                               ; preds = %15, %11, %55, %5, %60, %66, %64, %49
  %69 = phi i1 [ true, %60 ], [ true, %66 ], [ true, %64 ], [ %53, %49 ], [ false, %5 ], [ %58, %55 ], [ false, %11 ], [ false, %15 ]
  %70 = phi ptr [ %27, %60 ], [ %34, %66 ], [ %34, %64 ], [ %34, %49 ], [ null, %5 ], [ %27, %55 ], [ null, %11 ], [ null, %15 ]
  %71 = phi ptr [ null, %60 ], [ %35, %66 ], [ %35, %64 ], [ %35, %49 ], [ null, %5 ], [ null, %55 ], [ %1, %11 ], [ %1, %15 ]
  %72 = phi ptr [ %25, %60 ], [ %36, %66 ], [ %36, %64 ], [ %36, %49 ], [ null, %5 ], [ %25, %55 ], [ null, %11 ], [ null, %15 ]
  %73 = load i64, ptr @errjmp_ok, align 8, !tbaa !10
  %74 = icmp eq i64 %73, 1
  br i1 %74, label %75, label %107

75:                                               ; preds = %68
  store i1 true, ptr @inside_err, align 8
  %76 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %77 = tail call ptr @setvar(ptr noundef %76, ptr noundef %71, ptr noundef null)
  %78 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %79 = icmp eq ptr %78, null
  br i1 %79, label %105, label %80

80:                                               ; preds = %75
  %81 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %82 = load ptr, ptr @sym_catchall, align 8
  br label %83

83:                                               ; preds = %80, %101
  %84 = phi ptr [ %78, %80 ], [ %103, %101 ]
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = icmp eq ptr %85, %81
  %87 = icmp eq ptr %85, %82
  %88 = select i1 %86, i1 true, i1 %87
  br i1 %88, label %89, label %101

89:                                               ; preds = %83
  %90 = icmp ne ptr %72, null
  %91 = select i1 %90, i1 true, i1 %3
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = select i1 %69, ptr %70, ptr @.str.20
  %94 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %93) #34
  %95 = tail call ptr @strcons(i64 noundef %94, ptr noundef %93) #33
  %96 = tail call ptr @cons(ptr noundef %95, ptr noundef %71)
  br label %97

97:                                               ; preds = %89, %92
  %98 = phi ptr [ %96, %92 ], [ %72, %89 ]
  %99 = getelementptr inbounds %struct.catch_frame, ptr %84, i64 0, i32 1
  store ptr %98, ptr %99, align 8, !tbaa !19
  store i64 0, ptr @nointerrupt, align 8, !tbaa !10
  store i1 false, ptr @inside_err, align 8
  %100 = getelementptr inbounds %struct.catch_frame, ptr %84, i64 0, i32 2
  tail call void @longjmp(ptr noundef nonnull %100, i32 noundef 2) #35
  unreachable

101:                                              ; preds = %83
  %102 = getelementptr inbounds %struct.catch_frame, ptr %84, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !5
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %83, !llvm.loop !20

105:                                              ; preds = %101, %75
  store i1 false, ptr @inside_err, align 8
  %106 = select i1 %69, i32 1, i32 2
  tail call void @longjmp(ptr noundef nonnull @errjmp, i32 noundef %106) #35
  unreachable

107:                                              ; preds = %68
  %108 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %109 = icmp sgt i64 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.242)
  br label %112

112:                                              ; preds = %110, %107
  %113 = load ptr, ptr @fatal_exit_hook, align 8, !tbaa !5
  %114 = icmp eq ptr %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  tail call void %113() #33
  ret ptr null

116:                                              ; preds = %112
  tail call void @exit(i32 noundef 10) #35
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @handle_sigint(i32 %0) #6 {
  %2 = tail call ptr @signal(i32 noundef 2, ptr noundef nonnull @handle_sigint) #33
  %3 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store i64 1, ptr @interrupt_differed, align 8, !tbaa !10
  br label %8

6:                                                ; preds = %1
  %7 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %8

8:                                                ; preds = %6, %5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @get_eof_val() #8 {
  %1 = load ptr, ptr @eof_val, align 8, !tbaa !5
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define dso_local i64 @repl_driver(i64 noundef %0, i64 noundef %1, ptr noundef readonly %2) local_unnamed_addr #6 {
  %4 = alloca %struct.repl_hooks, align 8
  %5 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #33
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #33
  store ptr %5, ptr @stack_start_ptr, align 8, !tbaa !5
  %6 = load i64, ptr @stack_size, align 8, !tbaa !10
  %7 = sub i64 0, %6
  %8 = getelementptr inbounds i8, ptr %5, i64 %7
  store ptr %8, ptr @stack_limit_ptr, align 8, !tbaa !5
  %9 = call i32 @_setjmp(ptr noundef nonnull @errjmp) #36
  %10 = icmp eq i32 %9, 2
  %11 = icmp eq i64 %0, 0
  br i1 %10, label %12, label %13

12:                                               ; preds = %3
  br i1 %11, label %43, label %39

13:                                               ; preds = %3
  br i1 %11, label %16, label %14

14:                                               ; preds = %13
  %15 = call ptr @signal(i32 noundef 2, ptr noundef nonnull @handle_sigint) #33
  store ptr %15, ptr @repl_driver.osigint, align 8, !tbaa !5
  br label %16

16:                                               ; preds = %14, %13
  %17 = call ptr @signal(i32 noundef 8, ptr noundef nonnull @handle_sigfpe) #33
  store ptr %17, ptr @repl_driver.osigfpe, align 8, !tbaa !5
  store ptr null, ptr @catch_framep, align 8, !tbaa !5
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  store i64 0, ptr @nointerrupt, align 8, !tbaa !10
  %18 = icmp ne i64 %1, 0
  %19 = load ptr, ptr @init_file, align 8
  %20 = icmp ne ptr %19, null
  %21 = select i1 %18, i1 %20, i1 false
  %22 = icmp eq i32 %9, 0
  %23 = select i1 %21, i1 %22, i1 false
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = call ptr @vload(ptr noundef nonnull %19, i64 noundef 0, i64 noundef 1)
  br label %26

26:                                               ; preds = %24, %16
  %27 = icmp eq ptr %2, null
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = load ptr, ptr @repl_puts, align 8, !tbaa !5
  store ptr %29, ptr %4, align 8, !tbaa !21
  %30 = load ptr, ptr @repl_read, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.repl_hooks, ptr %4, i64 0, i32 1
  store ptr %30, ptr %31, align 8, !tbaa !23
  %32 = load ptr, ptr @repl_eval, align 8, !tbaa !5
  %33 = getelementptr inbounds %struct.repl_hooks, ptr %4, i64 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !24
  %34 = load ptr, ptr @repl_print, align 8, !tbaa !5
  %35 = getelementptr inbounds %struct.repl_hooks, ptr %4, i64 0, i32 3
  store ptr %34, ptr %35, align 8, !tbaa !25
  br label %36

36:                                               ; preds = %26, %28
  %37 = phi ptr [ %4, %28 ], [ %2, %26 ]
  %38 = call i64 @repl(ptr noundef nonnull %37)
  br i1 %11, label %43, label %39

39:                                               ; preds = %36, %12
  %40 = phi i64 [ 2, %12 ], [ 0, %36 ]
  %41 = load ptr, ptr @repl_driver.osigint, align 8, !tbaa !5
  %42 = call ptr @signal(i32 noundef 2, ptr noundef %41) #33
  br label %43

43:                                               ; preds = %39, %36, %12
  %44 = phi i64 [ 2, %12 ], [ 0, %36 ], [ %40, %39 ]
  %45 = load ptr, ptr @repl_driver.osigfpe, align 8, !tbaa !5
  %46 = call ptr @signal(i32 noundef 8, ptr noundef %45) #33
  store ptr null, ptr @stack_start_ptr, align 8, !tbaa !5
  store ptr null, ptr @stack_limit_ptr, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #33
  ret i64 %44
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(ptr noundef) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define dso_local ptr @vload(ptr noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #6 {
  %4 = alloca %struct.gen_printio, align 8
  %5 = alloca [512 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %5) #33
  %6 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 124) #34
  %7 = icmp eq ptr %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strtol(ptr nocapture noundef nonnull %0, ptr noundef null, i32 noundef 10) #33
  %10 = getelementptr inbounds i8, ptr %6, i64 1
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i64 [ %9, %8 ], [ 0, %3 ]
  %13 = phi ptr [ %10, %8 ], [ %0, %3 ]
  %14 = icmp eq i64 %2, 0
  br i1 %14, label %50, label %15

15:                                               ; preds = %11
  %16 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %17 = tail call noalias ptr @fopen(ptr noundef %13, ptr noundef nonnull @.str.133)
  %18 = icmp eq ptr %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = tail call i32 @fclose(ptr noundef nonnull %17)
  br label %40

21:                                               ; preds = %15
  %22 = load i8, ptr %13, align 1, !tbaa !9
  %23 = icmp eq i8 %22, 47
  br i1 %23, label %40, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr @siod_lib, align 8, !tbaa !5
  %26 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %25) #34
  %27 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %13) #34
  %28 = add i64 %26, 1
  %29 = add i64 %28, %27
  %30 = icmp ult i64 %29, 512
  br i1 %30, label %31, label %40

31:                                               ; preds = %24
  %32 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) %25) #33
  %33 = call i64 @strlen(ptr nonnull dereferenceable(1) %5)
  %34 = getelementptr inbounds i8, ptr %5, i64 %33
  store i16 47, ptr %34, align 1
  %35 = call ptr @strcat(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) %13) #33
  %36 = call noalias ptr @fopen(ptr noundef nonnull %5, ptr noundef nonnull @.str.133)
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = call i32 @fclose(ptr noundef nonnull %36)
  br label %40

40:                                               ; preds = %21, %24, %38, %31, %19
  %41 = phi ptr [ %13, %19 ], [ %5, %38 ], [ %13, %31 ], [ %13, %24 ], [ %13, %21 ]
  %42 = shl i64 %16, 32
  %43 = ashr exact i64 %42, 32
  store i64 %43, ptr @nointerrupt, align 8, !tbaa !10
  %44 = icmp eq i64 %42, 0
  %45 = load i64, ptr @interrupt_differed, align 8
  %46 = icmp eq i64 %45, 1
  %47 = select i1 %44, i1 %46, i1 false
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %49 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %50

50:                                               ; preds = %48, %40, %11
  %51 = phi ptr [ %13, %11 ], [ %41, %40 ], [ %41, %48 ]
  %52 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %53 = icmp sgt i64 %52, 2
  br i1 %53, label %54, label %86

54:                                               ; preds = %50
  %55 = load ptr, ptr @stdout, align 8, !tbaa !5
  %56 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %57 = call i64 @fwrite(ptr nonnull @.str.138, i64 8, i64 1, ptr %55)
  store i64 %56, ptr @nointerrupt, align 8, !tbaa !10
  %58 = icmp eq i64 %56, 0
  %59 = load i64, ptr @interrupt_differed, align 8
  %60 = icmp eq i64 %59, 1
  %61 = select i1 %58, i1 %60, i1 false
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %63 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %64 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %65

65:                                               ; preds = %54, %62
  %66 = phi i64 [ %56, %54 ], [ %64, %62 ]
  %67 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %68 = call i32 @fputs(ptr %51, ptr %67)
  store i64 %66, ptr @nointerrupt, align 8, !tbaa !10
  %69 = icmp eq i64 %66, 0
  %70 = load i64, ptr @interrupt_differed, align 8
  %71 = icmp eq i64 %70, 1
  %72 = select i1 %69, i1 %71, i1 false
  br i1 %72, label %73, label %76

73:                                               ; preds = %65
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %74 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %75 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %76

76:                                               ; preds = %65, %73
  %77 = phi i64 [ %66, %65 ], [ %75, %73 ]
  %78 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %79 = call i32 @fputc(i32 10, ptr %78)
  store i64 %77, ptr @nointerrupt, align 8, !tbaa !10
  %80 = icmp eq i64 %77, 0
  %81 = load i64, ptr @interrupt_differed, align 8
  %82 = icmp eq i64 %81, 1
  %83 = select i1 %80, i1 %82, i1 false
  br i1 %83, label %84, label %86

84:                                               ; preds = %76
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %85 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %86

86:                                               ; preds = %84, %76, %50
  %87 = icmp eq i64 %12, 0
  %88 = select i1 %87, ptr @.str.133, ptr @.str.139
  %89 = call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %51, ptr noundef nonnull %88)
  %90 = getelementptr inbounds %struct.obj, ptr %89, i64 0, i32 2
  %91 = load ptr, ptr %90, align 8, !tbaa !9
  %92 = icmp sgt i64 %12, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %86, %93
  %94 = phi i64 [ %96, %93 ], [ 0, %86 ]
  %95 = call i32 @getc(ptr noundef %91)
  %96 = add nuw nsw i64 %94, 1
  %97 = icmp eq i64 %96, %12
  br i1 %97, label %98, label %93, !llvm.loop !26

98:                                               ; preds = %93, %86
  store i8 0, ptr %5, align 16, !tbaa !9
  br label %99

99:                                               ; preds = %98, %117
  %100 = phi i64 [ %107, %117 ], [ 0, %98 ]
  %101 = call i32 @getc(ptr noundef %91)
  br label %102

102:                                              ; preds = %110, %99
  %103 = phi i32 [ %101, %99 ], [ %111, %110 ]
  %104 = phi i64 [ %100, %99 ], [ %107, %110 ]
  switch i32 %103, label %118 [
    i32 59, label %105
    i32 35, label %105
    i32 -1, label %120
  ]

105:                                              ; preds = %102, %102
  br label %106

106:                                              ; preds = %105, %113
  %107 = phi i64 [ %104, %105 ], [ %108, %113 ]
  %108 = add nsw i64 %107, 1
  %109 = icmp ult i64 %108, 512
  br label %110

110:                                              ; preds = %106, %112
  %111 = call i32 @getc(ptr noundef %91)
  switch i32 %111, label %112 [
    i32 10, label %117
    i32 -1, label %102
  ], !llvm.loop !27

112:                                              ; preds = %110
  br i1 %109, label %113, label %110, !llvm.loop !28

113:                                              ; preds = %112
  %114 = trunc i32 %111 to i8
  %115 = getelementptr inbounds [512 x i8], ptr %5, i64 0, i64 %107
  store i8 %114, ptr %115, align 1, !tbaa !9
  %116 = getelementptr inbounds [512 x i8], ptr %5, i64 0, i64 %108
  store i8 0, ptr %116, align 1, !tbaa !9
  br label %106, !llvm.loop !28

117:                                              ; preds = %110
  br label %99, !llvm.loop !27

118:                                              ; preds = %102
  %119 = call i32 @ungetc(i32 noundef %103, ptr noundef %91)
  br label %120

120:                                              ; preds = %102, %118
  %121 = call ptr @strstr(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) @.str.135) #34
  %122 = icmp eq ptr %121, null
  br i1 %122, label %192, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds i8, ptr %121, i64 7
  %125 = load i8, ptr %124, align 1, !tbaa !9
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %142, label %127

127:                                              ; preds = %123
  %128 = tail call ptr @__ctype_b_loc() #37
  %129 = load ptr, ptr %128, align 8, !tbaa !5
  br label %130

130:                                              ; preds = %127, %138
  %131 = phi i8 [ %125, %127 ], [ %140, %138 ]
  %132 = phi ptr [ %124, %127 ], [ %139, %138 ]
  %133 = sext i8 %131 to i64
  %134 = getelementptr inbounds i16, ptr %129, i64 %133
  %135 = load i16, ptr %134, align 2, !tbaa !29
  %136 = and i16 %135, 8
  %137 = icmp eq i16 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %130
  %139 = getelementptr inbounds i8, ptr %132, i64 1
  %140 = load i8, ptr %139, align 1, !tbaa !9
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %130, !llvm.loop !30

142:                                              ; preds = %130, %138, %123
  %143 = phi ptr [ %124, %123 ], [ %139, %138 ], [ %132, %130 ]
  %144 = ptrtoint ptr %143 to i64
  %145 = ptrtoint ptr %121 to i64
  %146 = sub i64 %144, %145
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 16 %5, ptr nonnull align 1 %121, i64 %146, i1 false)
  %147 = getelementptr inbounds [512 x i8], ptr %5, i64 0, i64 6
  store i8 95, ptr %147, align 2, !tbaa !9
  %148 = getelementptr inbounds [512 x i8], ptr %5, i64 0, i64 %146
  store i8 0, ptr %148, align 1, !tbaa !9
  %149 = call i64 @strlen(ptr nonnull dereferenceable(1) %5)
  %150 = getelementptr inbounds i8, ptr %5, i64 %149
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(5) %150, ptr noundef nonnull align 1 dereferenceable(5) @.str.136, i64 5, i1 false)
  %151 = call ptr @strcons(i64 noundef -1, ptr noundef nonnull %5) #33
  %152 = call ptr @require(ptr noundef %151)
  store i8 0, ptr %148, align 1, !tbaa !9
  %153 = call ptr @gen_intern(ptr noundef nonnull %5, i64 noundef 1)
  %154 = call ptr @leval(ptr noundef %153, ptr noundef null)
  %155 = call ptr @funcall1(ptr noundef %154, ptr noundef %153) #33
  %156 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %157 = icmp sgt i64 %156, 4
  br i1 %157, label %158, label %192

158:                                              ; preds = %142
  %159 = load ptr, ptr @stdout, align 8, !tbaa !5
  %160 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %161 = call i64 @fwrite(ptr nonnull @.str.135, i64 7, i64 1, ptr %159)
  store i64 %160, ptr @nointerrupt, align 8, !tbaa !10
  %162 = icmp eq i64 %160, 0
  %163 = load i64, ptr @interrupt_differed, align 8
  %164 = icmp eq i64 %163, 1
  %165 = select i1 %162, i1 %164, i1 false
  br i1 %165, label %166, label %168

166:                                              ; preds = %158
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %167 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %168

168:                                              ; preds = %158, %166
  %169 = load ptr, ptr @stdout, align 8, !tbaa !5
  %170 = icmp eq ptr %169, null
  br i1 %170, label %171, label %178

171:                                              ; preds = %168
  %172 = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef null)
  %173 = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  %174 = icmp eq ptr %173, null
  br i1 %174, label %175, label %178

175:                                              ; preds = %171
  %176 = call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull null)
  %177 = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  br label %178

178:                                              ; preds = %168, %171, %175
  %179 = phi ptr [ %169, %168 ], [ %177, %175 ], [ %173, %171 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #33
  store ptr null, ptr %4, align 8, !tbaa !31
  %180 = getelementptr inbounds %struct.gen_printio, ptr %4, i64 0, i32 1
  store ptr @fputs_fcn, ptr %180, align 8, !tbaa !33
  %181 = getelementptr inbounds %struct.gen_printio, ptr %4, i64 0, i32 2
  store ptr %179, ptr %181, align 8, !tbaa !34
  %182 = call ptr @lprin1g(ptr noundef %155, ptr noundef nonnull %4)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  %183 = load ptr, ptr @stdout, align 8, !tbaa !5
  %184 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %185 = call i32 @fputc(i32 10, ptr %183)
  store i64 %184, ptr @nointerrupt, align 8, !tbaa !10
  %186 = icmp eq i64 %184, 0
  %187 = load i64, ptr @interrupt_differed, align 8
  %188 = icmp eq i64 %187, 1
  %189 = select i1 %186, i1 %188, i1 false
  br i1 %189, label %190, label %192

190:                                              ; preds = %178
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %191 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %192

192:                                              ; preds = %190, %178, %142, %120
  %193 = phi ptr [ %155, %142 ], [ null, %120 ], [ %155, %178 ], [ %155, %190 ]
  %194 = icmp eq ptr %193, null
  %195 = icmp eq ptr %89, null
  %196 = getelementptr inbounds %struct.obj, ptr %89, i64 0, i32 1
  %197 = icmp eq i64 %1, 0
  br label %198

198:                                              ; preds = %257, %192
  %199 = phi ptr [ null, %192 ], [ %258, %257 ]
  %200 = icmp eq ptr %199, null
  br label %201

201:                                              ; preds = %198, %270
  %202 = phi ptr [ %258, %270 ], [ %199, %198 ]
  br label %203

203:                                              ; preds = %201, %272
  br i1 %194, label %204, label %223

204:                                              ; preds = %203
  %205 = load ptr, ptr @stdin, align 8, !tbaa !5
  %206 = icmp ne ptr %205, null
  %207 = and i1 %195, %206
  br i1 %207, label %220, label %208

208:                                              ; preds = %204
  br i1 %195, label %212, label %209

209:                                              ; preds = %208
  %210 = load i16, ptr %196, align 2, !tbaa !14
  %211 = icmp eq i16 %210, 17
  br i1 %211, label %214, label %212

212:                                              ; preds = %209, %208
  %213 = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %89)
  br label %214

214:                                              ; preds = %212, %209
  %215 = load ptr, ptr %90, align 8, !tbaa !9
  %216 = icmp eq ptr %215, null
  br i1 %216, label %217, label %220

217:                                              ; preds = %214
  %218 = call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %89)
  %219 = load ptr, ptr %90, align 8, !tbaa !9
  br label %220

220:                                              ; preds = %204, %214, %217
  %221 = phi ptr [ %205, %204 ], [ %219, %217 ], [ %215, %214 ]
  %222 = call ptr @lreadf(ptr noundef %221)
  br label %225

223:                                              ; preds = %203
  %224 = call ptr @funcall1(ptr noundef nonnull %193, ptr noundef %89) #33
  br label %225

225:                                              ; preds = %223, %220
  %226 = phi ptr [ %222, %220 ], [ %224, %223 ]
  %227 = load ptr, ptr @eof_val, align 8, !tbaa !5
  %228 = icmp eq ptr %226, %227
  br i1 %228, label %274, label %229

229:                                              ; preds = %225
  %230 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %231 = icmp sgt i64 %230, 4
  br i1 %231, label %232, label %234

232:                                              ; preds = %229
  %233 = call ptr @lprint(ptr noundef %226, ptr noundef null)
  br label %234

234:                                              ; preds = %232, %229
  br i1 %197, label %272, label %235

235:                                              ; preds = %234
  %236 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %237 = icmp eq i64 %236, 1
  br i1 %237, label %238, label %246

238:                                              ; preds = %235
  %239 = load ptr, ptr @heap, align 8, !tbaa !5
  %240 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %241 = icmp ult ptr %239, %240
  br i1 %241, label %244, label %242

242:                                              ; preds = %238
  %243 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %244

244:                                              ; preds = %242, %238
  %245 = getelementptr inbounds %struct.obj, ptr %239, i64 1
  store ptr %245, ptr @heap, align 8, !tbaa !5
  br label %257

246:                                              ; preds = %235
  %247 = load ptr, ptr @freelist, align 8, !tbaa !5
  %248 = icmp eq ptr %247, null
  br i1 %248, label %249, label %251

249:                                              ; preds = %246
  call void @gc_for_newcell() #38
  %250 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %251

251:                                              ; preds = %249, %246
  %252 = phi ptr [ %250, %249 ], [ %247, %246 ]
  %253 = getelementptr inbounds %struct.obj, ptr %252, i64 0, i32 2, i32 0, i32 1
  %254 = load ptr, ptr %253, align 8, !tbaa !9
  store ptr %254, ptr @freelist, align 8, !tbaa !5
  %255 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %256 = add nsw i64 %255, 1
  store i64 %256, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %257

257:                                              ; preds = %244, %251
  %258 = phi ptr [ %239, %244 ], [ %252, %251 ]
  store i16 0, ptr %258, align 8, !tbaa !35
  %259 = getelementptr inbounds %struct.obj, ptr %258, i64 0, i32 1
  store i16 1, ptr %259, align 2, !tbaa !14
  %260 = getelementptr inbounds %struct.obj, ptr %258, i64 0, i32 2
  store ptr %226, ptr %260, align 8, !tbaa !9
  %261 = getelementptr inbounds %struct.obj, ptr %258, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %261, align 8, !tbaa !9
  br i1 %200, label %198, label %262

262:                                              ; preds = %257
  %263 = icmp eq ptr %202, null
  br i1 %263, label %268, label %264

264:                                              ; preds = %262
  %265 = getelementptr inbounds %struct.obj, ptr %202, i64 0, i32 1
  %266 = load i16, ptr %265, align 2, !tbaa !14
  %267 = icmp eq i16 %266, 1
  br i1 %267, label %270, label %268

268:                                              ; preds = %264, %262
  %269 = call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %202)
  br label %270

270:                                              ; preds = %264, %268
  %271 = getelementptr inbounds %struct.obj, ptr %202, i64 0, i32 2, i32 0, i32 1
  store ptr %258, ptr %271, align 8, !tbaa !9
  br label %201

272:                                              ; preds = %234
  %273 = call ptr @leval(ptr noundef %226, ptr noundef null)
  br label %203

274:                                              ; preds = %225
  %275 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  br i1 %195, label %279, label %276

276:                                              ; preds = %274
  %277 = load i16, ptr %196, align 2, !tbaa !14
  %278 = icmp eq i16 %277, 17
  br i1 %278, label %281, label %279

279:                                              ; preds = %276, %274
  %280 = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %89)
  br label %281

281:                                              ; preds = %279, %276
  %282 = load ptr, ptr %90, align 8, !tbaa !9
  %283 = icmp eq ptr %282, null
  br i1 %283, label %286, label %284

284:                                              ; preds = %281
  %285 = call i32 @fclose(ptr noundef nonnull %282)
  store ptr null, ptr %90, align 8, !tbaa !9
  br label %286

286:                                              ; preds = %284, %281
  %287 = getelementptr inbounds %struct.obj, ptr %89, i64 0, i32 2, i32 0, i32 1
  %288 = load ptr, ptr %287, align 8, !tbaa !9
  %289 = icmp eq ptr %288, null
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  call void @free(ptr noundef nonnull %288) #33
  store ptr null, ptr %287, align 8, !tbaa !9
  br label %291

291:                                              ; preds = %290, %286
  store i64 %275, ptr @nointerrupt, align 8, !tbaa !10
  %292 = icmp eq i64 %275, 0
  %293 = load i64, ptr @interrupt_differed, align 8
  %294 = icmp eq i64 %293, 1
  %295 = select i1 %292, i1 %294, i1 false
  br i1 %295, label %296, label %298

296:                                              ; preds = %291
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %297 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %298

298:                                              ; preds = %291, %296
  %299 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %300 = icmp sgt i64 %299, 2
  br i1 %300, label %301, label %311

301:                                              ; preds = %298
  %302 = load ptr, ptr @stdout, align 8, !tbaa !5
  %303 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %304 = call i64 @fwrite(ptr nonnull @.str.140, i64 6, i64 1, ptr %302)
  store i64 %303, ptr @nointerrupt, align 8, !tbaa !10
  %305 = icmp eq i64 %303, 0
  %306 = load i64, ptr @interrupt_differed, align 8
  %307 = icmp eq i64 %306, 1
  %308 = select i1 %305, i1 %307, i1 false
  br i1 %308, label %309, label %311

309:                                              ; preds = %301
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %310 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %311

311:                                              ; preds = %309, %301, %298
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %5) #33
  ret ptr %199
}

; Function Attrs: nounwind uwtable
define dso_local i64 @repl(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = alloca %struct.timeval, align 8
  %3 = alloca %struct.tms, align 8
  %4 = alloca %struct.tms, align 8
  %5 = alloca %struct.tms, align 8
  %6 = getelementptr inbounds %struct.tms, ptr %5, i64 0, i32 1
  %7 = getelementptr inbounds %struct.tms, ptr %4, i64 0, i32 1
  %8 = getelementptr inbounds %struct.repl_hooks, ptr %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.repl_hooks, ptr %0, i64 0, i32 2
  %10 = getelementptr inbounds %struct.repl_hooks, ptr %0, i64 0, i32 3
  br label %11

11:                                               ; preds = %132, %1
  %12 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %70

14:                                               ; preds = %11
  %15 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = load ptr, ptr @heap, align 8, !tbaa !5
  %19 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %20 = icmp ult ptr %18, %19
  br i1 %20, label %70, label %21

21:                                               ; preds = %17, %14
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #33
  %22 = call i64 @times(ptr noundef nonnull %5) #33
  %23 = load i64, ptr %5, align 8, !tbaa !36
  %24 = load i64, ptr %6, align 8, !tbaa !38
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #33
  tail call void @gc_stop_and_copy()
  %25 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %26 = icmp sgt i64 %25, 1
  br i1 %26, label %27, label %90

27:                                               ; preds = %21
  %28 = sitofp i64 %23 to double
  %29 = sitofp i64 %24 to double
  %30 = fadd double %28, %29
  %31 = fdiv double %30, 6.000000e+01
  %32 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #33
  %33 = call i64 @times(ptr noundef nonnull %4) #33
  %34 = load i64, ptr %4, align 8, !tbaa !36
  %35 = sitofp i64 %34 to double
  %36 = load i64, ptr %7, align 8, !tbaa !38
  %37 = sitofp i64 %36 to double
  %38 = fadd double %35, %37
  %39 = fdiv double %38, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #33
  %40 = fsub double %39, %31
  %41 = load i64, ptr @old_heap_used, align 8, !tbaa !10
  %42 = load ptr, ptr @heap, align 8, !tbaa !5
  %43 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 24
  %48 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %49 = ptrtoint ptr %48 to i64
  %50 = sub i64 %49, %44
  %51 = sdiv exact i64 %50, 24
  %52 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %32, ptr noundef nonnull dereferenceable(1) @.str.15, double noundef %40, i64 noundef %41, i64 noundef %47, i64 noundef %51) #33
  %53 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %54 = load ptr, ptr %0, align 8, !tbaa !21
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %69

56:                                               ; preds = %27
  %57 = load ptr, ptr @stdout, align 8, !tbaa !5
  %58 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %59 = tail call i32 @fputs(ptr %53, ptr %57)
  store i64 %58, ptr @nointerrupt, align 8, !tbaa !10
  %60 = icmp eq i64 %58, 0
  %61 = load i64, ptr @interrupt_differed, align 8
  %62 = icmp eq i64 %61, 1
  %63 = select i1 %60, i1 %62, i1 false
  br i1 %63, label %64, label %66

64:                                               ; preds = %56
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %65 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %66

66:                                               ; preds = %64, %56
  %67 = load ptr, ptr @stdout, align 8, !tbaa !5
  %68 = tail call i32 @fflush(ptr noundef %67)
  br label %70

69:                                               ; preds = %27
  tail call void %54(ptr noundef %53) #33
  br label %70

70:                                               ; preds = %69, %66, %17, %11
  %71 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %72 = icmp sgt i64 %71, 1
  br i1 %72, label %73, label %90

73:                                               ; preds = %70
  %74 = load ptr, ptr %0, align 8, !tbaa !21
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %89

76:                                               ; preds = %73
  %77 = load ptr, ptr @stdout, align 8, !tbaa !5
  %78 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %79 = tail call i64 @fwrite(ptr nonnull @.str.16, i64 2, i64 1, ptr %77)
  store i64 %78, ptr @nointerrupt, align 8, !tbaa !10
  %80 = icmp eq i64 %78, 0
  %81 = load i64, ptr @interrupt_differed, align 8
  %82 = icmp eq i64 %81, 1
  %83 = select i1 %80, i1 %82, i1 false
  br i1 %83, label %84, label %86

84:                                               ; preds = %76
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %85 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %86

86:                                               ; preds = %84, %76
  %87 = load ptr, ptr @stdout, align 8, !tbaa !5
  %88 = tail call i32 @fflush(ptr noundef %87)
  br label %90

89:                                               ; preds = %73
  tail call void %74(ptr noundef nonnull @.str.16) #33
  br label %90

90:                                               ; preds = %21, %89, %86, %70
  %91 = load ptr, ptr %8, align 8, !tbaa !23
  %92 = icmp eq ptr %91, null
  br i1 %92, label %93, label %106

93:                                               ; preds = %90
  %94 = load ptr, ptr @stdin, align 8, !tbaa !5
  %95 = icmp eq ptr %94, null
  br i1 %95, label %96, label %103

96:                                               ; preds = %93
  %97 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef null)
  %98 = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  %99 = icmp eq ptr %98, null
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull null)
  %102 = load ptr, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !9
  br label %103

103:                                              ; preds = %93, %96, %100
  %104 = phi ptr [ %94, %93 ], [ %102, %100 ], [ %98, %96 ]
  %105 = tail call ptr @lreadf(ptr noundef %104)
  br label %108

106:                                              ; preds = %90
  %107 = tail call ptr %91() #33
  br label %108

108:                                              ; preds = %106, %103
  %109 = phi ptr [ %105, %103 ], [ %107, %106 ]
  %110 = load ptr, ptr @eof_val, align 8, !tbaa !5
  %111 = icmp eq ptr %109, %110
  br i1 %111, label %136, label %112

112:                                              ; preds = %108
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #33
  %113 = call i64 @times(ptr noundef nonnull %3) #33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #33
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #33
  %114 = call i32 @gettimeofday(ptr noundef nonnull %2, ptr noundef null) #33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #33
  %115 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %116 = icmp eq i64 %115, 1
  br i1 %116, label %118, label %117

117:                                              ; preds = %112
  store i64 0, ptr @gc_cells_allocated, align 8, !tbaa !10
  store double 0.000000e+00, ptr @gc_time_taken, align 8, !tbaa !39
  br label %118

118:                                              ; preds = %112, %117
  %119 = load ptr, ptr %9, align 8, !tbaa !24
  %120 = icmp eq ptr %119, null
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = tail call ptr @leval(ptr noundef %109, ptr noundef null)
  br label %125

123:                                              ; preds = %118
  %124 = tail call ptr %119(ptr noundef %109) #33
  br label %125

125:                                              ; preds = %123, %121
  %126 = phi ptr [ %122, %121 ], [ %124, %123 ]
  %127 = load ptr, ptr %10, align 8, !tbaa !25
  %128 = icmp eq ptr %127, null
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %131 = icmp sgt i64 %130, 1
  br i1 %131, label %133, label %132

132:                                              ; preds = %129, %133, %135
  br label %11

133:                                              ; preds = %129
  %134 = tail call ptr @lprint(ptr noundef %126, ptr noundef null)
  br label %132

135:                                              ; preds = %125
  tail call void %127(ptr noundef %126) #33
  br label %132

136:                                              ; preds = %108
  ret i64 0
}

; Function Attrs: nounwind uwtable
define dso_local i64 @repl_c_string(ptr noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3) local_unnamed_addr #6 {
  %5 = alloca %struct.repl_hooks, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #33
  %6 = getelementptr inbounds %struct.repl_hooks, ptr %5, i64 0, i32 1
  store ptr @repl_c_string_read, ptr %6, align 8, !tbaa !23
  %7 = getelementptr inbounds %struct.repl_hooks, ptr %5, i64 0, i32 2
  store ptr null, ptr %7, align 8, !tbaa !24
  %8 = icmp sgt i64 %3, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  store ptr @ignore_puts, ptr %5, align 8, !tbaa !21
  br label %14

10:                                               ; preds = %4
  %11 = icmp eq i64 %3, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %10
  store ptr @noprompt_puts, ptr %5, align 8, !tbaa !21
  br label %14

13:                                               ; preds = %10
  store ptr @ignore_puts, ptr %5, align 8, !tbaa !21
  br label %14

14:                                               ; preds = %12, %13, %9
  %15 = phi ptr [ @not_ignore_print, %12 ], [ @ignore_print, %13 ], [ @repl_c_string_print, %9 ]
  %16 = phi i64 [ 0, %12 ], [ 0, %13 ], [ %3, %9 ]
  %17 = phi ptr [ null, %12 ], [ null, %13 ], [ %0, %9 ]
  %18 = getelementptr inbounds %struct.repl_hooks, ptr %5, i64 0, i32 3
  store ptr %15, ptr %18, align 8, !tbaa !25
  store i64 %16, ptr @repl_c_string_print_len, align 8, !tbaa !10
  store ptr %17, ptr @repl_c_string_out, align 8, !tbaa !5
  store ptr %0, ptr @repl_c_string_arg, align 8, !tbaa !5
  store i1 false, ptr @repl_c_string_flag, align 8
  %19 = call i64 @repl_driver(i64 noundef %1, i64 noundef %2, ptr noundef nonnull %5), !range !41
  %20 = icmp eq i64 %19, 0
  %21 = load i1, ptr @repl_c_string_flag, align 8
  %22 = select i1 %21, i64 0, i64 2
  %23 = select i1 %20, i64 %22, i64 %19
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #33
  ret i64 %23
}

; Function Attrs: nounwind uwtable
define internal ptr @repl_c_string_read() #6 {
  %1 = load ptr, ptr @repl_c_string_arg, align 8, !tbaa !5
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = load ptr, ptr @eof_val, align 8, !tbaa !5
  br label %13

5:                                                ; preds = %0
  %6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #34
  %7 = tail call ptr @strcons(i64 noundef %6, ptr noundef nonnull %1) #33
  store ptr null, ptr @repl_c_string_arg, align 8, !tbaa !5
  %8 = load ptr, ptr @repl_c_string_out, align 8, !tbaa !5
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, ptr %8, align 1, !tbaa !9
  br label %11

11:                                               ; preds = %10, %5
  %12 = tail call ptr @read_from_string(ptr noundef %7) #33
  br label %13

13:                                               ; preds = %11, %3
  %14 = phi ptr [ %4, %3 ], [ %12, %11 ]
  ret ptr %14
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal void @ignore_puts(ptr nocapture %0) #0 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @repl_c_string_print(ptr noundef %0) #6 {
  %2 = alloca %struct.gen_printio, align 8
  %3 = alloca %struct.rcsp_puts, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #33
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #33
  store ptr null, ptr %2, align 8, !tbaa !31
  %4 = getelementptr inbounds %struct.gen_printio, ptr %2, i64 0, i32 1
  store ptr @rcsp_puts, ptr %4, align 8, !tbaa !33
  %5 = load ptr, ptr @repl_c_string_out, align 8, !tbaa !5
  store ptr %5, ptr %3, align 8, !tbaa !42
  %6 = load i64, ptr @repl_c_string_print_len, align 8, !tbaa !10
  %7 = add nsw i64 %6, -1
  %8 = getelementptr inbounds i8, ptr %5, i64 %7
  %9 = getelementptr inbounds %struct.rcsp_puts, ptr %3, i64 0, i32 1
  store ptr %8, ptr %9, align 8, !tbaa !44
  %10 = getelementptr inbounds %struct.gen_printio, ptr %2, i64 0, i32 2
  store ptr %3, ptr %10, align 8, !tbaa !34
  %11 = call ptr @lprin1g(ptr noundef %0, ptr noundef nonnull %2)
  store i1 true, ptr @repl_c_string_flag, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #33
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #33
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @noprompt_puts(ptr nocapture noundef readonly %0) #6 {
  %2 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %0, ptr noundef nonnull dereferenceable(3) @.str.16) #34
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr @stdout, align 8, !tbaa !5
  %6 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %7 = tail call i32 @fputs(ptr %0, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %8 = icmp eq i64 %6, 0
  %9 = load i64, ptr @interrupt_differed, align 8
  %10 = icmp eq i64 %9, 1
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %13 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %14

14:                                               ; preds = %12, %4, %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @not_ignore_print(ptr noundef %0) #6 {
  store i1 true, ptr @repl_c_string_flag, align 8
  %2 = tail call ptr @lprint(ptr noundef %0, ptr noundef null)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @ignore_print(ptr nocapture readnone %0) #10 {
  store i1 true, ptr @repl_c_string_flag, align 8
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local double @myruntime() local_unnamed_addr #1 {
  %1 = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %1) #33
  %2 = call i64 @times(ptr noundef nonnull %1) #33
  %3 = load i64, ptr %1, align 8, !tbaa !36
  %4 = sitofp i64 %3 to double
  %5 = getelementptr inbounds %struct.tms, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !38
  %7 = sitofp i64 %6 to double
  %8 = fadd double %4, %7
  %9 = fdiv double %8, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #33
  ret double %9
}

; Function Attrs: nofree nounwind
declare noundef i64 @times(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind uwtable
define dso_local double @myrealtime() local_unnamed_addr #1 {
  %1 = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %1) #33
  %2 = call i32 @gettimeofday(ptr noundef nonnull %1, ptr noundef null) #33
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %0
  %5 = load i64, ptr %1, align 8, !tbaa !45
  %6 = sitofp i64 %5 to double
  %7 = getelementptr inbounds %struct.timeval, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !47
  %9 = sitofp i64 %8 to double
  %10 = tail call double @llvm.fmuladd.f64(double %9, double 0x3EB0C6F7A0B5ED8D, double %6)
  br label %11

11:                                               ; preds = %0, %4
  %12 = phi double [ %10, %4 ], [ 0.000000e+00, %0 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %1) #33
  ret double %12
}

; Function Attrs: nofree nounwind
declare noundef i32 @gettimeofday(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #11

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @set_repl_hooks(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #10 {
  store ptr %0, ptr @repl_puts, align 8, !tbaa !5
  store ptr %1, ptr @repl_read, align 8, !tbaa !5
  store ptr %2, ptr @repl_eval, align 8, !tbaa !5
  store ptr %3, ptr @repl_print, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gput_st(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.gen_printio, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !33
  %5 = getelementptr inbounds %struct.gen_printio, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !34
  %7 = tail call i32 %4(ptr noundef %1, ptr noundef %6) #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @fput_st(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #6 {
  %3 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %4 = tail call i32 @fputs(ptr %1, ptr %0)
  store i64 %3, ptr @nointerrupt, align 8, !tbaa !10
  %5 = icmp eq i64 %3, 0
  %6 = load i64, ptr @interrupt_differed, align 8
  %7 = icmp eq i64 %6, 1
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %10 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %11

11:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @fputs_fcn(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #6 {
  %3 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %4 = tail call i32 @fputs(ptr %0, ptr %1)
  store i64 %3, ptr @nointerrupt, align 8, !tbaa !10
  %5 = icmp eq i64 %3, 0
  %6 = load i64, ptr @interrupt_differed, align 8
  %7 = icmp eq i64 %6, 1
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %10 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %11

11:                                               ; preds = %2, %9
  ret i32 1
}

; Function Attrs: nounwind uwtable
define dso_local void @put_st(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !5
  %3 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %4 = tail call i32 @fputs(ptr %0, ptr %2)
  store i64 %3, ptr @nointerrupt, align 8, !tbaa !10
  %5 = icmp eq i64 %3, 0
  %6 = load i64, ptr @interrupt_differed, align 8
  %7 = icmp eq i64 %6, 1
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %10 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @grepl_puts(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #6 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %4, label %17

4:                                                ; preds = %2
  %5 = load ptr, ptr @stdout, align 8, !tbaa !5
  %6 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %7 = tail call i32 @fputs(ptr %0, ptr %5)
  store i64 %6, ptr @nointerrupt, align 8, !tbaa !10
  %8 = icmp eq i64 %6, 0
  %9 = load i64, ptr @interrupt_differed, align 8
  %10 = icmp eq i64 %9, 1
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %13 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %14

14:                                               ; preds = %4, %12
  %15 = load ptr, ptr @stdout, align 8, !tbaa !5
  %16 = tail call i32 @fflush(ptr noundef %15)
  br label %18

17:                                               ; preds = %2
  tail call void %1(ptr noundef %0) #33
  br label %18

18:                                               ; preds = %17, %14
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @gc_stop_and_copy() local_unnamed_addr #6 {
  %1 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  store i64 0, ptr @errjmp_ok, align 8, !tbaa !10
  %2 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %3 = load ptr, ptr @heap, align 8, !tbaa !5
  %4 = ptrtoint ptr %3 to i64
  %5 = ptrtoint ptr %2 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  store i64 %7, ptr @old_heap_used, align 8, !tbaa !10
  %8 = load ptr, ptr @heaps, align 8, !tbaa !5
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  %10 = icmp eq ptr %2, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %0
  %12 = getelementptr inbounds ptr, ptr %8, i64 1
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  br label %14

14:                                               ; preds = %0, %11
  %15 = phi ptr [ %13, %11 ], [ %9, %0 ]
  store ptr %15, ptr @heap, align 8, !tbaa !5
  store ptr %15, ptr @heap_org, align 8, !tbaa !5
  %16 = load i64, ptr @heap_size, align 8, !tbaa !10
  %17 = getelementptr inbounds %struct.obj, ptr %15, i64 %16
  store ptr %17, ptr @heap_end, align 8, !tbaa !5
  tail call void @scan_registers()
  tail call void @scan_newspace(ptr noundef %15)
  %18 = icmp ult ptr %2, %3
  br i1 %18, label %19, label %50

19:                                               ; preds = %14, %47
  %20 = phi ptr [ %48, %47 ], [ %2, %14 ]
  %21 = load i16, ptr %20, align 8, !tbaa !35
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %47

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 1
  %25 = load i16, ptr %24, align 2, !tbaa !14
  %26 = sext i16 %25 to i32
  switch i32 %26, label %27 [
    i32 1, label %47
    i32 11, label %47
    i32 3, label %47
    i32 2, label %47
    i32 4, label %47
    i32 5, label %47
    i32 6, label %47
    i32 21, label %47
    i32 7, label %47
    i32 19, label %47
    i32 20, label %47
    i32 8, label %47
    i32 9, label %47
    i32 10, label %47
  ]

27:                                               ; preds = %23
  %28 = sext i16 %25 to i64
  %29 = load ptr, ptr @user_types, align 8, !tbaa !5
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %36

36:                                               ; preds = %34, %31
  store ptr %32, ptr @user_types, align 8, !tbaa !5
  br label %37

37:                                               ; preds = %36, %27
  %38 = phi ptr [ %32, %36 ], [ %29, %27 ]
  %39 = icmp ult i16 %25, 100
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.user_type_hooks, ptr %38, i64 %28, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !48
  %43 = icmp eq ptr %42, null
  br i1 %43, label %47, label %46

44:                                               ; preds = %37
  %45 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

46:                                               ; preds = %40
  tail call void %42(ptr noundef nonnull %20) #33
  br label %47

47:                                               ; preds = %46, %40, %23, %23, %23, %23, %23, %23, %23, %23, %23, %23, %23, %23, %23, %23, %19
  %48 = getelementptr inbounds %struct.obj, ptr %20, i64 1
  %49 = icmp ult ptr %48, %3
  br i1 %49, label %19, label %50, !llvm.loop !50

50:                                               ; preds = %47, %14
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 %1, ptr @nointerrupt, align 8, !tbaa !10
  %51 = icmp eq i64 %1, 0
  %52 = load i64, ptr @interrupt_differed, align 8
  %53 = icmp eq i64 %52, 1
  %54 = select i1 %51, i1 %53, i1 false
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %56 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %57

57:                                               ; preds = %50, %55
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local ptr @lread(ptr noundef %0) #6 {
  %2 = load ptr, ptr @stdin, align 8, !tbaa !5
  %3 = icmp eq ptr %0, null
  %4 = icmp ne ptr %2, null
  %5 = and i1 %3, %4
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  br i1 %3, label %11, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %9 = load i16, ptr %8, align 2, !tbaa !14
  %10 = icmp eq i16 %9, 17
  br i1 %10, label %13, label %11

11:                                               ; preds = %7, %6
  %12 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %0)
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !9
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %0)
  %19 = load ptr, ptr %14, align 8, !tbaa !9
  br label %20

20:                                               ; preds = %1, %13, %17
  %21 = phi ptr [ %2, %1 ], [ %19, %17 ], [ %15, %13 ]
  %22 = tail call ptr @lreadf(ptr noundef %21)
  ret ptr %22
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval(ptr noundef %0, ptr noundef %1) #6 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8, !tbaa !5
  store ptr %1, ptr %4, align 8, !tbaa !5
  %5 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  br label %9

9:                                                ; preds = %7, %2
  br label %10

10:                                               ; preds = %754, %9
  %11 = load ptr, ptr @sym_eval_history_ptr, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = icmp eq ptr %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 1
  %17 = load i16, ptr %16, align 2, !tbaa !14
  %18 = icmp eq i16 %17, 1
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = load ptr, ptr %3, align 8, !tbaa !5
  %21 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !9
  %22 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  store ptr %23, ptr %12, align 8, !tbaa !9
  br label %24

24:                                               ; preds = %10, %19, %15
  %25 = load ptr, ptr %3, align 8, !tbaa !5
  %26 = icmp eq ptr %25, null
  br i1 %26, label %1190, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  %29 = load i16, ptr %28, align 2, !tbaa !14
  %30 = sext i16 %29 to i32
  switch i32 %30, label %1190 [
    i32 3, label %31
    i32 1, label %46
  ]

31:                                               ; preds = %27
  %32 = load ptr, ptr %4, align 8, !tbaa !5
  %33 = call ptr @envlookup(ptr noundef nonnull %25, ptr noundef %32)
  %34 = icmp eq ptr %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.obj, ptr %33, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !9
  br label %1192

38:                                               ; preds = %31
  %39 = load ptr, ptr %3, align 8, !tbaa !5
  %40 = getelementptr inbounds %struct.obj, ptr %39, i64 0, i32 2, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !9
  %42 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %43 = icmp eq ptr %41, %42
  br i1 %43, label %44, label %1192

44:                                               ; preds = %38
  %45 = call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %39)
  br label %1192

46:                                               ; preds = %27
  %47 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !9
  %49 = icmp eq ptr %48, null
  br i1 %49, label %1163, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.obj, ptr %48, i64 0, i32 1
  %52 = load i16, ptr %51, align 2, !tbaa !14
  %53 = sext i16 %52 to i32
  switch i32 %53, label %80 [
    i32 3, label %54
    i32 1, label %71
  ]

54:                                               ; preds = %50
  %55 = load ptr, ptr %4, align 8, !tbaa !5
  %56 = call ptr @envlookup(ptr noundef nonnull %48, ptr noundef %55)
  %57 = icmp eq ptr %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.obj, ptr %56, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !9
  br label %74

61:                                               ; preds = %54
  %62 = load ptr, ptr %3, align 8, !tbaa !5
  %63 = getelementptr inbounds %struct.obj, ptr %62, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !9
  %65 = getelementptr inbounds %struct.obj, ptr %64, i64 0, i32 2, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !9
  %67 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %68 = icmp eq ptr %66, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %61
  %70 = call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %64)
  br label %74

71:                                               ; preds = %50
  %72 = load ptr, ptr %4, align 8, !tbaa !5
  %73 = call ptr @leval(ptr noundef nonnull %48, ptr noundef %72)
  br label %74

74:                                               ; preds = %61, %69, %71, %58
  %75 = phi ptr [ %73, %71 ], [ %60, %58 ], [ %66, %69 ], [ %66, %61 ]
  %76 = icmp eq ptr %75, null
  br i1 %76, label %1163, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.obj, ptr %75, i64 0, i32 1
  %79 = load i16, ptr %78, align 2, !tbaa !14
  br label %80

80:                                               ; preds = %77, %50
  %81 = phi i16 [ %79, %77 ], [ %52, %50 ]
  %82 = phi ptr [ %75, %77 ], [ %48, %50 ]
  %83 = sext i16 %81 to i32
  switch i32 %83, label %1161 [
    i32 4, label %84
    i32 5, label %88
    i32 6, label %109
    i32 21, label %153
    i32 7, label %227
    i32 19, label %296
    i32 20, label %400
    i32 8, label %549
    i32 9, label %558
    i32 10, label %566
    i32 11, label %573
    i32 3, label %1053
  ]

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !9
  %87 = call ptr %86() #33
  br label %1192

88:                                               ; preds = %80
  %89 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !9
  %91 = load ptr, ptr %3, align 8, !tbaa !5
  %92 = getelementptr inbounds %struct.obj, ptr %91, i64 0, i32 2, i32 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !9
  %94 = icmp eq ptr %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.obj, ptr %93, i64 0, i32 1
  %97 = load i16, ptr %96, align 2, !tbaa !14
  %98 = sext i16 %97 to i32
  switch i32 %98, label %102 [
    i32 0, label %104
    i32 1, label %99
  ]

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.obj, ptr %93, i64 0, i32 2
  %101 = load ptr, ptr %100, align 8, !tbaa !9
  br label %104

102:                                              ; preds = %95
  %103 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %93)
  br label %104

104:                                              ; preds = %88, %95, %99, %102
  %105 = phi ptr [ null, %102 ], [ %101, %99 ], [ null, %95 ], [ null, %88 ]
  %106 = load ptr, ptr %4, align 8, !tbaa !5
  %107 = call ptr @leval(ptr noundef %105, ptr noundef %106)
  %108 = call ptr %90(ptr noundef %107) #33
  br label %1192

109:                                              ; preds = %80
  %110 = load ptr, ptr %3, align 8, !tbaa !5
  %111 = getelementptr inbounds %struct.obj, ptr %110, i64 0, i32 2, i32 0, i32 1
  %112 = load ptr, ptr %111, align 8, !tbaa !9
  store ptr %112, ptr %3, align 8, !tbaa !5
  %113 = icmp eq ptr %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %struct.obj, ptr %112, i64 0, i32 1
  %116 = load i16, ptr %115, align 2, !tbaa !14
  %117 = sext i16 %116 to i32
  switch i32 %117, label %121 [
    i32 0, label %123
    i32 1, label %118
  ]

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.obj, ptr %112, i64 0, i32 2
  %120 = load ptr, ptr %119, align 8, !tbaa !9
  br label %123

121:                                              ; preds = %114
  %122 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %112)
  br label %123

123:                                              ; preds = %109, %114, %118, %121
  %124 = phi ptr [ null, %121 ], [ %120, %118 ], [ null, %114 ], [ null, %109 ]
  %125 = load ptr, ptr %4, align 8, !tbaa !5
  %126 = call ptr @leval(ptr noundef %124, ptr noundef %125)
  %127 = load ptr, ptr %3, align 8, !tbaa !5
  %128 = icmp eq ptr %127, null
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  store ptr null, ptr %3, align 8, !tbaa !5
  %130 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !9
  br label %147

132:                                              ; preds = %123
  %133 = getelementptr inbounds %struct.obj, ptr %127, i64 0, i32 2, i32 0, i32 1
  %134 = load ptr, ptr %133, align 8, !tbaa !9
  store ptr %134, ptr %3, align 8, !tbaa !5
  %135 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !9
  %137 = icmp eq ptr %134, null
  br i1 %137, label %147, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.obj, ptr %134, i64 0, i32 1
  %140 = load i16, ptr %139, align 2, !tbaa !14
  %141 = sext i16 %140 to i32
  switch i32 %141, label %145 [
    i32 0, label %147
    i32 1, label %142
  ]

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.obj, ptr %134, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8, !tbaa !9
  br label %147

145:                                              ; preds = %138
  %146 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %134)
  br label %147

147:                                              ; preds = %129, %132, %138, %142, %145
  %148 = phi ptr [ %136, %145 ], [ %136, %142 ], [ %136, %138 ], [ %131, %129 ], [ %136, %132 ]
  %149 = phi ptr [ null, %145 ], [ %144, %142 ], [ null, %138 ], [ null, %129 ], [ null, %132 ]
  %150 = load ptr, ptr %4, align 8, !tbaa !5
  %151 = call ptr @leval(ptr noundef %149, ptr noundef %150)
  %152 = call ptr %148(ptr noundef %126, ptr noundef %151) #33
  br label %1192

153:                                              ; preds = %80
  %154 = load ptr, ptr %3, align 8, !tbaa !5
  %155 = getelementptr inbounds %struct.obj, ptr %154, i64 0, i32 2, i32 0, i32 1
  %156 = load ptr, ptr %155, align 8, !tbaa !9
  store ptr %156, ptr %3, align 8, !tbaa !5
  %157 = icmp eq ptr %156, null
  br i1 %157, label %167, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %struct.obj, ptr %156, i64 0, i32 1
  %160 = load i16, ptr %159, align 2, !tbaa !14
  %161 = sext i16 %160 to i32
  switch i32 %161, label %165 [
    i32 0, label %167
    i32 1, label %162
  ]

162:                                              ; preds = %158
  %163 = getelementptr inbounds %struct.obj, ptr %156, i64 0, i32 2
  %164 = load ptr, ptr %163, align 8, !tbaa !9
  br label %167

165:                                              ; preds = %158
  %166 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %156)
  br label %167

167:                                              ; preds = %153, %158, %162, %165
  %168 = phi ptr [ null, %165 ], [ %164, %162 ], [ null, %158 ], [ null, %153 ]
  %169 = load ptr, ptr %4, align 8, !tbaa !5
  %170 = call ptr @leval(ptr noundef %168, ptr noundef %169)
  %171 = load ptr, ptr %3, align 8, !tbaa !5
  %172 = icmp eq ptr %171, null
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  store ptr null, ptr %3, align 8, !tbaa !5
  %174 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %175 = load ptr, ptr %174, align 8, !tbaa !9
  br label %191

176:                                              ; preds = %167
  %177 = getelementptr inbounds %struct.obj, ptr %171, i64 0, i32 2, i32 0, i32 1
  %178 = load ptr, ptr %177, align 8, !tbaa !9
  store ptr %178, ptr %3, align 8, !tbaa !5
  %179 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %180 = load ptr, ptr %179, align 8, !tbaa !9
  %181 = icmp eq ptr %178, null
  br i1 %181, label %191, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %struct.obj, ptr %178, i64 0, i32 1
  %184 = load i16, ptr %183, align 2, !tbaa !14
  %185 = sext i16 %184 to i32
  switch i32 %185, label %189 [
    i32 0, label %191
    i32 1, label %186
  ]

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.obj, ptr %178, i64 0, i32 2
  %188 = load ptr, ptr %187, align 8, !tbaa !9
  br label %191

189:                                              ; preds = %182
  %190 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %178)
  br label %191

191:                                              ; preds = %173, %176, %182, %186, %189
  %192 = phi ptr [ %179, %189 ], [ %179, %186 ], [ %179, %182 ], [ %174, %173 ], [ %179, %176 ]
  %193 = phi ptr [ %180, %189 ], [ %180, %186 ], [ %180, %182 ], [ %175, %173 ], [ %180, %176 ]
  %194 = phi ptr [ null, %189 ], [ %188, %186 ], [ null, %182 ], [ null, %173 ], [ null, %176 ]
  %195 = load ptr, ptr %4, align 8, !tbaa !5
  %196 = call ptr @leval(ptr noundef %194, ptr noundef %195)
  %197 = call ptr %193(ptr noundef %170, ptr noundef %196) #33
  %198 = load ptr, ptr %3, align 8, !tbaa !5
  %199 = icmp eq ptr %198, null
  br i1 %199, label %1192, label %200

200:                                              ; preds = %191
  %201 = getelementptr inbounds %struct.obj, ptr %198, i64 0, i32 1
  %202 = load i16, ptr %201, align 2, !tbaa !14
  %203 = sext i16 %202 to i32
  switch i32 %203, label %204 [
    i32 0, label %1192
    i32 1, label %206
  ]

204:                                              ; preds = %200
  %205 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %198)
  br label %1192

206:                                              ; preds = %200
  %207 = getelementptr inbounds %struct.obj, ptr %198, i64 0, i32 2, i32 0, i32 1
  %208 = load ptr, ptr %207, align 8, !tbaa !9
  store ptr %208, ptr %3, align 8, !tbaa !5
  %209 = icmp eq ptr %208, null
  br i1 %209, label %1192, label %210

210:                                              ; preds = %206, %216
  %211 = phi ptr [ %222, %216 ], [ %197, %206 ]
  %212 = phi ptr [ %225, %216 ], [ %208, %206 ]
  %213 = getelementptr inbounds %struct.obj, ptr %212, i64 0, i32 1
  %214 = load i16, ptr %213, align 2, !tbaa !14
  %215 = icmp eq i16 %214, 1
  br i1 %215, label %216, label %1192

216:                                              ; preds = %210
  %217 = load ptr, ptr %192, align 8, !tbaa !9
  %218 = getelementptr inbounds %struct.obj, ptr %212, i64 0, i32 2
  %219 = load ptr, ptr %218, align 8, !tbaa !9
  %220 = load ptr, ptr %4, align 8, !tbaa !5
  %221 = call ptr @leval(ptr noundef %219, ptr noundef %220)
  %222 = call ptr %217(ptr noundef %211, ptr noundef %221) #33
  %223 = load ptr, ptr %3, align 8, !tbaa !5
  %224 = getelementptr inbounds %struct.obj, ptr %223, i64 0, i32 2, i32 0, i32 1
  %225 = load ptr, ptr %224, align 8, !tbaa !9
  store ptr %225, ptr %3, align 8, !tbaa !5
  %226 = icmp eq ptr %225, null
  br i1 %226, label %1192, label %210, !llvm.loop !51

227:                                              ; preds = %80
  %228 = load ptr, ptr %3, align 8, !tbaa !5
  %229 = getelementptr inbounds %struct.obj, ptr %228, i64 0, i32 2, i32 0, i32 1
  %230 = load ptr, ptr %229, align 8, !tbaa !9
  store ptr %230, ptr %3, align 8, !tbaa !5
  %231 = icmp eq ptr %230, null
  br i1 %231, label %241, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %struct.obj, ptr %230, i64 0, i32 1
  %234 = load i16, ptr %233, align 2, !tbaa !14
  %235 = sext i16 %234 to i32
  switch i32 %235, label %239 [
    i32 0, label %241
    i32 1, label %236
  ]

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.obj, ptr %230, i64 0, i32 2
  %238 = load ptr, ptr %237, align 8, !tbaa !9
  br label %241

239:                                              ; preds = %232
  %240 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %230)
  br label %241

241:                                              ; preds = %227, %232, %236, %239
  %242 = phi ptr [ null, %239 ], [ %238, %236 ], [ null, %232 ], [ null, %227 ]
  %243 = load ptr, ptr %4, align 8, !tbaa !5
  %244 = call ptr @leval(ptr noundef %242, ptr noundef %243)
  %245 = load ptr, ptr %3, align 8, !tbaa !5
  %246 = icmp eq ptr %245, null
  br i1 %246, label %247, label %250

247:                                              ; preds = %241
  store ptr null, ptr %3, align 8, !tbaa !5
  %248 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %249 = load ptr, ptr %248, align 8, !tbaa !9
  br label %265

250:                                              ; preds = %241
  %251 = getelementptr inbounds %struct.obj, ptr %245, i64 0, i32 2, i32 0, i32 1
  %252 = load ptr, ptr %251, align 8, !tbaa !9
  store ptr %252, ptr %3, align 8, !tbaa !5
  %253 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %254 = load ptr, ptr %253, align 8, !tbaa !9
  %255 = icmp eq ptr %252, null
  br i1 %255, label %265, label %256

256:                                              ; preds = %250
  %257 = getelementptr inbounds %struct.obj, ptr %252, i64 0, i32 1
  %258 = load i16, ptr %257, align 2, !tbaa !14
  %259 = sext i16 %258 to i32
  switch i32 %259, label %263 [
    i32 0, label %265
    i32 1, label %260
  ]

260:                                              ; preds = %256
  %261 = getelementptr inbounds %struct.obj, ptr %252, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !9
  br label %265

263:                                              ; preds = %256
  %264 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %252)
  br label %265

265:                                              ; preds = %247, %250, %256, %260, %263
  %266 = phi ptr [ %254, %263 ], [ %254, %260 ], [ %254, %256 ], [ %249, %247 ], [ %254, %250 ]
  %267 = phi ptr [ null, %263 ], [ %262, %260 ], [ null, %256 ], [ null, %247 ], [ null, %250 ]
  %268 = load ptr, ptr %4, align 8, !tbaa !5
  %269 = call ptr @leval(ptr noundef %267, ptr noundef %268)
  %270 = load ptr, ptr %3, align 8, !tbaa !5
  %271 = icmp eq ptr %270, null
  br i1 %271, label %291, label %272

272:                                              ; preds = %265
  %273 = getelementptr inbounds %struct.obj, ptr %270, i64 0, i32 1
  %274 = load i16, ptr %273, align 2, !tbaa !14
  %275 = sext i16 %274 to i32
  switch i32 %275, label %276 [
    i32 0, label %291
    i32 1, label %278
  ]

276:                                              ; preds = %272
  %277 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %270)
  br label %291

278:                                              ; preds = %272
  %279 = getelementptr inbounds %struct.obj, ptr %270, i64 0, i32 2, i32 0, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !9
  %281 = icmp eq ptr %280, null
  br i1 %281, label %291, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %struct.obj, ptr %280, i64 0, i32 1
  %284 = load i16, ptr %283, align 2, !tbaa !14
  %285 = sext i16 %284 to i32
  switch i32 %285, label %289 [
    i32 0, label %291
    i32 1, label %286
  ]

286:                                              ; preds = %282
  %287 = getelementptr inbounds %struct.obj, ptr %280, i64 0, i32 2
  %288 = load ptr, ptr %287, align 8, !tbaa !9
  br label %291

289:                                              ; preds = %282
  %290 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %280)
  br label %291

291:                                              ; preds = %265, %272, %276, %278, %282, %286, %289
  %292 = phi ptr [ null, %289 ], [ %288, %286 ], [ null, %282 ], [ null, %278 ], [ null, %276 ], [ null, %272 ], [ null, %265 ]
  %293 = load ptr, ptr %4, align 8, !tbaa !5
  %294 = call ptr @leval(ptr noundef %292, ptr noundef %293)
  %295 = call ptr %266(ptr noundef %244, ptr noundef %269, ptr noundef %294) #33
  br label %1192

296:                                              ; preds = %80
  %297 = load ptr, ptr %3, align 8, !tbaa !5
  %298 = getelementptr inbounds %struct.obj, ptr %297, i64 0, i32 2, i32 0, i32 1
  %299 = load ptr, ptr %298, align 8, !tbaa !9
  store ptr %299, ptr %3, align 8, !tbaa !5
  %300 = icmp eq ptr %299, null
  br i1 %300, label %310, label %301

301:                                              ; preds = %296
  %302 = getelementptr inbounds %struct.obj, ptr %299, i64 0, i32 1
  %303 = load i16, ptr %302, align 2, !tbaa !14
  %304 = sext i16 %303 to i32
  switch i32 %304, label %308 [
    i32 0, label %310
    i32 1, label %305
  ]

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct.obj, ptr %299, i64 0, i32 2
  %307 = load ptr, ptr %306, align 8, !tbaa !9
  br label %310

308:                                              ; preds = %301
  %309 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %299)
  br label %310

310:                                              ; preds = %296, %301, %305, %308
  %311 = phi ptr [ null, %308 ], [ %307, %305 ], [ null, %301 ], [ null, %296 ]
  %312 = load ptr, ptr %4, align 8, !tbaa !5
  %313 = call ptr @leval(ptr noundef %311, ptr noundef %312)
  %314 = load ptr, ptr %3, align 8, !tbaa !5
  %315 = icmp eq ptr %314, null
  br i1 %315, label %316, label %319

316:                                              ; preds = %310
  store ptr null, ptr %3, align 8, !tbaa !5
  %317 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %318 = load ptr, ptr %317, align 8, !tbaa !9
  br label %334

319:                                              ; preds = %310
  %320 = getelementptr inbounds %struct.obj, ptr %314, i64 0, i32 2, i32 0, i32 1
  %321 = load ptr, ptr %320, align 8, !tbaa !9
  store ptr %321, ptr %3, align 8, !tbaa !5
  %322 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %323 = load ptr, ptr %322, align 8, !tbaa !9
  %324 = icmp eq ptr %321, null
  br i1 %324, label %334, label %325

325:                                              ; preds = %319
  %326 = getelementptr inbounds %struct.obj, ptr %321, i64 0, i32 1
  %327 = load i16, ptr %326, align 2, !tbaa !14
  %328 = sext i16 %327 to i32
  switch i32 %328, label %332 [
    i32 0, label %334
    i32 1, label %329
  ]

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct.obj, ptr %321, i64 0, i32 2
  %331 = load ptr, ptr %330, align 8, !tbaa !9
  br label %334

332:                                              ; preds = %325
  %333 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %321)
  br label %334

334:                                              ; preds = %316, %319, %325, %329, %332
  %335 = phi ptr [ %323, %332 ], [ %323, %329 ], [ %323, %325 ], [ %318, %316 ], [ %323, %319 ]
  %336 = phi ptr [ null, %332 ], [ %331, %329 ], [ null, %325 ], [ null, %316 ], [ null, %319 ]
  %337 = load ptr, ptr %4, align 8, !tbaa !5
  %338 = call ptr @leval(ptr noundef %336, ptr noundef %337)
  %339 = load ptr, ptr %3, align 8, !tbaa !5
  %340 = icmp eq ptr %339, null
  br i1 %340, label %360, label %341

341:                                              ; preds = %334
  %342 = getelementptr inbounds %struct.obj, ptr %339, i64 0, i32 1
  %343 = load i16, ptr %342, align 2, !tbaa !14
  %344 = sext i16 %343 to i32
  switch i32 %344, label %345 [
    i32 0, label %360
    i32 1, label %347
  ]

345:                                              ; preds = %341
  %346 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %339)
  br label %360

347:                                              ; preds = %341
  %348 = getelementptr inbounds %struct.obj, ptr %339, i64 0, i32 2, i32 0, i32 1
  %349 = load ptr, ptr %348, align 8, !tbaa !9
  %350 = icmp eq ptr %349, null
  br i1 %350, label %360, label %351

351:                                              ; preds = %347
  %352 = getelementptr inbounds %struct.obj, ptr %349, i64 0, i32 1
  %353 = load i16, ptr %352, align 2, !tbaa !14
  %354 = sext i16 %353 to i32
  switch i32 %354, label %358 [
    i32 0, label %360
    i32 1, label %355
  ]

355:                                              ; preds = %351
  %356 = getelementptr inbounds %struct.obj, ptr %349, i64 0, i32 2
  %357 = load ptr, ptr %356, align 8, !tbaa !9
  br label %360

358:                                              ; preds = %351
  %359 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %349)
  br label %360

360:                                              ; preds = %334, %341, %345, %347, %351, %355, %358
  %361 = phi ptr [ null, %358 ], [ %357, %355 ], [ null, %351 ], [ null, %347 ], [ null, %345 ], [ null, %341 ], [ null, %334 ]
  %362 = load ptr, ptr %4, align 8, !tbaa !5
  %363 = call ptr @leval(ptr noundef %361, ptr noundef %362)
  %364 = load ptr, ptr %3, align 8, !tbaa !5
  %365 = icmp eq ptr %364, null
  br i1 %365, label %395, label %366

366:                                              ; preds = %360
  %367 = getelementptr inbounds %struct.obj, ptr %364, i64 0, i32 1
  %368 = load i16, ptr %367, align 2, !tbaa !14
  %369 = sext i16 %368 to i32
  switch i32 %369, label %370 [
    i32 0, label %395
    i32 1, label %372
  ]

370:                                              ; preds = %366
  %371 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %364)
  br label %395

372:                                              ; preds = %366
  %373 = getelementptr inbounds %struct.obj, ptr %364, i64 0, i32 2, i32 0, i32 1
  %374 = load ptr, ptr %373, align 8, !tbaa !9
  %375 = icmp eq ptr %374, null
  br i1 %375, label %395, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %struct.obj, ptr %374, i64 0, i32 1
  %378 = load i16, ptr %377, align 2, !tbaa !14
  %379 = sext i16 %378 to i32
  switch i32 %379, label %380 [
    i32 0, label %395
    i32 1, label %382
  ]

380:                                              ; preds = %376
  %381 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %374)
  br label %395

382:                                              ; preds = %376
  %383 = getelementptr inbounds %struct.obj, ptr %374, i64 0, i32 2, i32 0, i32 1
  %384 = load ptr, ptr %383, align 8, !tbaa !9
  %385 = icmp eq ptr %384, null
  br i1 %385, label %395, label %386

386:                                              ; preds = %382
  %387 = getelementptr inbounds %struct.obj, ptr %384, i64 0, i32 1
  %388 = load i16, ptr %387, align 2, !tbaa !14
  %389 = sext i16 %388 to i32
  switch i32 %389, label %393 [
    i32 0, label %395
    i32 1, label %390
  ]

390:                                              ; preds = %386
  %391 = getelementptr inbounds %struct.obj, ptr %384, i64 0, i32 2
  %392 = load ptr, ptr %391, align 8, !tbaa !9
  br label %395

393:                                              ; preds = %386
  %394 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %384)
  br label %395

395:                                              ; preds = %360, %366, %370, %372, %376, %380, %382, %386, %390, %393
  %396 = phi ptr [ null, %393 ], [ %392, %390 ], [ null, %386 ], [ null, %382 ], [ null, %380 ], [ null, %376 ], [ null, %372 ], [ null, %370 ], [ null, %366 ], [ null, %360 ]
  %397 = load ptr, ptr %4, align 8, !tbaa !5
  %398 = call ptr @leval(ptr noundef %396, ptr noundef %397)
  %399 = call ptr %335(ptr noundef %313, ptr noundef %338, ptr noundef %363, ptr noundef %398) #33
  br label %1192

400:                                              ; preds = %80
  %401 = load ptr, ptr %3, align 8, !tbaa !5
  %402 = getelementptr inbounds %struct.obj, ptr %401, i64 0, i32 2, i32 0, i32 1
  %403 = load ptr, ptr %402, align 8, !tbaa !9
  store ptr %403, ptr %3, align 8, !tbaa !5
  %404 = icmp eq ptr %403, null
  br i1 %404, label %414, label %405

405:                                              ; preds = %400
  %406 = getelementptr inbounds %struct.obj, ptr %403, i64 0, i32 1
  %407 = load i16, ptr %406, align 2, !tbaa !14
  %408 = sext i16 %407 to i32
  switch i32 %408, label %412 [
    i32 0, label %414
    i32 1, label %409
  ]

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.obj, ptr %403, i64 0, i32 2
  %411 = load ptr, ptr %410, align 8, !tbaa !9
  br label %414

412:                                              ; preds = %405
  %413 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %403)
  br label %414

414:                                              ; preds = %400, %405, %409, %412
  %415 = phi ptr [ null, %412 ], [ %411, %409 ], [ null, %405 ], [ null, %400 ]
  %416 = load ptr, ptr %4, align 8, !tbaa !5
  %417 = call ptr @leval(ptr noundef %415, ptr noundef %416)
  %418 = load ptr, ptr %3, align 8, !tbaa !5
  %419 = icmp eq ptr %418, null
  br i1 %419, label %420, label %423

420:                                              ; preds = %414
  store ptr null, ptr %3, align 8, !tbaa !5
  %421 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %422 = load ptr, ptr %421, align 8, !tbaa !9
  br label %438

423:                                              ; preds = %414
  %424 = getelementptr inbounds %struct.obj, ptr %418, i64 0, i32 2, i32 0, i32 1
  %425 = load ptr, ptr %424, align 8, !tbaa !9
  store ptr %425, ptr %3, align 8, !tbaa !5
  %426 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %427 = load ptr, ptr %426, align 8, !tbaa !9
  %428 = icmp eq ptr %425, null
  br i1 %428, label %438, label %429

429:                                              ; preds = %423
  %430 = getelementptr inbounds %struct.obj, ptr %425, i64 0, i32 1
  %431 = load i16, ptr %430, align 2, !tbaa !14
  %432 = sext i16 %431 to i32
  switch i32 %432, label %436 [
    i32 0, label %438
    i32 1, label %433
  ]

433:                                              ; preds = %429
  %434 = getelementptr inbounds %struct.obj, ptr %425, i64 0, i32 2
  %435 = load ptr, ptr %434, align 8, !tbaa !9
  br label %438

436:                                              ; preds = %429
  %437 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %425)
  br label %438

438:                                              ; preds = %420, %423, %429, %433, %436
  %439 = phi ptr [ %427, %436 ], [ %427, %433 ], [ %427, %429 ], [ %422, %420 ], [ %427, %423 ]
  %440 = phi ptr [ null, %436 ], [ %435, %433 ], [ null, %429 ], [ null, %420 ], [ null, %423 ]
  %441 = load ptr, ptr %4, align 8, !tbaa !5
  %442 = call ptr @leval(ptr noundef %440, ptr noundef %441)
  %443 = load ptr, ptr %3, align 8, !tbaa !5
  %444 = icmp eq ptr %443, null
  br i1 %444, label %464, label %445

445:                                              ; preds = %438
  %446 = getelementptr inbounds %struct.obj, ptr %443, i64 0, i32 1
  %447 = load i16, ptr %446, align 2, !tbaa !14
  %448 = sext i16 %447 to i32
  switch i32 %448, label %449 [
    i32 0, label %464
    i32 1, label %451
  ]

449:                                              ; preds = %445
  %450 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %443)
  br label %464

451:                                              ; preds = %445
  %452 = getelementptr inbounds %struct.obj, ptr %443, i64 0, i32 2, i32 0, i32 1
  %453 = load ptr, ptr %452, align 8, !tbaa !9
  %454 = icmp eq ptr %453, null
  br i1 %454, label %464, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %struct.obj, ptr %453, i64 0, i32 1
  %457 = load i16, ptr %456, align 2, !tbaa !14
  %458 = sext i16 %457 to i32
  switch i32 %458, label %462 [
    i32 0, label %464
    i32 1, label %459
  ]

459:                                              ; preds = %455
  %460 = getelementptr inbounds %struct.obj, ptr %453, i64 0, i32 2
  %461 = load ptr, ptr %460, align 8, !tbaa !9
  br label %464

462:                                              ; preds = %455
  %463 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %453)
  br label %464

464:                                              ; preds = %438, %445, %449, %451, %455, %459, %462
  %465 = phi ptr [ null, %462 ], [ %461, %459 ], [ null, %455 ], [ null, %451 ], [ null, %449 ], [ null, %445 ], [ null, %438 ]
  %466 = load ptr, ptr %4, align 8, !tbaa !5
  %467 = call ptr @leval(ptr noundef %465, ptr noundef %466)
  %468 = load ptr, ptr %3, align 8, !tbaa !5
  %469 = icmp eq ptr %468, null
  br i1 %469, label %499, label %470

470:                                              ; preds = %464
  %471 = getelementptr inbounds %struct.obj, ptr %468, i64 0, i32 1
  %472 = load i16, ptr %471, align 2, !tbaa !14
  %473 = sext i16 %472 to i32
  switch i32 %473, label %474 [
    i32 0, label %499
    i32 1, label %476
  ]

474:                                              ; preds = %470
  %475 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %468)
  br label %499

476:                                              ; preds = %470
  %477 = getelementptr inbounds %struct.obj, ptr %468, i64 0, i32 2, i32 0, i32 1
  %478 = load ptr, ptr %477, align 8, !tbaa !9
  %479 = icmp eq ptr %478, null
  br i1 %479, label %499, label %480

480:                                              ; preds = %476
  %481 = getelementptr inbounds %struct.obj, ptr %478, i64 0, i32 1
  %482 = load i16, ptr %481, align 2, !tbaa !14
  %483 = sext i16 %482 to i32
  switch i32 %483, label %484 [
    i32 0, label %499
    i32 1, label %486
  ]

484:                                              ; preds = %480
  %485 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %478)
  br label %499

486:                                              ; preds = %480
  %487 = getelementptr inbounds %struct.obj, ptr %478, i64 0, i32 2, i32 0, i32 1
  %488 = load ptr, ptr %487, align 8, !tbaa !9
  %489 = icmp eq ptr %488, null
  br i1 %489, label %499, label %490

490:                                              ; preds = %486
  %491 = getelementptr inbounds %struct.obj, ptr %488, i64 0, i32 1
  %492 = load i16, ptr %491, align 2, !tbaa !14
  %493 = sext i16 %492 to i32
  switch i32 %493, label %497 [
    i32 0, label %499
    i32 1, label %494
  ]

494:                                              ; preds = %490
  %495 = getelementptr inbounds %struct.obj, ptr %488, i64 0, i32 2
  %496 = load ptr, ptr %495, align 8, !tbaa !9
  br label %499

497:                                              ; preds = %490
  %498 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %488)
  br label %499

499:                                              ; preds = %464, %470, %474, %476, %480, %484, %486, %490, %494, %497
  %500 = phi ptr [ null, %497 ], [ %496, %494 ], [ null, %490 ], [ null, %486 ], [ null, %484 ], [ null, %480 ], [ null, %476 ], [ null, %474 ], [ null, %470 ], [ null, %464 ]
  %501 = load ptr, ptr %4, align 8, !tbaa !5
  %502 = call ptr @leval(ptr noundef %500, ptr noundef %501)
  %503 = load ptr, ptr %3, align 8, !tbaa !5
  %504 = icmp eq ptr %503, null
  br i1 %504, label %544, label %505

505:                                              ; preds = %499
  %506 = getelementptr inbounds %struct.obj, ptr %503, i64 0, i32 1
  %507 = load i16, ptr %506, align 2, !tbaa !14
  %508 = sext i16 %507 to i32
  switch i32 %508, label %509 [
    i32 0, label %544
    i32 1, label %511
  ]

509:                                              ; preds = %505
  %510 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %503)
  br label %544

511:                                              ; preds = %505
  %512 = getelementptr inbounds %struct.obj, ptr %503, i64 0, i32 2, i32 0, i32 1
  %513 = load ptr, ptr %512, align 8, !tbaa !9
  %514 = icmp eq ptr %513, null
  br i1 %514, label %544, label %515

515:                                              ; preds = %511
  %516 = getelementptr inbounds %struct.obj, ptr %513, i64 0, i32 1
  %517 = load i16, ptr %516, align 2, !tbaa !14
  %518 = sext i16 %517 to i32
  switch i32 %518, label %519 [
    i32 0, label %544
    i32 1, label %521
  ]

519:                                              ; preds = %515
  %520 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %513)
  br label %544

521:                                              ; preds = %515
  %522 = getelementptr inbounds %struct.obj, ptr %513, i64 0, i32 2, i32 0, i32 1
  %523 = load ptr, ptr %522, align 8, !tbaa !9
  %524 = icmp eq ptr %523, null
  br i1 %524, label %544, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.obj, ptr %523, i64 0, i32 1
  %527 = load i16, ptr %526, align 2, !tbaa !14
  %528 = sext i16 %527 to i32
  switch i32 %528, label %529 [
    i32 0, label %544
    i32 1, label %531
  ]

529:                                              ; preds = %525
  %530 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %523)
  br label %544

531:                                              ; preds = %525
  %532 = getelementptr inbounds %struct.obj, ptr %523, i64 0, i32 2, i32 0, i32 1
  %533 = load ptr, ptr %532, align 8, !tbaa !9
  %534 = icmp eq ptr %533, null
  br i1 %534, label %544, label %535

535:                                              ; preds = %531
  %536 = getelementptr inbounds %struct.obj, ptr %533, i64 0, i32 1
  %537 = load i16, ptr %536, align 2, !tbaa !14
  %538 = sext i16 %537 to i32
  switch i32 %538, label %542 [
    i32 0, label %544
    i32 1, label %539
  ]

539:                                              ; preds = %535
  %540 = getelementptr inbounds %struct.obj, ptr %533, i64 0, i32 2
  %541 = load ptr, ptr %540, align 8, !tbaa !9
  br label %544

542:                                              ; preds = %535
  %543 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %533)
  br label %544

544:                                              ; preds = %499, %505, %509, %511, %515, %519, %521, %525, %529, %531, %535, %539, %542
  %545 = phi ptr [ null, %542 ], [ %541, %539 ], [ null, %535 ], [ null, %531 ], [ null, %529 ], [ null, %525 ], [ null, %521 ], [ null, %519 ], [ null, %515 ], [ null, %511 ], [ null, %509 ], [ null, %505 ], [ null, %499 ]
  %546 = load ptr, ptr %4, align 8, !tbaa !5
  %547 = call ptr @leval(ptr noundef %545, ptr noundef %546)
  %548 = call ptr %439(ptr noundef %417, ptr noundef %442, ptr noundef %467, ptr noundef %502, ptr noundef %547) #33
  br label %1192

549:                                              ; preds = %80
  %550 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %551 = load ptr, ptr %550, align 8, !tbaa !9
  %552 = load ptr, ptr %3, align 8, !tbaa !5
  %553 = getelementptr inbounds %struct.obj, ptr %552, i64 0, i32 2, i32 0, i32 1
  %554 = load ptr, ptr %553, align 8, !tbaa !9
  %555 = load ptr, ptr %4, align 8, !tbaa !5
  %556 = call ptr @leval_args(ptr noundef %554, ptr noundef %555)
  %557 = call ptr %551(ptr noundef %556) #33
  br label %1192

558:                                              ; preds = %80
  %559 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %560 = load ptr, ptr %559, align 8, !tbaa !9
  %561 = load ptr, ptr %3, align 8, !tbaa !5
  %562 = getelementptr inbounds %struct.obj, ptr %561, i64 0, i32 2, i32 0, i32 1
  %563 = load ptr, ptr %562, align 8, !tbaa !9
  %564 = load ptr, ptr %4, align 8, !tbaa !5
  %565 = call ptr %560(ptr noundef %563, ptr noundef %564) #33
  br label %1192

566:                                              ; preds = %80
  %567 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %568 = load ptr, ptr %567, align 8, !tbaa !9
  %569 = call ptr %568(ptr noundef nonnull %3, ptr noundef nonnull %4) #33
  %570 = icmp eq ptr %569, null
  br i1 %570, label %571, label %754

571:                                              ; preds = %566
  %572 = load ptr, ptr %3, align 8, !tbaa !5
  br label %1192

573:                                              ; preds = %80
  %574 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2
  %575 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %576 = load ptr, ptr %575, align 8, !tbaa !9
  %577 = icmp eq ptr %576, null
  br i1 %577, label %1051, label %578

578:                                              ; preds = %573
  %579 = getelementptr inbounds %struct.obj, ptr %576, i64 0, i32 1
  %580 = load i16, ptr %579, align 2, !tbaa !14
  %581 = sext i16 %580 to i32
  switch i32 %581, label %1051 [
    i32 1, label %582
    i32 5, label %755
    i32 6, label %760
    i32 7, label %783
    i32 19, label %832
    i32 20, label %906
    i32 8, label %1015
  ]

582:                                              ; preds = %578
  %583 = load ptr, ptr %3, align 8, !tbaa !5
  %584 = getelementptr inbounds %struct.obj, ptr %583, i64 0, i32 2, i32 0, i32 1
  %585 = load ptr, ptr %584, align 8, !tbaa !9
  %586 = load ptr, ptr %4, align 8, !tbaa !5
  %587 = call ptr @leval_args(ptr noundef %585, ptr noundef %586)
  %588 = load ptr, ptr %575, align 8, !tbaa !9
  %589 = getelementptr inbounds %struct.obj, ptr %588, i64 0, i32 2
  %590 = load ptr, ptr %589, align 8, !tbaa !9
  %591 = load ptr, ptr %574, align 8, !tbaa !9
  %592 = icmp eq ptr %590, null
  br i1 %592, label %697, label %593

593:                                              ; preds = %582
  %594 = getelementptr inbounds %struct.obj, ptr %590, i64 0, i32 1
  %595 = load i16, ptr %594, align 2, !tbaa !14
  %596 = icmp eq i16 %595, 3
  br i1 %596, label %597, label %697

597:                                              ; preds = %593
  %598 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %599 = icmp eq i64 %598, 1
  br i1 %599, label %600, label %608

600:                                              ; preds = %597
  %601 = load ptr, ptr @heap, align 8, !tbaa !5
  %602 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %603 = icmp ult ptr %601, %602
  br i1 %603, label %606, label %604

604:                                              ; preds = %600
  %605 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %606

606:                                              ; preds = %604, %600
  %607 = getelementptr inbounds %struct.obj, ptr %601, i64 1
  store ptr %607, ptr @heap, align 8, !tbaa !5
  br label %619

608:                                              ; preds = %597
  %609 = load ptr, ptr @freelist, align 8, !tbaa !5
  %610 = icmp eq ptr %609, null
  br i1 %610, label %611, label %613

611:                                              ; preds = %608
  call void @gc_for_newcell()
  %612 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %613

613:                                              ; preds = %611, %608
  %614 = phi ptr [ %612, %611 ], [ %609, %608 ]
  %615 = getelementptr inbounds %struct.obj, ptr %614, i64 0, i32 2, i32 0, i32 1
  %616 = load ptr, ptr %615, align 8, !tbaa !9
  store ptr %616, ptr @freelist, align 8, !tbaa !5
  %617 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %618 = add nsw i64 %617, 1
  store i64 %618, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %619

619:                                              ; preds = %606, %613
  %620 = phi ptr [ %601, %606 ], [ %614, %613 ]
  store i16 0, ptr %620, align 8, !tbaa !35
  %621 = getelementptr inbounds %struct.obj, ptr %620, i64 0, i32 1
  store i16 1, ptr %621, align 2, !tbaa !14
  %622 = getelementptr inbounds %struct.obj, ptr %620, i64 0, i32 2
  store ptr %590, ptr %622, align 8, !tbaa !9
  %623 = getelementptr inbounds %struct.obj, ptr %620, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %623, align 8, !tbaa !9
  %624 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %625 = icmp eq i64 %624, 1
  br i1 %625, label %626, label %634

626:                                              ; preds = %619
  %627 = load ptr, ptr @heap, align 8, !tbaa !5
  %628 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %629 = icmp ult ptr %627, %628
  br i1 %629, label %632, label %630

630:                                              ; preds = %626
  %631 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %632

632:                                              ; preds = %630, %626
  %633 = getelementptr inbounds %struct.obj, ptr %627, i64 1
  store ptr %633, ptr @heap, align 8, !tbaa !5
  br label %645

634:                                              ; preds = %619
  %635 = load ptr, ptr @freelist, align 8, !tbaa !5
  %636 = icmp eq ptr %635, null
  br i1 %636, label %637, label %639

637:                                              ; preds = %634
  call void @gc_for_newcell()
  %638 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %639

639:                                              ; preds = %637, %634
  %640 = phi ptr [ %638, %637 ], [ %635, %634 ]
  %641 = getelementptr inbounds %struct.obj, ptr %640, i64 0, i32 2, i32 0, i32 1
  %642 = load ptr, ptr %641, align 8, !tbaa !9
  store ptr %642, ptr @freelist, align 8, !tbaa !5
  %643 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %644 = add nsw i64 %643, 1
  store i64 %644, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %645

645:                                              ; preds = %632, %639
  %646 = phi ptr [ %627, %632 ], [ %640, %639 ]
  store i16 0, ptr %646, align 8, !tbaa !35
  %647 = getelementptr inbounds %struct.obj, ptr %646, i64 0, i32 1
  store i16 1, ptr %647, align 2, !tbaa !14
  %648 = getelementptr inbounds %struct.obj, ptr %646, i64 0, i32 2
  store ptr %587, ptr %648, align 8, !tbaa !9
  %649 = getelementptr inbounds %struct.obj, ptr %646, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %649, align 8, !tbaa !9
  %650 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %651 = icmp eq i64 %650, 1
  br i1 %651, label %652, label %660

652:                                              ; preds = %645
  %653 = load ptr, ptr @heap, align 8, !tbaa !5
  %654 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %655 = icmp ult ptr %653, %654
  br i1 %655, label %658, label %656

656:                                              ; preds = %652
  %657 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %658

658:                                              ; preds = %656, %652
  %659 = getelementptr inbounds %struct.obj, ptr %653, i64 1
  store ptr %659, ptr @heap, align 8, !tbaa !5
  br label %671

660:                                              ; preds = %645
  %661 = load ptr, ptr @freelist, align 8, !tbaa !5
  %662 = icmp eq ptr %661, null
  br i1 %662, label %663, label %665

663:                                              ; preds = %660
  call void @gc_for_newcell()
  %664 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %665

665:                                              ; preds = %663, %660
  %666 = phi ptr [ %664, %663 ], [ %661, %660 ]
  %667 = getelementptr inbounds %struct.obj, ptr %666, i64 0, i32 2, i32 0, i32 1
  %668 = load ptr, ptr %667, align 8, !tbaa !9
  store ptr %668, ptr @freelist, align 8, !tbaa !5
  %669 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %670 = add nsw i64 %669, 1
  store i64 %670, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %671

671:                                              ; preds = %658, %665
  %672 = phi ptr [ %653, %658 ], [ %666, %665 ]
  store i16 0, ptr %672, align 8, !tbaa !35
  %673 = getelementptr inbounds %struct.obj, ptr %672, i64 0, i32 1
  store i16 1, ptr %673, align 2, !tbaa !14
  %674 = getelementptr inbounds %struct.obj, ptr %672, i64 0, i32 2
  store ptr %620, ptr %674, align 8, !tbaa !9
  %675 = getelementptr inbounds %struct.obj, ptr %672, i64 0, i32 2, i32 0, i32 1
  store ptr %646, ptr %675, align 8, !tbaa !9
  %676 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %677 = icmp eq i64 %676, 1
  br i1 %677, label %678, label %686

678:                                              ; preds = %671
  %679 = load ptr, ptr @heap, align 8, !tbaa !5
  %680 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %681 = icmp ult ptr %679, %680
  br i1 %681, label %684, label %682

682:                                              ; preds = %678
  %683 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %684

684:                                              ; preds = %682, %678
  %685 = getelementptr inbounds %struct.obj, ptr %679, i64 1
  store ptr %685, ptr @heap, align 8, !tbaa !5
  br label %745

686:                                              ; preds = %671
  %687 = load ptr, ptr @freelist, align 8, !tbaa !5
  %688 = icmp eq ptr %687, null
  br i1 %688, label %689, label %691

689:                                              ; preds = %686
  call void @gc_for_newcell()
  %690 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %691

691:                                              ; preds = %689, %686
  %692 = phi ptr [ %690, %689 ], [ %687, %686 ]
  %693 = getelementptr inbounds %struct.obj, ptr %692, i64 0, i32 2, i32 0, i32 1
  %694 = load ptr, ptr %693, align 8, !tbaa !9
  store ptr %694, ptr @freelist, align 8, !tbaa !5
  %695 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %696 = add nsw i64 %695, 1
  store i64 %696, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %745

697:                                              ; preds = %582, %593
  %698 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %699 = icmp eq i64 %698, 1
  br i1 %699, label %700, label %708

700:                                              ; preds = %697
  %701 = load ptr, ptr @heap, align 8, !tbaa !5
  %702 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %703 = icmp ult ptr %701, %702
  br i1 %703, label %706, label %704

704:                                              ; preds = %700
  %705 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %706

706:                                              ; preds = %704, %700
  %707 = getelementptr inbounds %struct.obj, ptr %701, i64 1
  store ptr %707, ptr @heap, align 8, !tbaa !5
  br label %719

708:                                              ; preds = %697
  %709 = load ptr, ptr @freelist, align 8, !tbaa !5
  %710 = icmp eq ptr %709, null
  br i1 %710, label %711, label %713

711:                                              ; preds = %708
  call void @gc_for_newcell()
  %712 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %713

713:                                              ; preds = %711, %708
  %714 = phi ptr [ %712, %711 ], [ %709, %708 ]
  %715 = getelementptr inbounds %struct.obj, ptr %714, i64 0, i32 2, i32 0, i32 1
  %716 = load ptr, ptr %715, align 8, !tbaa !9
  store ptr %716, ptr @freelist, align 8, !tbaa !5
  %717 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %718 = add nsw i64 %717, 1
  store i64 %718, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %719

719:                                              ; preds = %706, %713
  %720 = phi ptr [ %701, %706 ], [ %714, %713 ]
  store i16 0, ptr %720, align 8, !tbaa !35
  %721 = getelementptr inbounds %struct.obj, ptr %720, i64 0, i32 1
  store i16 1, ptr %721, align 2, !tbaa !14
  %722 = getelementptr inbounds %struct.obj, ptr %720, i64 0, i32 2
  store ptr %590, ptr %722, align 8, !tbaa !9
  %723 = getelementptr inbounds %struct.obj, ptr %720, i64 0, i32 2, i32 0, i32 1
  store ptr %587, ptr %723, align 8, !tbaa !9
  %724 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %725 = icmp eq i64 %724, 1
  br i1 %725, label %726, label %734

726:                                              ; preds = %719
  %727 = load ptr, ptr @heap, align 8, !tbaa !5
  %728 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %729 = icmp ult ptr %727, %728
  br i1 %729, label %732, label %730

730:                                              ; preds = %726
  %731 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %732

732:                                              ; preds = %730, %726
  %733 = getelementptr inbounds %struct.obj, ptr %727, i64 1
  store ptr %733, ptr @heap, align 8, !tbaa !5
  br label %745

734:                                              ; preds = %719
  %735 = load ptr, ptr @freelist, align 8, !tbaa !5
  %736 = icmp eq ptr %735, null
  br i1 %736, label %737, label %739

737:                                              ; preds = %734
  call void @gc_for_newcell()
  %738 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %739

739:                                              ; preds = %737, %734
  %740 = phi ptr [ %738, %737 ], [ %735, %734 ]
  %741 = getelementptr inbounds %struct.obj, ptr %740, i64 0, i32 2, i32 0, i32 1
  %742 = load ptr, ptr %741, align 8, !tbaa !9
  store ptr %742, ptr @freelist, align 8, !tbaa !5
  %743 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %744 = add nsw i64 %743, 1
  store i64 %744, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %745

745:                                              ; preds = %739, %732, %691, %684
  %746 = phi ptr [ %679, %684 ], [ %692, %691 ], [ %727, %732 ], [ %740, %739 ]
  %747 = phi ptr [ %672, %684 ], [ %672, %691 ], [ %720, %732 ], [ %720, %739 ]
  store i16 0, ptr %746, align 8, !tbaa !35
  %748 = getelementptr inbounds %struct.obj, ptr %746, i64 0, i32 1
  store i16 1, ptr %748, align 2, !tbaa !14
  %749 = getelementptr inbounds %struct.obj, ptr %746, i64 0, i32 2
  store ptr %747, ptr %749, align 8, !tbaa !9
  %750 = getelementptr inbounds %struct.obj, ptr %746, i64 0, i32 2, i32 0, i32 1
  store ptr %591, ptr %750, align 8, !tbaa !9
  store ptr %746, ptr %4, align 8, !tbaa !5
  %751 = load ptr, ptr %575, align 8, !tbaa !9
  %752 = getelementptr inbounds %struct.obj, ptr %751, i64 0, i32 2, i32 0, i32 1
  %753 = load ptr, ptr %752, align 8, !tbaa !9
  store ptr %753, ptr %3, align 8, !tbaa !5
  br label %754

754:                                              ; preds = %745, %1155, %566, %1183
  br label %10

755:                                              ; preds = %578
  %756 = getelementptr inbounds %struct.obj, ptr %576, i64 0, i32 2, i32 0, i32 1
  %757 = load ptr, ptr %756, align 8, !tbaa !9
  %758 = load ptr, ptr %574, align 8, !tbaa !9
  %759 = call ptr %757(ptr noundef %758) #33
  br label %1192

760:                                              ; preds = %578
  %761 = load ptr, ptr %3, align 8, !tbaa !5
  %762 = getelementptr inbounds %struct.obj, ptr %761, i64 0, i32 2, i32 0, i32 1
  %763 = load ptr, ptr %762, align 8, !tbaa !9
  store ptr %763, ptr %3, align 8, !tbaa !5
  %764 = icmp eq ptr %763, null
  br i1 %764, label %774, label %765

765:                                              ; preds = %760
  %766 = getelementptr inbounds %struct.obj, ptr %763, i64 0, i32 1
  %767 = load i16, ptr %766, align 2, !tbaa !14
  %768 = sext i16 %767 to i32
  switch i32 %768, label %772 [
    i32 0, label %774
    i32 1, label %769
  ]

769:                                              ; preds = %765
  %770 = getelementptr inbounds %struct.obj, ptr %763, i64 0, i32 2
  %771 = load ptr, ptr %770, align 8, !tbaa !9
  br label %774

772:                                              ; preds = %765
  %773 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %763)
  br label %774

774:                                              ; preds = %760, %765, %769, %772
  %775 = phi ptr [ null, %772 ], [ %771, %769 ], [ null, %765 ], [ null, %760 ]
  %776 = load ptr, ptr %4, align 8, !tbaa !5
  %777 = call ptr @leval(ptr noundef %775, ptr noundef %776)
  %778 = load ptr, ptr %575, align 8, !tbaa !9
  %779 = getelementptr inbounds %struct.obj, ptr %778, i64 0, i32 2, i32 0, i32 1
  %780 = load ptr, ptr %779, align 8, !tbaa !9
  %781 = load ptr, ptr %574, align 8, !tbaa !9
  %782 = call ptr %780(ptr noundef %781, ptr noundef %777) #33
  br label %1192

783:                                              ; preds = %578
  %784 = load ptr, ptr %3, align 8, !tbaa !5
  %785 = getelementptr inbounds %struct.obj, ptr %784, i64 0, i32 2, i32 0, i32 1
  %786 = load ptr, ptr %785, align 8, !tbaa !9
  store ptr %786, ptr %3, align 8, !tbaa !5
  %787 = icmp eq ptr %786, null
  br i1 %787, label %797, label %788

788:                                              ; preds = %783
  %789 = getelementptr inbounds %struct.obj, ptr %786, i64 0, i32 1
  %790 = load i16, ptr %789, align 2, !tbaa !14
  %791 = sext i16 %790 to i32
  switch i32 %791, label %795 [
    i32 0, label %797
    i32 1, label %792
  ]

792:                                              ; preds = %788
  %793 = getelementptr inbounds %struct.obj, ptr %786, i64 0, i32 2
  %794 = load ptr, ptr %793, align 8, !tbaa !9
  br label %797

795:                                              ; preds = %788
  %796 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %786)
  br label %797

797:                                              ; preds = %783, %788, %792, %795
  %798 = phi ptr [ null, %795 ], [ %794, %792 ], [ null, %788 ], [ null, %783 ]
  %799 = load ptr, ptr %4, align 8, !tbaa !5
  %800 = call ptr @leval(ptr noundef %798, ptr noundef %799)
  %801 = load ptr, ptr %3, align 8, !tbaa !5
  %802 = icmp eq ptr %801, null
  br i1 %802, label %803, label %808

803:                                              ; preds = %797
  store ptr null, ptr %3, align 8, !tbaa !5
  %804 = load ptr, ptr %575, align 8, !tbaa !9
  %805 = getelementptr inbounds %struct.obj, ptr %804, i64 0, i32 2, i32 0, i32 1
  %806 = load ptr, ptr %805, align 8, !tbaa !9
  %807 = load ptr, ptr %574, align 8, !tbaa !9
  br label %825

808:                                              ; preds = %797
  %809 = getelementptr inbounds %struct.obj, ptr %801, i64 0, i32 2, i32 0, i32 1
  %810 = load ptr, ptr %809, align 8, !tbaa !9
  store ptr %810, ptr %3, align 8, !tbaa !5
  %811 = load ptr, ptr %575, align 8, !tbaa !9
  %812 = getelementptr inbounds %struct.obj, ptr %811, i64 0, i32 2, i32 0, i32 1
  %813 = load ptr, ptr %812, align 8, !tbaa !9
  %814 = load ptr, ptr %574, align 8, !tbaa !9
  %815 = icmp eq ptr %810, null
  br i1 %815, label %825, label %816

816:                                              ; preds = %808
  %817 = getelementptr inbounds %struct.obj, ptr %810, i64 0, i32 1
  %818 = load i16, ptr %817, align 2, !tbaa !14
  %819 = sext i16 %818 to i32
  switch i32 %819, label %823 [
    i32 0, label %825
    i32 1, label %820
  ]

820:                                              ; preds = %816
  %821 = getelementptr inbounds %struct.obj, ptr %810, i64 0, i32 2
  %822 = load ptr, ptr %821, align 8, !tbaa !9
  br label %825

823:                                              ; preds = %816
  %824 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %810)
  br label %825

825:                                              ; preds = %803, %808, %816, %820, %823
  %826 = phi ptr [ %813, %823 ], [ %813, %820 ], [ %813, %816 ], [ %806, %803 ], [ %813, %808 ]
  %827 = phi ptr [ %814, %823 ], [ %814, %820 ], [ %814, %816 ], [ %807, %803 ], [ %814, %808 ]
  %828 = phi ptr [ null, %823 ], [ %822, %820 ], [ null, %816 ], [ null, %803 ], [ null, %808 ]
  %829 = load ptr, ptr %4, align 8, !tbaa !5
  %830 = call ptr @leval(ptr noundef %828, ptr noundef %829)
  %831 = call ptr %826(ptr noundef %827, ptr noundef %800, ptr noundef %830) #33
  br label %1192

832:                                              ; preds = %578
  %833 = load ptr, ptr %3, align 8, !tbaa !5
  %834 = getelementptr inbounds %struct.obj, ptr %833, i64 0, i32 2, i32 0, i32 1
  %835 = load ptr, ptr %834, align 8, !tbaa !9
  store ptr %835, ptr %3, align 8, !tbaa !5
  %836 = icmp eq ptr %835, null
  br i1 %836, label %846, label %837

837:                                              ; preds = %832
  %838 = getelementptr inbounds %struct.obj, ptr %835, i64 0, i32 1
  %839 = load i16, ptr %838, align 2, !tbaa !14
  %840 = sext i16 %839 to i32
  switch i32 %840, label %844 [
    i32 0, label %846
    i32 1, label %841
  ]

841:                                              ; preds = %837
  %842 = getelementptr inbounds %struct.obj, ptr %835, i64 0, i32 2
  %843 = load ptr, ptr %842, align 8, !tbaa !9
  br label %846

844:                                              ; preds = %837
  %845 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %835)
  br label %846

846:                                              ; preds = %832, %837, %841, %844
  %847 = phi ptr [ null, %844 ], [ %843, %841 ], [ null, %837 ], [ null, %832 ]
  %848 = load ptr, ptr %4, align 8, !tbaa !5
  %849 = call ptr @leval(ptr noundef %847, ptr noundef %848)
  %850 = load ptr, ptr %3, align 8, !tbaa !5
  %851 = icmp eq ptr %850, null
  br i1 %851, label %852, label %857

852:                                              ; preds = %846
  store ptr null, ptr %3, align 8, !tbaa !5
  %853 = load ptr, ptr %575, align 8, !tbaa !9
  %854 = getelementptr inbounds %struct.obj, ptr %853, i64 0, i32 2, i32 0, i32 1
  %855 = load ptr, ptr %854, align 8, !tbaa !9
  %856 = load ptr, ptr %574, align 8, !tbaa !9
  br label %874

857:                                              ; preds = %846
  %858 = getelementptr inbounds %struct.obj, ptr %850, i64 0, i32 2, i32 0, i32 1
  %859 = load ptr, ptr %858, align 8, !tbaa !9
  store ptr %859, ptr %3, align 8, !tbaa !5
  %860 = load ptr, ptr %575, align 8, !tbaa !9
  %861 = getelementptr inbounds %struct.obj, ptr %860, i64 0, i32 2, i32 0, i32 1
  %862 = load ptr, ptr %861, align 8, !tbaa !9
  %863 = load ptr, ptr %574, align 8, !tbaa !9
  %864 = icmp eq ptr %859, null
  br i1 %864, label %874, label %865

865:                                              ; preds = %857
  %866 = getelementptr inbounds %struct.obj, ptr %859, i64 0, i32 1
  %867 = load i16, ptr %866, align 2, !tbaa !14
  %868 = sext i16 %867 to i32
  switch i32 %868, label %872 [
    i32 0, label %874
    i32 1, label %869
  ]

869:                                              ; preds = %865
  %870 = getelementptr inbounds %struct.obj, ptr %859, i64 0, i32 2
  %871 = load ptr, ptr %870, align 8, !tbaa !9
  br label %874

872:                                              ; preds = %865
  %873 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %859)
  br label %874

874:                                              ; preds = %852, %857, %865, %869, %872
  %875 = phi ptr [ %862, %872 ], [ %862, %869 ], [ %862, %865 ], [ %855, %852 ], [ %862, %857 ]
  %876 = phi ptr [ %863, %872 ], [ %863, %869 ], [ %863, %865 ], [ %856, %852 ], [ %863, %857 ]
  %877 = phi ptr [ null, %872 ], [ %871, %869 ], [ null, %865 ], [ null, %852 ], [ null, %857 ]
  %878 = load ptr, ptr %4, align 8, !tbaa !5
  %879 = call ptr @leval(ptr noundef %877, ptr noundef %878)
  %880 = load ptr, ptr %3, align 8, !tbaa !5
  %881 = icmp eq ptr %880, null
  br i1 %881, label %901, label %882

882:                                              ; preds = %874
  %883 = getelementptr inbounds %struct.obj, ptr %880, i64 0, i32 1
  %884 = load i16, ptr %883, align 2, !tbaa !14
  %885 = sext i16 %884 to i32
  switch i32 %885, label %886 [
    i32 0, label %901
    i32 1, label %888
  ]

886:                                              ; preds = %882
  %887 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %880)
  br label %901

888:                                              ; preds = %882
  %889 = getelementptr inbounds %struct.obj, ptr %880, i64 0, i32 2, i32 0, i32 1
  %890 = load ptr, ptr %889, align 8, !tbaa !9
  %891 = icmp eq ptr %890, null
  br i1 %891, label %901, label %892

892:                                              ; preds = %888
  %893 = getelementptr inbounds %struct.obj, ptr %890, i64 0, i32 1
  %894 = load i16, ptr %893, align 2, !tbaa !14
  %895 = sext i16 %894 to i32
  switch i32 %895, label %899 [
    i32 0, label %901
    i32 1, label %896
  ]

896:                                              ; preds = %892
  %897 = getelementptr inbounds %struct.obj, ptr %890, i64 0, i32 2
  %898 = load ptr, ptr %897, align 8, !tbaa !9
  br label %901

899:                                              ; preds = %892
  %900 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %890)
  br label %901

901:                                              ; preds = %874, %882, %886, %888, %892, %896, %899
  %902 = phi ptr [ null, %899 ], [ %898, %896 ], [ null, %892 ], [ null, %888 ], [ null, %886 ], [ null, %882 ], [ null, %874 ]
  %903 = load ptr, ptr %4, align 8, !tbaa !5
  %904 = call ptr @leval(ptr noundef %902, ptr noundef %903)
  %905 = call ptr %875(ptr noundef %876, ptr noundef %849, ptr noundef %879, ptr noundef %904) #33
  br label %1192

906:                                              ; preds = %578
  %907 = load ptr, ptr %3, align 8, !tbaa !5
  %908 = getelementptr inbounds %struct.obj, ptr %907, i64 0, i32 2, i32 0, i32 1
  %909 = load ptr, ptr %908, align 8, !tbaa !9
  store ptr %909, ptr %3, align 8, !tbaa !5
  %910 = icmp eq ptr %909, null
  br i1 %910, label %920, label %911

911:                                              ; preds = %906
  %912 = getelementptr inbounds %struct.obj, ptr %909, i64 0, i32 1
  %913 = load i16, ptr %912, align 2, !tbaa !14
  %914 = sext i16 %913 to i32
  switch i32 %914, label %918 [
    i32 0, label %920
    i32 1, label %915
  ]

915:                                              ; preds = %911
  %916 = getelementptr inbounds %struct.obj, ptr %909, i64 0, i32 2
  %917 = load ptr, ptr %916, align 8, !tbaa !9
  br label %920

918:                                              ; preds = %911
  %919 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %909)
  br label %920

920:                                              ; preds = %906, %911, %915, %918
  %921 = phi ptr [ null, %918 ], [ %917, %915 ], [ null, %911 ], [ null, %906 ]
  %922 = load ptr, ptr %4, align 8, !tbaa !5
  %923 = call ptr @leval(ptr noundef %921, ptr noundef %922)
  %924 = load ptr, ptr %3, align 8, !tbaa !5
  %925 = icmp eq ptr %924, null
  br i1 %925, label %926, label %931

926:                                              ; preds = %920
  store ptr null, ptr %3, align 8, !tbaa !5
  %927 = load ptr, ptr %575, align 8, !tbaa !9
  %928 = getelementptr inbounds %struct.obj, ptr %927, i64 0, i32 2, i32 0, i32 1
  %929 = load ptr, ptr %928, align 8, !tbaa !9
  %930 = load ptr, ptr %574, align 8, !tbaa !9
  br label %948

931:                                              ; preds = %920
  %932 = getelementptr inbounds %struct.obj, ptr %924, i64 0, i32 2, i32 0, i32 1
  %933 = load ptr, ptr %932, align 8, !tbaa !9
  store ptr %933, ptr %3, align 8, !tbaa !5
  %934 = load ptr, ptr %575, align 8, !tbaa !9
  %935 = getelementptr inbounds %struct.obj, ptr %934, i64 0, i32 2, i32 0, i32 1
  %936 = load ptr, ptr %935, align 8, !tbaa !9
  %937 = load ptr, ptr %574, align 8, !tbaa !9
  %938 = icmp eq ptr %933, null
  br i1 %938, label %948, label %939

939:                                              ; preds = %931
  %940 = getelementptr inbounds %struct.obj, ptr %933, i64 0, i32 1
  %941 = load i16, ptr %940, align 2, !tbaa !14
  %942 = sext i16 %941 to i32
  switch i32 %942, label %946 [
    i32 0, label %948
    i32 1, label %943
  ]

943:                                              ; preds = %939
  %944 = getelementptr inbounds %struct.obj, ptr %933, i64 0, i32 2
  %945 = load ptr, ptr %944, align 8, !tbaa !9
  br label %948

946:                                              ; preds = %939
  %947 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %933)
  br label %948

948:                                              ; preds = %926, %931, %939, %943, %946
  %949 = phi ptr [ %936, %946 ], [ %936, %943 ], [ %936, %939 ], [ %929, %926 ], [ %936, %931 ]
  %950 = phi ptr [ %937, %946 ], [ %937, %943 ], [ %937, %939 ], [ %930, %926 ], [ %937, %931 ]
  %951 = phi ptr [ null, %946 ], [ %945, %943 ], [ null, %939 ], [ null, %926 ], [ null, %931 ]
  %952 = load ptr, ptr %4, align 8, !tbaa !5
  %953 = call ptr @leval(ptr noundef %951, ptr noundef %952)
  %954 = load ptr, ptr %3, align 8, !tbaa !5
  %955 = icmp eq ptr %954, null
  br i1 %955, label %975, label %956

956:                                              ; preds = %948
  %957 = getelementptr inbounds %struct.obj, ptr %954, i64 0, i32 1
  %958 = load i16, ptr %957, align 2, !tbaa !14
  %959 = sext i16 %958 to i32
  switch i32 %959, label %960 [
    i32 0, label %975
    i32 1, label %962
  ]

960:                                              ; preds = %956
  %961 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %954)
  br label %975

962:                                              ; preds = %956
  %963 = getelementptr inbounds %struct.obj, ptr %954, i64 0, i32 2, i32 0, i32 1
  %964 = load ptr, ptr %963, align 8, !tbaa !9
  %965 = icmp eq ptr %964, null
  br i1 %965, label %975, label %966

966:                                              ; preds = %962
  %967 = getelementptr inbounds %struct.obj, ptr %964, i64 0, i32 1
  %968 = load i16, ptr %967, align 2, !tbaa !14
  %969 = sext i16 %968 to i32
  switch i32 %969, label %973 [
    i32 0, label %975
    i32 1, label %970
  ]

970:                                              ; preds = %966
  %971 = getelementptr inbounds %struct.obj, ptr %964, i64 0, i32 2
  %972 = load ptr, ptr %971, align 8, !tbaa !9
  br label %975

973:                                              ; preds = %966
  %974 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %964)
  br label %975

975:                                              ; preds = %948, %956, %960, %962, %966, %970, %973
  %976 = phi ptr [ null, %973 ], [ %972, %970 ], [ null, %966 ], [ null, %962 ], [ null, %960 ], [ null, %956 ], [ null, %948 ]
  %977 = load ptr, ptr %4, align 8, !tbaa !5
  %978 = call ptr @leval(ptr noundef %976, ptr noundef %977)
  %979 = load ptr, ptr %3, align 8, !tbaa !5
  %980 = icmp eq ptr %979, null
  br i1 %980, label %1010, label %981

981:                                              ; preds = %975
  %982 = getelementptr inbounds %struct.obj, ptr %979, i64 0, i32 1
  %983 = load i16, ptr %982, align 2, !tbaa !14
  %984 = sext i16 %983 to i32
  switch i32 %984, label %985 [
    i32 0, label %1010
    i32 1, label %987
  ]

985:                                              ; preds = %981
  %986 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %979)
  br label %1010

987:                                              ; preds = %981
  %988 = getelementptr inbounds %struct.obj, ptr %979, i64 0, i32 2, i32 0, i32 1
  %989 = load ptr, ptr %988, align 8, !tbaa !9
  %990 = icmp eq ptr %989, null
  br i1 %990, label %1010, label %991

991:                                              ; preds = %987
  %992 = getelementptr inbounds %struct.obj, ptr %989, i64 0, i32 1
  %993 = load i16, ptr %992, align 2, !tbaa !14
  %994 = sext i16 %993 to i32
  switch i32 %994, label %995 [
    i32 0, label %1010
    i32 1, label %997
  ]

995:                                              ; preds = %991
  %996 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %989)
  br label %1010

997:                                              ; preds = %991
  %998 = getelementptr inbounds %struct.obj, ptr %989, i64 0, i32 2, i32 0, i32 1
  %999 = load ptr, ptr %998, align 8, !tbaa !9
  %1000 = icmp eq ptr %999, null
  br i1 %1000, label %1010, label %1001

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %struct.obj, ptr %999, i64 0, i32 1
  %1003 = load i16, ptr %1002, align 2, !tbaa !14
  %1004 = sext i16 %1003 to i32
  switch i32 %1004, label %1008 [
    i32 0, label %1010
    i32 1, label %1005
  ]

1005:                                             ; preds = %1001
  %1006 = getelementptr inbounds %struct.obj, ptr %999, i64 0, i32 2
  %1007 = load ptr, ptr %1006, align 8, !tbaa !9
  br label %1010

1008:                                             ; preds = %1001
  %1009 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %999)
  br label %1010

1010:                                             ; preds = %975, %981, %985, %987, %991, %995, %997, %1001, %1005, %1008
  %1011 = phi ptr [ null, %1008 ], [ %1007, %1005 ], [ null, %1001 ], [ null, %997 ], [ null, %995 ], [ null, %991 ], [ null, %987 ], [ null, %985 ], [ null, %981 ], [ null, %975 ]
  %1012 = load ptr, ptr %4, align 8, !tbaa !5
  %1013 = call ptr @leval(ptr noundef %1011, ptr noundef %1012)
  %1014 = call ptr %949(ptr noundef %950, ptr noundef %923, ptr noundef %953, ptr noundef %978, ptr noundef %1013) #33
  br label %1192

1015:                                             ; preds = %578
  %1016 = getelementptr inbounds %struct.obj, ptr %576, i64 0, i32 2, i32 0, i32 1
  %1017 = load ptr, ptr %1016, align 8, !tbaa !9
  %1018 = load ptr, ptr %574, align 8, !tbaa !9
  %1019 = load ptr, ptr %3, align 8, !tbaa !5
  %1020 = getelementptr inbounds %struct.obj, ptr %1019, i64 0, i32 2, i32 0, i32 1
  %1021 = load ptr, ptr %1020, align 8, !tbaa !9
  %1022 = load ptr, ptr %4, align 8, !tbaa !5
  %1023 = call ptr @leval_args(ptr noundef %1021, ptr noundef %1022)
  %1024 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1025 = icmp eq i64 %1024, 1
  br i1 %1025, label %1026, label %1034

1026:                                             ; preds = %1015
  %1027 = load ptr, ptr @heap, align 8, !tbaa !5
  %1028 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1029 = icmp ult ptr %1027, %1028
  br i1 %1029, label %1032, label %1030

1030:                                             ; preds = %1026
  %1031 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1032

1032:                                             ; preds = %1030, %1026
  %1033 = getelementptr inbounds %struct.obj, ptr %1027, i64 1
  store ptr %1033, ptr @heap, align 8, !tbaa !5
  br label %1045

1034:                                             ; preds = %1015
  %1035 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1036 = icmp eq ptr %1035, null
  br i1 %1036, label %1037, label %1039

1037:                                             ; preds = %1034
  call void @gc_for_newcell()
  %1038 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1039

1039:                                             ; preds = %1037, %1034
  %1040 = phi ptr [ %1038, %1037 ], [ %1035, %1034 ]
  %1041 = getelementptr inbounds %struct.obj, ptr %1040, i64 0, i32 2, i32 0, i32 1
  %1042 = load ptr, ptr %1041, align 8, !tbaa !9
  store ptr %1042, ptr @freelist, align 8, !tbaa !5
  %1043 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1044 = add nsw i64 %1043, 1
  store i64 %1044, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1045

1045:                                             ; preds = %1032, %1039
  %1046 = phi ptr [ %1027, %1032 ], [ %1040, %1039 ]
  store i16 0, ptr %1046, align 8, !tbaa !35
  %1047 = getelementptr inbounds %struct.obj, ptr %1046, i64 0, i32 1
  store i16 1, ptr %1047, align 2, !tbaa !14
  %1048 = getelementptr inbounds %struct.obj, ptr %1046, i64 0, i32 2
  store ptr %1018, ptr %1048, align 8, !tbaa !9
  %1049 = getelementptr inbounds %struct.obj, ptr %1046, i64 0, i32 2, i32 0, i32 1
  store ptr %1023, ptr %1049, align 8, !tbaa !9
  %1050 = call ptr %1017(ptr noundef nonnull %1046) #33
  br label %1192

1051:                                             ; preds = %573, %578
  %1052 = call ptr @err(ptr noundef nonnull @.str.88, ptr noundef nonnull %82)
  br label %1190

1053:                                             ; preds = %80
  %1054 = load ptr, ptr @sym_quote, align 8, !tbaa !5
  %1055 = load ptr, ptr %3, align 8, !tbaa !5
  %1056 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1057 = icmp eq i64 %1056, 1
  br i1 %1057, label %1058, label %1066

1058:                                             ; preds = %1053
  %1059 = load ptr, ptr @heap, align 8, !tbaa !5
  %1060 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1061 = icmp ult ptr %1059, %1060
  br i1 %1061, label %1064, label %1062

1062:                                             ; preds = %1058
  %1063 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1064

1064:                                             ; preds = %1062, %1058
  %1065 = getelementptr inbounds %struct.obj, ptr %1059, i64 1
  store ptr %1065, ptr @heap, align 8, !tbaa !5
  br label %1077

1066:                                             ; preds = %1053
  %1067 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1068 = icmp eq ptr %1067, null
  br i1 %1068, label %1069, label %1071

1069:                                             ; preds = %1066
  call void @gc_for_newcell()
  %1070 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1071

1071:                                             ; preds = %1069, %1066
  %1072 = phi ptr [ %1070, %1069 ], [ %1067, %1066 ]
  %1073 = getelementptr inbounds %struct.obj, ptr %1072, i64 0, i32 2, i32 0, i32 1
  %1074 = load ptr, ptr %1073, align 8, !tbaa !9
  store ptr %1074, ptr @freelist, align 8, !tbaa !5
  %1075 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1076 = add nsw i64 %1075, 1
  store i64 %1076, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1077

1077:                                             ; preds = %1064, %1071
  %1078 = phi ptr [ %1059, %1064 ], [ %1072, %1071 ]
  store i16 0, ptr %1078, align 8, !tbaa !35
  %1079 = getelementptr inbounds %struct.obj, ptr %1078, i64 0, i32 1
  store i16 1, ptr %1079, align 2, !tbaa !14
  %1080 = getelementptr inbounds %struct.obj, ptr %1078, i64 0, i32 2
  store ptr %1055, ptr %1080, align 8, !tbaa !9
  %1081 = getelementptr inbounds %struct.obj, ptr %1078, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %1081, align 8, !tbaa !9
  %1082 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1083 = icmp eq i64 %1082, 1
  br i1 %1083, label %1084, label %1092

1084:                                             ; preds = %1077
  %1085 = load ptr, ptr @heap, align 8, !tbaa !5
  %1086 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1087 = icmp ult ptr %1085, %1086
  br i1 %1087, label %1090, label %1088

1088:                                             ; preds = %1084
  %1089 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1090

1090:                                             ; preds = %1088, %1084
  %1091 = getelementptr inbounds %struct.obj, ptr %1085, i64 1
  store ptr %1091, ptr @heap, align 8, !tbaa !5
  br label %1103

1092:                                             ; preds = %1077
  %1093 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1094 = icmp eq ptr %1093, null
  br i1 %1094, label %1095, label %1097

1095:                                             ; preds = %1092
  call void @gc_for_newcell()
  %1096 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1097

1097:                                             ; preds = %1095, %1092
  %1098 = phi ptr [ %1096, %1095 ], [ %1093, %1092 ]
  %1099 = getelementptr inbounds %struct.obj, ptr %1098, i64 0, i32 2, i32 0, i32 1
  %1100 = load ptr, ptr %1099, align 8, !tbaa !9
  store ptr %1100, ptr @freelist, align 8, !tbaa !5
  %1101 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1102 = add nsw i64 %1101, 1
  store i64 %1102, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1103

1103:                                             ; preds = %1090, %1097
  %1104 = phi ptr [ %1085, %1090 ], [ %1098, %1097 ]
  store i16 0, ptr %1104, align 8, !tbaa !35
  %1105 = getelementptr inbounds %struct.obj, ptr %1104, i64 0, i32 1
  store i16 1, ptr %1105, align 2, !tbaa !14
  %1106 = getelementptr inbounds %struct.obj, ptr %1104, i64 0, i32 2
  store ptr %1054, ptr %1106, align 8, !tbaa !9
  %1107 = getelementptr inbounds %struct.obj, ptr %1104, i64 0, i32 2, i32 0, i32 1
  store ptr %1078, ptr %1107, align 8, !tbaa !9
  %1108 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1109 = icmp eq i64 %1108, 1
  br i1 %1109, label %1110, label %1118

1110:                                             ; preds = %1103
  %1111 = load ptr, ptr @heap, align 8, !tbaa !5
  %1112 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1113 = icmp ult ptr %1111, %1112
  br i1 %1113, label %1116, label %1114

1114:                                             ; preds = %1110
  %1115 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1116

1116:                                             ; preds = %1114, %1110
  %1117 = getelementptr inbounds %struct.obj, ptr %1111, i64 1
  store ptr %1117, ptr @heap, align 8, !tbaa !5
  br label %1129

1118:                                             ; preds = %1103
  %1119 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1120 = icmp eq ptr %1119, null
  br i1 %1120, label %1121, label %1123

1121:                                             ; preds = %1118
  call void @gc_for_newcell()
  %1122 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1123

1123:                                             ; preds = %1121, %1118
  %1124 = phi ptr [ %1122, %1121 ], [ %1119, %1118 ]
  %1125 = getelementptr inbounds %struct.obj, ptr %1124, i64 0, i32 2, i32 0, i32 1
  %1126 = load ptr, ptr %1125, align 8, !tbaa !9
  store ptr %1126, ptr @freelist, align 8, !tbaa !5
  %1127 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1128 = add nsw i64 %1127, 1
  store i64 %1128, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1129

1129:                                             ; preds = %1116, %1123
  %1130 = phi ptr [ %1111, %1116 ], [ %1124, %1123 ]
  store i16 0, ptr %1130, align 8, !tbaa !35
  %1131 = getelementptr inbounds %struct.obj, ptr %1130, i64 0, i32 1
  store i16 1, ptr %1131, align 2, !tbaa !14
  %1132 = getelementptr inbounds %struct.obj, ptr %1130, i64 0, i32 2
  store ptr %1104, ptr %1132, align 8, !tbaa !9
  %1133 = getelementptr inbounds %struct.obj, ptr %1130, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %1133, align 8, !tbaa !9
  %1134 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1135 = icmp eq i64 %1134, 1
  br i1 %1135, label %1136, label %1144

1136:                                             ; preds = %1129
  %1137 = load ptr, ptr @heap, align 8, !tbaa !5
  %1138 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1139 = icmp ult ptr %1137, %1138
  br i1 %1139, label %1142, label %1140

1140:                                             ; preds = %1136
  %1141 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1142

1142:                                             ; preds = %1140, %1136
  %1143 = getelementptr inbounds %struct.obj, ptr %1137, i64 1
  store ptr %1143, ptr @heap, align 8, !tbaa !5
  br label %1155

1144:                                             ; preds = %1129
  %1145 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1146 = icmp eq ptr %1145, null
  br i1 %1146, label %1147, label %1149

1147:                                             ; preds = %1144
  call void @gc_for_newcell()
  %1148 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1149

1149:                                             ; preds = %1147, %1144
  %1150 = phi ptr [ %1148, %1147 ], [ %1145, %1144 ]
  %1151 = getelementptr inbounds %struct.obj, ptr %1150, i64 0, i32 2, i32 0, i32 1
  %1152 = load ptr, ptr %1151, align 8, !tbaa !9
  store ptr %1152, ptr @freelist, align 8, !tbaa !5
  %1153 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1154 = add nsw i64 %1153, 1
  store i64 %1154, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1155

1155:                                             ; preds = %1142, %1149
  %1156 = phi ptr [ %1137, %1142 ], [ %1150, %1149 ]
  store i16 0, ptr %1156, align 8, !tbaa !35
  %1157 = getelementptr inbounds %struct.obj, ptr %1156, i64 0, i32 1
  store i16 1, ptr %1157, align 2, !tbaa !14
  %1158 = getelementptr inbounds %struct.obj, ptr %1156, i64 0, i32 2
  store ptr %82, ptr %1158, align 8, !tbaa !9
  %1159 = getelementptr inbounds %struct.obj, ptr %1156, i64 0, i32 2, i32 0, i32 1
  store ptr %1130, ptr %1159, align 8, !tbaa !9
  store ptr %1156, ptr %3, align 8, !tbaa !5
  %1160 = call ptr @leval(ptr noundef nonnull %1156, ptr noundef null)
  store ptr %1160, ptr %3, align 8, !tbaa !5
  br label %754

1161:                                             ; preds = %80
  %1162 = sext i16 %81 to i64
  br label %1163

1163:                                             ; preds = %74, %46, %1161
  %1164 = phi ptr [ %82, %1161 ], [ null, %46 ], [ null, %74 ]
  %1165 = phi i64 [ %1162, %1161 ], [ 0, %46 ], [ 0, %74 ]
  %1166 = load ptr, ptr @user_types, align 8, !tbaa !5
  %1167 = icmp eq ptr %1166, null
  br i1 %1167, label %1168, label %1174

1168:                                             ; preds = %1163
  %1169 = call noalias dereferenceable_or_null(8000) ptr @malloc(i64 noundef 8000) #39
  %1170 = icmp eq ptr %1169, null
  br i1 %1170, label %1171, label %1173

1171:                                             ; preds = %1168
  %1172 = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %1173

1173:                                             ; preds = %1168, %1171
  store ptr %1169, ptr @user_types, align 8, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(8000) %1169, i8 0, i64 8000, i1 false)
  br label %1174

1174:                                             ; preds = %1173, %1163
  %1175 = phi ptr [ %1169, %1173 ], [ %1166, %1163 ]
  %1176 = icmp ult i64 %1165, 100
  br i1 %1176, label %1177, label %1181

1177:                                             ; preds = %1174
  %1178 = getelementptr inbounds %struct.user_type_hooks, ptr %1175, i64 %1165, i32 5
  %1179 = load ptr, ptr %1178, align 8, !tbaa !52
  %1180 = icmp eq ptr %1179, null
  br i1 %1180, label %1188, label %1183

1181:                                             ; preds = %1174
  %1182 = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

1183:                                             ; preds = %1177
  %1184 = call ptr %1179(ptr noundef %1164, ptr noundef nonnull %3, ptr noundef nonnull %4) #33
  %1185 = icmp eq ptr %1184, null
  br i1 %1185, label %1186, label %754

1186:                                             ; preds = %1183
  %1187 = load ptr, ptr %3, align 8, !tbaa !5
  br label %1192

1188:                                             ; preds = %1177
  %1189 = call ptr @err(ptr noundef nonnull @.str.89, ptr noundef %1164)
  br label %1190

1190:                                             ; preds = %24, %27, %1051, %1188
  %1191 = load ptr, ptr %3, align 8, !tbaa !5
  br label %1192

1192:                                             ; preds = %210, %216, %191, %200, %204, %206, %38, %44, %1190, %1186, %1045, %1010, %901, %825, %774, %755, %571, %558, %549, %544, %395, %291, %147, %104, %84, %35
  %1193 = phi ptr [ %1191, %1190 ], [ %1187, %1186 ], [ %1050, %1045 ], [ %1014, %1010 ], [ %905, %901 ], [ %831, %825 ], [ %782, %774 ], [ %759, %755 ], [ %572, %571 ], [ %565, %558 ], [ %557, %549 ], [ %548, %544 ], [ %399, %395 ], [ %295, %291 ], [ %152, %147 ], [ %108, %104 ], [ %87, %84 ], [ %37, %35 ], [ %41, %44 ], [ %41, %38 ], [ %197, %206 ], [ %197, %204 ], [ %197, %200 ], [ %197, %191 ], [ %211, %210 ], [ %222, %216 ]
  ret ptr %1193
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lprint(ptr noundef %0, ptr noundef %1) #6 {
  %3 = alloca %struct.gen_printio, align 8
  %4 = load ptr, ptr @stdout, align 8, !tbaa !5
  %5 = icmp eq ptr %1, null
  %6 = icmp ne ptr %4, null
  %7 = and i1 %5, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  br i1 %5, label %13, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %11 = load i16, ptr %10, align 2, !tbaa !14
  %12 = icmp eq i16 %11, 17
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %8
  %14 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %1)
  br label %15

15:                                               ; preds = %13, %9
  %16 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %1)
  %21 = load ptr, ptr %16, align 8, !tbaa !9
  br label %22

22:                                               ; preds = %2, %15, %19
  %23 = phi ptr [ %4, %2 ], [ %21, %19 ], [ %17, %15 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #33
  store ptr null, ptr %3, align 8, !tbaa !31
  %24 = getelementptr inbounds %struct.gen_printio, ptr %3, i64 0, i32 1
  store ptr @fputs_fcn, ptr %24, align 8, !tbaa !33
  %25 = getelementptr inbounds %struct.gen_printio, ptr %3, i64 0, i32 2
  store ptr %23, ptr %25, align 8, !tbaa !34
  %26 = call ptr @lprin1g(ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #33
  %27 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %28 = call i32 @fputc(i32 10, ptr %23)
  store i64 %27, ptr @nointerrupt, align 8, !tbaa !10
  %29 = icmp eq i64 %27, 0
  %30 = load i64, ptr @interrupt_differed, align 8
  %31 = icmp eq i64 %30, 1
  %32 = select i1 %29, i1 %31, i1 false
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %34 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %35

35:                                               ; preds = %22, %33
  ret ptr null
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @set_fatal_exit_hook(ptr noundef %0) local_unnamed_addr #10 {
  store ptr %0, ptr @fatal_exit_hook, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_c_string(ptr noundef %0) local_unnamed_addr #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  switch i16 %5, label %12 [
    i16 3, label %6
    i16 13, label %9
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !9
  br label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %14

12:                                               ; preds = %3, %1
  %13 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %14

14:                                               ; preds = %12, %9, %6
  %15 = phi ptr [ %8, %6 ], [ %11, %9 ], [ null, %12 ]
  ret ptr %15
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @try_get_c_string(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  switch i16 %5, label %13 [
    i16 3, label %6
    i16 13, label %8
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  br label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi ptr [ %9, %8 ], [ %7, %6 ]
  %12 = load ptr, ptr %11, align 8, !tbaa !9
  br label %13

13:                                               ; preds = %10, %3, %1
  %14 = phi ptr [ null, %1 ], [ null, %3 ], [ %12, %10 ]
  ret ptr %14
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define dso_local ptr @setvar(ptr noundef %0, ptr noundef returned %1, ptr noundef %2) #6 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %11, label %9

9:                                                ; preds = %3, %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %0)
  br label %11

11:                                               ; preds = %9, %5
  %12 = tail call ptr @envlookup(ptr noundef %0, ptr noundef %2)
  %13 = icmp eq ptr %12, null
  %14 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2
  %15 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %16 = select i1 %13, ptr %15, ptr %14
  store ptr %1, ptr %16, align 8, !tbaa !9
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cons(ptr noundef %0, ptr noundef %1) #6 {
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = load ptr, ptr @heap, align 8, !tbaa !5
  %7 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %8 = icmp ult ptr %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %struct.obj, ptr %6, i64 1
  store ptr %12, ptr @heap, align 8, !tbaa !5
  br label %24

13:                                               ; preds = %2
  %14 = load ptr, ptr @freelist, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  tail call void @gc_for_newcell()
  %17 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi ptr [ %17, %16 ], [ %14, %13 ]
  %20 = getelementptr inbounds %struct.obj, ptr %19, i64 0, i32 2, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  store ptr %21, ptr @freelist, align 8, !tbaa !5
  %22 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %23 = add nsw i64 %22, 1
  store i64 %23, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %24

24:                                               ; preds = %18, %11
  %25 = phi ptr [ %6, %11 ], [ %19, %18 ]
  store i16 0, ptr %25, align 8, !tbaa !35
  %26 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  store i16 1, ptr %26, align 2, !tbaa !14
  %27 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2
  store ptr %0, ptr %27, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !9
  ret ptr %25
}

declare ptr @strcons(i64 noundef, ptr noundef) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @longjmp(ptr noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @errswitch() local_unnamed_addr #6 {
  %1 = tail call ptr @err(ptr noundef nonnull @.str.22, ptr noundef null)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local void @err_stack(ptr nocapture noundef readnone %0) local_unnamed_addr #6 {
  %2 = tail call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @stack_limit(ptr noundef %0, ptr noundef readnone %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @get_c_long(ptr noundef nonnull %0) #33
  store i64 %5, ptr @stack_size, align 8, !tbaa !10
  %6 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %7 = sub i64 0, %5
  %8 = getelementptr inbounds i8, ptr %6, i64 %7
  store ptr %8, ptr @stack_limit_ptr, align 8, !tbaa !5
  br label %9

9:                                                ; preds = %4, %2
  %10 = icmp eq ptr %1, null
  br i1 %10, label %11, label %27

11:                                               ; preds = %9
  %12 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %13 = load i64, ptr @stack_size, align 8, !tbaa !10
  %14 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %15 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %16 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %12, ptr noundef nonnull dereferenceable(1) @.str.24, i64 noundef %13, ptr noundef %14, ptr noundef %15) #33
  %17 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %18 = load ptr, ptr @stdout, align 8, !tbaa !5
  %19 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %20 = tail call i32 @fputs(ptr %17, ptr %18)
  store i64 %19, ptr @nointerrupt, align 8, !tbaa !10
  %21 = icmp eq i64 %19, 0
  %22 = load i64, ptr @interrupt_differed, align 8
  %23 = icmp eq i64 %22, 1
  %24 = select i1 %21, i1 %23, i1 false
  br i1 %24, label %25, label %71

25:                                               ; preds = %11
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %26 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %71

27:                                               ; preds = %9
  %28 = load i64, ptr @stack_size, align 8, !tbaa !10
  %29 = sitofp i64 %28 to double
  %30 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %45

32:                                               ; preds = %27
  %33 = fptosi double %29 to i64
  %34 = sitofp i64 %33 to double
  %35 = fsub double %29, %34
  %36 = fcmp oeq double %35, 0.000000e+00
  %37 = icmp sgt i64 %28, -1
  %38 = and i1 %37, %36
  %39 = icmp sgt i64 %30, %33
  %40 = select i1 %38, i1 %39, i1 false
  br i1 %40, label %41, label %45

41:                                               ; preds = %32
  %42 = load ptr, ptr @inums, align 8, !tbaa !5
  %43 = getelementptr inbounds ptr, ptr %42, i64 %33
  %44 = load ptr, ptr %43, align 8, !tbaa !5
  br label %71

45:                                               ; preds = %32, %27
  %46 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %48, label %56

48:                                               ; preds = %45
  %49 = load ptr, ptr @heap, align 8, !tbaa !5
  %50 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %51 = icmp ult ptr %49, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %54

54:                                               ; preds = %52, %48
  %55 = getelementptr inbounds %struct.obj, ptr %49, i64 1
  store ptr %55, ptr @heap, align 8, !tbaa !5
  br label %67

56:                                               ; preds = %45
  %57 = load ptr, ptr @freelist, align 8, !tbaa !5
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  tail call void @gc_for_newcell()
  %60 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi ptr [ %60, %59 ], [ %57, %56 ]
  %63 = getelementptr inbounds %struct.obj, ptr %62, i64 0, i32 2, i32 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !9
  store ptr %64, ptr @freelist, align 8, !tbaa !5
  %65 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %66 = add nsw i64 %65, 1
  store i64 %66, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %67

67:                                               ; preds = %61, %54
  %68 = phi ptr [ %49, %54 ], [ %62, %61 ]
  store i16 0, ptr %68, align 8, !tbaa !35
  %69 = getelementptr inbounds %struct.obj, ptr %68, i64 0, i32 1
  store i16 2, ptr %69, align 2, !tbaa !14
  %70 = getelementptr inbounds %struct.obj, ptr %68, i64 0, i32 2
  store double %29, ptr %70, align 8, !tbaa !9
  br label %71

71:                                               ; preds = %67, %41, %25, %11
  %72 = phi ptr [ null, %11 ], [ null, %25 ], [ %44, %41 ], [ %68, %67 ]
  ret ptr %72
}

declare i64 @get_c_long(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @flocons(double noundef %0) local_unnamed_addr #6 {
  %2 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = fptosi double %0 to i64
  %6 = sitofp i64 %5 to double
  %7 = fsub double %0, %6
  %8 = fcmp oeq double %7, 0.000000e+00
  %9 = fcmp oge double %0, 0.000000e+00
  %10 = and i1 %9, %8
  %11 = icmp sgt i64 %2, %5
  %12 = select i1 %10, i1 %11, i1 false
  br i1 %12, label %13, label %17

13:                                               ; preds = %4
  %14 = load ptr, ptr @inums, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 %5
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  br label %43

17:                                               ; preds = %4, %1
  %18 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  %21 = load ptr, ptr @heap, align 8, !tbaa !5
  %22 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %23 = icmp ult ptr %21, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %26

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %struct.obj, ptr %21, i64 1
  store ptr %27, ptr @heap, align 8, !tbaa !5
  br label %39

28:                                               ; preds = %17
  %29 = load ptr, ptr @freelist, align 8, !tbaa !5
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  tail call void @gc_for_newcell()
  %32 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi ptr [ %32, %31 ], [ %29, %28 ]
  %35 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 2, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !9
  store ptr %36, ptr @freelist, align 8, !tbaa !5
  %37 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %39

39:                                               ; preds = %33, %26
  %40 = phi ptr [ %21, %26 ], [ %34, %33 ]
  store i16 0, ptr %40, align 8, !tbaa !35
  %41 = getelementptr inbounds %struct.obj, ptr %40, i64 0, i32 1
  store i16 2, ptr %41, align 2, !tbaa !14
  %42 = getelementptr inbounds %struct.obj, ptr %40, i64 0, i32 2
  store double %0, ptr %42, align 8, !tbaa !9
  br label %43

43:                                               ; preds = %39, %13
  %44 = phi ptr [ %16, %13 ], [ %40, %39 ]
  ret ptr %44
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_c_string_dim(ptr noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = sext i16 %6 to i32
  switch i32 %7, label %24 [
    i32 3, label %8
    i32 13, label %13
    i32 18, label %13
    i32 15, label %18
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !9
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10) #34
  store i64 %11, ptr %1, align 8, !tbaa !10
  %12 = load ptr, ptr %9, align 8, !tbaa !9
  br label %26

13:                                               ; preds = %4, %4
  %14 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %15 = load i64, ptr %14, align 8, !tbaa !9
  store i64 %15, ptr %1, align 8, !tbaa !10
  %16 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  br label %26

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load i64, ptr %19, align 8, !tbaa !9
  %21 = shl i64 %20, 3
  store i64 %21, ptr %1, align 8, !tbaa !10
  %22 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  br label %26

24:                                               ; preds = %2, %4
  %25 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %26

26:                                               ; preds = %24, %18, %13, %8
  %27 = phi ptr [ null, %24 ], [ %23, %18 ], [ %17, %13 ], [ %12, %8 ]
  ret ptr %27
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lerr(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  switch i16 %6, label %23 [
    i16 1, label %7
    i16 3, label %17
    i16 13, label %20
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  %10 = icmp eq ptr %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.obj, ptr %9, i64 0, i32 1
  %13 = load i16, ptr %12, align 2, !tbaa !14
  %14 = icmp eq i16 %13, 13
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = tail call ptr @err(ptr noundef null, ptr noundef nonnull %0)
  br label %28

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  br label %25

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  br label %25

23:                                               ; preds = %4, %7, %11, %2
  %24 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %25

25:                                               ; preds = %17, %20, %23
  %26 = phi ptr [ %19, %17 ], [ %22, %20 ], [ null, %23 ]
  %27 = tail call ptr @err(ptr noundef %26, ptr noundef %1)
  br label %28

28:                                               ; preds = %25, %15
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_fatal_error() local_unnamed_addr #6 {
  %1 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @newcell(i64 noundef %0) local_unnamed_addr #6 {
  %2 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3 = icmp eq i64 %2, 1
  br i1 %3, label %4, label %12

4:                                                ; preds = %1
  %5 = load ptr, ptr @heap, align 8, !tbaa !5
  %6 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %7 = icmp ult ptr %5, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %struct.obj, ptr %5, i64 1
  store ptr %11, ptr @heap, align 8, !tbaa !5
  br label %23

12:                                               ; preds = %1
  %13 = load ptr, ptr @freelist, align 8, !tbaa !5
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  tail call void @gc_for_newcell()
  %16 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi ptr [ %16, %15 ], [ %13, %12 ]
  %19 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 2, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !9
  store ptr %20, ptr @freelist, align 8, !tbaa !5
  %21 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %22 = add nsw i64 %21, 1
  store i64 %22, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %23

23:                                               ; preds = %17, %10
  %24 = phi ptr [ %5, %10 ], [ %18, %17 ]
  store i16 0, ptr %24, align 8, !tbaa !35
  %25 = trunc i64 %0 to i16
  %26 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 1
  store i16 %25, ptr %26, align 2, !tbaa !14
  ret ptr %24
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_for_newcell() local_unnamed_addr #6 {
  %1 = load ptr, ptr @heap, align 8, !tbaa !5
  %2 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3 = icmp ult ptr %1, %2
  br i1 %3, label %4, label %7

4:                                                ; preds = %0
  store ptr %1, ptr @freelist, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %5, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.obj, ptr %1, i64 1
  store ptr %6, ptr @heap, align 8, !tbaa !5
  br label %47

7:                                                ; preds = %0
  %8 = load i64, ptr @errjmp_ok, align 8, !tbaa !10
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %7
  %13 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  store i64 0, ptr @errjmp_ok, align 8, !tbaa !10
  tail call void @gc_mark_and_sweep()
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 %13, ptr @nointerrupt, align 8, !tbaa !10
  %14 = icmp eq i64 %13, 0
  %15 = load i64, ptr @interrupt_differed, align 8
  %16 = icmp eq i64 %15, 1
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %19 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %20

20:                                               ; preds = %12, %18
  %21 = load ptr, ptr @freelist, align 8, !tbaa !9
  %22 = icmp eq ptr %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %20, %23
  %24 = phi ptr [ %28, %23 ], [ %21, %20 ]
  %25 = phi i64 [ %27, %23 ], [ 0, %20 ]
  %26 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2, i32 0, i32 1
  %27 = add nuw nsw i64 %25, 1
  %28 = load ptr, ptr %26, align 8, !tbaa !9
  %29 = icmp ult i64 %25, 99
  %30 = icmp ne ptr %28, null
  %31 = select i1 %29, i1 %30, i1 false
  br i1 %31, label %23, label %37, !llvm.loop !53

32:                                               ; preds = %20
  %33 = tail call ptr @allocate_aheap()
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %47

35:                                               ; preds = %32
  %36 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %47

37:                                               ; preds = %23
  %38 = icmp eq i64 %27, 100
  %39 = load ptr, ptr @sym_after_gc, align 8
  %40 = icmp ne ptr %39, null
  %41 = select i1 %38, i1 %40, i1 false
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = tail call ptr @leval(ptr noundef nonnull %39, ptr noundef null)
  %44 = tail call ptr @leval(ptr noundef %43, ptr noundef null)
  br label %47

45:                                               ; preds = %37
  %46 = tail call ptr @allocate_aheap()
  br label %47

47:                                               ; preds = %35, %32, %45, %42, %4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @consp(ptr noundef readonly %0) #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = icmp eq i16 %5, 1
  %7 = load ptr, ptr @sym_t, align 8
  %8 = select i1 %6, ptr %7, ptr null
  br label %9

9:                                                ; preds = %3, %1
  %10 = phi ptr [ null, %1 ], [ %8, %3 ]
  ret ptr %10
}

; Function Attrs: nounwind uwtable
define dso_local ptr @car(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %10 [
    i32 0, label %12
    i32 1, label %7
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  br label %12

10:                                               ; preds = %3
  %11 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %12

12:                                               ; preds = %1, %3, %10, %7
  %13 = phi ptr [ null, %10 ], [ %9, %7 ], [ null, %3 ], [ null, %1 ]
  ret ptr %13
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cdr(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %10 [
    i32 0, label %12
    i32 1, label %7
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  br label %12

10:                                               ; preds = %3
  %11 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %12

12:                                               ; preds = %1, %3, %10, %7
  %13 = phi ptr [ null, %10 ], [ %9, %7 ], [ null, %3 ], [ null, %1 ]
  ret ptr %13
}

; Function Attrs: nounwind uwtable
define dso_local ptr @setcar(ptr noundef %0, ptr noundef returned %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  store ptr %1, ptr %11, align 8, !tbaa !9
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define dso_local ptr @setcdr(ptr noundef %0, ptr noundef returned %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %11, align 8, !tbaa !9
  ret ptr %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @numberp(ptr noundef readonly %0) #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = icmp eq i16 %5, 2
  %7 = load ptr, ptr @sym_t, align 8
  %8 = select i1 %6, ptr %7, ptr null
  br label %9

9:                                                ; preds = %3, %1
  %10 = phi ptr [ null, %1 ], [ %8, %3 ]
  ret ptr %10
}

; Function Attrs: nounwind uwtable
define dso_local ptr @plus(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %1, null
  %4 = icmp eq ptr %0, null
  br i1 %3, label %5, label %38

5:                                                ; preds = %2
  br i1 %4, label %6, label %98

6:                                                ; preds = %5
  %7 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = load ptr, ptr @inums, align 8, !tbaa !5
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  br label %98

12:                                               ; preds = %6
  %13 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %23

15:                                               ; preds = %12
  %16 = load ptr, ptr @heap, align 8, !tbaa !5
  %17 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %18 = icmp ult ptr %16, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %21

21:                                               ; preds = %19, %15
  %22 = getelementptr inbounds %struct.obj, ptr %16, i64 1
  store ptr %22, ptr @heap, align 8, !tbaa !5
  br label %34

23:                                               ; preds = %12
  %24 = load ptr, ptr @freelist, align 8, !tbaa !5
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  tail call void @gc_for_newcell()
  %27 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %28

28:                                               ; preds = %26, %23
  %29 = phi ptr [ %27, %26 ], [ %24, %23 ]
  %30 = getelementptr inbounds %struct.obj, ptr %29, i64 0, i32 2, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !9
  store ptr %31, ptr @freelist, align 8, !tbaa !5
  %32 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %33 = add nsw i64 %32, 1
  store i64 %33, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %34

34:                                               ; preds = %28, %21
  %35 = phi ptr [ %16, %21 ], [ %29, %28 ]
  store i16 0, ptr %35, align 8, !tbaa !35
  %36 = getelementptr inbounds %struct.obj, ptr %35, i64 0, i32 1
  store i16 2, ptr %36, align 2, !tbaa !14
  %37 = getelementptr inbounds %struct.obj, ptr %35, i64 0, i32 2
  store double 0.000000e+00, ptr %37, align 8, !tbaa !9
  br label %98

38:                                               ; preds = %2
  br i1 %4, label %43, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %41 = load i16, ptr %40, align 2, !tbaa !14
  %42 = icmp eq i16 %41, 2
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %39
  %44 = tail call ptr @err(ptr noundef nonnull @.str.31, ptr noundef %0)
  br label %45

45:                                               ; preds = %43, %39
  %46 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %47 = load i16, ptr %46, align 2, !tbaa !14
  %48 = icmp eq i16 %47, 2
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = tail call ptr @err(ptr noundef nonnull @.str.32, ptr noundef nonnull %1)
  br label %51

51:                                               ; preds = %49, %45
  %52 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %53 = load double, ptr %52, align 8, !tbaa !9
  %54 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %55 = load double, ptr %54, align 8, !tbaa !9
  %56 = fadd double %53, %55
  %57 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %58 = icmp sgt i64 %57, 0
  br i1 %58, label %59, label %72

59:                                               ; preds = %51
  %60 = fptosi double %56 to i64
  %61 = sitofp i64 %60 to double
  %62 = fsub double %56, %61
  %63 = fcmp oeq double %62, 0.000000e+00
  %64 = fcmp oge double %56, 0.000000e+00
  %65 = and i1 %64, %63
  %66 = icmp sgt i64 %57, %60
  %67 = select i1 %65, i1 %66, i1 false
  br i1 %67, label %68, label %72

68:                                               ; preds = %59
  %69 = load ptr, ptr @inums, align 8, !tbaa !5
  %70 = getelementptr inbounds ptr, ptr %69, i64 %60
  %71 = load ptr, ptr %70, align 8, !tbaa !5
  br label %98

72:                                               ; preds = %59, %51
  %73 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %74 = icmp eq i64 %73, 1
  br i1 %74, label %75, label %83

75:                                               ; preds = %72
  %76 = load ptr, ptr @heap, align 8, !tbaa !5
  %77 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %78 = icmp ult ptr %76, %77
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %81

81:                                               ; preds = %79, %75
  %82 = getelementptr inbounds %struct.obj, ptr %76, i64 1
  store ptr %82, ptr @heap, align 8, !tbaa !5
  br label %94

83:                                               ; preds = %72
  %84 = load ptr, ptr @freelist, align 8, !tbaa !5
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  tail call void @gc_for_newcell()
  %87 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %88

88:                                               ; preds = %86, %83
  %89 = phi ptr [ %87, %86 ], [ %84, %83 ]
  %90 = getelementptr inbounds %struct.obj, ptr %89, i64 0, i32 2, i32 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !9
  store ptr %91, ptr @freelist, align 8, !tbaa !5
  %92 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %93 = add nsw i64 %92, 1
  store i64 %93, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %94

94:                                               ; preds = %88, %81
  %95 = phi ptr [ %76, %81 ], [ %89, %88 ]
  store i16 0, ptr %95, align 8, !tbaa !35
  %96 = getelementptr inbounds %struct.obj, ptr %95, i64 0, i32 1
  store i16 2, ptr %96, align 2, !tbaa !14
  %97 = getelementptr inbounds %struct.obj, ptr %95, i64 0, i32 2
  store double %56, ptr %97, align 8, !tbaa !9
  br label %98

98:                                               ; preds = %94, %68, %9, %34, %5
  %99 = phi ptr [ %11, %9 ], [ %35, %34 ], [ %0, %5 ], [ %71, %68 ], [ %95, %94 ]
  ret ptr %99
}

; Function Attrs: nounwind uwtable
define dso_local ptr @ltimes(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %1, null
  %4 = icmp eq ptr %0, null
  br i1 %3, label %5, label %39

5:                                                ; preds = %2
  br i1 %4, label %6, label %99

6:                                                ; preds = %5
  %7 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %8 = icmp slt i64 %7, 2
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = load ptr, ptr @inums, align 8, !tbaa !5
  %11 = getelementptr inbounds ptr, ptr %10, i64 1
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  br label %99

13:                                               ; preds = %6
  %14 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %24

16:                                               ; preds = %13
  %17 = load ptr, ptr @heap, align 8, !tbaa !5
  %18 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %19 = icmp ult ptr %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %struct.obj, ptr %17, i64 1
  store ptr %23, ptr @heap, align 8, !tbaa !5
  br label %35

24:                                               ; preds = %13
  %25 = load ptr, ptr @freelist, align 8, !tbaa !5
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  tail call void @gc_for_newcell()
  %28 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi ptr [ %28, %27 ], [ %25, %24 ]
  %31 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2, i32 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  store ptr %32, ptr @freelist, align 8, !tbaa !5
  %33 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %35

35:                                               ; preds = %29, %22
  %36 = phi ptr [ %17, %22 ], [ %30, %29 ]
  store i16 0, ptr %36, align 8, !tbaa !35
  %37 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 1
  store i16 2, ptr %37, align 2, !tbaa !14
  %38 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2
  store double 1.000000e+00, ptr %38, align 8, !tbaa !9
  br label %99

39:                                               ; preds = %2
  br i1 %4, label %44, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %42 = load i16, ptr %41, align 2, !tbaa !14
  %43 = icmp eq i16 %42, 2
  br i1 %43, label %46, label %44

44:                                               ; preds = %39, %40
  %45 = tail call ptr @err(ptr noundef nonnull @.str.33, ptr noundef %0)
  br label %46

46:                                               ; preds = %44, %40
  %47 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %48 = load i16, ptr %47, align 2, !tbaa !14
  %49 = icmp eq i16 %48, 2
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call ptr @err(ptr noundef nonnull @.str.34, ptr noundef nonnull %1)
  br label %52

52:                                               ; preds = %50, %46
  %53 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %54 = load double, ptr %53, align 8, !tbaa !9
  %55 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %56 = load double, ptr %55, align 8, !tbaa !9
  %57 = fmul double %54, %56
  %58 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %73

60:                                               ; preds = %52
  %61 = fptosi double %57 to i64
  %62 = sitofp i64 %61 to double
  %63 = fsub double %57, %62
  %64 = fcmp oeq double %63, 0.000000e+00
  %65 = fcmp oge double %57, 0.000000e+00
  %66 = and i1 %65, %64
  %67 = icmp sgt i64 %58, %61
  %68 = select i1 %66, i1 %67, i1 false
  br i1 %68, label %69, label %73

69:                                               ; preds = %60
  %70 = load ptr, ptr @inums, align 8, !tbaa !5
  %71 = getelementptr inbounds ptr, ptr %70, i64 %61
  %72 = load ptr, ptr %71, align 8, !tbaa !5
  br label %99

73:                                               ; preds = %60, %52
  %74 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %75 = icmp eq i64 %74, 1
  br i1 %75, label %76, label %84

76:                                               ; preds = %73
  %77 = load ptr, ptr @heap, align 8, !tbaa !5
  %78 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %79 = icmp ult ptr %77, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %82

82:                                               ; preds = %80, %76
  %83 = getelementptr inbounds %struct.obj, ptr %77, i64 1
  store ptr %83, ptr @heap, align 8, !tbaa !5
  br label %95

84:                                               ; preds = %73
  %85 = load ptr, ptr @freelist, align 8, !tbaa !5
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  tail call void @gc_for_newcell()
  %88 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %89

89:                                               ; preds = %87, %84
  %90 = phi ptr [ %88, %87 ], [ %85, %84 ]
  %91 = getelementptr inbounds %struct.obj, ptr %90, i64 0, i32 2, i32 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  store ptr %92, ptr @freelist, align 8, !tbaa !5
  %93 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %94 = add nsw i64 %93, 1
  store i64 %94, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %95

95:                                               ; preds = %89, %82
  %96 = phi ptr [ %77, %82 ], [ %90, %89 ]
  store i16 0, ptr %96, align 8, !tbaa !35
  %97 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 1
  store i16 2, ptr %97, align 2, !tbaa !14
  %98 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2
  store double %57, ptr %98, align 8, !tbaa !9
  br label %99

99:                                               ; preds = %95, %69, %9, %35, %5
  %100 = phi ptr [ %12, %9 ], [ %36, %35 ], [ %0, %5 ], [ %72, %69 ], [ %96, %95 ]
  ret ptr %100
}

; Function Attrs: nounwind uwtable
define dso_local ptr @difference(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.35, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp eq ptr %1, null
  br i1 %11, label %12, label %57

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %14 = load double, ptr %13, align 8, !tbaa !9
  %15 = fneg double %14
  %16 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %12
  %19 = fptosi double %15 to i64
  %20 = sitofp i64 %19 to double
  %21 = fsub double %15, %20
  %22 = fcmp oeq double %21, 0.000000e+00
  %23 = fcmp ole double %14, 0.000000e+00
  %24 = and i1 %23, %22
  %25 = icmp sgt i64 %16, %19
  %26 = select i1 %24, i1 %25, i1 false
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = load ptr, ptr @inums, align 8, !tbaa !5
  %29 = getelementptr inbounds ptr, ptr %28, i64 %19
  %30 = load ptr, ptr %29, align 8, !tbaa !5
  br label %110

31:                                               ; preds = %18, %12
  %32 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load ptr, ptr @heap, align 8, !tbaa !5
  %36 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %37 = icmp ult ptr %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %40

40:                                               ; preds = %38, %34
  %41 = getelementptr inbounds %struct.obj, ptr %35, i64 1
  store ptr %41, ptr @heap, align 8, !tbaa !5
  br label %53

42:                                               ; preds = %31
  %43 = load ptr, ptr @freelist, align 8, !tbaa !5
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  tail call void @gc_for_newcell()
  %46 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %47

47:                                               ; preds = %45, %42
  %48 = phi ptr [ %46, %45 ], [ %43, %42 ]
  %49 = getelementptr inbounds %struct.obj, ptr %48, i64 0, i32 2, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !9
  store ptr %50, ptr @freelist, align 8, !tbaa !5
  %51 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %53

53:                                               ; preds = %47, %40
  %54 = phi ptr [ %35, %40 ], [ %48, %47 ]
  store i16 0, ptr %54, align 8, !tbaa !35
  %55 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 1
  store i16 2, ptr %55, align 2, !tbaa !14
  %56 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 2
  store double %15, ptr %56, align 8, !tbaa !9
  br label %110

57:                                               ; preds = %10
  %58 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %59 = load i16, ptr %58, align 2, !tbaa !14
  %60 = icmp eq i16 %59, 2
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = tail call ptr @err(ptr noundef nonnull @.str.36, ptr noundef nonnull %1)
  br label %63

63:                                               ; preds = %61, %57
  %64 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %65 = load double, ptr %64, align 8, !tbaa !9
  %66 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %67 = load double, ptr %66, align 8, !tbaa !9
  %68 = fsub double %65, %67
  %69 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %63
  %72 = fptosi double %68 to i64
  %73 = sitofp i64 %72 to double
  %74 = fsub double %68, %73
  %75 = fcmp oeq double %74, 0.000000e+00
  %76 = fcmp oge double %68, 0.000000e+00
  %77 = and i1 %76, %75
  %78 = icmp sgt i64 %69, %72
  %79 = select i1 %77, i1 %78, i1 false
  br i1 %79, label %80, label %84

80:                                               ; preds = %71
  %81 = load ptr, ptr @inums, align 8, !tbaa !5
  %82 = getelementptr inbounds ptr, ptr %81, i64 %72
  %83 = load ptr, ptr %82, align 8, !tbaa !5
  br label %110

84:                                               ; preds = %71, %63
  %85 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %86 = icmp eq i64 %85, 1
  br i1 %86, label %87, label %95

87:                                               ; preds = %84
  %88 = load ptr, ptr @heap, align 8, !tbaa !5
  %89 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %90 = icmp ult ptr %88, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %93

93:                                               ; preds = %91, %87
  %94 = getelementptr inbounds %struct.obj, ptr %88, i64 1
  store ptr %94, ptr @heap, align 8, !tbaa !5
  br label %106

95:                                               ; preds = %84
  %96 = load ptr, ptr @freelist, align 8, !tbaa !5
  %97 = icmp eq ptr %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  tail call void @gc_for_newcell()
  %99 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %100

100:                                              ; preds = %98, %95
  %101 = phi ptr [ %99, %98 ], [ %96, %95 ]
  %102 = getelementptr inbounds %struct.obj, ptr %101, i64 0, i32 2, i32 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !9
  store ptr %103, ptr @freelist, align 8, !tbaa !5
  %104 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %105 = add nsw i64 %104, 1
  store i64 %105, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %106

106:                                              ; preds = %100, %93
  %107 = phi ptr [ %88, %93 ], [ %101, %100 ]
  store i16 0, ptr %107, align 8, !tbaa !35
  %108 = getelementptr inbounds %struct.obj, ptr %107, i64 0, i32 1
  store i16 2, ptr %108, align 2, !tbaa !14
  %109 = getelementptr inbounds %struct.obj, ptr %107, i64 0, i32 2
  store double %68, ptr %109, align 8, !tbaa !9
  br label %110

110:                                              ; preds = %106, %80, %53, %27
  %111 = phi ptr [ %30, %27 ], [ %54, %53 ], [ %83, %80 ], [ %107, %106 ]
  ret ptr %111
}

; Function Attrs: nounwind uwtable
define dso_local ptr @Quotient(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.37, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp eq ptr %1, null
  br i1 %11, label %12, label %57

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %14 = load double, ptr %13, align 8, !tbaa !9
  %15 = fdiv double 1.000000e+00, %14
  %16 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %12
  %19 = fptosi double %15 to i64
  %20 = sitofp i64 %19 to double
  %21 = fsub double %15, %20
  %22 = fcmp oeq double %21, 0.000000e+00
  %23 = fcmp oge double %15, 0.000000e+00
  %24 = and i1 %23, %22
  %25 = icmp sgt i64 %16, %19
  %26 = select i1 %24, i1 %25, i1 false
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = load ptr, ptr @inums, align 8, !tbaa !5
  %29 = getelementptr inbounds ptr, ptr %28, i64 %19
  %30 = load ptr, ptr %29, align 8, !tbaa !5
  br label %110

31:                                               ; preds = %18, %12
  %32 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load ptr, ptr @heap, align 8, !tbaa !5
  %36 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %37 = icmp ult ptr %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %40

40:                                               ; preds = %38, %34
  %41 = getelementptr inbounds %struct.obj, ptr %35, i64 1
  store ptr %41, ptr @heap, align 8, !tbaa !5
  br label %53

42:                                               ; preds = %31
  %43 = load ptr, ptr @freelist, align 8, !tbaa !5
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  tail call void @gc_for_newcell()
  %46 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %47

47:                                               ; preds = %45, %42
  %48 = phi ptr [ %46, %45 ], [ %43, %42 ]
  %49 = getelementptr inbounds %struct.obj, ptr %48, i64 0, i32 2, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !9
  store ptr %50, ptr @freelist, align 8, !tbaa !5
  %51 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %53

53:                                               ; preds = %47, %40
  %54 = phi ptr [ %35, %40 ], [ %48, %47 ]
  store i16 0, ptr %54, align 8, !tbaa !35
  %55 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 1
  store i16 2, ptr %55, align 2, !tbaa !14
  %56 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 2
  store double %15, ptr %56, align 8, !tbaa !9
  br label %110

57:                                               ; preds = %10
  %58 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %59 = load i16, ptr %58, align 2, !tbaa !14
  %60 = icmp eq i16 %59, 2
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = tail call ptr @err(ptr noundef nonnull @.str.38, ptr noundef nonnull %1)
  br label %63

63:                                               ; preds = %61, %57
  %64 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %65 = load double, ptr %64, align 8, !tbaa !9
  %66 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %67 = load double, ptr %66, align 8, !tbaa !9
  %68 = fdiv double %65, %67
  %69 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %63
  %72 = fptosi double %68 to i64
  %73 = sitofp i64 %72 to double
  %74 = fsub double %68, %73
  %75 = fcmp oeq double %74, 0.000000e+00
  %76 = fcmp oge double %68, 0.000000e+00
  %77 = and i1 %76, %75
  %78 = icmp sgt i64 %69, %72
  %79 = select i1 %77, i1 %78, i1 false
  br i1 %79, label %80, label %84

80:                                               ; preds = %71
  %81 = load ptr, ptr @inums, align 8, !tbaa !5
  %82 = getelementptr inbounds ptr, ptr %81, i64 %72
  %83 = load ptr, ptr %82, align 8, !tbaa !5
  br label %110

84:                                               ; preds = %71, %63
  %85 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %86 = icmp eq i64 %85, 1
  br i1 %86, label %87, label %95

87:                                               ; preds = %84
  %88 = load ptr, ptr @heap, align 8, !tbaa !5
  %89 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %90 = icmp ult ptr %88, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %93

93:                                               ; preds = %91, %87
  %94 = getelementptr inbounds %struct.obj, ptr %88, i64 1
  store ptr %94, ptr @heap, align 8, !tbaa !5
  br label %106

95:                                               ; preds = %84
  %96 = load ptr, ptr @freelist, align 8, !tbaa !5
  %97 = icmp eq ptr %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  tail call void @gc_for_newcell()
  %99 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %100

100:                                              ; preds = %98, %95
  %101 = phi ptr [ %99, %98 ], [ %96, %95 ]
  %102 = getelementptr inbounds %struct.obj, ptr %101, i64 0, i32 2, i32 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !9
  store ptr %103, ptr @freelist, align 8, !tbaa !5
  %104 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %105 = add nsw i64 %104, 1
  store i64 %105, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %106

106:                                              ; preds = %100, %93
  %107 = phi ptr [ %88, %93 ], [ %101, %100 ]
  store i16 0, ptr %107, align 8, !tbaa !35
  %108 = getelementptr inbounds %struct.obj, ptr %107, i64 0, i32 1
  store i16 2, ptr %108, align 2, !tbaa !14
  %109 = getelementptr inbounds %struct.obj, ptr %107, i64 0, i32 2
  store double %68, ptr %109, align 8, !tbaa !9
  br label %110

110:                                              ; preds = %106, %80, %53, %27
  %111 = phi ptr [ %30, %27 ], [ %54, %53 ], [ %83, %80 ], [ %107, %106 ]
  ret ptr %111
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lllabs(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = icmp eq i16 %5, 2
  br i1 %6, label %9, label %7

7:                                                ; preds = %1, %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.39, ptr noundef %0)
  br label %9

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load double, ptr %10, align 8, !tbaa !9
  %12 = fcmp olt double %11, 0.000000e+00
  br i1 %12, label %13, label %56

13:                                               ; preds = %9
  %14 = fneg double %11
  %15 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %13
  %18 = fptosi double %14 to i64
  %19 = sitofp i64 %18 to double
  %20 = fsub double %14, %19
  %21 = fcmp oeq double %20, 0.000000e+00
  %22 = fcmp ole double %11, 0.000000e+00
  %23 = and i1 %22, %21
  %24 = icmp sgt i64 %15, %18
  %25 = select i1 %23, i1 %24, i1 false
  br i1 %25, label %26, label %30

26:                                               ; preds = %17
  %27 = load ptr, ptr @inums, align 8, !tbaa !5
  %28 = getelementptr inbounds ptr, ptr %27, i64 %18
  %29 = load ptr, ptr %28, align 8, !tbaa !5
  br label %56

30:                                               ; preds = %17, %13
  %31 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = load ptr, ptr @heap, align 8, !tbaa !5
  %35 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %36 = icmp ult ptr %34, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %39

39:                                               ; preds = %37, %33
  %40 = getelementptr inbounds %struct.obj, ptr %34, i64 1
  store ptr %40, ptr @heap, align 8, !tbaa !5
  br label %52

41:                                               ; preds = %30
  %42 = load ptr, ptr @freelist, align 8, !tbaa !5
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  tail call void @gc_for_newcell()
  %45 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %44, %41
  %47 = phi ptr [ %45, %44 ], [ %42, %41 ]
  %48 = getelementptr inbounds %struct.obj, ptr %47, i64 0, i32 2, i32 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !9
  store ptr %49, ptr @freelist, align 8, !tbaa !5
  %50 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %51 = add nsw i64 %50, 1
  store i64 %51, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %52

52:                                               ; preds = %46, %39
  %53 = phi ptr [ %34, %39 ], [ %47, %46 ]
  store i16 0, ptr %53, align 8, !tbaa !35
  %54 = getelementptr inbounds %struct.obj, ptr %53, i64 0, i32 1
  store i16 2, ptr %54, align 2, !tbaa !14
  %55 = getelementptr inbounds %struct.obj, ptr %53, i64 0, i32 2
  store double %14, ptr %55, align 8, !tbaa !9
  br label %56

56:                                               ; preds = %9, %52, %26
  %57 = phi ptr [ %29, %26 ], [ %53, %52 ], [ %0, %9 ]
  ret ptr %57
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lsqrt(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = icmp eq i16 %5, 2
  br i1 %6, label %9, label %7

7:                                                ; preds = %1, %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.40, ptr noundef %0)
  br label %9

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load double, ptr %10, align 8, !tbaa !9
  %12 = tail call double @sqrt(double noundef %11) #33
  %13 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %14 = icmp sgt i64 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %9
  %16 = fptosi double %12 to i64
  %17 = sitofp i64 %16 to double
  %18 = fsub double %12, %17
  %19 = fcmp oeq double %18, 0.000000e+00
  %20 = fcmp oge double %12, 0.000000e+00
  %21 = and i1 %20, %19
  %22 = icmp sgt i64 %13, %16
  %23 = select i1 %21, i1 %22, i1 false
  br i1 %23, label %24, label %28

24:                                               ; preds = %15
  %25 = load ptr, ptr @inums, align 8, !tbaa !5
  %26 = getelementptr inbounds ptr, ptr %25, i64 %16
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  br label %54

28:                                               ; preds = %15, %9
  %29 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %30 = icmp eq i64 %29, 1
  br i1 %30, label %31, label %39

31:                                               ; preds = %28
  %32 = load ptr, ptr @heap, align 8, !tbaa !5
  %33 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %34 = icmp ult ptr %32, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %struct.obj, ptr %32, i64 1
  store ptr %38, ptr @heap, align 8, !tbaa !5
  br label %50

39:                                               ; preds = %28
  %40 = load ptr, ptr @freelist, align 8, !tbaa !5
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  tail call void @gc_for_newcell()
  %43 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %44

44:                                               ; preds = %42, %39
  %45 = phi ptr [ %43, %42 ], [ %40, %39 ]
  %46 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 2, i32 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !9
  store ptr %47, ptr @freelist, align 8, !tbaa !5
  %48 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %49 = add nsw i64 %48, 1
  store i64 %49, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %50

50:                                               ; preds = %44, %37
  %51 = phi ptr [ %32, %37 ], [ %45, %44 ]
  store i16 0, ptr %51, align 8, !tbaa !35
  %52 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 1
  store i16 2, ptr %52, align 2, !tbaa !14
  %53 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 2
  store double %12, ptr %53, align 8, !tbaa !9
  br label %54

54:                                               ; preds = %24, %50
  %55 = phi ptr [ %27, %24 ], [ %51, %50 ]
  ret ptr %55
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #15

; Function Attrs: nounwind uwtable
define dso_local ptr @greaterp(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.41, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp eq ptr %1, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %12
  %17 = tail call ptr @err(ptr noundef nonnull @.str.42, ptr noundef %1)
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load double, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = fcmp ogt double %20, %22
  %24 = load ptr, ptr @sym_t, align 8
  %25 = select i1 %23, ptr %24, ptr null
  ret ptr %25
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lessp(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.43, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp eq ptr %1, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %12
  %17 = tail call ptr @err(ptr noundef nonnull @.str.44, ptr noundef %1)
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load double, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = fcmp olt double %20, %22
  %24 = load ptr, ptr @sym_t, align 8
  %25 = select i1 %23, ptr %24, ptr null
  ret ptr %25
}

; Function Attrs: nounwind uwtable
define dso_local ptr @greaterEp(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.41, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp eq ptr %1, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %12
  %17 = tail call ptr @err(ptr noundef nonnull @.str.42, ptr noundef %1)
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load double, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = fcmp ult double %20, %22
  %24 = load ptr, ptr @sym_t, align 8
  %25 = select i1 %23, ptr null, ptr %24
  ret ptr %25
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lessEp(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.43, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp eq ptr %1, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %12
  %17 = tail call ptr @err(ptr noundef nonnull @.str.44, ptr noundef %1)
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load double, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = fcmp ugt double %20, %22
  %24 = load ptr, ptr @sym_t, align 8
  %25 = select i1 %23, ptr null, ptr %24
  ret ptr %25
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lmax(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = icmp eq ptr %0, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  %9 = icmp eq i16 %8, 2
  br i1 %9, label %12, label %10

10:                                               ; preds = %4, %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.45, ptr noundef %0)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call ptr @err(ptr noundef nonnull @.str.46, ptr noundef nonnull %1)
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load double, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = fcmp ogt double %20, %22
  %24 = select i1 %23, ptr %0, ptr %1
  br label %25

25:                                               ; preds = %2, %18
  %26 = phi ptr [ %24, %18 ], [ %0, %2 ]
  ret ptr %26
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lmin(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = icmp eq ptr %0, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  %9 = icmp eq i16 %8, 2
  br i1 %9, label %12, label %10

10:                                               ; preds = %4, %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.47, ptr noundef %0)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call ptr @err(ptr noundef nonnull @.str.48, ptr noundef nonnull %1)
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load double, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = fcmp olt double %20, %22
  %24 = select i1 %23, ptr %0, ptr %1
  br label %25

25:                                               ; preds = %2, %18
  %26 = phi ptr [ %24, %18 ], [ %0, %2 ]
  ret ptr %26
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @eq(ptr noundef readnone %0, ptr noundef readnone %1) #8 {
  %3 = icmp eq ptr %0, %1
  %4 = load ptr, ptr @sym_t, align 8
  %5 = select i1 %3, ptr %4, ptr null
  ret ptr %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @eql(ptr noundef readonly %0, ptr noundef readonly %1) #12 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %26

6:                                                ; preds = %2
  %7 = icmp eq ptr %0, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %10 = load i16, ptr %9, align 2, !tbaa !14
  %11 = icmp ne i16 %10, 2
  %12 = icmp eq ptr %1, null
  %13 = or i1 %12, %11
  br i1 %13, label %26, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %16 = load i16, ptr %15, align 2, !tbaa !14
  %17 = icmp eq i16 %16, 2
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %20 = load double, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = fcmp oeq double %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %26

26:                                               ; preds = %6, %18, %14, %8, %24, %4
  %27 = phi ptr [ %5, %4 ], [ %25, %24 ], [ null, %8 ], [ null, %14 ], [ null, %18 ], [ null, %6 ]
  ret ptr %27
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symcons(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = load ptr, ptr @heap, align 8, !tbaa !5
  %7 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %8 = icmp ult ptr %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %struct.obj, ptr %6, i64 1
  store ptr %12, ptr @heap, align 8, !tbaa !5
  br label %24

13:                                               ; preds = %2
  %14 = load ptr, ptr @freelist, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  tail call void @gc_for_newcell()
  %17 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi ptr [ %17, %16 ], [ %14, %13 ]
  %20 = getelementptr inbounds %struct.obj, ptr %19, i64 0, i32 2, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  store ptr %21, ptr @freelist, align 8, !tbaa !5
  %22 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %23 = add nsw i64 %22, 1
  store i64 %23, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %24

24:                                               ; preds = %18, %11
  %25 = phi ptr [ %6, %11 ], [ %19, %18 ]
  store i16 0, ptr %25, align 8, !tbaa !35
  %26 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  store i16 3, ptr %26, align 2, !tbaa !14
  %27 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2
  store ptr %0, ptr %27, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !9
  ret ptr %25
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @symbolp(ptr noundef readonly %0) #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = icmp eq i16 %5, 3
  %7 = load ptr, ptr @sym_t, align 8
  %8 = select i1 %6, ptr %7, ptr null
  br label %9

9:                                                ; preds = %3, %1
  %10 = phi ptr [ null, %1 ], [ %8, %3 ]
  ret ptr %10
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @err_ubv(ptr noundef %0) local_unnamed_addr #6 {
  %2 = tail call ptr @err(ptr noundef nonnull @.str.49, ptr noundef %0)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symbol_boundp(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 3
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = tail call ptr @envlookup(ptr noundef %0, ptr noundef %1)
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %19 = icmp eq ptr %17, %18
  %20 = load ptr, ptr @sym_t, align 8
  %21 = select i1 %19, ptr null, ptr %20
  br label %22

22:                                               ; preds = %15, %13
  %23 = phi ptr [ %14, %13 ], [ %21, %15 ]
  ret ptr %23
}

; Function Attrs: nounwind uwtable
define dso_local ptr @envlookup(ptr noundef readnone %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %59, label %4

4:                                                ; preds = %2, %53
  %5 = phi ptr [ %55, %53 ], [ %1, %2 ]
  %6 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 1
  br i1 %8, label %9, label %57

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = icmp eq i16 %15, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %9, %13
  %18 = tail call ptr @err(ptr noundef nonnull @.str.85, ptr noundef %11)
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  %22 = icmp eq ptr %21, null
  br i1 %22, label %53, label %23

23:                                               ; preds = %19, %43
  %24 = phi ptr [ %27, %43 ], [ %11, %19 ]
  %25 = phi ptr [ %45, %43 ], [ %21, %19 ]
  %26 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  %29 = load i16, ptr %28, align 2, !tbaa !14
  %30 = icmp eq i16 %29, 1
  br i1 %30, label %31, label %47

31:                                               ; preds = %23
  %32 = icmp eq ptr %27, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 1
  %35 = load i16, ptr %34, align 2, !tbaa !14
  %36 = icmp eq i16 %35, 1
  br i1 %36, label %39, label %37

37:                                               ; preds = %31, %33
  %38 = tail call ptr @err(ptr noundef nonnull @.str.86, ptr noundef %11)
  br label %39

39:                                               ; preds = %37, %33
  %40 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !9
  %42 = icmp eq ptr %41, %0
  br i1 %42, label %59, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !9
  %46 = icmp eq ptr %45, null
  br i1 %46, label %53, label %23, !llvm.loop !54

47:                                               ; preds = %23
  %48 = icmp eq i16 %29, 3
  %49 = icmp eq ptr %25, %0
  %50 = select i1 %48, i1 %49, i1 false
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = tail call ptr @cons(ptr noundef %27, ptr noundef null)
  br label %59

53:                                               ; preds = %43, %19, %47
  %54 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !9
  %56 = icmp eq ptr %55, null
  br i1 %56, label %59, label %4, !llvm.loop !55

57:                                               ; preds = %4
  %58 = tail call ptr @err(ptr noundef nonnull @.str.87, ptr noundef nonnull %1)
  br label %59

59:                                               ; preds = %53, %39, %2, %57, %51
  %60 = phi ptr [ %52, %51 ], [ null, %57 ], [ null, %2 ], [ %27, %39 ], [ null, %53 ]
  ret ptr %60
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symbol_value(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 3
  br i1 %7, label %10, label %8

8:                                                ; preds = %2, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = tail call ptr @envlookup(ptr noundef %0, ptr noundef %1)
  %12 = icmp eq ptr %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !9
  br label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %20 = icmp eq ptr %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = tail call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %0)
  br label %23

23:                                               ; preds = %16, %21, %13
  %24 = phi ptr [ %15, %13 ], [ %18, %21 ], [ %18, %16 ]
  ret ptr %24
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @must_malloc(i64 noundef %0) local_unnamed_addr #6 {
  %2 = tail call i64 @llvm.umax.i64(i64 %0, i64 1)
  %3 = tail call noalias ptr @malloc(i64 noundef %2) #39
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %7

7:                                                ; preds = %5, %1
  ret ptr %3
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #16

; Function Attrs: nounwind uwtable
define dso_local ptr @gen_intern(ptr noundef %0, i64 noundef %1) local_unnamed_addr #6 {
  %3 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %4 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  %5 = icmp sgt i64 %4, 1
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = load i8, ptr %0, align 1, !tbaa !9
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %6, %9
  %10 = phi i8 [ %18, %9 ], [ %7, %6 ]
  %11 = phi i64 [ %17, %9 ], [ 0, %6 ]
  %12 = phi ptr [ %14, %9 ], [ %0, %6 ]
  %13 = sext i8 %10 to i64
  %14 = getelementptr inbounds i8, ptr %12, i64 1
  %15 = mul nsw i64 %11, 17
  %16 = xor i64 %15, %13
  %17 = srem i64 %16, %4
  %18 = load i8, ptr %14, align 1, !tbaa !9
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %9, !llvm.loop !56

20:                                               ; preds = %9, %6
  %21 = phi i64 [ 0, %6 ], [ %17, %9 ]
  %22 = load ptr, ptr @obarray, align 8, !tbaa !5
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  br label %24

24:                                               ; preds = %2, %20
  %25 = phi i64 [ %21, %20 ], [ 0, %2 ]
  %26 = phi ptr [ %23, %20 ], [ @oblistvar, %2 ]
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %24, %46
  %30 = phi ptr [ %48, %46 ], [ %27, %24 ]
  %31 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !9
  %35 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %0, ptr noundef nonnull dereferenceable(1) %34) #34
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %46

37:                                               ; preds = %29
  store i64 %3, ptr @nointerrupt, align 8, !tbaa !10
  %38 = icmp eq i64 %3, 0
  %39 = load i64, ptr @interrupt_differed, align 8
  %40 = icmp eq i64 %39, 1
  %41 = select i1 %38, i1 %40, i1 false
  br i1 %41, label %42, label %156

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %44 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %45 = load ptr, ptr %43, align 8, !tbaa !9
  br label %156

46:                                               ; preds = %29
  %47 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !9
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %29, !llvm.loop !57

50:                                               ; preds = %46, %24
  %51 = icmp eq i64 %1, 1
  br i1 %51, label %52, label %62

52:                                               ; preds = %50
  %53 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #34
  %54 = add i64 %53, 1
  %55 = tail call i64 @llvm.umax.i64(i64 %54, i64 1)
  %56 = tail call noalias ptr @malloc(i64 noundef %55) #39
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %60

60:                                               ; preds = %52, %58
  %61 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %56, ptr noundef nonnull dereferenceable(1) %0) #33
  br label %62

62:                                               ; preds = %50, %60
  %63 = phi ptr [ %56, %60 ], [ %0, %50 ]
  %64 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %65 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %66 = icmp eq i64 %65, 1
  br i1 %66, label %67, label %75

67:                                               ; preds = %62
  %68 = load ptr, ptr @heap, align 8, !tbaa !5
  %69 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %70 = icmp ult ptr %68, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %struct.obj, ptr %68, i64 1
  store ptr %74, ptr @heap, align 8, !tbaa !5
  br label %86

75:                                               ; preds = %62
  %76 = load ptr, ptr @freelist, align 8, !tbaa !5
  %77 = icmp eq ptr %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  tail call void @gc_for_newcell()
  %79 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %80

80:                                               ; preds = %78, %75
  %81 = phi ptr [ %79, %78 ], [ %76, %75 ]
  %82 = getelementptr inbounds %struct.obj, ptr %81, i64 0, i32 2, i32 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !9
  store ptr %83, ptr @freelist, align 8, !tbaa !5
  %84 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %85 = add nsw i64 %84, 1
  store i64 %85, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %86

86:                                               ; preds = %73, %80
  %87 = phi ptr [ %68, %73 ], [ %81, %80 ]
  store i16 0, ptr %87, align 8, !tbaa !35
  %88 = getelementptr inbounds %struct.obj, ptr %87, i64 0, i32 1
  store i16 3, ptr %88, align 2, !tbaa !14
  %89 = getelementptr inbounds %struct.obj, ptr %87, i64 0, i32 2
  store ptr %63, ptr %89, align 8, !tbaa !9
  %90 = getelementptr inbounds %struct.obj, ptr %87, i64 0, i32 2, i32 0, i32 1
  store ptr %64, ptr %90, align 8, !tbaa !9
  %91 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  %92 = icmp sgt i64 %91, 1
  br i1 %92, label %93, label %122

93:                                               ; preds = %86
  %94 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %95 = icmp eq i64 %94, 1
  br i1 %95, label %96, label %104

96:                                               ; preds = %93
  %97 = load ptr, ptr @heap, align 8, !tbaa !5
  %98 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %99 = icmp ult ptr %97, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %102

102:                                              ; preds = %100, %96
  %103 = getelementptr inbounds %struct.obj, ptr %97, i64 1
  store ptr %103, ptr @heap, align 8, !tbaa !5
  br label %115

104:                                              ; preds = %93
  %105 = load ptr, ptr @freelist, align 8, !tbaa !5
  %106 = icmp eq ptr %105, null
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  tail call void @gc_for_newcell() #38
  %108 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %109

109:                                              ; preds = %107, %104
  %110 = phi ptr [ %108, %107 ], [ %105, %104 ]
  %111 = getelementptr inbounds %struct.obj, ptr %110, i64 0, i32 2, i32 0, i32 1
  %112 = load ptr, ptr %111, align 8, !tbaa !9
  store ptr %112, ptr @freelist, align 8, !tbaa !5
  %113 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %114 = add nsw i64 %113, 1
  store i64 %114, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %115

115:                                              ; preds = %102, %109
  %116 = phi ptr [ %97, %102 ], [ %110, %109 ]
  store i16 0, ptr %116, align 8, !tbaa !35
  %117 = getelementptr inbounds %struct.obj, ptr %116, i64 0, i32 1
  store i16 1, ptr %117, align 2, !tbaa !14
  %118 = getelementptr inbounds %struct.obj, ptr %116, i64 0, i32 2
  store ptr %87, ptr %118, align 8, !tbaa !9
  %119 = getelementptr inbounds %struct.obj, ptr %116, i64 0, i32 2, i32 0, i32 1
  store ptr %27, ptr %119, align 8, !tbaa !9
  %120 = load ptr, ptr @obarray, align 8, !tbaa !5
  %121 = getelementptr inbounds ptr, ptr %120, i64 %25
  store ptr %116, ptr %121, align 8, !tbaa !5
  br label %122

122:                                              ; preds = %115, %86
  %123 = load ptr, ptr @oblistvar, align 8, !tbaa !5
  %124 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %125 = icmp eq i64 %124, 1
  br i1 %125, label %126, label %134

126:                                              ; preds = %122
  %127 = load ptr, ptr @heap, align 8, !tbaa !5
  %128 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %129 = icmp ult ptr %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %132

132:                                              ; preds = %130, %126
  %133 = getelementptr inbounds %struct.obj, ptr %127, i64 1
  store ptr %133, ptr @heap, align 8, !tbaa !5
  br label %145

134:                                              ; preds = %122
  %135 = load ptr, ptr @freelist, align 8, !tbaa !5
  %136 = icmp eq ptr %135, null
  br i1 %136, label %137, label %139

137:                                              ; preds = %134
  tail call void @gc_for_newcell() #38
  %138 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %139

139:                                              ; preds = %137, %134
  %140 = phi ptr [ %138, %137 ], [ %135, %134 ]
  %141 = getelementptr inbounds %struct.obj, ptr %140, i64 0, i32 2, i32 0, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !9
  store ptr %142, ptr @freelist, align 8, !tbaa !5
  %143 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %144 = add nsw i64 %143, 1
  store i64 %144, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %145

145:                                              ; preds = %132, %139
  %146 = phi ptr [ %127, %132 ], [ %140, %139 ]
  store i16 0, ptr %146, align 8, !tbaa !35
  %147 = getelementptr inbounds %struct.obj, ptr %146, i64 0, i32 1
  store i16 1, ptr %147, align 2, !tbaa !14
  %148 = getelementptr inbounds %struct.obj, ptr %146, i64 0, i32 2
  store ptr %87, ptr %148, align 8, !tbaa !9
  %149 = getelementptr inbounds %struct.obj, ptr %146, i64 0, i32 2, i32 0, i32 1
  store ptr %123, ptr %149, align 8, !tbaa !9
  store ptr %146, ptr @oblistvar, align 8, !tbaa !5
  store i64 %3, ptr @nointerrupt, align 8, !tbaa !10
  %150 = icmp eq i64 %3, 0
  %151 = load i64, ptr @interrupt_differed, align 8
  %152 = icmp eq i64 %151, 1
  %153 = select i1 %150, i1 %152, i1 false
  br i1 %153, label %154, label %156

154:                                              ; preds = %145
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %155 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %156

156:                                              ; preds = %42, %37, %154, %145
  %157 = phi ptr [ %87, %145 ], [ %87, %154 ], [ %32, %37 ], [ %45, %42 ]
  ret ptr %157
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: nounwind uwtable
define dso_local ptr @cintern(ptr noundef %0) local_unnamed_addr #6 {
  %2 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define dso_local ptr @rintern(ptr noundef %0) local_unnamed_addr #6 {
  %2 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 1)
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define dso_local ptr @intern(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  switch i16 %5, label %12 [
    i16 3, label %6
    i16 13, label %9
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !9
  br label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %14

12:                                               ; preds = %3, %1
  %13 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %14

14:                                               ; preds = %6, %9, %12
  %15 = phi ptr [ %8, %6 ], [ %11, %9 ], [ null, %12 ]
  %16 = tail call ptr @gen_intern(ptr noundef %15, i64 noundef 1)
  ret ptr %16
}

; Function Attrs: nounwind uwtable
define dso_local ptr @subrcons(i64 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #6 {
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %3
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %3
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = trunc i64 %0 to i16
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 %27, ptr %28, align 2, !tbaa !14
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %2, ptr %30, align 8, !tbaa !9
  ret ptr %26
}

; Function Attrs: nounwind uwtable
define dso_local ptr @closure(ptr noundef %0, ptr noundef %1) #6 {
  %3 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = load ptr, ptr @heap, align 8, !tbaa !5
  %7 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %8 = icmp ult ptr %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %struct.obj, ptr %6, i64 1
  store ptr %12, ptr @heap, align 8, !tbaa !5
  br label %24

13:                                               ; preds = %2
  %14 = load ptr, ptr @freelist, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  tail call void @gc_for_newcell()
  %17 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi ptr [ %17, %16 ], [ %14, %13 ]
  %20 = getelementptr inbounds %struct.obj, ptr %19, i64 0, i32 2, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  store ptr %21, ptr @freelist, align 8, !tbaa !5
  %22 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %23 = add nsw i64 %22, 1
  store i64 %23, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %24

24:                                               ; preds = %18, %11
  %25 = phi ptr [ %6, %11 ], [ %19, %18 ]
  store i16 0, ptr %25, align 8, !tbaa !35
  %26 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  store i16 11, ptr %26, align 2, !tbaa !14
  %27 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2
  store ptr %0, ptr %27, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !9
  ret ptr %25
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_protect(ptr noundef %0) local_unnamed_addr #6 {
  %2 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %6

6:                                                ; preds = %1, %4
  store ptr %0, ptr %2, align 8, !tbaa !58
  %7 = getelementptr inbounds %struct.gc_protected, ptr %2, i64 0, i32 1
  store i64 1, ptr %7, align 8, !tbaa !60
  %8 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.gc_protected, ptr %2, i64 0, i32 2
  store ptr %8, ptr %9, align 8, !tbaa !61
  store ptr %2, ptr @protected_registers, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_protect_n(ptr noundef %0, i64 noundef %1) local_unnamed_addr #6 {
  %3 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %7

7:                                                ; preds = %2, %5
  store ptr %0, ptr %3, align 8, !tbaa !58
  %8 = getelementptr inbounds %struct.gc_protected, ptr %3, i64 0, i32 1
  store i64 %1, ptr %8, align 8, !tbaa !60
  %9 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.gc_protected, ptr %3, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !61
  store ptr %3, ptr @protected_registers, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_protect_sym(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %1, i64 noundef 0)
  store ptr %3, ptr %0, align 8, !tbaa !5
  %4 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %8

8:                                                ; preds = %2, %6
  store ptr %0, ptr %4, align 8, !tbaa !58
  %9 = getelementptr inbounds %struct.gc_protected, ptr %4, i64 0, i32 1
  store i64 1, ptr %9, align 8, !tbaa !60
  %10 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.gc_protected, ptr %4, i64 0, i32 2
  store ptr %10, ptr %11, align 8, !tbaa !61
  store ptr %4, ptr @protected_registers, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @scan_registers() local_unnamed_addr #6 {
  %1 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %2 = icmp eq ptr %1, null
  br i1 %2, label %124, label %3

3:                                                ; preds = %0, %120
  %4 = phi ptr [ %122, %120 ], [ %1, %0 ]
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = getelementptr inbounds %struct.gc_protected, ptr %4, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !60
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %9, label %120

9:                                                ; preds = %3, %116
  %10 = phi i64 [ %118, %116 ], [ 0, %3 ]
  %11 = getelementptr inbounds ptr, ptr %5, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = icmp eq ptr %12, null
  br i1 %13, label %116, label %14

14:                                               ; preds = %9
  %15 = load i16, ptr %12, align 8, !tbaa !35
  %16 = icmp eq i16 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  br label %116

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 1
  %22 = load i16, ptr %21, align 2, !tbaa !14
  %23 = sext i16 %22 to i32
  switch i32 %23, label %84 [
    i32 2, label %24
    i32 1, label %24
    i32 3, label %24
    i32 11, label %24
    i32 4, label %24
    i32 5, label %24
    i32 6, label %24
    i32 21, label %24
    i32 7, label %24
    i32 19, label %24
    i32 20, label %24
    i32 8, label %24
    i32 9, label %24
    i32 10, label %24
  ]

24:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20
  %25 = load ptr, ptr @heap, align 8, !tbaa !5
  %26 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %27 = icmp ult ptr %25, %26
  br i1 %27, label %82, label %28

28:                                               ; preds = %24
  %29 = load i1, ptr @inside_err, align 8
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %30 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.17, ptr noundef nonnull @.str.26)
  br label %34

34:                                               ; preds = %32, %28
  %35 = load i64, ptr @errjmp_ok, align 8, !tbaa !10
  %36 = icmp eq i64 %35, 1
  br i1 %36, label %37, label %72

37:                                               ; preds = %34
  store i1 true, ptr @inside_err, align 8
  %38 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 1
  %42 = load i16, ptr %41, align 2, !tbaa !14
  %43 = icmp eq i16 %42, 3
  br i1 %43, label %46, label %44

44:                                               ; preds = %40, %37
  %45 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %38) #40
  br label %46

46:                                               ; preds = %40, %44
  %47 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %47, align 8, !tbaa !9
  %48 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %49 = icmp eq ptr %48, null
  br i1 %49, label %71, label %50

50:                                               ; preds = %46
  %51 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  %52 = load ptr, ptr @sym_catchall, align 8
  br label %53

53:                                               ; preds = %67, %50
  %54 = phi ptr [ %48, %50 ], [ %69, %67 ]
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = icmp eq ptr %55, %51
  %57 = icmp eq ptr %55, %52
  %58 = select i1 %56, i1 true, i1 %57
  br i1 %58, label %59, label %67

59:                                               ; preds = %53
  br i1 %29, label %63, label %60

60:                                               ; preds = %59
  %61 = tail call ptr @strcons(i64 noundef 18, ptr noundef nonnull @.str.26) #33
  %62 = tail call ptr @cons(ptr noundef %61, ptr noundef null) #38
  br label %63

63:                                               ; preds = %60, %59
  %64 = phi ptr [ %62, %60 ], [ null, %59 ]
  %65 = getelementptr inbounds %struct.catch_frame, ptr %54, i64 0, i32 1
  store ptr %64, ptr %65, align 8, !tbaa !19
  store i64 0, ptr @nointerrupt, align 8, !tbaa !10
  store i1 false, ptr @inside_err, align 8
  %66 = getelementptr inbounds %struct.catch_frame, ptr %54, i64 0, i32 2
  tail call void @longjmp(ptr noundef nonnull %66, i32 noundef 2) #35
  unreachable

67:                                               ; preds = %53
  %68 = getelementptr inbounds %struct.catch_frame, ptr %54, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !5
  %70 = icmp eq ptr %69, null
  br i1 %70, label %71, label %53, !llvm.loop !20

71:                                               ; preds = %67, %46
  store i1 false, ptr @inside_err, align 8
  tail call void @longjmp(ptr noundef nonnull @errjmp, i32 noundef 1) #35
  unreachable

72:                                               ; preds = %34
  %73 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.242)
  br label %77

77:                                               ; preds = %75, %72
  %78 = load ptr, ptr @fatal_exit_hook, align 8, !tbaa !5
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @exit(i32 noundef 10) #35
  unreachable

81:                                               ; preds = %77
  tail call void %78() #33
  br label %82

82:                                               ; preds = %81, %24
  %83 = getelementptr inbounds %struct.obj, ptr %25, i64 1
  store ptr %83, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %25, ptr noundef nonnull align 8 dereferenceable(24) %12, i64 24, i1 false)
  br label %113

84:                                               ; preds = %20
  %85 = sext i16 %22 to i64
  %86 = load ptr, ptr @user_types, align 8, !tbaa !5
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %90 = icmp eq ptr %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %93

93:                                               ; preds = %91, %88
  store ptr %89, ptr @user_types, align 8, !tbaa !5
  br label %94

94:                                               ; preds = %93, %84
  %95 = phi ptr [ %89, %93 ], [ %86, %84 ]
  %96 = icmp ult i16 %22, 100
  br i1 %96, label %97, label %101

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.user_type_hooks, ptr %95, i64 %85
  %99 = load ptr, ptr %98, align 8, !tbaa !62
  %100 = icmp eq ptr %99, null
  br i1 %100, label %105, label %103

101:                                              ; preds = %94
  %102 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

103:                                              ; preds = %97
  %104 = tail call ptr %99(ptr noundef nonnull %12) #33
  br label %113

105:                                              ; preds = %97
  %106 = load ptr, ptr @heap, align 8, !tbaa !5
  %107 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %108 = icmp ult ptr %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %111

111:                                              ; preds = %109, %105
  %112 = getelementptr inbounds %struct.obj, ptr %106, i64 1
  store ptr %112, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %106, ptr noundef nonnull align 8 dereferenceable(24) %12, i64 24, i1 false)
  br label %113

113:                                              ; preds = %111, %103, %82
  %114 = phi ptr [ %104, %103 ], [ %106, %111 ], [ %25, %82 ]
  store i16 1, ptr %12, align 8, !tbaa !35
  %115 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2
  store ptr %114, ptr %115, align 8, !tbaa !9
  br label %116

116:                                              ; preds = %9, %17, %113
  %117 = phi ptr [ %19, %17 ], [ %114, %113 ], [ null, %9 ]
  store ptr %117, ptr %11, align 8, !tbaa !5
  %118 = add nuw nsw i64 %10, 1
  %119 = icmp eq i64 %118, %7
  br i1 %119, label %120, label %9, !llvm.loop !63

120:                                              ; preds = %116, %3
  %121 = getelementptr inbounds %struct.gc_protected, ptr %4, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !5
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %3, !llvm.loop !64

124:                                              ; preds = %120, %0
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @gc_relocate(ptr noundef %0) local_unnamed_addr #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %53, label %3

3:                                                ; preds = %1
  %4 = load i16, ptr %0, align 8, !tbaa !35
  %5 = icmp eq i16 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !9
  br label %53

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %11 = load i16, ptr %10, align 2, !tbaa !14
  %12 = sext i16 %11 to i32
  switch i32 %12, label %21 [
    i32 2, label %13
    i32 1, label %13
    i32 3, label %13
    i32 11, label %13
    i32 4, label %13
    i32 5, label %13
    i32 6, label %13
    i32 21, label %13
    i32 7, label %13
    i32 19, label %13
    i32 20, label %13
    i32 8, label %13
    i32 9, label %13
    i32 10, label %13
  ]

13:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9
  %14 = load ptr, ptr @heap, align 8, !tbaa !5
  %15 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %16 = icmp ult ptr %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %struct.obj, ptr %14, i64 1
  store ptr %20, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, ptr noundef nonnull align 8 dereferenceable(24) %0, i64 24, i1 false)
  br label %50

21:                                               ; preds = %9
  %22 = sext i16 %11 to i64
  %23 = load ptr, ptr @user_types, align 8, !tbaa !5
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %30

30:                                               ; preds = %28, %25
  store ptr %26, ptr @user_types, align 8, !tbaa !5
  br label %31

31:                                               ; preds = %30, %21
  %32 = phi ptr [ %26, %30 ], [ %23, %21 ]
  %33 = icmp ult i16 %11, 100
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.user_type_hooks, ptr %32, i64 %22
  %36 = load ptr, ptr %35, align 8, !tbaa !62
  %37 = icmp eq ptr %36, null
  br i1 %37, label %42, label %40

38:                                               ; preds = %31
  %39 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

40:                                               ; preds = %34
  %41 = tail call ptr %36(ptr noundef nonnull %0) #33
  br label %50

42:                                               ; preds = %34
  %43 = load ptr, ptr @heap, align 8, !tbaa !5
  %44 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %45 = icmp ult ptr %43, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %48

48:                                               ; preds = %46, %42
  %49 = getelementptr inbounds %struct.obj, ptr %43, i64 1
  store ptr %49, ptr @heap, align 8, !tbaa !5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %43, ptr noundef nonnull align 8 dereferenceable(24) %0, i64 24, i1 false)
  br label %50

50:                                               ; preds = %40, %48, %19
  %51 = phi ptr [ %41, %40 ], [ %43, %48 ], [ %14, %19 ]
  store i16 1, ptr %0, align 8, !tbaa !35
  %52 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  store ptr %51, ptr %52, align 8, !tbaa !9
  br label %53

53:                                               ; preds = %1, %50, %6
  %54 = phi ptr [ %8, %6 ], [ %51, %50 ], [ null, %1 ]
  ret ptr %54
}

; Function Attrs: nounwind uwtable
define dso_local void @init_storage() local_unnamed_addr #6 {
  %1 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #33
  %2 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  store ptr %1, ptr @stack_start_ptr, align 8, !tbaa !5
  br label %5

5:                                                ; preds = %4, %0
  call void @init_storage_1()
  call void @init_storage_a() #33
  %6 = load ptr, ptr @user_types, align 8, !tbaa !5
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %13

13:                                               ; preds = %11, %8
  store ptr %9, ptr @user_types, align 8, !tbaa !5
  br label %14

14:                                               ; preds = %13, %5
  %15 = phi ptr [ %9, %13 ], [ %6, %5 ]
  %16 = getelementptr inbounds %struct.user_type_hooks, ptr %15, i64 17
  %17 = getelementptr inbounds %struct.user_type_hooks, ptr %15, i64 17, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  store ptr @file_gc_free, ptr %17, align 8, !tbaa !48
  %18 = getelementptr inbounds %struct.user_type_hooks, ptr %15, i64 17, i32 4
  store ptr @file_prin1, ptr %18, align 8, !tbaa !65
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_storage_1() local_unnamed_addr #6 {
  %1 = tail call noalias dereferenceable_or_null(5121) ptr @malloc(i64 noundef 5121) #39
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %5

5:                                                ; preds = %0, %3
  store ptr %1, ptr @tkbuffer, align 8, !tbaa !5
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %7 = icmp eq i64 %6, 1
  %8 = load i64, ptr @nheaps, align 8
  %9 = icmp ne i64 %8, 2
  %10 = select i1 %7, i1 %9, i1 false
  %11 = icmp slt i64 %8, 1
  %12 = select i1 %10, i1 true, i1 %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = tail call ptr @err(ptr noundef nonnull @.str.52, ptr noundef null)
  %15 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %16

16:                                               ; preds = %5, %13
  %17 = phi i64 [ %8, %5 ], [ %15, %13 ]
  %18 = shl i64 %17, 3
  %19 = tail call i64 @llvm.umax.i64(i64 %18, i64 1)
  %20 = tail call noalias ptr @malloc(i64 noundef %19) #39
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %24 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %16, %22
  %26 = phi i64 [ %17, %16 ], [ %24, %22 ]
  store ptr %20, ptr @heaps, align 8, !tbaa !5
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %61

28:                                               ; preds = %25
  %29 = and i64 %26, 3
  %30 = icmp ult i64 %26, 4
  br i1 %30, label %50, label %31

31:                                               ; preds = %28
  %32 = and i64 %26, -4
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %47, %33 ]
  %35 = phi i64 [ 0, %31 ], [ %48, %33 ]
  %36 = load ptr, ptr @heaps, align 8, !tbaa !5
  %37 = getelementptr inbounds ptr, ptr %36, i64 %34
  store ptr null, ptr %37, align 8, !tbaa !5
  %38 = or i64 %34, 1
  %39 = load ptr, ptr @heaps, align 8, !tbaa !5
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  store ptr null, ptr %40, align 8, !tbaa !5
  %41 = or i64 %34, 2
  %42 = load ptr, ptr @heaps, align 8, !tbaa !5
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  store ptr null, ptr %43, align 8, !tbaa !5
  %44 = or i64 %34, 3
  %45 = load ptr, ptr @heaps, align 8, !tbaa !5
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  store ptr null, ptr %46, align 8, !tbaa !5
  %47 = add nuw nsw i64 %34, 4
  %48 = add i64 %35, 4
  %49 = icmp eq i64 %48, %32
  br i1 %49, label %50, label %33, !llvm.loop !66

50:                                               ; preds = %33, %28
  %51 = phi i64 [ 0, %28 ], [ %47, %33 ]
  %52 = icmp eq i64 %29, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %50, %53
  %54 = phi i64 [ %58, %53 ], [ %51, %50 ]
  %55 = phi i64 [ %59, %53 ], [ 0, %50 ]
  %56 = load ptr, ptr @heaps, align 8, !tbaa !5
  %57 = getelementptr inbounds ptr, ptr %56, i64 %54
  store ptr null, ptr %57, align 8, !tbaa !5
  %58 = add nuw nsw i64 %54, 1
  %59 = add i64 %55, 1
  %60 = icmp eq i64 %59, %29
  br i1 %60, label %61, label %53, !llvm.loop !67

61:                                               ; preds = %50, %53, %25
  %62 = load i64, ptr @heap_size, align 8, !tbaa !10
  %63 = mul i64 %62, 24
  %64 = tail call i64 @llvm.umax.i64(i64 %63, i64 1)
  %65 = tail call noalias ptr @malloc(i64 noundef %64) #39
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %69 = load i64, ptr @heap_size, align 8, !tbaa !10
  br label %70

70:                                               ; preds = %61, %67
  %71 = phi i64 [ %62, %61 ], [ %69, %67 ]
  %72 = load ptr, ptr @heaps, align 8, !tbaa !5
  store ptr %65, ptr %72, align 8, !tbaa !5
  %73 = load ptr, ptr @heaps, align 8, !tbaa !5
  %74 = load ptr, ptr %73, align 8, !tbaa !5
  store ptr %74, ptr @heap, align 8, !tbaa !5
  store ptr %74, ptr @heap_org, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct.obj, ptr %74, i64 %71
  store ptr %75, ptr @heap_end, align 8, !tbaa !5
  %76 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %77 = icmp eq i64 %76, 1
  br i1 %77, label %78, label %89

78:                                               ; preds = %70
  %79 = mul i64 %71, 24
  %80 = tail call i64 @llvm.umax.i64(i64 %79, i64 1)
  %81 = tail call noalias ptr @malloc(i64 noundef %80) #39
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %85 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %86

86:                                               ; preds = %78, %83
  %87 = phi ptr [ %73, %78 ], [ %85, %83 ]
  %88 = getelementptr inbounds ptr, ptr %87, i64 1
  store ptr %81, ptr %88, align 8, !tbaa !5
  br label %90

89:                                               ; preds = %70
  store ptr null, ptr @freelist, align 8, !tbaa !5
  br label %90

90:                                               ; preds = %89, %86
  %91 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %92 = icmp eq ptr %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %95

95:                                               ; preds = %90, %93
  store ptr @oblistvar, ptr %91, align 8, !tbaa !58
  %96 = getelementptr inbounds %struct.gc_protected, ptr %91, i64 0, i32 1
  store i64 1, ptr %96, align 8, !tbaa !60
  %97 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %98 = getelementptr inbounds %struct.gc_protected, ptr %91, i64 0, i32 2
  store ptr %97, ptr %98, align 8, !tbaa !61
  store ptr %91, ptr @protected_registers, align 8, !tbaa !5
  %99 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  %100 = icmp sgt i64 %99, 1
  br i1 %100, label %101, label %159

101:                                              ; preds = %95
  %102 = shl i64 %99, 3
  %103 = tail call i64 @llvm.umax.i64(i64 %102, i64 1)
  %104 = tail call noalias ptr @malloc(i64 noundef %103) #39
  %105 = icmp eq ptr %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %101
  store ptr %104, ptr @obarray, align 8, !tbaa !5
  br label %111

107:                                              ; preds = %101
  %108 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %109 = load i64, ptr @obarray_dim, align 8, !tbaa !10
  store ptr %104, ptr @obarray, align 8, !tbaa !5
  %110 = icmp sgt i64 %109, 0
  br i1 %110, label %111, label %148

111:                                              ; preds = %106, %107
  %112 = phi i64 [ %99, %106 ], [ %109, %107 ]
  %113 = add i64 %112, -1
  %114 = and i64 %112, 3
  %115 = icmp ult i64 %113, 3
  br i1 %115, label %135, label %116

116:                                              ; preds = %111
  %117 = and i64 %112, -4
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ 0, %116 ], [ %132, %118 ]
  %120 = phi i64 [ 0, %116 ], [ %133, %118 ]
  %121 = load ptr, ptr @obarray, align 8, !tbaa !5
  %122 = getelementptr inbounds ptr, ptr %121, i64 %119
  store ptr null, ptr %122, align 8, !tbaa !5
  %123 = or i64 %119, 1
  %124 = load ptr, ptr @obarray, align 8, !tbaa !5
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  store ptr null, ptr %125, align 8, !tbaa !5
  %126 = or i64 %119, 2
  %127 = load ptr, ptr @obarray, align 8, !tbaa !5
  %128 = getelementptr inbounds ptr, ptr %127, i64 %126
  store ptr null, ptr %128, align 8, !tbaa !5
  %129 = or i64 %119, 3
  %130 = load ptr, ptr @obarray, align 8, !tbaa !5
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  store ptr null, ptr %131, align 8, !tbaa !5
  %132 = add nuw nsw i64 %119, 4
  %133 = add i64 %120, 4
  %134 = icmp eq i64 %133, %117
  br i1 %134, label %135, label %118, !llvm.loop !69

135:                                              ; preds = %118, %111
  %136 = phi i64 [ 0, %111 ], [ %132, %118 ]
  %137 = icmp eq i64 %114, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %143, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %144, %138 ], [ 0, %135 ]
  %141 = load ptr, ptr @obarray, align 8, !tbaa !5
  %142 = getelementptr inbounds ptr, ptr %141, i64 %139
  store ptr null, ptr %142, align 8, !tbaa !5
  %143 = add nuw nsw i64 %139, 1
  %144 = add i64 %140, 1
  %145 = icmp eq i64 %144, %114
  br i1 %145, label %146, label %138, !llvm.loop !70

146:                                              ; preds = %138, %135
  %147 = load ptr, ptr @obarray, align 8, !tbaa !5
  br label %148

148:                                              ; preds = %146, %107
  %149 = phi i64 [ %112, %146 ], [ %109, %107 ]
  %150 = phi ptr [ %147, %146 ], [ null, %107 ]
  %151 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %152 = icmp eq ptr %151, null
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %155

155:                                              ; preds = %148, %153
  store ptr %150, ptr %151, align 8, !tbaa !58
  %156 = getelementptr inbounds %struct.gc_protected, ptr %151, i64 0, i32 1
  store i64 %149, ptr %156, align 8, !tbaa !60
  %157 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %158 = getelementptr inbounds %struct.gc_protected, ptr %151, i64 0, i32 2
  store ptr %157, ptr %158, align 8, !tbaa !61
  store ptr %151, ptr @protected_registers, align 8, !tbaa !5
  br label %159

159:                                              ; preds = %155, %95
  %160 = tail call ptr @gen_intern(ptr noundef nonnull @.str.53, i64 noundef 0)
  %161 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %162 = icmp eq i64 %161, 1
  br i1 %162, label %163, label %171

163:                                              ; preds = %159
  %164 = load ptr, ptr @heap, align 8, !tbaa !5
  %165 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %166 = icmp ult ptr %164, %165
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %169

169:                                              ; preds = %167, %163
  %170 = getelementptr inbounds %struct.obj, ptr %164, i64 1
  store ptr %170, ptr @heap, align 8, !tbaa !5
  br label %182

171:                                              ; preds = %159
  %172 = load ptr, ptr @freelist, align 8, !tbaa !5
  %173 = icmp eq ptr %172, null
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  tail call void @gc_for_newcell() #38
  %175 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %176

176:                                              ; preds = %174, %171
  %177 = phi ptr [ %175, %174 ], [ %172, %171 ]
  %178 = getelementptr inbounds %struct.obj, ptr %177, i64 0, i32 2, i32 0, i32 1
  %179 = load ptr, ptr %178, align 8, !tbaa !9
  store ptr %179, ptr @freelist, align 8, !tbaa !5
  %180 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %181 = add nsw i64 %180, 1
  store i64 %181, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %182

182:                                              ; preds = %169, %176
  %183 = phi ptr [ %164, %169 ], [ %177, %176 ]
  store i16 0, ptr %183, align 8, !tbaa !35
  %184 = getelementptr inbounds %struct.obj, ptr %183, i64 0, i32 1
  store i16 1, ptr %184, align 2, !tbaa !14
  %185 = getelementptr inbounds %struct.obj, ptr %183, i64 0, i32 2
  store ptr %160, ptr %185, align 8, !tbaa !9
  %186 = getelementptr inbounds %struct.obj, ptr %183, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %186, align 8, !tbaa !9
  store ptr %183, ptr @unbound_marker, align 8, !tbaa !5
  %187 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %188 = icmp eq ptr %187, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %182
  %190 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %191

191:                                              ; preds = %182, %189
  store ptr @unbound_marker, ptr %187, align 8, !tbaa !58
  %192 = getelementptr inbounds %struct.gc_protected, ptr %187, i64 0, i32 1
  store i64 1, ptr %192, align 8, !tbaa !60
  %193 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %194 = getelementptr inbounds %struct.gc_protected, ptr %187, i64 0, i32 2
  store ptr %193, ptr %194, align 8, !tbaa !61
  store ptr %187, ptr @protected_registers, align 8, !tbaa !5
  %195 = tail call ptr @gen_intern(ptr noundef nonnull @.str.54, i64 noundef 0)
  %196 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %197 = icmp eq i64 %196, 1
  br i1 %197, label %198, label %206

198:                                              ; preds = %191
  %199 = load ptr, ptr @heap, align 8, !tbaa !5
  %200 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %201 = icmp ult ptr %199, %200
  br i1 %201, label %204, label %202

202:                                              ; preds = %198
  %203 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %204

204:                                              ; preds = %202, %198
  %205 = getelementptr inbounds %struct.obj, ptr %199, i64 1
  store ptr %205, ptr @heap, align 8, !tbaa !5
  br label %217

206:                                              ; preds = %191
  %207 = load ptr, ptr @freelist, align 8, !tbaa !5
  %208 = icmp eq ptr %207, null
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  tail call void @gc_for_newcell() #38
  %210 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %211

211:                                              ; preds = %209, %206
  %212 = phi ptr [ %210, %209 ], [ %207, %206 ]
  %213 = getelementptr inbounds %struct.obj, ptr %212, i64 0, i32 2, i32 0, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !9
  store ptr %214, ptr @freelist, align 8, !tbaa !5
  %215 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %216 = add nsw i64 %215, 1
  store i64 %216, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %217

217:                                              ; preds = %204, %211
  %218 = phi ptr [ %199, %204 ], [ %212, %211 ]
  store i16 0, ptr %218, align 8, !tbaa !35
  %219 = getelementptr inbounds %struct.obj, ptr %218, i64 0, i32 1
  store i16 1, ptr %219, align 2, !tbaa !14
  %220 = getelementptr inbounds %struct.obj, ptr %218, i64 0, i32 2
  store ptr %195, ptr %220, align 8, !tbaa !9
  %221 = getelementptr inbounds %struct.obj, ptr %218, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %221, align 8, !tbaa !9
  store ptr %218, ptr @eof_val, align 8, !tbaa !5
  %222 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %223 = icmp eq ptr %222, null
  br i1 %223, label %224, label %226

224:                                              ; preds = %217
  %225 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %226

226:                                              ; preds = %217, %224
  store ptr @eof_val, ptr %222, align 8, !tbaa !58
  %227 = getelementptr inbounds %struct.gc_protected, ptr %222, i64 0, i32 1
  store i64 1, ptr %227, align 8, !tbaa !60
  %228 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %229 = getelementptr inbounds %struct.gc_protected, ptr %222, i64 0, i32 2
  store ptr %228, ptr %229, align 8, !tbaa !61
  store ptr %222, ptr @protected_registers, align 8, !tbaa !5
  %230 = tail call ptr @gen_intern(ptr noundef nonnull @.str.55, i64 noundef 0)
  store ptr %230, ptr @sym_t, align 8, !tbaa !5
  %231 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %232 = icmp eq ptr %231, null
  br i1 %232, label %233, label %236

233:                                              ; preds = %226
  %234 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %235 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %236

236:                                              ; preds = %226, %233
  %237 = phi ptr [ %230, %226 ], [ %235, %233 ]
  store ptr @sym_t, ptr %231, align 8, !tbaa !58
  %238 = getelementptr inbounds %struct.gc_protected, ptr %231, i64 0, i32 1
  store i64 1, ptr %238, align 8, !tbaa !60
  %239 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %240 = getelementptr inbounds %struct.gc_protected, ptr %231, i64 0, i32 2
  store ptr %239, ptr %240, align 8, !tbaa !61
  store ptr %231, ptr @protected_registers, align 8, !tbaa !5
  %241 = icmp eq ptr %237, null
  br i1 %241, label %246, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %struct.obj, ptr %237, i64 0, i32 1
  %244 = load i16, ptr %243, align 2, !tbaa !14
  %245 = icmp eq i16 %244, 3
  br i1 %245, label %248, label %246

246:                                              ; preds = %242, %236
  %247 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %237) #38
  br label %248

248:                                              ; preds = %242, %246
  %249 = getelementptr inbounds %struct.obj, ptr %237, i64 0, i32 2, i32 0, i32 1
  store ptr %237, ptr %249, align 8, !tbaa !9
  %250 = tail call ptr @gen_intern(ptr noundef nonnull @.str.56, i64 noundef 0)
  %251 = icmp eq ptr %250, null
  br i1 %251, label %256, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %struct.obj, ptr %250, i64 0, i32 1
  %254 = load i16, ptr %253, align 2, !tbaa !14
  %255 = icmp eq i16 %254, 3
  br i1 %255, label %258, label %256

256:                                              ; preds = %252, %248
  %257 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %250) #38
  br label %258

258:                                              ; preds = %252, %256
  %259 = getelementptr inbounds %struct.obj, ptr %250, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %259, align 8, !tbaa !9
  %260 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  %261 = tail call ptr @gen_intern(ptr noundef nonnull @.str.58, i64 noundef 0)
  %262 = icmp eq ptr %260, null
  br i1 %262, label %267, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %struct.obj, ptr %260, i64 0, i32 1
  %265 = load i16, ptr %264, align 2, !tbaa !14
  %266 = icmp eq i16 %265, 3
  br i1 %266, label %269, label %267

267:                                              ; preds = %263, %258
  %268 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %260) #38
  br label %269

269:                                              ; preds = %263, %267
  %270 = getelementptr inbounds %struct.obj, ptr %260, i64 0, i32 2, i32 0, i32 1
  store ptr %261, ptr %270, align 8, !tbaa !9
  %271 = tail call ptr @gen_intern(ptr noundef nonnull @.str.59, i64 noundef 0)
  %272 = tail call ptr @gen_intern(ptr noundef nonnull @.str.60, i64 noundef 0)
  %273 = icmp eq ptr %271, null
  br i1 %273, label %278, label %274

274:                                              ; preds = %269
  %275 = getelementptr inbounds %struct.obj, ptr %271, i64 0, i32 1
  %276 = load i16, ptr %275, align 2, !tbaa !14
  %277 = icmp eq i16 %276, 3
  br i1 %277, label %280, label %278

278:                                              ; preds = %274, %269
  %279 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %271) #38
  br label %280

280:                                              ; preds = %274, %278
  %281 = getelementptr inbounds %struct.obj, ptr %271, i64 0, i32 2, i32 0, i32 1
  store ptr %272, ptr %281, align 8, !tbaa !9
  %282 = tail call ptr @gen_intern(ptr noundef nonnull @.str.61, i64 noundef 0)
  %283 = tail call ptr @gen_intern(ptr noundef nonnull @.str.62, i64 noundef 0)
  %284 = icmp eq ptr %282, null
  br i1 %284, label %289, label %285

285:                                              ; preds = %280
  %286 = getelementptr inbounds %struct.obj, ptr %282, i64 0, i32 1
  %287 = load i16, ptr %286, align 2, !tbaa !14
  %288 = icmp eq i16 %287, 3
  br i1 %288, label %291, label %289

289:                                              ; preds = %285, %280
  %290 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %282) #38
  br label %291

291:                                              ; preds = %285, %289
  %292 = getelementptr inbounds %struct.obj, ptr %282, i64 0, i32 2, i32 0, i32 1
  store ptr %283, ptr %292, align 8, !tbaa !9
  %293 = tail call ptr @gen_intern(ptr noundef nonnull @.str.63, i64 noundef 0)
  store ptr %293, ptr @sym_errobj, align 8, !tbaa !5
  %294 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %295 = icmp eq ptr %294, null
  br i1 %295, label %296, label %299

296:                                              ; preds = %291
  %297 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %298 = load ptr, ptr @sym_errobj, align 8, !tbaa !5
  br label %299

299:                                              ; preds = %291, %296
  %300 = phi ptr [ %293, %291 ], [ %298, %296 ]
  store ptr @sym_errobj, ptr %294, align 8, !tbaa !58
  %301 = getelementptr inbounds %struct.gc_protected, ptr %294, i64 0, i32 1
  store i64 1, ptr %301, align 8, !tbaa !60
  %302 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %303 = getelementptr inbounds %struct.gc_protected, ptr %294, i64 0, i32 2
  store ptr %302, ptr %303, align 8, !tbaa !61
  store ptr %294, ptr @protected_registers, align 8, !tbaa !5
  %304 = icmp eq ptr %300, null
  br i1 %304, label %309, label %305

305:                                              ; preds = %299
  %306 = getelementptr inbounds %struct.obj, ptr %300, i64 0, i32 1
  %307 = load i16, ptr %306, align 2, !tbaa !14
  %308 = icmp eq i16 %307, 3
  br i1 %308, label %311, label %309

309:                                              ; preds = %305, %299
  %310 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %300) #38
  br label %311

311:                                              ; preds = %305, %309
  %312 = getelementptr inbounds %struct.obj, ptr %300, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %312, align 8, !tbaa !9
  %313 = tail call ptr @gen_intern(ptr noundef nonnull @.str.64, i64 noundef 0)
  store ptr %313, ptr @sym_catchall, align 8, !tbaa !5
  %314 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %315 = icmp eq ptr %314, null
  br i1 %315, label %316, label %318

316:                                              ; preds = %311
  %317 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %318

318:                                              ; preds = %311, %316
  store ptr @sym_catchall, ptr %314, align 8, !tbaa !58
  %319 = getelementptr inbounds %struct.gc_protected, ptr %314, i64 0, i32 1
  store i64 1, ptr %319, align 8, !tbaa !60
  %320 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %321 = getelementptr inbounds %struct.gc_protected, ptr %314, i64 0, i32 2
  store ptr %320, ptr %321, align 8, !tbaa !61
  store ptr %314, ptr @protected_registers, align 8, !tbaa !5
  %322 = tail call ptr @gen_intern(ptr noundef nonnull @.str.65, i64 noundef 0)
  store ptr %322, ptr @sym_progn, align 8, !tbaa !5
  %323 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %324 = icmp eq ptr %323, null
  br i1 %324, label %325, label %327

325:                                              ; preds = %318
  %326 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %327

327:                                              ; preds = %318, %325
  store ptr @sym_progn, ptr %323, align 8, !tbaa !58
  %328 = getelementptr inbounds %struct.gc_protected, ptr %323, i64 0, i32 1
  store i64 1, ptr %328, align 8, !tbaa !60
  %329 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %330 = getelementptr inbounds %struct.gc_protected, ptr %323, i64 0, i32 2
  store ptr %329, ptr %330, align 8, !tbaa !61
  store ptr %323, ptr @protected_registers, align 8, !tbaa !5
  %331 = tail call ptr @gen_intern(ptr noundef nonnull @.str.66, i64 noundef 0)
  store ptr %331, ptr @sym_lambda, align 8, !tbaa !5
  %332 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %333 = icmp eq ptr %332, null
  br i1 %333, label %334, label %336

334:                                              ; preds = %327
  %335 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %336

336:                                              ; preds = %327, %334
  store ptr @sym_lambda, ptr %332, align 8, !tbaa !58
  %337 = getelementptr inbounds %struct.gc_protected, ptr %332, i64 0, i32 1
  store i64 1, ptr %337, align 8, !tbaa !60
  %338 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %339 = getelementptr inbounds %struct.gc_protected, ptr %332, i64 0, i32 2
  store ptr %338, ptr %339, align 8, !tbaa !61
  store ptr %332, ptr @protected_registers, align 8, !tbaa !5
  %340 = tail call ptr @gen_intern(ptr noundef nonnull @.str.67, i64 noundef 0)
  store ptr %340, ptr @sym_quote, align 8, !tbaa !5
  %341 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %342 = icmp eq ptr %341, null
  br i1 %342, label %343, label %345

343:                                              ; preds = %336
  %344 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %345

345:                                              ; preds = %336, %343
  store ptr @sym_quote, ptr %341, align 8, !tbaa !58
  %346 = getelementptr inbounds %struct.gc_protected, ptr %341, i64 0, i32 1
  store i64 1, ptr %346, align 8, !tbaa !60
  %347 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %348 = getelementptr inbounds %struct.gc_protected, ptr %341, i64 0, i32 2
  store ptr %347, ptr %348, align 8, !tbaa !61
  store ptr %341, ptr @protected_registers, align 8, !tbaa !5
  %349 = tail call ptr @gen_intern(ptr noundef nonnull @.str.68, i64 noundef 0)
  store ptr %349, ptr @sym_dot, align 8, !tbaa !5
  %350 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %351 = icmp eq ptr %350, null
  br i1 %351, label %352, label %354

352:                                              ; preds = %345
  %353 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %354

354:                                              ; preds = %345, %352
  store ptr @sym_dot, ptr %350, align 8, !tbaa !58
  %355 = getelementptr inbounds %struct.gc_protected, ptr %350, i64 0, i32 1
  store i64 1, ptr %355, align 8, !tbaa !60
  %356 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %357 = getelementptr inbounds %struct.gc_protected, ptr %350, i64 0, i32 2
  store ptr %356, ptr %357, align 8, !tbaa !61
  store ptr %350, ptr @protected_registers, align 8, !tbaa !5
  %358 = tail call ptr @gen_intern(ptr noundef nonnull @.str.69, i64 noundef 0)
  store ptr %358, ptr @sym_after_gc, align 8, !tbaa !5
  %359 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %360 = icmp eq ptr %359, null
  br i1 %360, label %361, label %364

361:                                              ; preds = %354
  %362 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %363 = load ptr, ptr @sym_after_gc, align 8, !tbaa !5
  br label %364

364:                                              ; preds = %354, %361
  %365 = phi ptr [ %358, %354 ], [ %363, %361 ]
  store ptr @sym_after_gc, ptr %359, align 8, !tbaa !58
  %366 = getelementptr inbounds %struct.gc_protected, ptr %359, i64 0, i32 1
  store i64 1, ptr %366, align 8, !tbaa !60
  %367 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %368 = getelementptr inbounds %struct.gc_protected, ptr %359, i64 0, i32 2
  store ptr %367, ptr %368, align 8, !tbaa !61
  store ptr %359, ptr @protected_registers, align 8, !tbaa !5
  %369 = icmp eq ptr %365, null
  br i1 %369, label %374, label %370

370:                                              ; preds = %364
  %371 = getelementptr inbounds %struct.obj, ptr %365, i64 0, i32 1
  %372 = load i16, ptr %371, align 2, !tbaa !14
  %373 = icmp eq i16 %372, 3
  br i1 %373, label %376, label %374

374:                                              ; preds = %370, %364
  %375 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %365) #38
  br label %376

376:                                              ; preds = %370, %374
  %377 = getelementptr inbounds %struct.obj, ptr %365, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %377, align 8, !tbaa !9
  %378 = tail call ptr @gen_intern(ptr noundef nonnull @.str.70, i64 noundef 0)
  store ptr %378, ptr @sym_eval_history_ptr, align 8, !tbaa !5
  %379 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %380 = icmp eq ptr %379, null
  br i1 %380, label %381, label %384

381:                                              ; preds = %376
  %382 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %383 = load ptr, ptr @sym_eval_history_ptr, align 8, !tbaa !5
  br label %384

384:                                              ; preds = %376, %381
  %385 = phi ptr [ %378, %376 ], [ %383, %381 ]
  store ptr @sym_eval_history_ptr, ptr %379, align 8, !tbaa !58
  %386 = getelementptr inbounds %struct.gc_protected, ptr %379, i64 0, i32 1
  store i64 1, ptr %386, align 8, !tbaa !60
  %387 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %388 = getelementptr inbounds %struct.gc_protected, ptr %379, i64 0, i32 2
  store ptr %387, ptr %388, align 8, !tbaa !61
  store ptr %379, ptr @protected_registers, align 8, !tbaa !5
  %389 = icmp eq ptr %385, null
  br i1 %389, label %394, label %390

390:                                              ; preds = %384
  %391 = getelementptr inbounds %struct.obj, ptr %385, i64 0, i32 1
  %392 = load i16, ptr %391, align 2, !tbaa !14
  %393 = icmp eq i16 %392, 3
  br i1 %393, label %396, label %394

394:                                              ; preds = %390, %384
  %395 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %385) #38
  br label %396

396:                                              ; preds = %390, %394
  %397 = getelementptr inbounds %struct.obj, ptr %385, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %397, align 8, !tbaa !9
  %398 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %399 = icmp sgt i64 %398, 0
  br i1 %399, label %400, label %457

400:                                              ; preds = %396
  %401 = shl i64 %398, 3
  %402 = tail call i64 @llvm.umax.i64(i64 %401, i64 1)
  %403 = tail call noalias ptr @malloc(i64 noundef %402) #39
  %404 = icmp eq ptr %403, null
  br i1 %404, label %406, label %405

405:                                              ; preds = %400
  store ptr %403, ptr @inums, align 8, !tbaa !5
  br label %410

406:                                              ; preds = %400
  %407 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %408 = load i64, ptr @inums_dim, align 8, !tbaa !10
  store ptr %403, ptr @inums, align 8, !tbaa !5
  %409 = icmp sgt i64 %408, 0
  br i1 %409, label %410, label %446

410:                                              ; preds = %405, %406
  br label %411

411:                                              ; preds = %410, %434
  %412 = phi i64 [ %441, %434 ], [ 0, %410 ]
  %413 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %414 = icmp eq i64 %413, 1
  br i1 %414, label %415, label %423

415:                                              ; preds = %411
  %416 = load ptr, ptr @heap, align 8, !tbaa !5
  %417 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %418 = icmp ult ptr %416, %417
  br i1 %418, label %421, label %419

419:                                              ; preds = %415
  %420 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %421

421:                                              ; preds = %419, %415
  %422 = getelementptr inbounds %struct.obj, ptr %416, i64 1
  store ptr %422, ptr @heap, align 8, !tbaa !5
  br label %434

423:                                              ; preds = %411
  %424 = load ptr, ptr @freelist, align 8, !tbaa !5
  %425 = icmp eq ptr %424, null
  br i1 %425, label %426, label %428

426:                                              ; preds = %423
  tail call void @gc_for_newcell()
  %427 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %428

428:                                              ; preds = %426, %423
  %429 = phi ptr [ %427, %426 ], [ %424, %423 ]
  %430 = getelementptr inbounds %struct.obj, ptr %429, i64 0, i32 2, i32 0, i32 1
  %431 = load ptr, ptr %430, align 8, !tbaa !9
  store ptr %431, ptr @freelist, align 8, !tbaa !5
  %432 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %433 = add nsw i64 %432, 1
  store i64 %433, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %434

434:                                              ; preds = %428, %421
  %435 = phi ptr [ %416, %421 ], [ %429, %428 ]
  store i16 0, ptr %435, align 8, !tbaa !35
  %436 = getelementptr inbounds %struct.obj, ptr %435, i64 0, i32 1
  store i16 2, ptr %436, align 2, !tbaa !14
  %437 = sitofp i64 %412 to double
  %438 = getelementptr inbounds %struct.obj, ptr %435, i64 0, i32 2
  store double %437, ptr %438, align 8, !tbaa !9
  %439 = load ptr, ptr @inums, align 8, !tbaa !5
  %440 = getelementptr inbounds ptr, ptr %439, i64 %412
  store ptr %435, ptr %440, align 8, !tbaa !5
  %441 = add nuw nsw i64 %412, 1
  %442 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %443 = icmp slt i64 %441, %442
  br i1 %443, label %411, label %444, !llvm.loop !71

444:                                              ; preds = %434
  %445 = load ptr, ptr @inums, align 8, !tbaa !5
  br label %446

446:                                              ; preds = %444, %406
  %447 = phi ptr [ null, %406 ], [ %445, %444 ]
  %448 = phi i64 [ %408, %406 ], [ %442, %444 ]
  %449 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #39
  %450 = icmp eq ptr %449, null
  br i1 %450, label %451, label %453

451:                                              ; preds = %446
  %452 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %453

453:                                              ; preds = %446, %451
  store ptr %447, ptr %449, align 8, !tbaa !58
  %454 = getelementptr inbounds %struct.gc_protected, ptr %449, i64 0, i32 1
  store i64 %448, ptr %454, align 8, !tbaa !60
  %455 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %456 = getelementptr inbounds %struct.gc_protected, ptr %449, i64 0, i32 2
  store ptr %455, ptr %456, align 8, !tbaa !61
  store ptr %449, ptr @protected_registers, align 8, !tbaa !5
  br label %457

457:                                              ; preds = %453, %396
  ret void
}

declare void @init_storage_a() local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local void @set_gc_hooks(i64 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr nocapture noundef writeonly %5) local_unnamed_addr #6 {
  %7 = load ptr, ptr @user_types, align 8, !tbaa !5
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %14

14:                                               ; preds = %12, %9
  store ptr %10, ptr @user_types, align 8, !tbaa !5
  br label %15

15:                                               ; preds = %14, %6
  %16 = phi ptr [ %10, %14 ], [ %7, %6 ]
  %17 = icmp ult i64 %0, 100
  br i1 %17, label %18, label %24

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.user_type_hooks, ptr %16, i64 %0
  store ptr %1, ptr %19, align 8, !tbaa !62
  %20 = getelementptr inbounds %struct.user_type_hooks, ptr %16, i64 %0, i32 1
  store ptr %3, ptr %20, align 8, !tbaa !72
  %21 = getelementptr inbounds %struct.user_type_hooks, ptr %16, i64 %0, i32 2
  store ptr %2, ptr %21, align 8, !tbaa !73
  %22 = getelementptr inbounds %struct.user_type_hooks, ptr %16, i64 %0, i32 3
  store ptr %4, ptr %22, align 8, !tbaa !48
  %23 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  store i64 %23, ptr %5, align 8, !tbaa !10
  ret void

24:                                               ; preds = %15
  %25 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @file_gc_free(ptr nocapture noundef %0) #6 {
  %2 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @fclose(ptr noundef nonnull %3)
  store ptr null, ptr %2, align 8, !tbaa !9
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @free(ptr noundef nonnull %9) #33
  store ptr null, ptr %8, align 8, !tbaa !9
  br label %12

12:                                               ; preds = %11, %7
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @set_print_hooks(i64 noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = load ptr, ptr @user_types, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %10

10:                                               ; preds = %8, %5
  store ptr %6, ptr @user_types, align 8, !tbaa !5
  br label %11

11:                                               ; preds = %10, %2
  %12 = phi ptr [ %6, %10 ], [ %3, %2 ]
  %13 = icmp ult i64 %0, 100
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.user_type_hooks, ptr %12, i64 %0, i32 4
  store ptr %1, ptr %15, align 8, !tbaa !65
  ret void

16:                                               ; preds = %11
  %17 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @file_prin1(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #6 {
  %3 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !33
  %8 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !34
  %10 = tail call i32 %7(ptr noundef nonnull @.str.149, ptr noundef %9) #33
  %11 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %12 = load ptr, ptr %3, align 8, !tbaa !9
  %13 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %11, ptr noundef nonnull dereferenceable(1) @.str.150, ptr noundef %12) #33
  %14 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %15 = load ptr, ptr %6, align 8, !tbaa !33
  %16 = load ptr, ptr %8, align 8, !tbaa !34
  %17 = tail call i32 %15(ptr noundef %14, ptr noundef %16) #33
  %18 = icmp eq ptr %5, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = load ptr, ptr %6, align 8, !tbaa !33
  %21 = load ptr, ptr %8, align 8, !tbaa !34
  %22 = tail call i32 %20(ptr noundef nonnull @.str.112, ptr noundef %21) #33
  %23 = load ptr, ptr %6, align 8, !tbaa !33
  %24 = load ptr, ptr %8, align 8, !tbaa !34
  %25 = tail call i32 %23(ptr noundef nonnull %5, ptr noundef %24) #33
  br label %26

26:                                               ; preds = %19, %2
  %27 = load ptr, ptr %6, align 8, !tbaa !33
  %28 = load ptr, ptr %8, align 8, !tbaa !34
  %29 = tail call i32 %27(ptr noundef nonnull @.str.118, ptr noundef %28) #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr(ptr noundef %0, i64 noundef %1, ptr noundef %2) local_unnamed_addr #6 {
  %4 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %5 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = load ptr, ptr @heap, align 8, !tbaa !5
  %9 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %10 = icmp ult ptr %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %struct.obj, ptr %8, i64 1
  store ptr %14, ptr @heap, align 8, !tbaa !5
  br label %26

15:                                               ; preds = %3
  %16 = load ptr, ptr @freelist, align 8, !tbaa !5
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  tail call void @gc_for_newcell()
  %19 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %20

20:                                               ; preds = %18, %15
  %21 = phi ptr [ %19, %18 ], [ %16, %15 ]
  %22 = getelementptr inbounds %struct.obj, ptr %21, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  store ptr %23, ptr @freelist, align 8, !tbaa !5
  %24 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %25 = add nsw i64 %24, 1
  store i64 %25, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %26

26:                                               ; preds = %13, %20
  %27 = phi ptr [ %8, %13 ], [ %21, %20 ]
  store i16 0, ptr %27, align 8, !tbaa !35
  %28 = trunc i64 %1 to i16
  %29 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 1
  store i16 %28, ptr %29, align 2, !tbaa !14
  %30 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 2
  store ptr %0, ptr %30, align 8, !tbaa !9
  %31 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 2, i32 0, i32 1
  store ptr %2, ptr %31, align 8, !tbaa !9
  %32 = icmp eq ptr %4, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %35 = load i16, ptr %34, align 2, !tbaa !14
  %36 = icmp eq i16 %35, 3
  br i1 %36, label %39, label %37

37:                                               ; preds = %33, %26
  %38 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %4) #38
  br label %39

39:                                               ; preds = %33, %37
  %40 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  store ptr %27, ptr %40, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_0(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 4, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_1(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 5, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_2(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 6, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_2n(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 21, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_3(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 7, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_4(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 19, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subr_5(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 20, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_lsubr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 8, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_fsubr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 9, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_msubr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @gen_intern(ptr noundef %0, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %2
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell()
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 10, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !9
  %30 = icmp eq ptr %3, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %33 = load i16, ptr %32, align 2, !tbaa !14
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %25
  %36 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3) #38
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %38, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @assq(ptr noundef readnone %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2, %21
  %5 = phi ptr [ %23, %21 ], [ %1, %2 ]
  %6 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 1
  br i1 %8, label %9, label %25

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = icmp eq i16 %15, 1
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  %20 = icmp eq ptr %19, %0
  br i1 %20, label %27, label %21

21:                                               ; preds = %9, %13, %17
  %22 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  %24 = icmp eq ptr %23, null
  br i1 %24, label %27, label %4, !llvm.loop !74

25:                                               ; preds = %4
  %26 = tail call ptr @err(ptr noundef nonnull @.str.71, ptr noundef nonnull %1)
  br label %27

27:                                               ; preds = %17, %21, %2, %25
  %28 = phi ptr [ null, %25 ], [ null, %2 ], [ %11, %17 ], [ null, %21 ]
  ret ptr %28
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_user_type_hooks(i64 noundef %0) local_unnamed_addr #6 {
  %2 = load ptr, ptr @user_types, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %9

9:                                                ; preds = %4, %7
  store ptr %5, ptr @user_types, align 8, !tbaa !5
  br label %10

10:                                               ; preds = %9, %1
  %11 = phi ptr [ %5, %9 ], [ %2, %1 ]
  %12 = icmp ult i64 %0, 100
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.user_type_hooks, ptr %11, i64 %0
  br label %17

15:                                               ; preds = %10
  %16 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi ptr [ %14, %13 ], [ null, %15 ]
  ret ptr %18
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #18

; Function Attrs: nounwind uwtable
define dso_local i64 @allocate_user_tc() local_unnamed_addr #6 {
  %1 = load i64, ptr @user_tc_next, align 8, !tbaa !10
  %2 = icmp sgt i64 %1, 100
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = tail call ptr @err(ptr noundef nonnull @.str.73, ptr noundef null)
  %5 = load i64, ptr @user_tc_next, align 8, !tbaa !10
  br label %6

6:                                                ; preds = %3, %0
  %7 = phi i64 [ %5, %3 ], [ %1, %0 ]
  %8 = add nsw i64 %7, 1
  store i64 %8, ptr @user_tc_next, align 8, !tbaa !10
  ret i64 %1
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #19

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define dso_local ptr @get_newspace() local_unnamed_addr #20 {
  %1 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %2 = load ptr, ptr @heaps, align 8, !tbaa !5
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = icmp eq ptr %1, %3
  br i1 %4, label %5, label %8

5:                                                ; preds = %0
  %6 = getelementptr inbounds ptr, ptr %2, i64 1
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  br label %8

8:                                                ; preds = %0, %5
  %9 = phi ptr [ %7, %5 ], [ %3, %0 ]
  store ptr %9, ptr @heap, align 8, !tbaa !5
  store ptr %9, ptr @heap_org, align 8, !tbaa !5
  %10 = load i64, ptr @heap_size, align 8, !tbaa !10
  %11 = getelementptr inbounds %struct.obj, ptr %9, i64 %10
  store ptr %11, ptr @heap_end, align 8, !tbaa !5
  ret ptr %9
}

; Function Attrs: nounwind uwtable
define dso_local void @scan_newspace(ptr noundef %0) local_unnamed_addr #6 {
  %2 = load ptr, ptr @heap, align 8, !tbaa !5
  %3 = icmp ugt ptr %2, %0
  br i1 %3, label %4, label %48

4:                                                ; preds = %1, %44
  %5 = phi ptr [ %45, %44 ], [ %0, %1 ]
  %6 = icmp eq ptr %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %9 = load i16, ptr %8, align 2, !tbaa !14
  %10 = sext i16 %9 to i32
  switch i32 %10, label %22 [
    i32 1, label %11
    i32 11, label %11
    i32 3, label %18
    i32 2, label %44
    i32 4, label %44
    i32 5, label %44
    i32 6, label %44
    i32 21, label %44
    i32 7, label %44
    i32 19, label %44
    i32 20, label %44
    i32 8, label %44
    i32 9, label %44
    i32 10, label %44
  ]

11:                                               ; preds = %7, %7
  %12 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = tail call ptr @gc_relocate(ptr noundef %13)
  store ptr %14, ptr %12, align 8, !tbaa !9
  %15 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  %17 = tail call ptr @gc_relocate(ptr noundef %16)
  store ptr %17, ptr %15, align 8, !tbaa !9
  br label %44

18:                                               ; preds = %7
  %19 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !9
  %21 = tail call ptr @gc_relocate(ptr noundef %20)
  store ptr %21, ptr %19, align 8, !tbaa !9
  br label %44

22:                                               ; preds = %7
  %23 = sext i16 %9 to i64
  br label %24

24:                                               ; preds = %4, %22
  %25 = phi i64 [ %23, %22 ], [ 0, %4 ]
  %26 = load ptr, ptr @user_types, align 8, !tbaa !5
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %33

33:                                               ; preds = %31, %28
  store ptr %29, ptr @user_types, align 8, !tbaa !5
  br label %34

34:                                               ; preds = %33, %24
  %35 = phi ptr [ %29, %33 ], [ %26, %24 ]
  %36 = icmp ult i64 %25, 100
  br i1 %36, label %37, label %41

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.user_type_hooks, ptr %35, i64 %25, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !72
  %40 = icmp eq ptr %39, null
  br i1 %40, label %44, label %43

41:                                               ; preds = %34
  %42 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

43:                                               ; preds = %37
  tail call void %39(ptr noundef %5) #33
  br label %44

44:                                               ; preds = %11, %18, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %43, %37
  %45 = getelementptr inbounds %struct.obj, ptr %5, i64 1
  %46 = load ptr, ptr @heap, align 8, !tbaa !5
  %47 = icmp ult ptr %45, %46
  br i1 %47, label %4, label %48, !llvm.loop !75

48:                                               ; preds = %44, %1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @free_oldspace(ptr noundef %0, ptr noundef readnone %1) local_unnamed_addr #6 {
  %3 = icmp ult ptr %0, %1
  br i1 %3, label %4, label %35

4:                                                ; preds = %2, %32
  %5 = phi ptr [ %33, %32 ], [ %0, %2 ]
  %6 = load i16, ptr %5, align 8, !tbaa !35
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %10 = load i16, ptr %9, align 2, !tbaa !14
  %11 = sext i16 %10 to i32
  switch i32 %11, label %12 [
    i32 1, label %32
    i32 11, label %32
    i32 3, label %32
    i32 2, label %32
    i32 4, label %32
    i32 5, label %32
    i32 6, label %32
    i32 21, label %32
    i32 7, label %32
    i32 19, label %32
    i32 20, label %32
    i32 8, label %32
    i32 9, label %32
    i32 10, label %32
  ]

12:                                               ; preds = %8
  %13 = sext i16 %10 to i64
  %14 = load ptr, ptr @user_types, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %21

21:                                               ; preds = %19, %16
  store ptr %17, ptr @user_types, align 8, !tbaa !5
  br label %22

22:                                               ; preds = %21, %12
  %23 = phi ptr [ %17, %21 ], [ %14, %12 ]
  %24 = icmp ult i16 %10, 100
  br i1 %24, label %25, label %29

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.user_type_hooks, ptr %23, i64 %13, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !48
  %28 = icmp eq ptr %27, null
  br i1 %28, label %32, label %31

29:                                               ; preds = %22
  %30 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

31:                                               ; preds = %25
  tail call void %27(ptr noundef nonnull %5) #33
  br label %32

32:                                               ; preds = %4, %25, %31, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8
  %33 = getelementptr inbounds %struct.obj, ptr %5, i64 1
  %34 = icmp ult ptr %33, %1
  br i1 %34, label %4, label %35, !llvm.loop !50

35:                                               ; preds = %32, %2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @allocate_aheap() #6 {
  %1 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2 = icmp eq i64 %1, 1
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call ptr @err(ptr noundef nonnull @.str.77, ptr noundef null)
  br label %5

5:                                                ; preds = %0, %3
  %6 = load i64, ptr @nheaps, align 8, !tbaa !10
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %8, label %68

8:                                                ; preds = %5
  %9 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %10

10:                                               ; preds = %8, %65
  %11 = phi i64 [ 0, %8 ], [ %66, %65 ]
  %12 = getelementptr inbounds ptr, ptr %9, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %65

15:                                               ; preds = %10
  %16 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %17 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %18 = icmp ne i64 %17, 0
  %19 = load i64, ptr @siod_verbose_level, align 8
  %20 = icmp sgt i64 %19, 3
  %21 = select i1 %18, i1 %20, i1 false
  br i1 %21, label %22, label %24

22:                                               ; preds = %15
  %23 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.74, i64 noundef %11)
  br label %24

24:                                               ; preds = %22, %15
  %25 = load i64, ptr @heap_size, align 8, !tbaa !10
  %26 = mul i64 %25, 24
  %27 = tail call i64 @llvm.umax.i64(i64 %26, i64 1)
  %28 = tail call noalias ptr @malloc(i64 noundef %27) #39
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  %32 = load i64, ptr @heap_size, align 8, !tbaa !10
  br label %33

33:                                               ; preds = %24, %30
  %34 = phi i64 [ %25, %24 ], [ %32, %30 ]
  %35 = load ptr, ptr @heaps, align 8, !tbaa !5
  %36 = getelementptr inbounds ptr, ptr %35, i64 %11
  store ptr %28, ptr %36, align 8, !tbaa !5
  %37 = load ptr, ptr @heaps, align 8, !tbaa !5
  %38 = getelementptr inbounds ptr, ptr %37, i64 %11
  %39 = load ptr, ptr %38, align 8, !tbaa !5
  %40 = getelementptr inbounds %struct.obj, ptr %39, i64 %34
  %41 = getelementptr inbounds %struct.obj, ptr %39, i64 0, i32 1
  store i16 12, ptr %41, align 2, !tbaa !14
  %42 = icmp sgt i64 %34, 1
  br i1 %42, label %43, label %52

43:                                               ; preds = %33
  %44 = getelementptr inbounds %struct.obj, ptr %39, i64 1
  br label %45

45:                                               ; preds = %43, %45
  %46 = phi ptr [ %50, %45 ], [ %44, %43 ]
  %47 = phi ptr [ %46, %45 ], [ %39, %43 ]
  %48 = getelementptr inbounds %struct.obj, ptr %47, i64 0, i32 2, i32 0, i32 1
  store ptr %46, ptr %48, align 8, !tbaa !9
  %49 = getelementptr inbounds %struct.obj, ptr %46, i64 0, i32 1
  store i16 12, ptr %49, align 2, !tbaa !14
  %50 = getelementptr inbounds %struct.obj, ptr %46, i64 1
  %51 = icmp ult ptr %50, %40
  br i1 %51, label %45, label %52

52:                                               ; preds = %45, %33
  %53 = phi ptr [ %39, %33 ], [ %46, %45 ]
  %54 = load ptr, ptr @freelist, align 8, !tbaa !5
  %55 = getelementptr inbounds %struct.obj, ptr %53, i64 0, i32 2, i32 0, i32 1
  store ptr %54, ptr %55, align 8, !tbaa !9
  %56 = load ptr, ptr %38, align 8, !tbaa !5
  store ptr %56, ptr @freelist, align 8, !tbaa !5
  store i64 %16, ptr @nointerrupt, align 8, !tbaa !10
  %57 = icmp eq i64 %16, 0
  %58 = load i64, ptr @interrupt_differed, align 8
  %59 = icmp eq i64 %58, 1
  %60 = select i1 %57, i1 %59, i1 false
  br i1 %60, label %61, label %63

61:                                               ; preds = %52
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %62 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %63

63:                                               ; preds = %52, %61
  %64 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %68

65:                                               ; preds = %10
  %66 = add nuw nsw i64 %11, 1
  %67 = icmp eq i64 %66, %6
  br i1 %67, label %68, label %10, !llvm.loop !76

68:                                               ; preds = %65, %5, %63
  %69 = phi ptr [ %64, %63 ], [ null, %5 ], [ null, %65 ]
  ret ptr %69
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_kind_check() local_unnamed_addr #6 {
  %1 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2 = icmp eq i64 %1, 1
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call ptr @err(ptr noundef nonnull @.str.77, ptr noundef null)
  br label %5

5:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_mark_and_sweep() local_unnamed_addr #6 {
  %1 = alloca %struct.tms, align 8
  %2 = alloca %struct.tms, align 8
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #33
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #33
  %4 = call i64 @times(ptr noundef nonnull %2) #33
  %5 = load i64, ptr %2, align 8, !tbaa !36
  %6 = sitofp i64 %5 to double
  %7 = getelementptr inbounds %struct.tms, ptr %2, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !38
  %9 = sitofp i64 %8 to double
  %10 = fadd double %6, %9
  %11 = fdiv double %10, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #33
  store double %11, ptr @gc_rt, align 8, !tbaa !39
  store i64 0, ptr @gc_cells_collected, align 8, !tbaa !10
  %12 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %13 = icmp ne i64 %12, 0
  %14 = load i64, ptr @siod_verbose_level, align 8
  %15 = icmp sgt i64 %14, 3
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %17, label %19

17:                                               ; preds = %0
  %18 = call i32 @puts(ptr nonnull dereferenceable(1) @str.241)
  br label %19

19:                                               ; preds = %0, %17
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %21 = load ptr, ptr @heap, align 8, !tbaa !5
  %22 = icmp ult ptr %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %19, %23
  %24 = phi ptr [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 1
  store i16 12, ptr %25, align 2, !tbaa !14
  store i16 0, ptr %24, align 8, !tbaa !35
  %26 = getelementptr inbounds %struct.obj, ptr %24, i64 1
  %27 = icmp ult ptr %26, %20
  br i1 %27, label %23, label %28, !llvm.loop !77

28:                                               ; preds = %23
  store ptr %26, ptr @heap, align 8, !tbaa !5
  br label %29

29:                                               ; preds = %28, %19
  %30 = call i32 @getcontext(ptr noundef nonnull @save_regs_gc_mark) #36
  %31 = load i64, ptr @nheaps, align 8, !tbaa !10
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %70, %29
  %34 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %35 = icmp eq ptr %34, null
  br i1 %35, label %90, label %74

36:                                               ; preds = %29, %70
  %37 = phi i64 [ %71, %70 ], [ %31, %29 ]
  %38 = phi i64 [ %72, %70 ], [ 0, %29 ]
  %39 = getelementptr inbounds ptr, ptr getelementptr inbounds (%struct.ucontext_t, ptr @save_regs_gc_mark, i64 0, i32 3), i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !5
  %41 = getelementptr inbounds %struct.obj, ptr %40, i64 0, i32 1
  %42 = icmp sgt i64 %37, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %36
  %44 = load ptr, ptr @heaps, align 8, !tbaa !5
  %45 = load i64, ptr @heap_size, align 8
  %46 = ptrtoint ptr %40 to i64
  br label %47

47:                                               ; preds = %65, %43
  %48 = phi i64 [ 0, %43 ], [ %66, %65 ]
  %49 = getelementptr inbounds ptr, ptr %44, i64 %48
  %50 = load ptr, ptr %49, align 8, !tbaa !5
  %51 = icmp ne ptr %50, null
  %52 = icmp ule ptr %50, %40
  %53 = and i1 %51, %52
  %54 = getelementptr inbounds %struct.obj, ptr %50, i64 %45
  %55 = icmp ugt ptr %54, %40
  %56 = select i1 %53, i1 %55, i1 false
  br i1 %56, label %57, label %65

57:                                               ; preds = %47
  %58 = ptrtoint ptr %50 to i64
  %59 = sub i64 %46, %58
  %60 = urem i64 %59, 24
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = load i16, ptr %41, align 2, !tbaa !14
  %64 = icmp eq i16 %63, 12
  br i1 %64, label %65, label %68

65:                                               ; preds = %62, %57, %47
  %66 = add nuw nsw i64 %48, 1
  %67 = icmp eq i64 %66, %37
  br i1 %67, label %70, label %47, !llvm.loop !78

68:                                               ; preds = %62
  call void @gc_mark(ptr noundef nonnull %40)
  %69 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %70

70:                                               ; preds = %65, %36, %68
  %71 = phi i64 [ %37, %36 ], [ %69, %68 ], [ %37, %65 ]
  %72 = add nuw nsw i64 %38, 1
  %73 = icmp eq i64 %72, 32
  br i1 %73, label %33, label %36, !llvm.loop !79

74:                                               ; preds = %33, %86
  %75 = phi ptr [ %88, %86 ], [ %34, %33 ]
  %76 = load ptr, ptr %75, align 8, !tbaa !58
  %77 = getelementptr inbounds %struct.gc_protected, ptr %75, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !60
  %79 = icmp sgt i64 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %74, %80
  %81 = phi i64 [ %84, %80 ], [ 0, %74 ]
  %82 = getelementptr inbounds ptr, ptr %76, i64 %81
  %83 = load ptr, ptr %82, align 8, !tbaa !5
  call void @gc_mark(ptr noundef %83)
  %84 = add nuw nsw i64 %81, 1
  %85 = icmp eq i64 %84, %78
  br i1 %85, label %86, label %80, !llvm.loop !81

86:                                               ; preds = %80, %74
  %87 = getelementptr inbounds %struct.gc_protected, ptr %75, i64 0, i32 2
  %88 = load ptr, ptr %87, align 8, !tbaa !5
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %74, !llvm.loop !82

90:                                               ; preds = %86, %33
  %91 = load ptr, ptr @stack_start_ptr, align 8, !tbaa !5
  %92 = icmp ugt ptr %91, %3
  %93 = select i1 %92, ptr %91, ptr %3
  %94 = select i1 %92, ptr %3, ptr %91
  %95 = ptrtoint ptr %93 to i64
  %96 = ptrtoint ptr %94 to i64
  %97 = sub i64 %95, %96
  %98 = ashr i64 %97, 3
  %99 = icmp sgt i64 %97, 0
  %100 = load i64, ptr @nheaps, align 8, !tbaa !10
  br i1 %99, label %101, label %105

101:                                              ; preds = %90
  %102 = icmp sgt i64 %100, 0
  br i1 %102, label %103, label %206

103:                                              ; preds = %101
  %104 = call i64 @llvm.smax.i64(i64 %98, i64 1)
  br label %108

105:                                              ; preds = %142, %90
  %106 = phi i64 [ %100, %90 ], [ %143, %142 ]
  %107 = icmp sgt i64 %106, 0
  br i1 %107, label %146, label %206

108:                                              ; preds = %103, %142
  %109 = phi i64 [ %100, %103 ], [ %143, %142 ]
  %110 = phi i64 [ 0, %103 ], [ %144, %142 ]
  %111 = getelementptr inbounds ptr, ptr %94, i64 %110
  %112 = load ptr, ptr %111, align 8, !tbaa !5
  %113 = getelementptr inbounds %struct.obj, ptr %112, i64 0, i32 1
  %114 = icmp sgt i64 %109, 0
  br i1 %114, label %115, label %142

115:                                              ; preds = %108
  %116 = load ptr, ptr @heaps, align 8, !tbaa !5
  %117 = load i64, ptr @heap_size, align 8
  %118 = ptrtoint ptr %112 to i64
  br label %119

119:                                              ; preds = %137, %115
  %120 = phi i64 [ 0, %115 ], [ %138, %137 ]
  %121 = getelementptr inbounds ptr, ptr %116, i64 %120
  %122 = load ptr, ptr %121, align 8, !tbaa !5
  %123 = icmp ne ptr %122, null
  %124 = icmp ule ptr %122, %112
  %125 = and i1 %123, %124
  %126 = getelementptr inbounds %struct.obj, ptr %122, i64 %117
  %127 = icmp ugt ptr %126, %112
  %128 = select i1 %125, i1 %127, i1 false
  br i1 %128, label %129, label %137

129:                                              ; preds = %119
  %130 = ptrtoint ptr %122 to i64
  %131 = sub i64 %118, %130
  %132 = urem i64 %131, 24
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = load i16, ptr %113, align 2, !tbaa !14
  %136 = icmp eq i16 %135, 12
  br i1 %136, label %137, label %140

137:                                              ; preds = %134, %129, %119
  %138 = add nuw nsw i64 %120, 1
  %139 = icmp eq i64 %138, %109
  br i1 %139, label %142, label %119, !llvm.loop !78

140:                                              ; preds = %134
  call void @gc_mark(ptr noundef nonnull %112)
  %141 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %142

142:                                              ; preds = %137, %108, %140
  %143 = phi i64 [ %109, %108 ], [ %141, %140 ], [ %109, %137 ]
  %144 = add nuw nsw i64 %110, 1
  %145 = icmp eq i64 %144, %104
  br i1 %145, label %105, label %108, !llvm.loop !83

146:                                              ; preds = %105, %200
  %147 = phi i64 [ %201, %200 ], [ %106, %105 ]
  %148 = phi i64 [ %204, %200 ], [ 0, %105 ]
  %149 = phi i64 [ %203, %200 ], [ 0, %105 ]
  %150 = phi ptr [ %202, %200 ], [ null, %105 ]
  %151 = load ptr, ptr @heaps, align 8, !tbaa !5
  %152 = getelementptr inbounds ptr, ptr %151, i64 %148
  %153 = load ptr, ptr %152, align 8, !tbaa !5
  %154 = icmp eq ptr %153, null
  br i1 %154, label %200, label %155

155:                                              ; preds = %146
  %156 = load i64, ptr @heap_size, align 8, !tbaa !10
  %157 = getelementptr inbounds %struct.obj, ptr %153, i64 %156
  %158 = icmp sgt i64 %156, 0
  br i1 %158, label %159, label %200

159:                                              ; preds = %155, %193
  %160 = phi ptr [ %196, %193 ], [ %153, %155 ]
  %161 = phi i64 [ %195, %193 ], [ %149, %155 ]
  %162 = phi ptr [ %194, %193 ], [ %150, %155 ]
  %163 = load i16, ptr %160, align 8, !tbaa !35
  %164 = icmp eq i16 %163, 0
  br i1 %164, label %165, label %192

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.obj, ptr %160, i64 0, i32 1
  %167 = load i16, ptr %166, align 2, !tbaa !14
  %168 = sext i16 %167 to i32
  switch i32 %168, label %169 [
    i32 12, label %189
    i32 1, label %189
    i32 11, label %189
    i32 3, label %189
    i32 2, label %189
    i32 4, label %189
    i32 5, label %189
    i32 6, label %189
    i32 21, label %189
    i32 7, label %189
    i32 19, label %189
    i32 20, label %189
    i32 8, label %189
    i32 9, label %189
    i32 10, label %189
  ]

169:                                              ; preds = %165
  %170 = sext i16 %167 to i64
  %171 = load ptr, ptr @user_types, align 8, !tbaa !5
  %172 = icmp eq ptr %171, null
  br i1 %172, label %173, label %179

173:                                              ; preds = %169
  %174 = call noalias dereferenceable_or_null(8000) ptr @malloc(i64 noundef 8000) #39
  %175 = icmp eq ptr %174, null
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %178

178:                                              ; preds = %176, %173
  store ptr %174, ptr @user_types, align 8, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(8000) %174, i8 0, i64 8000, i1 false)
  br label %179

179:                                              ; preds = %178, %169
  %180 = phi ptr [ %174, %178 ], [ %171, %169 ]
  %181 = icmp ult i16 %167, 100
  br i1 %181, label %182, label %186

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.user_type_hooks, ptr %180, i64 %170, i32 3
  %184 = load ptr, ptr %183, align 8, !tbaa !48
  %185 = icmp eq ptr %184, null
  br i1 %185, label %189, label %188

186:                                              ; preds = %179
  %187 = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

188:                                              ; preds = %182
  call void %184(ptr noundef nonnull %160) #33
  br label %189

189:                                              ; preds = %188, %182, %165, %165, %165, %165, %165, %165, %165, %165, %165, %165, %165, %165, %165, %165, %165
  %190 = add nsw i64 %161, 1
  store i16 12, ptr %166, align 2, !tbaa !14
  %191 = getelementptr inbounds %struct.obj, ptr %160, i64 0, i32 2, i32 0, i32 1
  store ptr %162, ptr %191, align 8, !tbaa !9
  br label %193

192:                                              ; preds = %159
  store i16 0, ptr %160, align 8, !tbaa !35
  br label %193

193:                                              ; preds = %192, %189
  %194 = phi ptr [ %160, %189 ], [ %162, %192 ]
  %195 = phi i64 [ %190, %189 ], [ %161, %192 ]
  %196 = getelementptr inbounds %struct.obj, ptr %160, i64 1
  %197 = icmp ult ptr %196, %157
  br i1 %197, label %159, label %198, !llvm.loop !84

198:                                              ; preds = %193
  %199 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %200

200:                                              ; preds = %198, %155, %146
  %201 = phi i64 [ %147, %146 ], [ %147, %155 ], [ %199, %198 ]
  %202 = phi ptr [ %150, %146 ], [ %150, %155 ], [ %194, %198 ]
  %203 = phi i64 [ %149, %146 ], [ %149, %155 ], [ %195, %198 ]
  %204 = add nuw nsw i64 %148, 1
  %205 = icmp slt i64 %204, %201
  br i1 %205, label %146, label %206, !llvm.loop !85

206:                                              ; preds = %200, %101, %105
  %207 = phi ptr [ null, %105 ], [ null, %101 ], [ %202, %200 ]
  %208 = phi i64 [ 0, %105 ], [ 0, %101 ], [ %203, %200 ]
  store i64 %208, ptr @gc_cells_collected, align 8, !tbaa !10
  store ptr %207, ptr @freelist, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %1) #33
  %209 = call i64 @times(ptr noundef nonnull %1) #33
  %210 = load i64, ptr %1, align 8, !tbaa !36
  %211 = sitofp i64 %210 to double
  %212 = getelementptr inbounds %struct.tms, ptr %1, i64 0, i32 1
  %213 = load i64, ptr %212, align 8, !tbaa !38
  %214 = sitofp i64 %213 to double
  %215 = fadd double %211, %214
  %216 = fdiv double %215, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #33
  %217 = load double, ptr @gc_rt, align 8, !tbaa !39
  %218 = fsub double %216, %217
  store double %218, ptr @gc_rt, align 8, !tbaa !39
  %219 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  %220 = fadd double %219, %218
  store double %220, ptr @gc_time_taken, align 8, !tbaa !39
  %221 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %222 = icmp ne i64 %221, 0
  %223 = load i64, ptr @siod_verbose_level, align 8
  %224 = icmp sgt i64 %223, 3
  %225 = select i1 %222, i1 %224, i1 false
  br i1 %225, label %226, label %229

226:                                              ; preds = %206
  %227 = load i64, ptr @gc_cells_collected, align 8, !tbaa !10
  %228 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.76, double noundef %218, i64 noundef %227)
  br label %229

229:                                              ; preds = %206, %226
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #33
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @gc_ms_stats_start() local_unnamed_addr #1 {
  %1 = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %1) #33
  %2 = call i64 @times(ptr noundef nonnull %1) #33
  %3 = load i64, ptr %1, align 8, !tbaa !36
  %4 = sitofp i64 %3 to double
  %5 = getelementptr inbounds %struct.tms, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !38
  %7 = sitofp i64 %6 to double
  %8 = fadd double %4, %7
  %9 = fdiv double %8, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #33
  store double %9, ptr @gc_rt, align 8, !tbaa !39
  store i64 0, ptr @gc_cells_collected, align 8, !tbaa !10
  %10 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %11 = icmp ne i64 %10, 0
  %12 = load i64, ptr @siod_verbose_level, align 8
  %13 = icmp sgt i64 %12, 3
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %15, label %17

15:                                               ; preds = %0
  %16 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.241)
  br label %17

17:                                               ; preds = %15, %0
  ret void
}

; Function Attrs: returns_twice
declare i32 @getcontext(ptr noundef) local_unnamed_addr #21

; Function Attrs: nounwind uwtable
define dso_local void @mark_locations(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = icmp ugt ptr %0, %1
  %4 = select i1 %3, ptr %0, ptr %1
  %5 = select i1 %3, ptr %1, ptr %0
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp sgt i64 %8, 0
  %11 = load i64, ptr @nheaps, align 8
  %12 = icmp sgt i64 %11, 0
  %13 = select i1 %10, i1 %12, i1 false
  br i1 %13, label %14, label %52

14:                                               ; preds = %2, %48
  %15 = phi i64 [ %49, %48 ], [ %11, %2 ]
  %16 = phi i64 [ %50, %48 ], [ 0, %2 ]
  %17 = getelementptr inbounds ptr, ptr %5, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 1
  %20 = icmp sgt i64 %15, 0
  br i1 %20, label %21, label %48

21:                                               ; preds = %14
  %22 = load ptr, ptr @heaps, align 8, !tbaa !5
  %23 = load i64, ptr @heap_size, align 8
  %24 = ptrtoint ptr %18 to i64
  br label %25

25:                                               ; preds = %43, %21
  %26 = phi i64 [ 0, %21 ], [ %44, %43 ]
  %27 = getelementptr inbounds ptr, ptr %22, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !5
  %29 = icmp ne ptr %28, null
  %30 = icmp ule ptr %28, %18
  %31 = and i1 %29, %30
  %32 = getelementptr inbounds %struct.obj, ptr %28, i64 %23
  %33 = icmp ugt ptr %32, %18
  %34 = select i1 %31, i1 %33, i1 false
  br i1 %34, label %35, label %43

35:                                               ; preds = %25
  %36 = ptrtoint ptr %28 to i64
  %37 = sub i64 %24, %36
  %38 = urem i64 %37, 24
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = load i16, ptr %19, align 2, !tbaa !14
  %42 = icmp eq i16 %41, 12
  br i1 %42, label %43, label %46

43:                                               ; preds = %40, %35, %25
  %44 = add nuw nsw i64 %26, 1
  %45 = icmp eq i64 %44, %15
  br i1 %45, label %48, label %25, !llvm.loop !78

46:                                               ; preds = %40
  tail call void @gc_mark(ptr noundef nonnull %18)
  %47 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %48

48:                                               ; preds = %43, %46, %14
  %49 = phi i64 [ %15, %14 ], [ %47, %46 ], [ %15, %43 ]
  %50 = add nuw nsw i64 %16, 1
  %51 = icmp eq i64 %50, %9
  br i1 %51, label %52, label %14, !llvm.loop !86

52:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_protected_registers() local_unnamed_addr #6 {
  %1 = load ptr, ptr @protected_registers, align 8, !tbaa !5
  %2 = icmp eq ptr %1, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %0, %15
  %4 = phi ptr [ %17, %15 ], [ %1, %0 ]
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = getelementptr inbounds %struct.gc_protected, ptr %4, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !60
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %3, %9
  %10 = phi i64 [ %13, %9 ], [ 0, %3 ]
  %11 = getelementptr inbounds ptr, ptr %5, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  tail call void @gc_mark(ptr noundef %12)
  %13 = add nuw nsw i64 %10, 1
  %14 = icmp eq i64 %13, %7
  br i1 %14, label %15, label %9, !llvm.loop !81

15:                                               ; preds = %9, %3
  %16 = getelementptr inbounds %struct.gc_protected, ptr %4, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %3, !llvm.loop !82

19:                                               ; preds = %15, %0
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_sweep() local_unnamed_addr #6 {
  %1 = load i64, ptr @nheaps, align 8, !tbaa !10
  %2 = icmp sgt i64 %1, 0
  br i1 %2, label %3, label %63

3:                                                ; preds = %0, %57
  %4 = phi i64 [ %58, %57 ], [ %1, %0 ]
  %5 = phi i64 [ %61, %57 ], [ 0, %0 ]
  %6 = phi i64 [ %60, %57 ], [ 0, %0 ]
  %7 = phi ptr [ %59, %57 ], [ null, %0 ]
  %8 = load ptr, ptr @heaps, align 8, !tbaa !5
  %9 = getelementptr inbounds ptr, ptr %8, i64 %5
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = icmp eq ptr %10, null
  br i1 %11, label %57, label %12

12:                                               ; preds = %3
  %13 = load i64, ptr @heap_size, align 8, !tbaa !10
  %14 = getelementptr inbounds %struct.obj, ptr %10, i64 %13
  %15 = icmp sgt i64 %13, 0
  br i1 %15, label %16, label %57

16:                                               ; preds = %12, %50
  %17 = phi ptr [ %53, %50 ], [ %10, %12 ]
  %18 = phi i64 [ %52, %50 ], [ %6, %12 ]
  %19 = phi ptr [ %51, %50 ], [ %7, %12 ]
  %20 = load i16, ptr %17, align 8, !tbaa !35
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %49

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.obj, ptr %17, i64 0, i32 1
  %24 = load i16, ptr %23, align 2, !tbaa !14
  %25 = sext i16 %24 to i32
  switch i32 %25, label %26 [
    i32 12, label %46
    i32 1, label %46
    i32 11, label %46
    i32 3, label %46
    i32 2, label %46
    i32 4, label %46
    i32 5, label %46
    i32 6, label %46
    i32 21, label %46
    i32 7, label %46
    i32 19, label %46
    i32 20, label %46
    i32 8, label %46
    i32 9, label %46
    i32 10, label %46
  ]

26:                                               ; preds = %22
  %27 = sext i16 %24 to i64
  %28 = load ptr, ptr @user_types, align 8, !tbaa !5
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %35

35:                                               ; preds = %33, %30
  store ptr %31, ptr @user_types, align 8, !tbaa !5
  br label %36

36:                                               ; preds = %35, %26
  %37 = phi ptr [ %31, %35 ], [ %28, %26 ]
  %38 = icmp ult i16 %24, 100
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.user_type_hooks, ptr %37, i64 %27, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !48
  %42 = icmp eq ptr %41, null
  br i1 %42, label %46, label %45

43:                                               ; preds = %36
  %44 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

45:                                               ; preds = %39
  tail call void %41(ptr noundef nonnull %17) #33
  br label %46

46:                                               ; preds = %39, %45, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22
  %47 = add nsw i64 %18, 1
  store i16 12, ptr %23, align 2, !tbaa !14
  %48 = getelementptr inbounds %struct.obj, ptr %17, i64 0, i32 2, i32 0, i32 1
  store ptr %19, ptr %48, align 8, !tbaa !9
  br label %50

49:                                               ; preds = %16
  store i16 0, ptr %17, align 8, !tbaa !35
  br label %50

50:                                               ; preds = %46, %49
  %51 = phi ptr [ %17, %46 ], [ %19, %49 ]
  %52 = phi i64 [ %47, %46 ], [ %18, %49 ]
  %53 = getelementptr inbounds %struct.obj, ptr %17, i64 1
  %54 = icmp ult ptr %53, %14
  br i1 %54, label %16, label %55, !llvm.loop !84

55:                                               ; preds = %50
  %56 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %57

57:                                               ; preds = %55, %12, %3
  %58 = phi i64 [ %4, %3 ], [ %4, %12 ], [ %56, %55 ]
  %59 = phi ptr [ %7, %3 ], [ %7, %12 ], [ %51, %55 ]
  %60 = phi i64 [ %6, %3 ], [ %6, %12 ], [ %52, %55 ]
  %61 = add nuw nsw i64 %5, 1
  %62 = icmp slt i64 %61, %58
  br i1 %62, label %3, label %63, !llvm.loop !85

63:                                               ; preds = %57, %0
  %64 = phi ptr [ null, %0 ], [ %59, %57 ]
  %65 = phi i64 [ 0, %0 ], [ %60, %57 ]
  store i64 %65, ptr @gc_cells_collected, align 8, !tbaa !10
  store ptr %64, ptr @freelist, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @gc_ms_stats_end() local_unnamed_addr #1 {
  %1 = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %1) #33
  %2 = call i64 @times(ptr noundef nonnull %1) #33
  %3 = load i64, ptr %1, align 8, !tbaa !36
  %4 = sitofp i64 %3 to double
  %5 = getelementptr inbounds %struct.tms, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !38
  %7 = sitofp i64 %6 to double
  %8 = fadd double %4, %7
  %9 = fdiv double %8, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #33
  %10 = load double, ptr @gc_rt, align 8, !tbaa !39
  %11 = fsub double %9, %10
  store double %11, ptr @gc_rt, align 8, !tbaa !39
  %12 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  %13 = fadd double %12, %11
  store double %13, ptr @gc_time_taken, align 8, !tbaa !39
  %14 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %15 = icmp ne i64 %14, 0
  %16 = load i64, ptr @siod_verbose_level, align 8
  %17 = icmp sgt i64 %16, 3
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %19, label %22

19:                                               ; preds = %0
  %20 = load i64, ptr @gc_cells_collected, align 8, !tbaa !10
  %21 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.76, double noundef %11, i64 noundef %20)
  br label %22

22:                                               ; preds = %19, %0
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @gc_mark(ptr noundef %0) local_unnamed_addr #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %46, label %3

3:                                                ; preds = %1, %15
  %4 = phi ptr [ %17, %15 ], [ %0, %1 ]
  %5 = load i16, ptr %4, align 8, !tbaa !35
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %46

7:                                                ; preds = %3
  store i16 1, ptr %4, align 8, !tbaa !35
  %8 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %9 = load i16, ptr %8, align 2, !tbaa !14
  %10 = sext i16 %9 to i32
  switch i32 %10, label %25 [
    i32 2, label %46
    i32 1, label %11
    i32 3, label %19
    i32 11, label %21
    i32 4, label %46
    i32 5, label %46
    i32 6, label %46
    i32 21, label %46
    i32 7, label %46
    i32 19, label %46
    i32 20, label %46
    i32 8, label %46
    i32 9, label %46
    i32 10, label %46
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  tail call void @gc_mark(ptr noundef %13)
  %14 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  br label %15

15:                                               ; preds = %11, %19, %21
  %16 = phi ptr [ %22, %21 ], [ %20, %19 ], [ %14, %11 ]
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = icmp eq ptr %17, null
  br i1 %18, label %46, label %3

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  br label %15

21:                                               ; preds = %7
  %22 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2
  %23 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  tail call void @gc_mark(ptr noundef %24)
  br label %15

25:                                               ; preds = %7
  %26 = sext i16 %9 to i64
  %27 = load ptr, ptr @user_types, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %34

34:                                               ; preds = %29, %32
  store ptr %30, ptr @user_types, align 8, !tbaa !5
  br label %35

35:                                               ; preds = %34, %25
  %36 = phi ptr [ %30, %34 ], [ %27, %25 ]
  %37 = icmp ult i16 %9, 100
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.user_type_hooks, ptr %36, i64 %26, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !73
  %41 = icmp eq ptr %40, null
  br i1 %41, label %46, label %44

42:                                               ; preds = %35
  %43 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

44:                                               ; preds = %38
  %45 = tail call ptr %40(ptr noundef nonnull %4) #33
  br label %46

46:                                               ; preds = %15, %3, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %1, %44, %38
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_locations_array(ptr nocapture noundef readonly %0, i64 noundef %1) local_unnamed_addr #6 {
  %3 = icmp sgt i64 %1, 0
  %4 = load i64, ptr @nheaps, align 8
  %5 = icmp sgt i64 %4, 0
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %45

7:                                                ; preds = %2, %41
  %8 = phi i64 [ %42, %41 ], [ %4, %2 ]
  %9 = phi i64 [ %43, %41 ], [ 0, %2 ]
  %10 = getelementptr inbounds ptr, ptr %0, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %13 = icmp sgt i64 %8, 0
  br i1 %13, label %14, label %41

14:                                               ; preds = %7
  %15 = load ptr, ptr @heaps, align 8, !tbaa !5
  %16 = load i64, ptr @heap_size, align 8
  %17 = ptrtoint ptr %11 to i64
  br label %18

18:                                               ; preds = %36, %14
  %19 = phi i64 [ 0, %14 ], [ %37, %36 ]
  %20 = getelementptr inbounds ptr, ptr %15, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %22 = icmp ne ptr %21, null
  %23 = icmp ule ptr %21, %11
  %24 = and i1 %22, %23
  %25 = getelementptr inbounds %struct.obj, ptr %21, i64 %16
  %26 = icmp ugt ptr %25, %11
  %27 = select i1 %24, i1 %26, i1 false
  br i1 %27, label %28, label %36

28:                                               ; preds = %18
  %29 = ptrtoint ptr %21 to i64
  %30 = sub i64 %17, %29
  %31 = urem i64 %30, 24
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = load i16, ptr %12, align 2, !tbaa !14
  %35 = icmp eq i16 %34, 12
  br i1 %35, label %36, label %39

36:                                               ; preds = %33, %28, %18
  %37 = add nuw nsw i64 %19, 1
  %38 = icmp eq i64 %37, %8
  br i1 %38, label %41, label %18, !llvm.loop !78

39:                                               ; preds = %33
  tail call void @gc_mark(ptr noundef nonnull %11)
  %40 = load i64, ptr @nheaps, align 8, !tbaa !10
  br label %41

41:                                               ; preds = %36, %7, %39
  %42 = phi i64 [ %8, %7 ], [ %40, %39 ], [ %8, %36 ]
  %43 = add nuw nsw i64 %9, 1
  %44 = icmp eq i64 %43, %1
  br i1 %44, label %45, label %7, !llvm.loop !86

45:                                               ; preds = %41, %2
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @looks_pointerp(ptr noundef %0) local_unnamed_addr #22 {
  %2 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %3 = load i64, ptr @nheaps, align 8, !tbaa !10
  %4 = icmp sgt i64 %3, 0
  br i1 %4, label %5, label %30

5:                                                ; preds = %1
  %6 = load ptr, ptr @heaps, align 8, !tbaa !5
  %7 = load i64, ptr @heap_size, align 8
  %8 = ptrtoint ptr %0 to i64
  br label %9

9:                                                ; preds = %5, %27
  %10 = phi i64 [ 0, %5 ], [ %28, %27 ]
  %11 = getelementptr inbounds ptr, ptr %6, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = icmp ne ptr %12, null
  %14 = icmp ule ptr %12, %0
  %15 = and i1 %13, %14
  %16 = getelementptr inbounds %struct.obj, ptr %12, i64 %7
  %17 = icmp ugt ptr %16, %0
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %19, label %27

19:                                               ; preds = %9
  %20 = ptrtoint ptr %12 to i64
  %21 = sub i64 %8, %20
  %22 = urem i64 %21, 24
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load i16, ptr %2, align 2, !tbaa !14
  %26 = icmp eq i16 %25, 12
  br i1 %26, label %27, label %30

27:                                               ; preds = %9, %19, %24
  %28 = add nuw nsw i64 %10, 1
  %29 = icmp eq i64 %28, %3
  br i1 %29, label %30, label %9, !llvm.loop !78

30:                                               ; preds = %24, %27, %1
  %31 = phi i64 [ 0, %1 ], [ 0, %27 ], [ 1, %24 ]
  ret i64 %31
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @user_gc(ptr noundef %0) #6 {
  %2 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3 = icmp eq i64 %2, 1
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call ptr @err(ptr noundef nonnull @.str.77, ptr noundef null)
  br label %6

6:                                                ; preds = %1, %4
  %7 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  store i64 0, ptr @errjmp_ok, align 8, !tbaa !10
  %8 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %9 = icmp eq ptr %0, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %12 = load i16, ptr %11, align 2, !tbaa !14
  %13 = sext i16 %12 to i32
  switch i32 %13, label %19 [
    i32 0, label %21
    i32 1, label %14
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  %17 = icmp ne ptr %16, null
  %18 = zext i1 %17 to i64
  br label %21

19:                                               ; preds = %10
  %20 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %21

21:                                               ; preds = %14, %10, %19
  %22 = phi i64 [ 0, %19 ], [ 0, %10 ], [ %18, %14 ]
  store i64 %22, ptr @gc_status_flag, align 8, !tbaa !10
  br label %23

23:                                               ; preds = %21, %6
  tail call void @gc_mark_and_sweep()
  store i64 %8, ptr @gc_status_flag, align 8, !tbaa !10
  store i64 1, ptr @errjmp_ok, align 8, !tbaa !10
  store i64 %7, ptr @nointerrupt, align 8, !tbaa !10
  %24 = icmp eq i64 %7, 0
  %25 = load i64, ptr @interrupt_differed, align 8
  %26 = icmp eq i64 %25, 1
  %27 = select i1 %24, i1 %26, i1 false
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %29 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %30

30:                                               ; preds = %23, %28
  ret ptr null
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @nactive_heaps() local_unnamed_addr #22 {
  %1 = load i64, ptr @nheaps, align 8, !tbaa !10
  %2 = icmp sgt i64 %1, 0
  br i1 %2, label %3, label %13

3:                                                ; preds = %0
  %4 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %5

5:                                                ; preds = %3, %10
  %6 = phi i64 [ 0, %3 ], [ %11, %10 ]
  %7 = getelementptr inbounds ptr, ptr %4, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = icmp eq ptr %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = add nuw nsw i64 %6, 1
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %13, label %5, !llvm.loop !87

13:                                               ; preds = %5, %10, %0
  %14 = phi i64 [ 0, %0 ], [ %1, %10 ], [ %6, %5 ]
  ret i64 %14
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @freelist_length() local_unnamed_addr #22 {
  %1 = load ptr, ptr @freelist, align 8, !tbaa !9
  %2 = icmp eq ptr %1, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %0, %3
  %4 = phi ptr [ %8, %3 ], [ %1, %0 ]
  %5 = phi i64 [ %7, %3 ], [ 0, %0 ]
  %6 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %7 = add nuw nsw i64 %5, 1
  %8 = load ptr, ptr %6, align 8, !tbaa !9
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %3, !llvm.loop !88

10:                                               ; preds = %3, %0
  %11 = phi i64 [ 0, %0 ], [ %7, %3 ]
  %12 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %13 = load ptr, ptr @heap, align 8, !tbaa !5
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  %18 = add nsw i64 %17, %11
  ret i64 %18
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @gc_status(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %12 [
    i32 0, label %14
    i32 1, label %7
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  %10 = icmp ne ptr %9, null
  %11 = zext i1 %10 to i64
  br label %14

12:                                               ; preds = %3
  %13 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %14

14:                                               ; preds = %7, %3, %12
  %15 = phi i64 [ 0, %12 ], [ 0, %3 ], [ %11, %7 ]
  store i64 %15, ptr @gc_status_flag, align 8, !tbaa !10
  br label %16

16:                                               ; preds = %14, %1
  %17 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %18 = icmp eq i64 %17, 1
  %19 = load i64, ptr @gc_status_flag, align 8, !tbaa !10
  %20 = icmp eq i64 %19, 0
  %21 = load ptr, ptr @stdout, align 8, !tbaa !5
  %22 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  br i1 %18, label %23, label %59

23:                                               ; preds = %16
  br i1 %20, label %30, label %24

24:                                               ; preds = %23
  %25 = tail call i64 @fwrite(ptr nonnull @.str.78, i64 25, i64 1, ptr %21)
  store i64 %22, ptr @nointerrupt, align 8, !tbaa !10
  %26 = icmp eq i64 %22, 0
  %27 = load i64, ptr @interrupt_differed, align 8
  %28 = icmp eq i64 %27, 1
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %36, label %38

30:                                               ; preds = %23
  %31 = tail call i64 @fwrite(ptr nonnull @.str.79, i64 26, i64 1, ptr %21)
  store i64 %22, ptr @nointerrupt, align 8, !tbaa !10
  %32 = icmp eq i64 %22, 0
  %33 = load i64, ptr @interrupt_differed, align 8
  %34 = icmp eq i64 %33, 1
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %38

36:                                               ; preds = %30, %24
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %37 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %38

38:                                               ; preds = %36, %30, %24
  %39 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %40 = load ptr, ptr @heap, align 8, !tbaa !5
  %41 = load ptr, ptr @heap_org, align 8, !tbaa !5
  %42 = ptrtoint ptr %40 to i64
  %43 = ptrtoint ptr %41 to i64
  %44 = sub i64 %42, %43
  %45 = sdiv exact i64 %44, 24
  %46 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %47 = ptrtoint ptr %46 to i64
  %48 = sub i64 %47, %42
  %49 = sdiv exact i64 %48, 24
  %50 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %39, ptr noundef nonnull dereferenceable(1) @.str.80, i64 noundef %45, i64 noundef %49) #33
  %51 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %52 = load ptr, ptr @stdout, align 8, !tbaa !5
  %53 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %54 = tail call i32 @fputs(ptr %51, ptr %52)
  store i64 %53, ptr @nointerrupt, align 8, !tbaa !10
  %55 = icmp eq i64 %53, 0
  %56 = load i64, ptr @interrupt_differed, align 8
  %57 = icmp eq i64 %56, 1
  %58 = select i1 %55, i1 %57, i1 false
  br i1 %58, label %120, label %122

59:                                               ; preds = %16
  br i1 %20, label %66, label %60

60:                                               ; preds = %59
  %61 = tail call i64 @fwrite(ptr nonnull @.str.81, i64 27, i64 1, ptr %21)
  store i64 %22, ptr @nointerrupt, align 8, !tbaa !10
  %62 = icmp eq i64 %22, 0
  %63 = load i64, ptr @interrupt_differed, align 8
  %64 = icmp eq i64 %63, 1
  %65 = select i1 %62, i1 %64, i1 false
  br i1 %65, label %72, label %74

66:                                               ; preds = %59
  %67 = tail call i64 @fwrite(ptr nonnull @.str.82, i64 26, i64 1, ptr %21)
  store i64 %22, ptr @nointerrupt, align 8, !tbaa !10
  %68 = icmp eq i64 %22, 0
  %69 = load i64, ptr @interrupt_differed, align 8
  %70 = icmp eq i64 %69, 1
  %71 = select i1 %68, i1 %70, i1 false
  br i1 %71, label %72, label %74

72:                                               ; preds = %66, %60
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %73 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %74

74:                                               ; preds = %72, %66, %60
  %75 = load i64, ptr @nheaps, align 8, !tbaa !10
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %87

77:                                               ; preds = %74
  %78 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %79

79:                                               ; preds = %84, %77
  %80 = phi i64 [ 0, %77 ], [ %85, %84 ]
  %81 = getelementptr inbounds ptr, ptr %78, i64 %80
  %82 = load ptr, ptr %81, align 8, !tbaa !5
  %83 = icmp eq ptr %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = add nuw nsw i64 %80, 1
  %86 = icmp eq i64 %85, %75
  br i1 %86, label %87, label %79, !llvm.loop !87

87:                                               ; preds = %79, %84, %74
  %88 = phi i64 [ 0, %74 ], [ %80, %79 ], [ %75, %84 ]
  %89 = load ptr, ptr @freelist, align 8, !tbaa !9
  %90 = icmp eq ptr %89, null
  br i1 %90, label %98, label %91

91:                                               ; preds = %87, %91
  %92 = phi ptr [ %96, %91 ], [ %89, %87 ]
  %93 = phi i64 [ %95, %91 ], [ 0, %87 ]
  %94 = getelementptr inbounds %struct.obj, ptr %92, i64 0, i32 2, i32 0, i32 1
  %95 = add nuw nsw i64 %93, 1
  %96 = load ptr, ptr %94, align 8, !tbaa !9
  %97 = icmp eq ptr %96, null
  br i1 %97, label %98, label %91, !llvm.loop !88

98:                                               ; preds = %91, %87
  %99 = phi i64 [ 0, %87 ], [ %95, %91 ]
  %100 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %101 = load ptr, ptr @heap, align 8, !tbaa !5
  %102 = ptrtoint ptr %100 to i64
  %103 = ptrtoint ptr %101 to i64
  %104 = sub i64 %102, %103
  %105 = sdiv exact i64 %104, 24
  %106 = add nsw i64 %105, %99
  %107 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %108 = load i64, ptr @heap_size, align 8, !tbaa !10
  %109 = mul nsw i64 %108, %88
  %110 = sub nsw i64 %109, %106
  %111 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %107, ptr noundef nonnull dereferenceable(1) @.str.83, i64 noundef %88, i64 noundef %75, i64 noundef %110, i64 noundef %106) #33
  %112 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %113 = load ptr, ptr @stdout, align 8, !tbaa !5
  %114 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %115 = tail call i32 @fputs(ptr %112, ptr %113)
  store i64 %114, ptr @nointerrupt, align 8, !tbaa !10
  %116 = icmp eq i64 %114, 0
  %117 = load i64, ptr @interrupt_differed, align 8
  %118 = icmp eq i64 %117, 1
  %119 = select i1 %116, i1 %118, i1 false
  br i1 %119, label %120, label %122

120:                                              ; preds = %98, %38
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %121 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %122

122:                                              ; preds = %120, %98, %38
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @gc_info(ptr noundef %0) #6 {
  %2 = tail call i64 @get_c_long(ptr noundef %0) #33
  switch i64 %2, label %224 [
    i64 0, label %3
    i64 1, label %8
    i64 2, label %65
    i64 3, label %109
    i64 4, label %153
  ]

3:                                                ; preds = %1
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  %6 = load ptr, ptr @sym_t, align 8
  %7 = select i1 %5, ptr %6, ptr null
  br label %224

8:                                                ; preds = %1
  %9 = load i64, ptr @nheaps, align 8, !tbaa !10
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %8
  %12 = load ptr, ptr @heaps, align 8, !tbaa !5
  br label %13

13:                                               ; preds = %18, %11
  %14 = phi i64 [ 0, %11 ], [ %19, %18 ]
  %15 = getelementptr inbounds ptr, ptr %12, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = icmp eq ptr %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = add nuw nsw i64 %14, 1
  %20 = icmp eq i64 %19, %9
  br i1 %20, label %21, label %13, !llvm.loop !87

21:                                               ; preds = %13, %18, %8
  %22 = phi i64 [ 0, %8 ], [ %14, %13 ], [ %9, %18 ]
  %23 = sitofp i64 %22 to double
  %24 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %26, label %39

26:                                               ; preds = %21
  %27 = fptosi double %23 to i64
  %28 = sitofp i64 %27 to double
  %29 = fsub double %23, %28
  %30 = fcmp oeq double %29, 0.000000e+00
  %31 = icmp sgt i64 %22, -1
  %32 = and i1 %31, %30
  %33 = icmp sgt i64 %24, %27
  %34 = select i1 %32, i1 %33, i1 false
  br i1 %34, label %35, label %39

35:                                               ; preds = %26
  %36 = load ptr, ptr @inums, align 8, !tbaa !5
  %37 = getelementptr inbounds ptr, ptr %36, i64 %27
  %38 = load ptr, ptr %37, align 8, !tbaa !5
  br label %224

39:                                               ; preds = %26, %21
  %40 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %41 = icmp eq i64 %40, 1
  br i1 %41, label %42, label %50

42:                                               ; preds = %39
  %43 = load ptr, ptr @heap, align 8, !tbaa !5
  %44 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %45 = icmp ult ptr %43, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %48

48:                                               ; preds = %46, %42
  %49 = getelementptr inbounds %struct.obj, ptr %43, i64 1
  store ptr %49, ptr @heap, align 8, !tbaa !5
  br label %61

50:                                               ; preds = %39
  %51 = load ptr, ptr @freelist, align 8, !tbaa !5
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  tail call void @gc_for_newcell()
  %54 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %55

55:                                               ; preds = %53, %50
  %56 = phi ptr [ %54, %53 ], [ %51, %50 ]
  %57 = getelementptr inbounds %struct.obj, ptr %56, i64 0, i32 2, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !9
  store ptr %58, ptr @freelist, align 8, !tbaa !5
  %59 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %60 = add nsw i64 %59, 1
  store i64 %60, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %61

61:                                               ; preds = %55, %48
  %62 = phi ptr [ %43, %48 ], [ %56, %55 ]
  store i16 0, ptr %62, align 8, !tbaa !35
  %63 = getelementptr inbounds %struct.obj, ptr %62, i64 0, i32 1
  store i16 2, ptr %63, align 2, !tbaa !14
  %64 = getelementptr inbounds %struct.obj, ptr %62, i64 0, i32 2
  store double %23, ptr %64, align 8, !tbaa !9
  br label %224

65:                                               ; preds = %1
  %66 = load i64, ptr @nheaps, align 8, !tbaa !10
  %67 = sitofp i64 %66 to double
  %68 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %83

70:                                               ; preds = %65
  %71 = fptosi double %67 to i64
  %72 = sitofp i64 %71 to double
  %73 = fsub double %67, %72
  %74 = fcmp oeq double %73, 0.000000e+00
  %75 = icmp sgt i64 %66, -1
  %76 = and i1 %75, %74
  %77 = icmp sgt i64 %68, %71
  %78 = select i1 %76, i1 %77, i1 false
  br i1 %78, label %79, label %83

79:                                               ; preds = %70
  %80 = load ptr, ptr @inums, align 8, !tbaa !5
  %81 = getelementptr inbounds ptr, ptr %80, i64 %71
  %82 = load ptr, ptr %81, align 8, !tbaa !5
  br label %224

83:                                               ; preds = %70, %65
  %84 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %85 = icmp eq i64 %84, 1
  br i1 %85, label %86, label %94

86:                                               ; preds = %83
  %87 = load ptr, ptr @heap, align 8, !tbaa !5
  %88 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %89 = icmp ult ptr %87, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  %91 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %92

92:                                               ; preds = %90, %86
  %93 = getelementptr inbounds %struct.obj, ptr %87, i64 1
  store ptr %93, ptr @heap, align 8, !tbaa !5
  br label %105

94:                                               ; preds = %83
  %95 = load ptr, ptr @freelist, align 8, !tbaa !5
  %96 = icmp eq ptr %95, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  tail call void @gc_for_newcell()
  %98 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %99

99:                                               ; preds = %97, %94
  %100 = phi ptr [ %98, %97 ], [ %95, %94 ]
  %101 = getelementptr inbounds %struct.obj, ptr %100, i64 0, i32 2, i32 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !9
  store ptr %102, ptr @freelist, align 8, !tbaa !5
  %103 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %104 = add nsw i64 %103, 1
  store i64 %104, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %105

105:                                              ; preds = %99, %92
  %106 = phi ptr [ %87, %92 ], [ %100, %99 ]
  store i16 0, ptr %106, align 8, !tbaa !35
  %107 = getelementptr inbounds %struct.obj, ptr %106, i64 0, i32 1
  store i16 2, ptr %107, align 2, !tbaa !14
  %108 = getelementptr inbounds %struct.obj, ptr %106, i64 0, i32 2
  store double %67, ptr %108, align 8, !tbaa !9
  br label %224

109:                                              ; preds = %1
  %110 = load i64, ptr @heap_size, align 8, !tbaa !10
  %111 = sitofp i64 %110 to double
  %112 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %113 = icmp sgt i64 %112, 0
  br i1 %113, label %114, label %127

114:                                              ; preds = %109
  %115 = fptosi double %111 to i64
  %116 = sitofp i64 %115 to double
  %117 = fsub double %111, %116
  %118 = fcmp oeq double %117, 0.000000e+00
  %119 = icmp sgt i64 %110, -1
  %120 = and i1 %119, %118
  %121 = icmp sgt i64 %112, %115
  %122 = select i1 %120, i1 %121, i1 false
  br i1 %122, label %123, label %127

123:                                              ; preds = %114
  %124 = load ptr, ptr @inums, align 8, !tbaa !5
  %125 = getelementptr inbounds ptr, ptr %124, i64 %115
  %126 = load ptr, ptr %125, align 8, !tbaa !5
  br label %224

127:                                              ; preds = %114, %109
  %128 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %138

130:                                              ; preds = %127
  %131 = load ptr, ptr @heap, align 8, !tbaa !5
  %132 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %133 = icmp ult ptr %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %136

136:                                              ; preds = %134, %130
  %137 = getelementptr inbounds %struct.obj, ptr %131, i64 1
  store ptr %137, ptr @heap, align 8, !tbaa !5
  br label %149

138:                                              ; preds = %127
  %139 = load ptr, ptr @freelist, align 8, !tbaa !5
  %140 = icmp eq ptr %139, null
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  tail call void @gc_for_newcell()
  %142 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %143

143:                                              ; preds = %141, %138
  %144 = phi ptr [ %142, %141 ], [ %139, %138 ]
  %145 = getelementptr inbounds %struct.obj, ptr %144, i64 0, i32 2, i32 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !9
  store ptr %146, ptr @freelist, align 8, !tbaa !5
  %147 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %148 = add nsw i64 %147, 1
  store i64 %148, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %149

149:                                              ; preds = %143, %136
  %150 = phi ptr [ %131, %136 ], [ %144, %143 ]
  store i16 0, ptr %150, align 8, !tbaa !35
  %151 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 1
  store i16 2, ptr %151, align 2, !tbaa !14
  %152 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 2
  store double %111, ptr %152, align 8, !tbaa !9
  br label %224

153:                                              ; preds = %1
  %154 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %163

156:                                              ; preds = %153
  %157 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %158 = load ptr, ptr @heap, align 8, !tbaa !5
  %159 = ptrtoint ptr %157 to i64
  %160 = ptrtoint ptr %158 to i64
  %161 = sub i64 %159, %160
  %162 = sdiv exact i64 %161, 24
  br label %182

163:                                              ; preds = %153
  %164 = load ptr, ptr @freelist, align 8, !tbaa !9
  %165 = icmp eq ptr %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %163, %166
  %167 = phi ptr [ %171, %166 ], [ %164, %163 ]
  %168 = phi i64 [ %170, %166 ], [ 0, %163 ]
  %169 = getelementptr inbounds %struct.obj, ptr %167, i64 0, i32 2, i32 0, i32 1
  %170 = add nuw nsw i64 %168, 1
  %171 = load ptr, ptr %169, align 8, !tbaa !9
  %172 = icmp eq ptr %171, null
  br i1 %172, label %173, label %166, !llvm.loop !88

173:                                              ; preds = %166, %163
  %174 = phi i64 [ 0, %163 ], [ %170, %166 ]
  %175 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %176 = load ptr, ptr @heap, align 8, !tbaa !5
  %177 = ptrtoint ptr %175 to i64
  %178 = ptrtoint ptr %176 to i64
  %179 = sub i64 %177, %178
  %180 = sdiv exact i64 %179, 24
  %181 = add nsw i64 %180, %174
  br label %182

182:                                              ; preds = %173, %156
  %183 = phi ptr [ %157, %156 ], [ %175, %173 ]
  %184 = phi ptr [ %158, %156 ], [ %176, %173 ]
  %185 = phi i64 [ %162, %156 ], [ %181, %173 ]
  %186 = sitofp i64 %185 to double
  %187 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %188 = icmp sgt i64 %187, 0
  br i1 %188, label %189, label %202

189:                                              ; preds = %182
  %190 = fptosi double %186 to i64
  %191 = sitofp i64 %190 to double
  %192 = fsub double %186, %191
  %193 = fcmp oeq double %192, 0.000000e+00
  %194 = icmp sgt i64 %185, -1
  %195 = and i1 %194, %193
  %196 = icmp sgt i64 %187, %190
  %197 = select i1 %195, i1 %196, i1 false
  br i1 %197, label %198, label %202

198:                                              ; preds = %189
  %199 = load ptr, ptr @inums, align 8, !tbaa !5
  %200 = getelementptr inbounds ptr, ptr %199, i64 %190
  %201 = load ptr, ptr %200, align 8, !tbaa !5
  br label %224

202:                                              ; preds = %189, %182
  br i1 %155, label %203, label %209

203:                                              ; preds = %202
  %204 = icmp ult ptr %184, %183
  br i1 %204, label %207, label %205

205:                                              ; preds = %203
  %206 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %207

207:                                              ; preds = %205, %203
  %208 = getelementptr inbounds %struct.obj, ptr %184, i64 1
  store ptr %208, ptr @heap, align 8, !tbaa !5
  br label %220

209:                                              ; preds = %202
  %210 = load ptr, ptr @freelist, align 8, !tbaa !5
  %211 = icmp eq ptr %210, null
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  tail call void @gc_for_newcell()
  %213 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %214

214:                                              ; preds = %212, %209
  %215 = phi ptr [ %213, %212 ], [ %210, %209 ]
  %216 = getelementptr inbounds %struct.obj, ptr %215, i64 0, i32 2, i32 0, i32 1
  %217 = load ptr, ptr %216, align 8, !tbaa !9
  store ptr %217, ptr @freelist, align 8, !tbaa !5
  %218 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %219 = add nsw i64 %218, 1
  store i64 %219, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %220

220:                                              ; preds = %214, %207
  %221 = phi ptr [ %184, %207 ], [ %215, %214 ]
  store i16 0, ptr %221, align 8, !tbaa !35
  %222 = getelementptr inbounds %struct.obj, ptr %221, i64 0, i32 1
  store i16 2, ptr %222, align 2, !tbaa !14
  %223 = getelementptr inbounds %struct.obj, ptr %221, i64 0, i32 2
  store double %186, ptr %223, align 8, !tbaa !9
  br label %224

224:                                              ; preds = %1, %220, %198, %149, %123, %105, %79, %61, %35, %3
  %225 = phi ptr [ %7, %3 ], [ %38, %35 ], [ %62, %61 ], [ %82, %79 ], [ %106, %105 ], [ %126, %123 ], [ %150, %149 ], [ %201, %198 ], [ %221, %220 ], [ null, %1 ]
  ret ptr %225
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_args(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %85, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.84, ptr noundef nonnull %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !9
  %13 = tail call ptr @leval(ptr noundef %12, ptr noundef %1)
  %14 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = load ptr, ptr @heap, align 8, !tbaa !5
  %18 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %19 = icmp ult ptr %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %struct.obj, ptr %17, i64 1
  store ptr %23, ptr @heap, align 8, !tbaa !5
  br label %35

24:                                               ; preds = %10
  %25 = load ptr, ptr @freelist, align 8, !tbaa !5
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  tail call void @gc_for_newcell()
  %28 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi ptr [ %28, %27 ], [ %25, %24 ]
  %31 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2, i32 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  store ptr %32, ptr @freelist, align 8, !tbaa !5
  %33 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %35

35:                                               ; preds = %22, %29
  %36 = phi ptr [ %17, %22 ], [ %30, %29 ]
  store i16 0, ptr %36, align 8, !tbaa !35
  %37 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 1
  store i16 1, ptr %37, align 2, !tbaa !14
  %38 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2
  store ptr %13, ptr %38, align 8, !tbaa !9
  %39 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %39, align 8, !tbaa !9
  %40 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !9
  %42 = icmp eq ptr %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %35, %74
  %44 = phi ptr [ %81, %74 ], [ %41, %35 ]
  %45 = phi ptr [ %75, %74 ], [ %36, %35 ]
  %46 = getelementptr inbounds %struct.obj, ptr %44, i64 0, i32 1
  %47 = load i16, ptr %46, align 2, !tbaa !14
  %48 = icmp eq i16 %47, 1
  br i1 %48, label %49, label %83

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.obj, ptr %44, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !9
  %52 = tail call ptr @leval(ptr noundef %51, ptr noundef %1)
  %53 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %55, label %63

55:                                               ; preds = %49
  %56 = load ptr, ptr @heap, align 8, !tbaa !5
  %57 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %58 = icmp ult ptr %56, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %struct.obj, ptr %56, i64 1
  store ptr %62, ptr @heap, align 8, !tbaa !5
  br label %74

63:                                               ; preds = %49
  %64 = load ptr, ptr @freelist, align 8, !tbaa !5
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  tail call void @gc_for_newcell()
  %67 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %68

68:                                               ; preds = %66, %63
  %69 = phi ptr [ %67, %66 ], [ %64, %63 ]
  %70 = getelementptr inbounds %struct.obj, ptr %69, i64 0, i32 2, i32 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !9
  store ptr %71, ptr @freelist, align 8, !tbaa !5
  %72 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %73 = add nsw i64 %72, 1
  store i64 %73, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %74

74:                                               ; preds = %61, %68
  %75 = phi ptr [ %56, %61 ], [ %69, %68 ]
  store i16 0, ptr %75, align 8, !tbaa !35
  %76 = getelementptr inbounds %struct.obj, ptr %75, i64 0, i32 1
  store i16 1, ptr %76, align 2, !tbaa !14
  %77 = getelementptr inbounds %struct.obj, ptr %75, i64 0, i32 2
  store ptr %52, ptr %77, align 8, !tbaa !9
  %78 = getelementptr inbounds %struct.obj, ptr %75, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %78, align 8, !tbaa !9
  %79 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 2, i32 0, i32 1
  store ptr %75, ptr %79, align 8, !tbaa !9
  %80 = getelementptr inbounds %struct.obj, ptr %44, i64 0, i32 2, i32 0, i32 1
  %81 = load ptr, ptr %80, align 8, !tbaa !9
  %82 = icmp eq ptr %81, null
  br i1 %82, label %85, label %43, !llvm.loop !89

83:                                               ; preds = %43
  %84 = tail call ptr @err(ptr noundef nonnull @.str.84, ptr noundef nonnull %0)
  br label %85

85:                                               ; preds = %74, %35, %83, %2
  %86 = phi ptr [ null, %2 ], [ %36, %83 ], [ %36, %35 ], [ %36, %74 ]
  ret ptr %86
}

; Function Attrs: nounwind uwtable
define dso_local ptr @extend_env(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #6 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %109, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 3
  br i1 %8, label %9, label %109

9:                                                ; preds = %5
  %10 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %20

12:                                               ; preds = %9
  %13 = load ptr, ptr @heap, align 8, !tbaa !5
  %14 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %15 = icmp ult ptr %13, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %13, i64 1
  store ptr %19, ptr @heap, align 8, !tbaa !5
  br label %31

20:                                               ; preds = %9
  %21 = load ptr, ptr @freelist, align 8, !tbaa !5
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  tail call void @gc_for_newcell() #38
  %24 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi ptr [ %24, %23 ], [ %21, %20 ]
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !9
  store ptr %28, ptr @freelist, align 8, !tbaa !5
  %29 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %30 = add nsw i64 %29, 1
  store i64 %30, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %31

31:                                               ; preds = %18, %25
  %32 = phi ptr [ %13, %18 ], [ %26, %25 ]
  store i16 0, ptr %32, align 8, !tbaa !35
  %33 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 1
  store i16 1, ptr %33, align 2, !tbaa !14
  %34 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2
  store ptr %1, ptr %34, align 8, !tbaa !9
  %35 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %35, align 8, !tbaa !9
  %36 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %31
  %39 = load ptr, ptr @heap, align 8, !tbaa !5
  %40 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %41 = icmp ult ptr %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.obj, ptr %39, i64 1
  store ptr %45, ptr @heap, align 8, !tbaa !5
  br label %57

46:                                               ; preds = %31
  %47 = load ptr, ptr @freelist, align 8, !tbaa !5
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  tail call void @gc_for_newcell() #38
  %50 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi ptr [ %50, %49 ], [ %47, %46 ]
  %53 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !9
  store ptr %54, ptr @freelist, align 8, !tbaa !5
  %55 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %57

57:                                               ; preds = %44, %51
  %58 = phi ptr [ %39, %44 ], [ %52, %51 ]
  store i16 0, ptr %58, align 8, !tbaa !35
  %59 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 1
  store i16 1, ptr %59, align 2, !tbaa !14
  %60 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2
  store ptr %0, ptr %60, align 8, !tbaa !9
  %61 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %61, align 8, !tbaa !9
  %62 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %63 = icmp eq i64 %62, 1
  br i1 %63, label %64, label %72

64:                                               ; preds = %57
  %65 = load ptr, ptr @heap, align 8, !tbaa !5
  %66 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %67 = icmp ult ptr %65, %66
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %70

70:                                               ; preds = %68, %64
  %71 = getelementptr inbounds %struct.obj, ptr %65, i64 1
  store ptr %71, ptr @heap, align 8, !tbaa !5
  br label %83

72:                                               ; preds = %57
  %73 = load ptr, ptr @freelist, align 8, !tbaa !5
  %74 = icmp eq ptr %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  tail call void @gc_for_newcell() #38
  %76 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %77

77:                                               ; preds = %75, %72
  %78 = phi ptr [ %76, %75 ], [ %73, %72 ]
  %79 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 2, i32 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !9
  store ptr %80, ptr @freelist, align 8, !tbaa !5
  %81 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %83

83:                                               ; preds = %70, %77
  %84 = phi ptr [ %65, %70 ], [ %78, %77 ]
  store i16 0, ptr %84, align 8, !tbaa !35
  %85 = getelementptr inbounds %struct.obj, ptr %84, i64 0, i32 1
  store i16 1, ptr %85, align 2, !tbaa !14
  %86 = getelementptr inbounds %struct.obj, ptr %84, i64 0, i32 2
  store ptr %32, ptr %86, align 8, !tbaa !9
  %87 = getelementptr inbounds %struct.obj, ptr %84, i64 0, i32 2, i32 0, i32 1
  store ptr %58, ptr %87, align 8, !tbaa !9
  %88 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %89 = icmp eq i64 %88, 1
  br i1 %89, label %90, label %98

90:                                               ; preds = %83
  %91 = load ptr, ptr @heap, align 8, !tbaa !5
  %92 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %93 = icmp ult ptr %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %96

96:                                               ; preds = %94, %90
  %97 = getelementptr inbounds %struct.obj, ptr %91, i64 1
  store ptr %97, ptr @heap, align 8, !tbaa !5
  br label %157

98:                                               ; preds = %83
  %99 = load ptr, ptr @freelist, align 8, !tbaa !5
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  tail call void @gc_for_newcell() #38
  %102 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %103

103:                                              ; preds = %101, %98
  %104 = phi ptr [ %102, %101 ], [ %99, %98 ]
  %105 = getelementptr inbounds %struct.obj, ptr %104, i64 0, i32 2, i32 0, i32 1
  %106 = load ptr, ptr %105, align 8, !tbaa !9
  store ptr %106, ptr @freelist, align 8, !tbaa !5
  %107 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %108 = add nsw i64 %107, 1
  store i64 %108, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %157

109:                                              ; preds = %3, %5
  %110 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %120

112:                                              ; preds = %109
  %113 = load ptr, ptr @heap, align 8, !tbaa !5
  %114 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %115 = icmp ult ptr %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %118

118:                                              ; preds = %116, %112
  %119 = getelementptr inbounds %struct.obj, ptr %113, i64 1
  store ptr %119, ptr @heap, align 8, !tbaa !5
  br label %131

120:                                              ; preds = %109
  %121 = load ptr, ptr @freelist, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  tail call void @gc_for_newcell() #38
  %124 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %125

125:                                              ; preds = %123, %120
  %126 = phi ptr [ %124, %123 ], [ %121, %120 ]
  %127 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 2, i32 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !9
  store ptr %128, ptr @freelist, align 8, !tbaa !5
  %129 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %130 = add nsw i64 %129, 1
  store i64 %130, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %131

131:                                              ; preds = %118, %125
  %132 = phi ptr [ %113, %118 ], [ %126, %125 ]
  store i16 0, ptr %132, align 8, !tbaa !35
  %133 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 1
  store i16 1, ptr %133, align 2, !tbaa !14
  %134 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 2
  store ptr %1, ptr %134, align 8, !tbaa !9
  %135 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 2, i32 0, i32 1
  store ptr %0, ptr %135, align 8, !tbaa !9
  %136 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %137 = icmp eq i64 %136, 1
  br i1 %137, label %138, label %146

138:                                              ; preds = %131
  %139 = load ptr, ptr @heap, align 8, !tbaa !5
  %140 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %141 = icmp ult ptr %139, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %struct.obj, ptr %139, i64 1
  store ptr %145, ptr @heap, align 8, !tbaa !5
  br label %157

146:                                              ; preds = %131
  %147 = load ptr, ptr @freelist, align 8, !tbaa !5
  %148 = icmp eq ptr %147, null
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  tail call void @gc_for_newcell() #38
  %150 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi ptr [ %150, %149 ], [ %147, %146 ]
  %153 = getelementptr inbounds %struct.obj, ptr %152, i64 0, i32 2, i32 0, i32 1
  %154 = load ptr, ptr %153, align 8, !tbaa !9
  store ptr %154, ptr @freelist, align 8, !tbaa !5
  %155 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %156 = add nsw i64 %155, 1
  store i64 %156, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %157

157:                                              ; preds = %151, %144, %103, %96
  %158 = phi ptr [ %91, %96 ], [ %104, %103 ], [ %139, %144 ], [ %152, %151 ]
  %159 = phi ptr [ %84, %96 ], [ %84, %103 ], [ %132, %144 ], [ %132, %151 ]
  store i16 0, ptr %158, align 8, !tbaa !35
  %160 = getelementptr inbounds %struct.obj, ptr %158, i64 0, i32 1
  store i16 1, ptr %160, align 2, !tbaa !14
  %161 = getelementptr inbounds %struct.obj, ptr %158, i64 0, i32 2
  store ptr %159, ptr %161, align 8, !tbaa !9
  %162 = getelementptr inbounds %struct.obj, ptr %158, i64 0, i32 2, i32 0, i32 1
  store ptr %2, ptr %162, align 8, !tbaa !9
  ret ptr %158
}

; Function Attrs: nounwind uwtable
define dso_local void @set_eval_hooks(i64 noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = load ptr, ptr @user_types, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = tail call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %10

10:                                               ; preds = %8, %5
  store ptr %6, ptr @user_types, align 8, !tbaa !5
  br label %11

11:                                               ; preds = %10, %2
  %12 = phi ptr [ %6, %10 ], [ %3, %2 ]
  %13 = icmp ult i64 %0, 100
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.user_type_hooks, ptr %12, i64 %0, i32 5
  store ptr %1, ptr %15, align 8, !tbaa !52
  ret void

16:                                               ; preds = %11
  %17 = tail call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @err_closure_code(ptr noundef %0) local_unnamed_addr #6 {
  %2 = tail call ptr @err(ptr noundef nonnull @.str.88, ptr noundef %0)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lapply(ptr noundef %0, ptr noundef %1) #6 {
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8, !tbaa !5
  %4 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %5 = icmp ult ptr %3, %4
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %8 = load ptr, ptr %3, align 8, !tbaa !5
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi ptr [ %8, %6 ], [ %0, %2 ]
  %11 = icmp eq ptr %10, null
  br i1 %11, label %562, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = sext i16 %14 to i32
  switch i32 %15, label %560 [
    i32 4, label %16
    i32 5, label %20
    i32 6, label %36
    i32 21, label %73
    i32 7, label %145
    i32 19, label %212
    i32 20, label %319
    i32 8, label %476
    i32 9, label %480
    i32 10, label %480
    i32 3, label %480
    i32 11, label %482
  ]

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = call ptr %18() #33
  br label %586

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  %23 = icmp eq ptr %1, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %26 = load i16, ptr %25, align 2, !tbaa !14
  %27 = sext i16 %26 to i32
  switch i32 %27, label %31 [
    i32 0, label %33
    i32 1, label %28
  ]

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !9
  br label %33

31:                                               ; preds = %24
  %32 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  br label %33

33:                                               ; preds = %20, %24, %28, %31
  %34 = phi ptr [ null, %31 ], [ %30, %28 ], [ null, %24 ], [ null, %20 ]
  %35 = call ptr %22(ptr noundef %34) #33
  br label %586

36:                                               ; preds = %12
  %37 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !9
  %39 = icmp eq ptr %1, null
  br i1 %39, label %69, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %42 = load i16, ptr %41, align 2, !tbaa !14
  %43 = sext i16 %42 to i32
  switch i32 %43, label %47 [
    i32 0, label %50
    i32 1, label %44
  ]

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !9
  br label %50

47:                                               ; preds = %40
  %48 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  %49 = load i16, ptr %41, align 2, !tbaa !14
  br label %50

50:                                               ; preds = %40, %44, %47
  %51 = phi i16 [ %42, %40 ], [ %42, %44 ], [ %49, %47 ]
  %52 = phi ptr [ null, %40 ], [ %46, %44 ], [ null, %47 ]
  %53 = sext i16 %51 to i32
  switch i32 %53, label %54 [
    i32 0, label %69
    i32 1, label %56
  ]

54:                                               ; preds = %50
  %55 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %69

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !9
  %59 = icmp eq ptr %58, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 1
  %62 = load i16, ptr %61, align 2, !tbaa !14
  %63 = sext i16 %62 to i32
  switch i32 %63, label %67 [
    i32 0, label %69
    i32 1, label %64
  ]

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !9
  br label %69

67:                                               ; preds = %60
  %68 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %58)
  br label %69

69:                                               ; preds = %36, %50, %54, %56, %60, %64, %67
  %70 = phi ptr [ %52, %67 ], [ %52, %64 ], [ %52, %60 ], [ %52, %56 ], [ null, %36 ], [ %52, %50 ], [ %52, %54 ]
  %71 = phi ptr [ null, %67 ], [ %66, %64 ], [ null, %60 ], [ null, %56 ], [ null, %36 ], [ null, %50 ], [ null, %54 ]
  %72 = call ptr %38(ptr noundef %70, ptr noundef %71) #33
  br label %586

73:                                               ; preds = %12
  %74 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !9
  %76 = icmp eq ptr %1, null
  br i1 %76, label %106, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %79 = load i16, ptr %78, align 2, !tbaa !14
  %80 = sext i16 %79 to i32
  switch i32 %80, label %84 [
    i32 0, label %87
    i32 1, label %81
  ]

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !9
  br label %87

84:                                               ; preds = %77
  %85 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  %86 = load i16, ptr %78, align 2, !tbaa !14
  br label %87

87:                                               ; preds = %77, %81, %84
  %88 = phi i16 [ %79, %77 ], [ %79, %81 ], [ %86, %84 ]
  %89 = phi ptr [ null, %77 ], [ %83, %81 ], [ null, %84 ]
  %90 = sext i16 %88 to i32
  switch i32 %90, label %91 [
    i32 0, label %108
    i32 1, label %93
  ]

91:                                               ; preds = %87
  %92 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %108

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %95 = load ptr, ptr %94, align 8, !tbaa !9
  %96 = icmp eq ptr %95, null
  br i1 %96, label %108, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.obj, ptr %95, i64 0, i32 1
  %99 = load i16, ptr %98, align 2, !tbaa !14
  %100 = sext i16 %99 to i32
  switch i32 %100, label %104 [
    i32 0, label %108
    i32 1, label %101
  ]

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.obj, ptr %95, i64 0, i32 2
  %103 = load ptr, ptr %102, align 8, !tbaa !9
  br label %108

104:                                              ; preds = %97
  %105 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %95)
  br label %108

106:                                              ; preds = %73
  %107 = call ptr %75(ptr noundef null, ptr noundef null) #33
  br label %586

108:                                              ; preds = %87, %91, %104, %101, %97, %93
  %109 = phi ptr [ null, %93 ], [ null, %97 ], [ %103, %101 ], [ null, %104 ], [ null, %91 ], [ null, %87 ]
  %110 = call ptr %75(ptr noundef %89, ptr noundef %109) #33
  %111 = load i16, ptr %78, align 2, !tbaa !14
  %112 = sext i16 %111 to i32
  switch i32 %112, label %113 [
    i32 0, label %586
    i32 1, label %115
  ]

113:                                              ; preds = %108
  %114 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %586

115:                                              ; preds = %108
  %116 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !9
  %118 = icmp eq ptr %117, null
  br i1 %118, label %586, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.obj, ptr %117, i64 0, i32 1
  %121 = load i16, ptr %120, align 2, !tbaa !14
  %122 = sext i16 %121 to i32
  switch i32 %122, label %123 [
    i32 0, label %586
    i32 1, label %125
  ]

123:                                              ; preds = %119
  %124 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %117)
  br label %586

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct.obj, ptr %117, i64 0, i32 2, i32 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !9
  %128 = icmp eq ptr %127, null
  br i1 %128, label %586, label %129

129:                                              ; preds = %125, %135
  %130 = phi ptr [ %141, %135 ], [ %110, %125 ]
  %131 = phi ptr [ %143, %135 ], [ %127, %125 ]
  %132 = getelementptr inbounds %struct.obj, ptr %131, i64 0, i32 1
  %133 = load i16, ptr %132, align 2, !tbaa !14
  %134 = icmp eq i16 %133, 1
  br i1 %134, label %135, label %586

135:                                              ; preds = %129
  %136 = load ptr, ptr %3, align 8, !tbaa !5
  %137 = getelementptr inbounds %struct.obj, ptr %136, i64 0, i32 2, i32 0, i32 1
  %138 = load ptr, ptr %137, align 8, !tbaa !9
  %139 = getelementptr inbounds %struct.obj, ptr %131, i64 0, i32 2
  %140 = load ptr, ptr %139, align 8, !tbaa !9
  %141 = call ptr %138(ptr noundef %130, ptr noundef %140) #33
  %142 = getelementptr inbounds %struct.obj, ptr %131, i64 0, i32 2, i32 0, i32 1
  %143 = load ptr, ptr %142, align 8, !tbaa !9
  %144 = icmp eq ptr %143, null
  br i1 %144, label %586, label %129, !llvm.loop !90

145:                                              ; preds = %12
  %146 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %147 = load ptr, ptr %146, align 8, !tbaa !9
  %148 = icmp eq ptr %1, null
  br i1 %148, label %207, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %151 = load i16, ptr %150, align 2, !tbaa !14
  %152 = sext i16 %151 to i32
  switch i32 %152, label %156 [
    i32 0, label %159
    i32 1, label %153
  ]

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %155 = load ptr, ptr %154, align 8, !tbaa !9
  br label %159

156:                                              ; preds = %149
  %157 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  %158 = load i16, ptr %150, align 2, !tbaa !14
  br label %159

159:                                              ; preds = %149, %153, %156
  %160 = phi i16 [ %151, %149 ], [ %151, %153 ], [ %158, %156 ]
  %161 = phi ptr [ null, %149 ], [ %155, %153 ], [ null, %156 ]
  %162 = sext i16 %160 to i32
  switch i32 %162, label %163 [
    i32 0, label %178
    i32 1, label %165
  ]

163:                                              ; preds = %159
  %164 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %178

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %167 = load ptr, ptr %166, align 8, !tbaa !9
  %168 = icmp eq ptr %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.obj, ptr %167, i64 0, i32 1
  %171 = load i16, ptr %170, align 2, !tbaa !14
  %172 = sext i16 %171 to i32
  switch i32 %172, label %176 [
    i32 0, label %178
    i32 1, label %173
  ]

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct.obj, ptr %167, i64 0, i32 2
  %175 = load ptr, ptr %174, align 8, !tbaa !9
  br label %178

176:                                              ; preds = %169
  %177 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %167)
  br label %178

178:                                              ; preds = %159, %163, %176, %173, %169, %165
  %179 = phi ptr [ null, %165 ], [ null, %169 ], [ %175, %173 ], [ null, %176 ], [ null, %163 ], [ null, %159 ]
  %180 = load i16, ptr %150, align 2, !tbaa !14
  %181 = sext i16 %180 to i32
  switch i32 %181, label %182 [
    i32 0, label %207
    i32 1, label %184
  ]

182:                                              ; preds = %178
  %183 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %207

184:                                              ; preds = %178
  %185 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !9
  %187 = icmp eq ptr %186, null
  br i1 %187, label %207, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.obj, ptr %186, i64 0, i32 1
  %190 = load i16, ptr %189, align 2, !tbaa !14
  %191 = sext i16 %190 to i32
  switch i32 %191, label %192 [
    i32 0, label %207
    i32 1, label %194
  ]

192:                                              ; preds = %188
  %193 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %186)
  br label %207

194:                                              ; preds = %188
  %195 = getelementptr inbounds %struct.obj, ptr %186, i64 0, i32 2, i32 0, i32 1
  %196 = load ptr, ptr %195, align 8, !tbaa !9
  %197 = icmp eq ptr %196, null
  br i1 %197, label %207, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %struct.obj, ptr %196, i64 0, i32 1
  %200 = load i16, ptr %199, align 2, !tbaa !14
  %201 = sext i16 %200 to i32
  switch i32 %201, label %205 [
    i32 0, label %207
    i32 1, label %202
  ]

202:                                              ; preds = %198
  %203 = getelementptr inbounds %struct.obj, ptr %196, i64 0, i32 2
  %204 = load ptr, ptr %203, align 8, !tbaa !9
  br label %207

205:                                              ; preds = %198
  %206 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %196)
  br label %207

207:                                              ; preds = %145, %178, %182, %184, %188, %192, %194, %198, %202, %205
  %208 = phi ptr [ %179, %205 ], [ %179, %202 ], [ %179, %198 ], [ %179, %194 ], [ %179, %184 ], [ %179, %188 ], [ %179, %192 ], [ null, %145 ], [ %179, %178 ], [ %179, %182 ]
  %209 = phi ptr [ %161, %205 ], [ %161, %202 ], [ %161, %198 ], [ %161, %194 ], [ %161, %184 ], [ %161, %188 ], [ %161, %192 ], [ null, %145 ], [ %161, %178 ], [ %161, %182 ]
  %210 = phi ptr [ null, %205 ], [ %204, %202 ], [ null, %198 ], [ null, %194 ], [ null, %184 ], [ null, %188 ], [ null, %192 ], [ null, %145 ], [ null, %178 ], [ null, %182 ]
  %211 = call ptr %147(ptr noundef %209, ptr noundef %208, ptr noundef %210) #33
  br label %586

212:                                              ; preds = %12
  %213 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !9
  %215 = icmp eq ptr %1, null
  br i1 %215, label %313, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %218 = load i16, ptr %217, align 2, !tbaa !14
  %219 = sext i16 %218 to i32
  switch i32 %219, label %223 [
    i32 0, label %226
    i32 1, label %220
  ]

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %222 = load ptr, ptr %221, align 8, !tbaa !9
  br label %226

223:                                              ; preds = %216
  %224 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  %225 = load i16, ptr %217, align 2, !tbaa !14
  br label %226

226:                                              ; preds = %216, %220, %223
  %227 = phi i16 [ %218, %216 ], [ %218, %220 ], [ %225, %223 ]
  %228 = phi ptr [ null, %216 ], [ %222, %220 ], [ null, %223 ]
  %229 = sext i16 %227 to i32
  switch i32 %229, label %230 [
    i32 0, label %245
    i32 1, label %232
  ]

230:                                              ; preds = %226
  %231 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %245

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %234 = load ptr, ptr %233, align 8, !tbaa !9
  %235 = icmp eq ptr %234, null
  br i1 %235, label %245, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.obj, ptr %234, i64 0, i32 1
  %238 = load i16, ptr %237, align 2, !tbaa !14
  %239 = sext i16 %238 to i32
  switch i32 %239, label %243 [
    i32 0, label %245
    i32 1, label %240
  ]

240:                                              ; preds = %236
  %241 = getelementptr inbounds %struct.obj, ptr %234, i64 0, i32 2
  %242 = load ptr, ptr %241, align 8, !tbaa !9
  br label %245

243:                                              ; preds = %236
  %244 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %234)
  br label %245

245:                                              ; preds = %226, %230, %243, %240, %236, %232
  %246 = phi ptr [ null, %232 ], [ null, %236 ], [ %242, %240 ], [ null, %243 ], [ null, %230 ], [ null, %226 ]
  %247 = load i16, ptr %217, align 2, !tbaa !14
  %248 = sext i16 %247 to i32
  switch i32 %248, label %249 [
    i32 0, label %274
    i32 1, label %251
  ]

249:                                              ; preds = %245
  %250 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %274

251:                                              ; preds = %245
  %252 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %253 = load ptr, ptr %252, align 8, !tbaa !9
  %254 = icmp eq ptr %253, null
  br i1 %254, label %274, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %struct.obj, ptr %253, i64 0, i32 1
  %257 = load i16, ptr %256, align 2, !tbaa !14
  %258 = sext i16 %257 to i32
  switch i32 %258, label %259 [
    i32 0, label %274
    i32 1, label %261
  ]

259:                                              ; preds = %255
  %260 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %253)
  br label %274

261:                                              ; preds = %255
  %262 = getelementptr inbounds %struct.obj, ptr %253, i64 0, i32 2, i32 0, i32 1
  %263 = load ptr, ptr %262, align 8, !tbaa !9
  %264 = icmp eq ptr %263, null
  br i1 %264, label %274, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %struct.obj, ptr %263, i64 0, i32 1
  %267 = load i16, ptr %266, align 2, !tbaa !14
  %268 = sext i16 %267 to i32
  switch i32 %268, label %272 [
    i32 0, label %274
    i32 1, label %269
  ]

269:                                              ; preds = %265
  %270 = getelementptr inbounds %struct.obj, ptr %263, i64 0, i32 2
  %271 = load ptr, ptr %270, align 8, !tbaa !9
  br label %274

272:                                              ; preds = %265
  %273 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %263)
  br label %274

274:                                              ; preds = %245, %249, %251, %255, %259, %272, %269, %265, %261
  %275 = phi ptr [ null, %261 ], [ null, %265 ], [ %271, %269 ], [ null, %272 ], [ null, %259 ], [ null, %255 ], [ null, %251 ], [ null, %249 ], [ null, %245 ]
  %276 = load i16, ptr %217, align 2, !tbaa !14
  %277 = sext i16 %276 to i32
  switch i32 %277, label %278 [
    i32 0, label %313
    i32 1, label %280
  ]

278:                                              ; preds = %274
  %279 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %313

280:                                              ; preds = %274
  %281 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %282 = load ptr, ptr %281, align 8, !tbaa !9
  %283 = icmp eq ptr %282, null
  br i1 %283, label %313, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.obj, ptr %282, i64 0, i32 1
  %286 = load i16, ptr %285, align 2, !tbaa !14
  %287 = sext i16 %286 to i32
  switch i32 %287, label %288 [
    i32 0, label %313
    i32 1, label %290
  ]

288:                                              ; preds = %284
  %289 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %282)
  br label %313

290:                                              ; preds = %284
  %291 = getelementptr inbounds %struct.obj, ptr %282, i64 0, i32 2, i32 0, i32 1
  %292 = load ptr, ptr %291, align 8, !tbaa !9
  %293 = icmp eq ptr %292, null
  br i1 %293, label %313, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %struct.obj, ptr %292, i64 0, i32 1
  %296 = load i16, ptr %295, align 2, !tbaa !14
  %297 = sext i16 %296 to i32
  switch i32 %297, label %298 [
    i32 0, label %313
    i32 1, label %300
  ]

298:                                              ; preds = %294
  %299 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %292)
  br label %313

300:                                              ; preds = %294
  %301 = getelementptr inbounds %struct.obj, ptr %292, i64 0, i32 2, i32 0, i32 1
  %302 = load ptr, ptr %301, align 8, !tbaa !9
  %303 = icmp eq ptr %302, null
  br i1 %303, label %313, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %struct.obj, ptr %302, i64 0, i32 1
  %306 = load i16, ptr %305, align 2, !tbaa !14
  %307 = sext i16 %306 to i32
  switch i32 %307, label %311 [
    i32 0, label %313
    i32 1, label %308
  ]

308:                                              ; preds = %304
  %309 = getelementptr inbounds %struct.obj, ptr %302, i64 0, i32 2
  %310 = load ptr, ptr %309, align 8, !tbaa !9
  br label %313

311:                                              ; preds = %304
  %312 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %302)
  br label %313

313:                                              ; preds = %212, %274, %278, %280, %284, %288, %290, %294, %298, %300, %304, %308, %311
  %314 = phi ptr [ %246, %311 ], [ %246, %308 ], [ %246, %304 ], [ %246, %300 ], [ %246, %290 ], [ %246, %294 ], [ %246, %298 ], [ %246, %280 ], [ %246, %284 ], [ %246, %288 ], [ null, %212 ], [ %246, %274 ], [ %246, %278 ]
  %315 = phi ptr [ %228, %311 ], [ %228, %308 ], [ %228, %304 ], [ %228, %300 ], [ %228, %290 ], [ %228, %294 ], [ %228, %298 ], [ %228, %280 ], [ %228, %284 ], [ %228, %288 ], [ null, %212 ], [ %228, %274 ], [ %228, %278 ]
  %316 = phi ptr [ %275, %311 ], [ %275, %308 ], [ %275, %304 ], [ %275, %300 ], [ %275, %290 ], [ %275, %294 ], [ %275, %298 ], [ %275, %280 ], [ %275, %284 ], [ %275, %288 ], [ null, %212 ], [ %275, %274 ], [ %275, %278 ]
  %317 = phi ptr [ null, %311 ], [ %310, %308 ], [ null, %304 ], [ null, %300 ], [ null, %290 ], [ null, %294 ], [ null, %298 ], [ null, %280 ], [ null, %284 ], [ null, %288 ], [ null, %212 ], [ null, %274 ], [ null, %278 ]
  %318 = call ptr %214(ptr noundef %315, ptr noundef %314, ptr noundef %316, ptr noundef %317) #33
  br label %586

319:                                              ; preds = %12
  %320 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %321 = load ptr, ptr %320, align 8, !tbaa !9
  %322 = icmp eq ptr %1, null
  br i1 %322, label %469, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %325 = load i16, ptr %324, align 2, !tbaa !14
  %326 = sext i16 %325 to i32
  switch i32 %326, label %330 [
    i32 0, label %333
    i32 1, label %327
  ]

327:                                              ; preds = %323
  %328 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %329 = load ptr, ptr %328, align 8, !tbaa !9
  br label %333

330:                                              ; preds = %323
  %331 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  %332 = load i16, ptr %324, align 2, !tbaa !14
  br label %333

333:                                              ; preds = %323, %327, %330
  %334 = phi i16 [ %325, %323 ], [ %325, %327 ], [ %332, %330 ]
  %335 = phi ptr [ null, %323 ], [ %329, %327 ], [ null, %330 ]
  %336 = sext i16 %334 to i32
  switch i32 %336, label %337 [
    i32 0, label %352
    i32 1, label %339
  ]

337:                                              ; preds = %333
  %338 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %352

339:                                              ; preds = %333
  %340 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %341 = load ptr, ptr %340, align 8, !tbaa !9
  %342 = icmp eq ptr %341, null
  br i1 %342, label %352, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %struct.obj, ptr %341, i64 0, i32 1
  %345 = load i16, ptr %344, align 2, !tbaa !14
  %346 = sext i16 %345 to i32
  switch i32 %346, label %350 [
    i32 0, label %352
    i32 1, label %347
  ]

347:                                              ; preds = %343
  %348 = getelementptr inbounds %struct.obj, ptr %341, i64 0, i32 2
  %349 = load ptr, ptr %348, align 8, !tbaa !9
  br label %352

350:                                              ; preds = %343
  %351 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %341)
  br label %352

352:                                              ; preds = %333, %337, %350, %347, %343, %339
  %353 = phi ptr [ null, %339 ], [ null, %343 ], [ %349, %347 ], [ null, %350 ], [ null, %337 ], [ null, %333 ]
  %354 = load i16, ptr %324, align 2, !tbaa !14
  %355 = sext i16 %354 to i32
  switch i32 %355, label %356 [
    i32 0, label %381
    i32 1, label %358
  ]

356:                                              ; preds = %352
  %357 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %381

358:                                              ; preds = %352
  %359 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %360 = load ptr, ptr %359, align 8, !tbaa !9
  %361 = icmp eq ptr %360, null
  br i1 %361, label %381, label %362

362:                                              ; preds = %358
  %363 = getelementptr inbounds %struct.obj, ptr %360, i64 0, i32 1
  %364 = load i16, ptr %363, align 2, !tbaa !14
  %365 = sext i16 %364 to i32
  switch i32 %365, label %366 [
    i32 0, label %381
    i32 1, label %368
  ]

366:                                              ; preds = %362
  %367 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %360)
  br label %381

368:                                              ; preds = %362
  %369 = getelementptr inbounds %struct.obj, ptr %360, i64 0, i32 2, i32 0, i32 1
  %370 = load ptr, ptr %369, align 8, !tbaa !9
  %371 = icmp eq ptr %370, null
  br i1 %371, label %381, label %372

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.obj, ptr %370, i64 0, i32 1
  %374 = load i16, ptr %373, align 2, !tbaa !14
  %375 = sext i16 %374 to i32
  switch i32 %375, label %379 [
    i32 0, label %381
    i32 1, label %376
  ]

376:                                              ; preds = %372
  %377 = getelementptr inbounds %struct.obj, ptr %370, i64 0, i32 2
  %378 = load ptr, ptr %377, align 8, !tbaa !9
  br label %381

379:                                              ; preds = %372
  %380 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %370)
  br label %381

381:                                              ; preds = %352, %356, %358, %362, %366, %379, %376, %372, %368
  %382 = phi ptr [ null, %368 ], [ null, %372 ], [ %378, %376 ], [ null, %379 ], [ null, %366 ], [ null, %362 ], [ null, %358 ], [ null, %356 ], [ null, %352 ]
  %383 = load i16, ptr %324, align 2, !tbaa !14
  %384 = sext i16 %383 to i32
  switch i32 %384, label %385 [
    i32 0, label %420
    i32 1, label %387
  ]

385:                                              ; preds = %381
  %386 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %420

387:                                              ; preds = %381
  %388 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %389 = load ptr, ptr %388, align 8, !tbaa !9
  %390 = icmp eq ptr %389, null
  br i1 %390, label %420, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %struct.obj, ptr %389, i64 0, i32 1
  %393 = load i16, ptr %392, align 2, !tbaa !14
  %394 = sext i16 %393 to i32
  switch i32 %394, label %395 [
    i32 0, label %420
    i32 1, label %397
  ]

395:                                              ; preds = %391
  %396 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %389)
  br label %420

397:                                              ; preds = %391
  %398 = getelementptr inbounds %struct.obj, ptr %389, i64 0, i32 2, i32 0, i32 1
  %399 = load ptr, ptr %398, align 8, !tbaa !9
  %400 = icmp eq ptr %399, null
  br i1 %400, label %420, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %struct.obj, ptr %399, i64 0, i32 1
  %403 = load i16, ptr %402, align 2, !tbaa !14
  %404 = sext i16 %403 to i32
  switch i32 %404, label %405 [
    i32 0, label %420
    i32 1, label %407
  ]

405:                                              ; preds = %401
  %406 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %399)
  br label %420

407:                                              ; preds = %401
  %408 = getelementptr inbounds %struct.obj, ptr %399, i64 0, i32 2, i32 0, i32 1
  %409 = load ptr, ptr %408, align 8, !tbaa !9
  %410 = icmp eq ptr %409, null
  br i1 %410, label %420, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %struct.obj, ptr %409, i64 0, i32 1
  %413 = load i16, ptr %412, align 2, !tbaa !14
  %414 = sext i16 %413 to i32
  switch i32 %414, label %418 [
    i32 0, label %420
    i32 1, label %415
  ]

415:                                              ; preds = %411
  %416 = getelementptr inbounds %struct.obj, ptr %409, i64 0, i32 2
  %417 = load ptr, ptr %416, align 8, !tbaa !9
  br label %420

418:                                              ; preds = %411
  %419 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %409)
  br label %420

420:                                              ; preds = %381, %385, %387, %391, %395, %397, %401, %405, %418, %415, %411, %407
  %421 = phi ptr [ null, %407 ], [ null, %411 ], [ %417, %415 ], [ null, %418 ], [ null, %405 ], [ null, %401 ], [ null, %397 ], [ null, %395 ], [ null, %391 ], [ null, %387 ], [ null, %385 ], [ null, %381 ]
  %422 = load i16, ptr %324, align 2, !tbaa !14
  %423 = sext i16 %422 to i32
  switch i32 %423, label %424 [
    i32 0, label %469
    i32 1, label %426
  ]

424:                                              ; preds = %420
  %425 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %469

426:                                              ; preds = %420
  %427 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %428 = load ptr, ptr %427, align 8, !tbaa !9
  %429 = icmp eq ptr %428, null
  br i1 %429, label %469, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %struct.obj, ptr %428, i64 0, i32 1
  %432 = load i16, ptr %431, align 2, !tbaa !14
  %433 = sext i16 %432 to i32
  switch i32 %433, label %434 [
    i32 0, label %469
    i32 1, label %436
  ]

434:                                              ; preds = %430
  %435 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %428)
  br label %469

436:                                              ; preds = %430
  %437 = getelementptr inbounds %struct.obj, ptr %428, i64 0, i32 2, i32 0, i32 1
  %438 = load ptr, ptr %437, align 8, !tbaa !9
  %439 = icmp eq ptr %438, null
  br i1 %439, label %469, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %struct.obj, ptr %438, i64 0, i32 1
  %442 = load i16, ptr %441, align 2, !tbaa !14
  %443 = sext i16 %442 to i32
  switch i32 %443, label %444 [
    i32 0, label %469
    i32 1, label %446
  ]

444:                                              ; preds = %440
  %445 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %438)
  br label %469

446:                                              ; preds = %440
  %447 = getelementptr inbounds %struct.obj, ptr %438, i64 0, i32 2, i32 0, i32 1
  %448 = load ptr, ptr %447, align 8, !tbaa !9
  %449 = icmp eq ptr %448, null
  br i1 %449, label %469, label %450

450:                                              ; preds = %446
  %451 = getelementptr inbounds %struct.obj, ptr %448, i64 0, i32 1
  %452 = load i16, ptr %451, align 2, !tbaa !14
  %453 = sext i16 %452 to i32
  switch i32 %453, label %454 [
    i32 0, label %469
    i32 1, label %456
  ]

454:                                              ; preds = %450
  %455 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %448)
  br label %469

456:                                              ; preds = %450
  %457 = getelementptr inbounds %struct.obj, ptr %448, i64 0, i32 2, i32 0, i32 1
  %458 = load ptr, ptr %457, align 8, !tbaa !9
  %459 = icmp eq ptr %458, null
  br i1 %459, label %469, label %460

460:                                              ; preds = %456
  %461 = getelementptr inbounds %struct.obj, ptr %458, i64 0, i32 1
  %462 = load i16, ptr %461, align 2, !tbaa !14
  %463 = sext i16 %462 to i32
  switch i32 %463, label %467 [
    i32 0, label %469
    i32 1, label %464
  ]

464:                                              ; preds = %460
  %465 = getelementptr inbounds %struct.obj, ptr %458, i64 0, i32 2
  %466 = load ptr, ptr %465, align 8, !tbaa !9
  br label %469

467:                                              ; preds = %460
  %468 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %458)
  br label %469

469:                                              ; preds = %319, %420, %424, %426, %430, %434, %436, %440, %444, %446, %450, %454, %456, %460, %464, %467
  %470 = phi ptr [ %421, %467 ], [ %421, %464 ], [ %421, %460 ], [ %421, %456 ], [ %421, %446 ], [ %421, %450 ], [ %421, %454 ], [ %421, %436 ], [ %421, %440 ], [ %421, %444 ], [ %421, %426 ], [ %421, %430 ], [ %421, %434 ], [ null, %319 ], [ %421, %420 ], [ %421, %424 ]
  %471 = phi ptr [ %382, %467 ], [ %382, %464 ], [ %382, %460 ], [ %382, %456 ], [ %382, %446 ], [ %382, %450 ], [ %382, %454 ], [ %382, %436 ], [ %382, %440 ], [ %382, %444 ], [ %382, %426 ], [ %382, %430 ], [ %382, %434 ], [ null, %319 ], [ %382, %420 ], [ %382, %424 ]
  %472 = phi ptr [ %335, %467 ], [ %335, %464 ], [ %335, %460 ], [ %335, %456 ], [ %335, %446 ], [ %335, %450 ], [ %335, %454 ], [ %335, %436 ], [ %335, %440 ], [ %335, %444 ], [ %335, %426 ], [ %335, %430 ], [ %335, %434 ], [ null, %319 ], [ %335, %420 ], [ %335, %424 ]
  %473 = phi ptr [ %353, %467 ], [ %353, %464 ], [ %353, %460 ], [ %353, %456 ], [ %353, %446 ], [ %353, %450 ], [ %353, %454 ], [ %353, %436 ], [ %353, %440 ], [ %353, %444 ], [ %353, %426 ], [ %353, %430 ], [ %353, %434 ], [ null, %319 ], [ %353, %420 ], [ %353, %424 ]
  %474 = phi ptr [ null, %467 ], [ %466, %464 ], [ null, %460 ], [ null, %456 ], [ null, %446 ], [ null, %450 ], [ null, %454 ], [ null, %436 ], [ null, %440 ], [ null, %444 ], [ null, %426 ], [ null, %430 ], [ null, %434 ], [ null, %319 ], [ null, %420 ], [ null, %424 ]
  %475 = call ptr %321(ptr noundef %472, ptr noundef %473, ptr noundef %471, ptr noundef %470, ptr noundef %474) #33
  br label %586

476:                                              ; preds = %12
  %477 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %478 = load ptr, ptr %477, align 8, !tbaa !9
  %479 = call ptr %478(ptr noundef %1) #33
  br label %586

480:                                              ; preds = %12, %12, %12
  %481 = call ptr @err(ptr noundef nonnull @.str.90, ptr noundef nonnull %10)
  br label %586

482:                                              ; preds = %12
  %483 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %484 = load ptr, ptr %483, align 8, !tbaa !9
  %485 = icmp eq ptr %484, null
  br i1 %485, label %558, label %486

486:                                              ; preds = %482
  %487 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 1
  %488 = load i16, ptr %487, align 2, !tbaa !14
  %489 = sext i16 %488 to i32
  switch i32 %489, label %558 [
    i32 1, label %490
    i32 5, label %501
    i32 6, label %507
    i32 7, label %514
    i32 19, label %523
    i32 20, label %535
    i32 8, label %551
  ]

490:                                              ; preds = %486
  %491 = call ptr @cdr(ptr noundef nonnull %484)
  %492 = load ptr, ptr %3, align 8, !tbaa !5
  %493 = getelementptr inbounds %struct.obj, ptr %492, i64 0, i32 2, i32 0, i32 1
  %494 = load ptr, ptr %493, align 8, !tbaa !9
  %495 = call ptr @car(ptr noundef %494)
  %496 = load ptr, ptr %3, align 8, !tbaa !5
  %497 = getelementptr inbounds %struct.obj, ptr %496, i64 0, i32 2
  %498 = load ptr, ptr %497, align 8, !tbaa !9
  %499 = call ptr @extend_env(ptr noundef %1, ptr noundef %495, ptr noundef %498)
  %500 = call ptr @leval(ptr noundef %491, ptr noundef %499)
  br label %586

501:                                              ; preds = %486
  %502 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %503 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 2, i32 0, i32 1
  %504 = load ptr, ptr %503, align 8, !tbaa !9
  %505 = load ptr, ptr %502, align 8, !tbaa !9
  %506 = call ptr %504(ptr noundef %505) #33
  br label %586

507:                                              ; preds = %486
  %508 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %509 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 2, i32 0, i32 1
  %510 = load ptr, ptr %509, align 8, !tbaa !9
  %511 = load ptr, ptr %508, align 8, !tbaa !9
  %512 = call ptr @car(ptr noundef %1)
  %513 = call ptr %510(ptr noundef %511, ptr noundef %512) #33
  br label %586

514:                                              ; preds = %486
  %515 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %516 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 2, i32 0, i32 1
  %517 = load ptr, ptr %516, align 8, !tbaa !9
  %518 = load ptr, ptr %515, align 8, !tbaa !9
  %519 = call ptr @car(ptr noundef %1)
  %520 = call ptr @cdr(ptr noundef %1)
  %521 = call ptr @car(ptr noundef %520)
  %522 = call ptr %517(ptr noundef %518, ptr noundef %519, ptr noundef %521) #33
  br label %586

523:                                              ; preds = %486
  %524 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %525 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 2, i32 0, i32 1
  %526 = load ptr, ptr %525, align 8, !tbaa !9
  %527 = load ptr, ptr %524, align 8, !tbaa !9
  %528 = call ptr @car(ptr noundef %1)
  %529 = call ptr @cdr(ptr noundef %1)
  %530 = call ptr @car(ptr noundef %529)
  %531 = call ptr @cdr(ptr noundef %1)
  %532 = call ptr @cdr(ptr noundef %531)
  %533 = call ptr @car(ptr noundef %532)
  %534 = call ptr %526(ptr noundef %527, ptr noundef %528, ptr noundef %530, ptr noundef %533) #33
  br label %586

535:                                              ; preds = %486
  %536 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %537 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 2, i32 0, i32 1
  %538 = load ptr, ptr %537, align 8, !tbaa !9
  %539 = load ptr, ptr %536, align 8, !tbaa !9
  %540 = call ptr @car(ptr noundef %1)
  %541 = call ptr @cdr(ptr noundef %1)
  %542 = call ptr @car(ptr noundef %541)
  %543 = call ptr @cdr(ptr noundef %1)
  %544 = call ptr @cdr(ptr noundef %543)
  %545 = call ptr @car(ptr noundef %544)
  %546 = call ptr @cdr(ptr noundef %1)
  %547 = call ptr @cdr(ptr noundef %546)
  %548 = call ptr @cdr(ptr noundef %547)
  %549 = call ptr @car(ptr noundef %548)
  %550 = call ptr %538(ptr noundef %539, ptr noundef %540, ptr noundef %542, ptr noundef %545, ptr noundef %549) #33
  br label %586

551:                                              ; preds = %486
  %552 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %553 = getelementptr inbounds %struct.obj, ptr %484, i64 0, i32 2, i32 0, i32 1
  %554 = load ptr, ptr %553, align 8, !tbaa !9
  %555 = load ptr, ptr %552, align 8, !tbaa !9
  %556 = call ptr @cons(ptr noundef %555, ptr noundef %1)
  %557 = call ptr %554(ptr noundef %556) #33
  br label %586

558:                                              ; preds = %482, %486
  %559 = call ptr @err(ptr noundef nonnull @.str.88, ptr noundef nonnull %10)
  br label %586

560:                                              ; preds = %12
  %561 = sext i16 %14 to i64
  br label %562

562:                                              ; preds = %9, %560
  %563 = phi i64 [ %561, %560 ], [ 0, %9 ]
  %564 = load ptr, ptr @user_types, align 8, !tbaa !5
  %565 = icmp eq ptr %564, null
  br i1 %565, label %566, label %572

566:                                              ; preds = %562
  %567 = call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %568 = icmp eq ptr %567, null
  br i1 %568, label %569, label %571

569:                                              ; preds = %566
  %570 = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %571

571:                                              ; preds = %569, %566
  store ptr %567, ptr @user_types, align 8, !tbaa !5
  br label %572

572:                                              ; preds = %571, %562
  %573 = phi ptr [ %567, %571 ], [ %564, %562 ]
  %574 = icmp ult i64 %563, 100
  br i1 %574, label %575, label %580

575:                                              ; preds = %572
  %576 = getelementptr inbounds %struct.user_type_hooks, ptr %573, i64 %563, i32 5
  %577 = load ptr, ptr %576, align 8, !tbaa !52
  %578 = icmp eq ptr %577, null
  %579 = load ptr, ptr %3, align 8, !tbaa !5
  br i1 %578, label %584, label %582

580:                                              ; preds = %572
  %581 = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

582:                                              ; preds = %575
  %583 = call ptr @err(ptr noundef nonnull @.str.91, ptr noundef %579)
  br label %586

584:                                              ; preds = %575
  %585 = call ptr @err(ptr noundef nonnull @.str.90, ptr noundef %579)
  br label %586

586:                                              ; preds = %129, %135, %113, %108, %106, %115, %119, %123, %125, %584, %582, %558, %551, %535, %523, %514, %507, %501, %490, %480, %476, %469, %313, %207, %69, %33, %16
  %587 = phi ptr [ null, %582 ], [ null, %584 ], [ null, %558 ], [ %557, %551 ], [ %550, %535 ], [ %534, %523 ], [ %522, %514 ], [ %513, %507 ], [ %506, %501 ], [ %500, %490 ], [ null, %480 ], [ %479, %476 ], [ %475, %469 ], [ %318, %313 ], [ %211, %207 ], [ %72, %69 ], [ %35, %33 ], [ %19, %16 ], [ %110, %125 ], [ %110, %113 ], [ %110, %108 ], [ %107, %106 ], [ %110, %115 ], [ %110, %119 ], [ %110, %123 ], [ %130, %129 ], [ %141, %135 ]
  ret ptr %587
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_setq(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call ptr @leval(ptr noundef null, ptr noundef %1)
  br label %43

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  %9 = sext i16 %8 to i32
  switch i32 %9, label %13 [
    i32 0, label %16
    i32 1, label %10
  ]

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !9
  br label %16

13:                                               ; preds = %6
  %14 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  %15 = load i16, ptr %7, align 2, !tbaa !14
  br label %16

16:                                               ; preds = %6, %10, %13
  %17 = phi i16 [ %8, %6 ], [ %8, %10 ], [ %15, %13 ]
  %18 = phi ptr [ null, %6 ], [ %12, %10 ], [ null, %13 ]
  %19 = sext i16 %17 to i32
  switch i32 %19, label %20 [
    i32 0, label %35
    i32 1, label %22
  ]

20:                                               ; preds = %16
  %21 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %35

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = icmp eq ptr %24, null
  br i1 %25, label %35, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 1
  %28 = load i16, ptr %27, align 2, !tbaa !14
  %29 = sext i16 %28 to i32
  switch i32 %29, label %33 [
    i32 0, label %35
    i32 1, label %30
  ]

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  br label %35

33:                                               ; preds = %26
  %34 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %24)
  br label %35

35:                                               ; preds = %16, %20, %22, %26, %30, %33
  %36 = phi ptr [ null, %33 ], [ %32, %30 ], [ null, %26 ], [ null, %22 ], [ null, %20 ], [ null, %16 ]
  %37 = tail call ptr @leval(ptr noundef %36, ptr noundef %1)
  %38 = icmp eq ptr %18, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 1
  %41 = load i16, ptr %40, align 2, !tbaa !14
  %42 = icmp eq i16 %41, 3
  br i1 %42, label %47, label %43

43:                                               ; preds = %4, %39, %35
  %44 = phi ptr [ %5, %4 ], [ %37, %39 ], [ %37, %35 ]
  %45 = phi ptr [ null, %4 ], [ %18, %39 ], [ null, %35 ]
  %46 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %45) #38
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi ptr [ %37, %39 ], [ %44, %43 ]
  %49 = phi ptr [ %18, %39 ], [ %45, %43 ]
  %50 = tail call ptr @envlookup(ptr noundef %49, ptr noundef %1) #38
  %51 = icmp eq ptr %50, null
  %52 = getelementptr inbounds %struct.obj, ptr %50, i64 0, i32 2
  %53 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 2, i32 0, i32 1
  %54 = select i1 %51, ptr %53, ptr %52
  store ptr %48, ptr %54, align 8, !tbaa !9
  ret ptr %48
}

; Function Attrs: nounwind uwtable
define dso_local ptr @syntax_define(ptr noundef %0) local_unnamed_addr #6 {
  br label %2

2:                                                ; preds = %177, %1
  %3 = phi ptr [ %0, %1 ], [ %178, %177 ]
  %4 = icmp eq ptr %3, null
  br i1 %4, label %62, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %9 [
    i32 0, label %24
    i32 1, label %12
  ]

9:                                                ; preds = %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  %11 = load i16, ptr %6, align 2, !tbaa !14
  br label %24

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = icmp eq ptr %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = icmp eq i16 %7, 1
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  unreachable

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %22 = load i16, ptr %21, align 2, !tbaa !14
  %23 = icmp eq i16 %22, 3
  br i1 %23, label %182, label %29

24:                                               ; preds = %5, %9, %12
  %25 = phi i16 [ %7, %5 ], [ %11, %9 ], [ %7, %12 ]
  %26 = sext i16 %25 to i32
  switch i32 %26, label %27 [
    i32 0, label %42
    i32 1, label %29
  ]

27:                                               ; preds = %24
  %28 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  br label %42

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !9
  %32 = icmp eq ptr %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.obj, ptr %31, i64 0, i32 1
  %35 = load i16, ptr %34, align 2, !tbaa !14
  %36 = sext i16 %35 to i32
  switch i32 %36, label %40 [
    i32 0, label %42
    i32 1, label %37
  ]

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.obj, ptr %31, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !9
  br label %42

40:                                               ; preds = %33
  %41 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %31)
  br label %42

42:                                               ; preds = %24, %27, %40, %37, %33, %29
  %43 = phi ptr [ null, %29 ], [ null, %33 ], [ %39, %37 ], [ null, %40 ], [ null, %27 ], [ null, %24 ]
  %44 = load ptr, ptr @sym_lambda, align 8, !tbaa !5
  %45 = load i16, ptr %6, align 2, !tbaa !14
  %46 = sext i16 %45 to i32
  switch i32 %46, label %47 [
    i32 0, label %64
    i32 1, label %49
  ]

47:                                               ; preds = %42
  %48 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  br label %64

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !9
  %52 = icmp eq ptr %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 1
  %55 = load i16, ptr %54, align 2, !tbaa !14
  %56 = sext i16 %55 to i32
  switch i32 %56, label %60 [
    i32 0, label %64
    i32 1, label %57
  ]

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 2, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !9
  br label %64

60:                                               ; preds = %53
  %61 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %51)
  br label %64

62:                                               ; preds = %2
  %63 = load ptr, ptr @sym_lambda, align 8, !tbaa !5
  br label %73

64:                                               ; preds = %42, %47, %60, %57, %53, %49
  %65 = phi ptr [ null, %49 ], [ null, %53 ], [ %59, %57 ], [ null, %60 ], [ null, %47 ], [ null, %42 ]
  %66 = load i16, ptr %6, align 2, !tbaa !14
  %67 = sext i16 %66 to i32
  switch i32 %67, label %71 [
    i32 0, label %73
    i32 1, label %68
  ]

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !9
  br label %73

71:                                               ; preds = %64
  %72 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %73

73:                                               ; preds = %62, %64, %68, %71
  %74 = phi ptr [ %65, %71 ], [ %65, %68 ], [ %65, %64 ], [ null, %62 ]
  %75 = phi ptr [ %44, %71 ], [ %44, %68 ], [ %44, %64 ], [ %63, %62 ]
  %76 = phi ptr [ %43, %71 ], [ %43, %68 ], [ %43, %64 ], [ null, %62 ]
  %77 = phi ptr [ null, %71 ], [ %70, %68 ], [ null, %64 ], [ null, %62 ]
  %78 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %79 = icmp eq i64 %78, 1
  br i1 %79, label %80, label %88

80:                                               ; preds = %73
  %81 = load ptr, ptr @heap, align 8, !tbaa !5
  %82 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %83 = icmp ult ptr %81, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %86

86:                                               ; preds = %84, %80
  %87 = getelementptr inbounds %struct.obj, ptr %81, i64 1
  store ptr %87, ptr @heap, align 8, !tbaa !5
  br label %99

88:                                               ; preds = %73
  %89 = load ptr, ptr @freelist, align 8, !tbaa !5
  %90 = icmp eq ptr %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  tail call void @gc_for_newcell() #38
  %92 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %93

93:                                               ; preds = %91, %88
  %94 = phi ptr [ %92, %91 ], [ %89, %88 ]
  %95 = getelementptr inbounds %struct.obj, ptr %94, i64 0, i32 2, i32 0, i32 1
  %96 = load ptr, ptr %95, align 8, !tbaa !9
  store ptr %96, ptr @freelist, align 8, !tbaa !5
  %97 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %98 = add nsw i64 %97, 1
  store i64 %98, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %99

99:                                               ; preds = %86, %93
  %100 = phi ptr [ %81, %86 ], [ %94, %93 ]
  store i16 0, ptr %100, align 8, !tbaa !35
  %101 = getelementptr inbounds %struct.obj, ptr %100, i64 0, i32 1
  store i16 1, ptr %101, align 2, !tbaa !14
  %102 = getelementptr inbounds %struct.obj, ptr %100, i64 0, i32 2
  store ptr %74, ptr %102, align 8, !tbaa !9
  %103 = getelementptr inbounds %struct.obj, ptr %100, i64 0, i32 2, i32 0, i32 1
  store ptr %77, ptr %103, align 8, !tbaa !9
  %104 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %105 = icmp eq i64 %104, 1
  br i1 %105, label %106, label %114

106:                                              ; preds = %99
  %107 = load ptr, ptr @heap, align 8, !tbaa !5
  %108 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %109 = icmp ult ptr %107, %108
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  %111 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %112

112:                                              ; preds = %110, %106
  %113 = getelementptr inbounds %struct.obj, ptr %107, i64 1
  store ptr %113, ptr @heap, align 8, !tbaa !5
  br label %125

114:                                              ; preds = %99
  %115 = load ptr, ptr @freelist, align 8, !tbaa !5
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  tail call void @gc_for_newcell() #38
  %118 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %119

119:                                              ; preds = %117, %114
  %120 = phi ptr [ %118, %117 ], [ %115, %114 ]
  %121 = getelementptr inbounds %struct.obj, ptr %120, i64 0, i32 2, i32 0, i32 1
  %122 = load ptr, ptr %121, align 8, !tbaa !9
  store ptr %122, ptr @freelist, align 8, !tbaa !5
  %123 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %124 = add nsw i64 %123, 1
  store i64 %124, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %125

125:                                              ; preds = %112, %119
  %126 = phi ptr [ %107, %112 ], [ %120, %119 ]
  store i16 0, ptr %126, align 8, !tbaa !35
  %127 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 1
  store i16 1, ptr %127, align 2, !tbaa !14
  %128 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 2
  store ptr %75, ptr %128, align 8, !tbaa !9
  %129 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 2, i32 0, i32 1
  store ptr %100, ptr %129, align 8, !tbaa !9
  %130 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %131 = icmp eq i64 %130, 1
  br i1 %131, label %132, label %140

132:                                              ; preds = %125
  %133 = load ptr, ptr @heap, align 8, !tbaa !5
  %134 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %135 = icmp ult ptr %133, %134
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  %137 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %138

138:                                              ; preds = %136, %132
  %139 = getelementptr inbounds %struct.obj, ptr %133, i64 1
  store ptr %139, ptr @heap, align 8, !tbaa !5
  br label %151

140:                                              ; preds = %125
  %141 = load ptr, ptr @freelist, align 8, !tbaa !5
  %142 = icmp eq ptr %141, null
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  tail call void @gc_for_newcell() #38
  %144 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %145

145:                                              ; preds = %143, %140
  %146 = phi ptr [ %144, %143 ], [ %141, %140 ]
  %147 = getelementptr inbounds %struct.obj, ptr %146, i64 0, i32 2, i32 0, i32 1
  %148 = load ptr, ptr %147, align 8, !tbaa !9
  store ptr %148, ptr @freelist, align 8, !tbaa !5
  %149 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %150 = add nsw i64 %149, 1
  store i64 %150, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %151

151:                                              ; preds = %138, %145
  %152 = phi ptr [ %133, %138 ], [ %146, %145 ]
  store i16 0, ptr %152, align 8, !tbaa !35
  %153 = getelementptr inbounds %struct.obj, ptr %152, i64 0, i32 1
  store i16 1, ptr %153, align 2, !tbaa !14
  %154 = getelementptr inbounds %struct.obj, ptr %152, i64 0, i32 2
  store ptr %126, ptr %154, align 8, !tbaa !9
  %155 = getelementptr inbounds %struct.obj, ptr %152, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %155, align 8, !tbaa !9
  %156 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %158, label %166

158:                                              ; preds = %151
  %159 = load ptr, ptr @heap, align 8, !tbaa !5
  %160 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %161 = icmp ult ptr %159, %160
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %164

164:                                              ; preds = %162, %158
  %165 = getelementptr inbounds %struct.obj, ptr %159, i64 1
  store ptr %165, ptr @heap, align 8, !tbaa !5
  br label %177

166:                                              ; preds = %151
  %167 = load ptr, ptr @freelist, align 8, !tbaa !5
  %168 = icmp eq ptr %167, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %166
  tail call void @gc_for_newcell() #38
  %170 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %171

171:                                              ; preds = %169, %166
  %172 = phi ptr [ %170, %169 ], [ %167, %166 ]
  %173 = getelementptr inbounds %struct.obj, ptr %172, i64 0, i32 2, i32 0, i32 1
  %174 = load ptr, ptr %173, align 8, !tbaa !9
  store ptr %174, ptr @freelist, align 8, !tbaa !5
  %175 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %176 = add nsw i64 %175, 1
  store i64 %176, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %177

177:                                              ; preds = %164, %171
  %178 = phi ptr [ %159, %164 ], [ %172, %171 ]
  store i16 0, ptr %178, align 8, !tbaa !35
  %179 = getelementptr inbounds %struct.obj, ptr %178, i64 0, i32 1
  store i16 1, ptr %179, align 2, !tbaa !14
  %180 = getelementptr inbounds %struct.obj, ptr %178, i64 0, i32 2
  store ptr %76, ptr %180, align 8, !tbaa !9
  %181 = getelementptr inbounds %struct.obj, ptr %178, i64 0, i32 2, i32 0, i32 1
  store ptr %152, ptr %181, align 8, !tbaa !9
  br label %2

182:                                              ; preds = %20
  ret ptr %3
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_define(ptr noundef %0, ptr noundef %1) #6 {
  %3 = tail call ptr @syntax_define(ptr noundef %0)
  %4 = icmp eq ptr %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %9 [
    i32 0, label %23
    i32 1, label %11
  ]

9:                                                ; preds = %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  br label %23

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef null)
  br label %27

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 1
  %19 = load i16, ptr %18, align 2, !tbaa !14
  %20 = icmp eq i16 %19, 3
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef nonnull %13)
  br label %27

23:                                               ; preds = %9, %5
  %24 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef null)
  br label %27

25:                                               ; preds = %2
  %26 = tail call ptr @err(ptr noundef nonnull @.str.93, ptr noundef null)
  br label %46

27:                                               ; preds = %17, %23, %15, %21
  %28 = phi ptr [ %13, %21 ], [ null, %15 ], [ null, %23 ], [ %13, %17 ]
  %29 = load i16, ptr %6, align 2, !tbaa !14
  %30 = sext i16 %29 to i32
  switch i32 %30, label %31 [
    i32 0, label %46
    i32 1, label %33
  ]

31:                                               ; preds = %27
  %32 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %46

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !9
  %36 = icmp eq ptr %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.obj, ptr %35, i64 0, i32 1
  %39 = load i16, ptr %38, align 2, !tbaa !14
  %40 = sext i16 %39 to i32
  switch i32 %40, label %44 [
    i32 0, label %46
    i32 1, label %41
  ]

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.obj, ptr %35, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !9
  br label %46

44:                                               ; preds = %37
  %45 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %35)
  br label %46

46:                                               ; preds = %25, %27, %31, %33, %37, %41, %44
  %47 = phi ptr [ %28, %44 ], [ %28, %41 ], [ %28, %37 ], [ %28, %33 ], [ null, %25 ], [ %28, %27 ], [ %28, %31 ]
  %48 = phi ptr [ null, %44 ], [ %43, %41 ], [ null, %37 ], [ null, %33 ], [ null, %25 ], [ null, %27 ], [ null, %31 ]
  %49 = tail call ptr @leval(ptr noundef %48, ptr noundef %1)
  %50 = tail call ptr @envlookup(ptr noundef %47, ptr noundef %1)
  %51 = icmp eq ptr %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.obj, ptr %50, i64 0, i32 2
  store ptr %49, ptr %53, align 8, !tbaa !9
  br label %162

54:                                               ; preds = %46
  %55 = icmp eq ptr %1, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.obj, ptr %47, i64 0, i32 2, i32 0, i32 1
  store ptr %49, ptr %57, align 8, !tbaa !9
  br label %162

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %60 = load i16, ptr %59, align 2, !tbaa !14
  %61 = sext i16 %60 to i32
  switch i32 %61, label %62 [
    i32 0, label %77
    i32 1, label %64
  ]

62:                                               ; preds = %58
  %63 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  br label %77

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !9
  %67 = icmp eq ptr %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.obj, ptr %66, i64 0, i32 1
  %70 = load i16, ptr %69, align 2, !tbaa !14
  %71 = sext i16 %70 to i32
  switch i32 %71, label %75 [
    i32 0, label %77
    i32 1, label %72
  ]

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.obj, ptr %66, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !9
  br label %77

75:                                               ; preds = %68
  %76 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %66)
  br label %77

77:                                               ; preds = %58, %62, %64, %68, %72, %75
  %78 = phi i1 [ false, %75 ], [ false, %72 ], [ false, %68 ], [ true, %64 ], [ true, %62 ], [ true, %58 ]
  %79 = phi ptr [ %66, %75 ], [ %66, %72 ], [ %66, %68 ], [ null, %64 ], [ null, %62 ], [ null, %58 ]
  %80 = phi ptr [ null, %75 ], [ %74, %72 ], [ null, %68 ], [ null, %64 ], [ null, %62 ], [ null, %58 ]
  %81 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %82 = icmp eq i64 %81, 1
  br i1 %82, label %83, label %91

83:                                               ; preds = %77
  %84 = load ptr, ptr @heap, align 8, !tbaa !5
  %85 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %86 = icmp ult ptr %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %89

89:                                               ; preds = %87, %83
  %90 = getelementptr inbounds %struct.obj, ptr %84, i64 1
  store ptr %90, ptr @heap, align 8, !tbaa !5
  br label %102

91:                                               ; preds = %77
  %92 = load ptr, ptr @freelist, align 8, !tbaa !5
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  tail call void @gc_for_newcell() #38
  %95 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %96

96:                                               ; preds = %94, %91
  %97 = phi ptr [ %95, %94 ], [ %92, %91 ]
  %98 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 2, i32 0, i32 1
  %99 = load ptr, ptr %98, align 8, !tbaa !9
  store ptr %99, ptr @freelist, align 8, !tbaa !5
  %100 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %101 = add nsw i64 %100, 1
  store i64 %101, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %102

102:                                              ; preds = %89, %96
  %103 = phi ptr [ %84, %89 ], [ %97, %96 ]
  store i16 0, ptr %103, align 8, !tbaa !35
  %104 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 1
  store i16 1, ptr %104, align 2, !tbaa !14
  %105 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 2
  store ptr %47, ptr %105, align 8, !tbaa !9
  %106 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 2, i32 0, i32 1
  store ptr %80, ptr %106, align 8, !tbaa !9
  br i1 %78, label %107, label %110

107:                                              ; preds = %102
  %108 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef %79)
  %109 = getelementptr inbounds %struct.obj, ptr %79, i64 0, i32 2
  store ptr %103, ptr %109, align 8, !tbaa !9
  br label %126

110:                                              ; preds = %102
  %111 = getelementptr inbounds %struct.obj, ptr %79, i64 0, i32 1
  %112 = load i16, ptr %111, align 2, !tbaa !14
  %113 = icmp eq i16 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.obj, ptr %79, i64 0, i32 2
  store ptr %103, ptr %115, align 8
  br label %121

116:                                              ; preds = %110
  %117 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef nonnull %79)
  %118 = load i16, ptr %111, align 2, !tbaa !14
  %119 = sext i16 %118 to i32
  %120 = getelementptr inbounds %struct.obj, ptr %79, i64 0, i32 2
  store ptr %103, ptr %120, align 8
  switch i32 %119, label %124 [
    i32 0, label %126
    i32 1, label %121
  ]

121:                                              ; preds = %114, %116
  %122 = getelementptr inbounds %struct.obj, ptr %79, i64 0, i32 2, i32 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !9
  br label %126

124:                                              ; preds = %116
  %125 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %79)
  br label %126

126:                                              ; preds = %107, %116, %121, %124
  %127 = phi ptr [ null, %124 ], [ %123, %121 ], [ null, %116 ], [ null, %107 ]
  %128 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = load ptr, ptr @heap, align 8, !tbaa !5
  %132 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %133 = icmp ult ptr %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %136

136:                                              ; preds = %134, %130
  %137 = getelementptr inbounds %struct.obj, ptr %131, i64 1
  store ptr %137, ptr @heap, align 8, !tbaa !5
  br label %149

138:                                              ; preds = %126
  %139 = load ptr, ptr @freelist, align 8, !tbaa !5
  %140 = icmp eq ptr %139, null
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  tail call void @gc_for_newcell() #38
  %142 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %143

143:                                              ; preds = %141, %138
  %144 = phi ptr [ %142, %141 ], [ %139, %138 ]
  %145 = getelementptr inbounds %struct.obj, ptr %144, i64 0, i32 2, i32 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !9
  store ptr %146, ptr @freelist, align 8, !tbaa !5
  %147 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %148 = add nsw i64 %147, 1
  store i64 %148, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %149

149:                                              ; preds = %136, %143
  %150 = phi ptr [ %131, %136 ], [ %144, %143 ]
  store i16 0, ptr %150, align 8, !tbaa !35
  %151 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 1
  store i16 1, ptr %151, align 2, !tbaa !14
  %152 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 2
  store ptr %49, ptr %152, align 8, !tbaa !9
  %153 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 2, i32 0, i32 1
  store ptr %127, ptr %153, align 8, !tbaa !9
  br i1 %78, label %158, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %struct.obj, ptr %79, i64 0, i32 1
  %156 = load i16, ptr %155, align 2, !tbaa !14
  %157 = icmp eq i16 %156, 1
  br i1 %157, label %160, label %158

158:                                              ; preds = %154, %149
  %159 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef nonnull %79)
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %struct.obj, ptr %79, i64 0, i32 2, i32 0, i32 1
  store ptr %150, ptr %161, align 8, !tbaa !9
  br label %162

162:                                              ; preds = %160, %56, %52
  ret ptr %49
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_if(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #6 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %9 [
    i32 0, label %31
    i32 1, label %11
  ]

9:                                                ; preds = %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %31

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = load ptr, ptr %1, align 8, !tbaa !5
  %15 = icmp eq ptr %13, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 1
  %18 = load i16, ptr %17, align 2, !tbaa !14
  %19 = sext i16 %18 to i32
  switch i32 %19, label %23 [
    i32 0, label %25
    i32 1, label %20
  ]

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  br label %25

23:                                               ; preds = %16
  %24 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %13)
  br label %25

25:                                               ; preds = %16, %20, %23
  %26 = phi ptr [ null, %23 ], [ %22, %20 ], [ null, %16 ]
  %27 = tail call ptr @leval(ptr noundef %26, ptr noundef %14)
  %28 = icmp eq ptr %27, null
  br i1 %28, label %54, label %34

29:                                               ; preds = %11
  %30 = tail call ptr @leval(ptr noundef null, ptr noundef %14)
  br label %84

31:                                               ; preds = %2, %5, %9
  %32 = load ptr, ptr %1, align 8, !tbaa !5
  %33 = tail call ptr @leval(ptr noundef null, ptr noundef %32)
  br label %84

34:                                               ; preds = %25
  br i1 %15, label %84, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 1
  %37 = load i16, ptr %36, align 2, !tbaa !14
  %38 = sext i16 %37 to i32
  switch i32 %38, label %39 [
    i32 0, label %84
    i32 1, label %41
  ]

39:                                               ; preds = %35
  %40 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %13)
  br label %84

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !9
  %44 = icmp eq ptr %43, null
  br i1 %44, label %84, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 1
  %47 = load i16, ptr %46, align 2, !tbaa !14
  %48 = sext i16 %47 to i32
  switch i32 %48, label %52 [
    i32 0, label %84
    i32 1, label %49
  ]

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !9
  br label %84

52:                                               ; preds = %45
  %53 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %43)
  br label %84

54:                                               ; preds = %25
  br i1 %15, label %84, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 1
  %57 = load i16, ptr %56, align 2, !tbaa !14
  %58 = sext i16 %57 to i32
  switch i32 %58, label %59 [
    i32 0, label %84
    i32 1, label %61
  ]

59:                                               ; preds = %55
  %60 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %13)
  br label %84

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.obj, ptr %13, i64 0, i32 2, i32 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !9
  %64 = icmp eq ptr %63, null
  br i1 %64, label %84, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.obj, ptr %63, i64 0, i32 1
  %67 = load i16, ptr %66, align 2, !tbaa !14
  %68 = sext i16 %67 to i32
  switch i32 %68, label %69 [
    i32 0, label %84
    i32 1, label %71
  ]

69:                                               ; preds = %65
  %70 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %63)
  br label %84

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.obj, ptr %63, i64 0, i32 2, i32 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !9
  %74 = icmp eq ptr %73, null
  br i1 %74, label %84, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.obj, ptr %73, i64 0, i32 1
  %77 = load i16, ptr %76, align 2, !tbaa !14
  %78 = sext i16 %77 to i32
  switch i32 %78, label %82 [
    i32 0, label %84
    i32 1, label %79
  ]

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.obj, ptr %73, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !9
  br label %84

82:                                               ; preds = %75
  %83 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %73)
  br label %84

84:                                               ; preds = %29, %31, %54, %55, %59, %61, %65, %69, %34, %35, %39, %82, %79, %75, %71, %52, %49, %45, %41
  %85 = phi ptr [ null, %52 ], [ %51, %49 ], [ null, %45 ], [ null, %41 ], [ null, %82 ], [ %81, %79 ], [ null, %75 ], [ null, %71 ], [ null, %39 ], [ null, %35 ], [ null, %34 ], [ null, %69 ], [ null, %65 ], [ null, %61 ], [ null, %59 ], [ null, %55 ], [ null, %54 ], [ null, %31 ], [ null, %29 ]
  store ptr %85, ptr %0, align 8, !tbaa !5
  %86 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %86
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_lambda(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %78, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = sext i16 %6 to i32
  switch i32 %7, label %20 [
    i32 0, label %23
    i32 1, label %8
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !9
  %11 = icmp eq ptr %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = sext i16 %14 to i32
  switch i32 %15, label %20 [
    i32 0, label %23
    i32 1, label %16
  ]

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = icmp eq ptr %18, null
  br i1 %19, label %23, label %41

20:                                               ; preds = %12, %4
  %21 = phi ptr [ %0, %4 ], [ %10, %12 ]
  %22 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %21)
  br label %23

23:                                               ; preds = %20, %4, %8, %12, %16
  %24 = load i16, ptr %5, align 2, !tbaa !14
  %25 = sext i16 %24 to i32
  switch i32 %25, label %26 [
    i32 0, label %69
    i32 1, label %28
  ]

26:                                               ; preds = %23
  %27 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %69

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !9
  %31 = icmp eq ptr %30, null
  br i1 %31, label %69, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 1
  %34 = load i16, ptr %33, align 2, !tbaa !14
  %35 = sext i16 %34 to i32
  switch i32 %35, label %39 [
    i32 0, label %69
    i32 1, label %36
  ]

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !9
  br label %69

39:                                               ; preds = %32
  %40 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %30)
  br label %69

41:                                               ; preds = %16
  %42 = load ptr, ptr @sym_progn, align 8, !tbaa !5
  %43 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %44 = icmp eq i64 %43, 1
  br i1 %44, label %45, label %53

45:                                               ; preds = %41
  %46 = load ptr, ptr @heap, align 8, !tbaa !5
  %47 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %48 = icmp ult ptr %46, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %51

51:                                               ; preds = %49, %45
  %52 = getelementptr inbounds %struct.obj, ptr %46, i64 1
  store ptr %52, ptr @heap, align 8, !tbaa !5
  br label %64

53:                                               ; preds = %41
  %54 = load ptr, ptr @freelist, align 8, !tbaa !5
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  tail call void @gc_for_newcell() #38
  %57 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %58

58:                                               ; preds = %56, %53
  %59 = phi ptr [ %57, %56 ], [ %54, %53 ]
  %60 = getelementptr inbounds %struct.obj, ptr %59, i64 0, i32 2, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !9
  store ptr %61, ptr @freelist, align 8, !tbaa !5
  %62 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %63 = add nsw i64 %62, 1
  store i64 %63, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %64

64:                                               ; preds = %51, %58
  %65 = phi ptr [ %46, %51 ], [ %59, %58 ]
  store i16 0, ptr %65, align 8, !tbaa !35
  %66 = getelementptr inbounds %struct.obj, ptr %65, i64 0, i32 1
  store i16 1, ptr %66, align 2, !tbaa !14
  %67 = getelementptr inbounds %struct.obj, ptr %65, i64 0, i32 2
  store ptr %42, ptr %67, align 8, !tbaa !9
  %68 = getelementptr inbounds %struct.obj, ptr %65, i64 0, i32 2, i32 0, i32 1
  store ptr %10, ptr %68, align 8, !tbaa !9
  br label %69

69:                                               ; preds = %23, %26, %64, %28, %32, %36, %39
  %70 = phi ptr [ null, %28 ], [ null, %32 ], [ %38, %36 ], [ null, %39 ], [ %65, %64 ], [ null, %26 ], [ null, %23 ]
  %71 = load i16, ptr %5, align 2, !tbaa !14
  %72 = sext i16 %71 to i32
  switch i32 %72, label %76 [
    i32 0, label %78
    i32 1, label %73
  ]

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !9
  br label %78

76:                                               ; preds = %69
  %77 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %78

78:                                               ; preds = %2, %69, %73, %76
  %79 = phi ptr [ %70, %76 ], [ %70, %73 ], [ %70, %69 ], [ null, %2 ]
  %80 = phi ptr [ null, %76 ], [ %75, %73 ], [ null, %69 ], [ null, %2 ]
  %81 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %82 = icmp eq i64 %81, 1
  br i1 %82, label %83, label %91

83:                                               ; preds = %78
  %84 = load ptr, ptr @heap, align 8, !tbaa !5
  %85 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %86 = icmp ult ptr %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %89

89:                                               ; preds = %87, %83
  %90 = getelementptr inbounds %struct.obj, ptr %84, i64 1
  store ptr %90, ptr @heap, align 8, !tbaa !5
  br label %102

91:                                               ; preds = %78
  %92 = load ptr, ptr @freelist, align 8, !tbaa !5
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  tail call void @gc_for_newcell() #38
  %95 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %96

96:                                               ; preds = %94, %91
  %97 = phi ptr [ %95, %94 ], [ %92, %91 ]
  %98 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 2, i32 0, i32 1
  %99 = load ptr, ptr %98, align 8, !tbaa !9
  store ptr %99, ptr @freelist, align 8, !tbaa !5
  %100 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %101 = add nsw i64 %100, 1
  store i64 %101, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %102

102:                                              ; preds = %89, %96
  %103 = phi ptr [ %84, %89 ], [ %97, %96 ]
  store i16 0, ptr %103, align 8, !tbaa !35
  %104 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 1
  store i16 1, ptr %104, align 2, !tbaa !14
  %105 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 2
  store ptr %80, ptr %105, align 8, !tbaa !9
  %106 = getelementptr inbounds %struct.obj, ptr %103, i64 0, i32 2, i32 0, i32 1
  store ptr %79, ptr %106, align 8, !tbaa !9
  %107 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %108 = icmp eq i64 %107, 1
  br i1 %108, label %109, label %117

109:                                              ; preds = %102
  %110 = load ptr, ptr @heap, align 8, !tbaa !5
  %111 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %112 = icmp ult ptr %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %struct.obj, ptr %110, i64 1
  store ptr %116, ptr @heap, align 8, !tbaa !5
  br label %128

117:                                              ; preds = %102
  %118 = load ptr, ptr @freelist, align 8, !tbaa !5
  %119 = icmp eq ptr %118, null
  br i1 %119, label %120, label %122

120:                                              ; preds = %117
  tail call void @gc_for_newcell()
  %121 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %122

122:                                              ; preds = %120, %117
  %123 = phi ptr [ %121, %120 ], [ %118, %117 ]
  %124 = getelementptr inbounds %struct.obj, ptr %123, i64 0, i32 2, i32 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !9
  store ptr %125, ptr @freelist, align 8, !tbaa !5
  %126 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %127 = add nsw i64 %126, 1
  store i64 %127, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %128

128:                                              ; preds = %115, %122
  %129 = phi ptr [ %110, %115 ], [ %123, %122 ]
  store i16 0, ptr %129, align 8, !tbaa !35
  %130 = getelementptr inbounds %struct.obj, ptr %129, i64 0, i32 1
  store i16 11, ptr %130, align 2, !tbaa !14
  %131 = getelementptr inbounds %struct.obj, ptr %129, i64 0, i32 2
  store ptr %1, ptr %131, align 8, !tbaa !9
  %132 = getelementptr inbounds %struct.obj, ptr %129, i64 0, i32 2, i32 0, i32 1
  store ptr %103, ptr %132, align 8, !tbaa !9
  ret ptr %129
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local ptr @arglchk(ptr noundef readnone returned %0) local_unnamed_addr #0 {
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_progn(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #6 {
  %3 = load ptr, ptr %1, align 8, !tbaa !5
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = icmp eq ptr %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  %9 = sext i16 %8 to i32
  switch i32 %9, label %10 [
    i32 0, label %58
    i32 1, label %12
  ]

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %4)
  br label %58

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = icmp eq ptr %14, null
  br i1 %15, label %58, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %18 = load i16, ptr %17, align 2, !tbaa !14
  %19 = sext i16 %18 to i32
  switch i32 %19, label %45 [
    i32 0, label %48
    i32 1, label %20
  ]

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  %23 = icmp eq ptr %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %20, %41
  %25 = phi ptr [ %43, %41 ], [ %22, %20 ]
  %26 = phi ptr [ %25, %41 ], [ %14, %20 ]
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  %28 = load i16, ptr %27, align 2, !tbaa !14
  %29 = sext i16 %28 to i32
  switch i32 %29, label %33 [
    i32 0, label %35
    i32 1, label %30
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  br label %35

33:                                               ; preds = %24
  %34 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %26)
  br label %35

35:                                               ; preds = %24, %30, %33
  %36 = phi ptr [ null, %33 ], [ %32, %30 ], [ null, %24 ]
  %37 = tail call ptr @leval(ptr noundef %36, ptr noundef %3)
  %38 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  %39 = load i16, ptr %38, align 2, !tbaa !14
  %40 = sext i16 %39 to i32
  switch i32 %40, label %45 [
    i32 0, label %48
    i32 1, label %41
  ]

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !9
  %44 = icmp eq ptr %43, null
  br i1 %44, label %48, label %24, !llvm.loop !91

45:                                               ; preds = %35, %16
  %46 = phi ptr [ %14, %16 ], [ %25, %35 ]
  %47 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %46)
  br label %48

48:                                               ; preds = %35, %41, %45, %20, %16
  %49 = phi ptr [ %14, %16 ], [ %14, %20 ], [ %46, %45 ], [ %25, %41 ], [ %25, %35 ]
  %50 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 1
  %51 = load i16, ptr %50, align 2, !tbaa !14
  %52 = sext i16 %51 to i32
  switch i32 %52, label %56 [
    i32 0, label %58
    i32 1, label %53
  ]

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !9
  br label %58

56:                                               ; preds = %48
  %57 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %49)
  br label %58

58:                                               ; preds = %12, %10, %6, %2, %48, %53, %56
  %59 = phi ptr [ null, %56 ], [ %55, %53 ], [ null, %48 ], [ null, %2 ], [ null, %6 ], [ null, %10 ], [ null, %12 ]
  store ptr %59, ptr %0, align 8, !tbaa !5
  %60 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %60
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_or(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #6 {
  %3 = load ptr, ptr %1, align 8, !tbaa !5
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = icmp eq ptr %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  %9 = sext i16 %8 to i32
  switch i32 %9, label %10 [
    i32 0, label %61
    i32 1, label %12
  ]

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %4)
  br label %61

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = icmp eq ptr %14, null
  br i1 %15, label %61, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %18 = load i16, ptr %17, align 2, !tbaa !14
  %19 = sext i16 %18 to i32
  switch i32 %19, label %48 [
    i32 0, label %51
    i32 1, label %20
  ]

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  %23 = icmp eq ptr %22, null
  br i1 %23, label %51, label %24

24:                                               ; preds = %20, %44
  %25 = phi ptr [ %46, %44 ], [ %22, %20 ]
  %26 = phi ptr [ %25, %44 ], [ %14, %20 ]
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  %28 = load i16, ptr %27, align 2, !tbaa !14
  %29 = sext i16 %28 to i32
  switch i32 %29, label %33 [
    i32 0, label %35
    i32 1, label %30
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  br label %35

33:                                               ; preds = %24
  %34 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %26)
  br label %35

35:                                               ; preds = %24, %30, %33
  %36 = phi ptr [ null, %33 ], [ %32, %30 ], [ null, %24 ]
  %37 = tail call ptr @leval(ptr noundef %36, ptr noundef %3)
  %38 = icmp eq ptr %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  store ptr %37, ptr %0, align 8, !tbaa !5
  br label %64

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  %42 = load i16, ptr %41, align 2, !tbaa !14
  %43 = sext i16 %42 to i32
  switch i32 %43, label %48 [
    i32 0, label %51
    i32 1, label %44
  ]

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !9
  %47 = icmp eq ptr %46, null
  br i1 %47, label %51, label %24, !llvm.loop !92

48:                                               ; preds = %40, %16
  %49 = phi ptr [ %14, %16 ], [ %25, %40 ]
  %50 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %49)
  br label %51

51:                                               ; preds = %40, %44, %48, %20, %16
  %52 = phi ptr [ %14, %16 ], [ %14, %20 ], [ %49, %48 ], [ %25, %44 ], [ %25, %40 ]
  %53 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 1
  %54 = load i16, ptr %53, align 2, !tbaa !14
  %55 = sext i16 %54 to i32
  switch i32 %55, label %59 [
    i32 0, label %61
    i32 1, label %56
  ]

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !9
  br label %61

59:                                               ; preds = %51
  %60 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %52)
  br label %61

61:                                               ; preds = %12, %10, %6, %2, %51, %56, %59
  %62 = phi ptr [ null, %59 ], [ %58, %56 ], [ null, %51 ], [ null, %2 ], [ null, %6 ], [ null, %10 ], [ null, %12 ]
  store ptr %62, ptr %0, align 8, !tbaa !5
  %63 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %64

64:                                               ; preds = %61, %39
  %65 = phi ptr [ null, %39 ], [ %63, %61 ]
  ret ptr %65
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_and(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #6 {
  %3 = load ptr, ptr %1, align 8, !tbaa !5
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = icmp eq ptr %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  %9 = sext i16 %8 to i32
  switch i32 %9, label %10 [
    i32 0, label %16
    i32 1, label %12
  ]

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %4)
  br label %16

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %2, %6, %10, %12
  %17 = load ptr, ptr @sym_t, align 8, !tbaa !5
  store ptr %17, ptr %0, align 8, !tbaa !5
  br label %66

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %20 = load i16, ptr %19, align 2, !tbaa !14
  %21 = sext i16 %20 to i32
  switch i32 %21, label %50 [
    i32 0, label %53
    i32 1, label %22
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = icmp eq ptr %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %22, %46
  %27 = phi ptr [ %48, %46 ], [ %24, %22 ]
  %28 = phi ptr [ %27, %46 ], [ %14, %22 ]
  %29 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 1
  %30 = load i16, ptr %29, align 2, !tbaa !14
  %31 = sext i16 %30 to i32
  switch i32 %31, label %35 [
    i32 0, label %37
    i32 1, label %32
  ]

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !9
  br label %37

35:                                               ; preds = %26
  %36 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %28)
  br label %37

37:                                               ; preds = %26, %32, %35
  %38 = phi ptr [ null, %35 ], [ %34, %32 ], [ null, %26 ]
  %39 = tail call ptr @leval(ptr noundef %38, ptr noundef %3)
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store ptr null, ptr %0, align 8, !tbaa !5
  br label %66

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 1
  %44 = load i16, ptr %43, align 2, !tbaa !14
  %45 = sext i16 %44 to i32
  switch i32 %45, label %50 [
    i32 0, label %53
    i32 1, label %46
  ]

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.obj, ptr %27, i64 0, i32 2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !9
  %49 = icmp eq ptr %48, null
  br i1 %49, label %53, label %26, !llvm.loop !93

50:                                               ; preds = %42, %18
  %51 = phi ptr [ %14, %18 ], [ %27, %42 ]
  %52 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %51)
  br label %53

53:                                               ; preds = %42, %46, %50, %18, %22
  %54 = phi ptr [ %14, %22 ], [ %14, %18 ], [ %51, %50 ], [ %27, %46 ], [ %27, %42 ]
  %55 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 1
  %56 = load i16, ptr %55, align 2, !tbaa !14
  %57 = sext i16 %56 to i32
  switch i32 %57, label %61 [
    i32 0, label %63
    i32 1, label %58
  ]

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !9
  br label %63

61:                                               ; preds = %53
  %62 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %54)
  br label %63

63:                                               ; preds = %53, %58, %61
  %64 = phi ptr [ null, %61 ], [ %60, %58 ], [ null, %53 ]
  store ptr %64, ptr %0, align 8, !tbaa !5
  %65 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %66

66:                                               ; preds = %63, %41, %16
  %67 = phi ptr [ null, %16 ], [ null, %41 ], [ %65, %63 ]
  ret ptr %67
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_catch_1(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2, %21
  %5 = phi ptr [ %23, %21 ], [ %0, %2 ]
  %6 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %12 [
    i32 0, label %14
    i32 1, label %9
  ]

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %14

12:                                               ; preds = %4
  %13 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %5)
  br label %14

14:                                               ; preds = %4, %9, %12
  %15 = phi ptr [ null, %12 ], [ %11, %9 ], [ null, %4 ]
  %16 = tail call ptr @leval(ptr noundef %15, ptr noundef %1)
  %17 = load i16, ptr %6, align 2, !tbaa !14
  %18 = sext i16 %17 to i32
  switch i32 %18, label %19 [
    i32 0, label %25
    i32 1, label %21
  ]

19:                                               ; preds = %14
  %20 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %5)
  br label %25

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %4, !llvm.loop !94

25:                                               ; preds = %14, %21, %19, %2
  %26 = phi ptr [ null, %2 ], [ %16, %19 ], [ %16, %21 ], [ %16, %14 ]
  %27 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %28 = getelementptr inbounds %struct.catch_frame, ptr %27, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !95
  store ptr %29, ptr @catch_framep, align 8, !tbaa !5
  ret ptr %26
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_catch(ptr noundef %0, ptr noundef %1) #6 {
  %3 = alloca %struct.catch_frame, align 8
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %3) #33
  %4 = icmp eq ptr %0, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %12 [
    i32 0, label %14
    i32 1, label %9
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %14

12:                                               ; preds = %5
  %13 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %14

14:                                               ; preds = %2, %5, %9, %12
  %15 = phi ptr [ null, %12 ], [ %11, %9 ], [ null, %5 ], [ null, %2 ]
  %16 = call ptr @leval(ptr noundef %15, ptr noundef %1)
  store ptr %16, ptr %3, align 8, !tbaa !17
  %17 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.catch_frame, ptr %3, i64 0, i32 3
  store ptr %17, ptr %18, align 8, !tbaa !95
  %19 = getelementptr inbounds %struct.catch_frame, ptr %3, i64 0, i32 2
  %20 = call i32 @_setjmp(ptr noundef nonnull %19) #36
  store ptr %3, ptr @catch_framep, align 8, !tbaa !5
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = load ptr, ptr %18, align 8, !tbaa !95
  store ptr %23, ptr @catch_framep, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.catch_frame, ptr %3, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !19
  br label %63

26:                                               ; preds = %14
  br i1 %4, label %58, label %27

27:                                               ; preds = %26
  %28 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %29 = load i16, ptr %28, align 2, !tbaa !14
  %30 = sext i16 %29 to i32
  switch i32 %30, label %54 [
    i32 0, label %58
    i32 1, label %31
  ]

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !9
  %34 = icmp eq ptr %33, null
  br i1 %34, label %58, label %35

35:                                               ; preds = %31, %50
  %36 = phi ptr [ %52, %50 ], [ %33, %31 ]
  %37 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 1
  %38 = load i16, ptr %37, align 2, !tbaa !14
  %39 = sext i16 %38 to i32
  switch i32 %39, label %43 [
    i32 0, label %45
    i32 1, label %40
  ]

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !9
  br label %45

43:                                               ; preds = %35
  %44 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %36)
  br label %45

45:                                               ; preds = %43, %40, %35
  %46 = phi ptr [ null, %43 ], [ %42, %40 ], [ null, %35 ]
  %47 = call ptr @leval(ptr noundef %46, ptr noundef %1)
  %48 = load i16, ptr %37, align 2, !tbaa !14
  %49 = sext i16 %48 to i32
  switch i32 %49, label %54 [
    i32 0, label %58
    i32 1, label %50
  ]

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2, i32 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !9
  %53 = icmp eq ptr %52, null
  br i1 %53, label %58, label %35, !llvm.loop !94

54:                                               ; preds = %45, %27
  %55 = phi ptr [ %0, %27 ], [ %36, %45 ]
  %56 = phi ptr [ null, %27 ], [ %47, %45 ]
  %57 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %55)
  br label %58

58:                                               ; preds = %45, %50, %54, %26, %27, %31
  %59 = phi ptr [ null, %31 ], [ null, %27 ], [ null, %26 ], [ %56, %54 ], [ %47, %50 ], [ %47, %45 ]
  %60 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %61 = getelementptr inbounds %struct.catch_frame, ptr %60, i64 0, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !95
  store ptr %62, ptr @catch_framep, align 8, !tbaa !5
  br label %63

63:                                               ; preds = %58, %22
  %64 = phi ptr [ %25, %22 ], [ %59, %58 ]
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %3) #33
  ret ptr %64
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lthrow(ptr noundef %0, ptr noundef %1) #6 {
  %3 = load ptr, ptr @catch_framep, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %2
  %6 = load ptr, ptr @sym_catchall, align 8
  br label %7

7:                                                ; preds = %5, %16
  %8 = phi ptr [ %3, %5 ], [ %18, %16 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, %0
  %11 = icmp eq ptr %9, %6
  %12 = select i1 %10, i1 true, i1 %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.catch_frame, ptr %8, i64 0, i32 1
  store ptr %1, ptr %14, align 8, !tbaa !19
  %15 = getelementptr inbounds %struct.catch_frame, ptr %8, i64 0, i32 2
  tail call void @longjmp(ptr noundef nonnull %15, i32 noundef 2) #35
  unreachable

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.catch_frame, ptr %8, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %7, !llvm.loop !96

20:                                               ; preds = %16, %2
  %21 = tail call ptr @err(ptr noundef nonnull @.str.94, ptr noundef %0)
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_let(ptr nocapture noundef %0, ptr nocapture noundef %1) #6 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %9 [
    i32 0, label %11
    i32 1, label %13
  ]

9:                                                ; preds = %5
  %10 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %3)
  br label %11

11:                                               ; preds = %9, %5, %2
  %12 = load ptr, ptr %1, align 8, !tbaa !5
  br label %47

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !9
  %16 = load ptr, ptr %1, align 8, !tbaa !5
  %17 = icmp eq ptr %15, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 1
  %20 = load i16, ptr %19, align 2, !tbaa !14
  %21 = sext i16 %20 to i32
  switch i32 %21, label %22 [
    i32 0, label %37
    i32 1, label %24
  ]

22:                                               ; preds = %18
  %23 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %15)
  br label %37

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 2, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = icmp eq ptr %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  %30 = load i16, ptr %29, align 2, !tbaa !14
  %31 = sext i16 %30 to i32
  switch i32 %31, label %35 [
    i32 0, label %37
    i32 1, label %32
  ]

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !9
  br label %37

35:                                               ; preds = %28
  %36 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %26)
  br label %37

37:                                               ; preds = %18, %22, %24, %28, %32, %35
  %38 = phi ptr [ null, %24 ], [ null, %28 ], [ %34, %32 ], [ null, %35 ], [ null, %22 ], [ null, %18 ]
  %39 = tail call ptr @leval_args(ptr noundef %38, ptr noundef %16)
  %40 = load i16, ptr %19, align 2, !tbaa !14
  %41 = sext i16 %40 to i32
  switch i32 %41, label %45 [
    i32 0, label %51
    i32 1, label %42
  ]

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !9
  br label %51

45:                                               ; preds = %37
  %46 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %15)
  br label %51

47:                                               ; preds = %11, %13
  %48 = phi ptr [ %16, %13 ], [ %12, %11 ]
  %49 = tail call ptr @leval_args(ptr noundef null, ptr noundef %48)
  %50 = tail call ptr @extend_env(ptr noundef %49, ptr noundef null, ptr noundef %48)
  store ptr %50, ptr %1, align 8, !tbaa !5
  br label %81

51:                                               ; preds = %45, %42, %37
  %52 = phi ptr [ null, %37 ], [ %44, %42 ], [ null, %45 ]
  %53 = tail call ptr @extend_env(ptr noundef %39, ptr noundef %52, ptr noundef %16)
  store ptr %53, ptr %1, align 8, !tbaa !5
  %54 = load i16, ptr %19, align 2, !tbaa !14
  %55 = sext i16 %54 to i32
  switch i32 %55, label %56 [
    i32 0, label %81
    i32 1, label %58
  ]

56:                                               ; preds = %51
  %57 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %15)
  br label %81

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct.obj, ptr %15, i64 0, i32 2, i32 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !9
  %61 = icmp eq ptr %60, null
  br i1 %61, label %81, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 1
  %64 = load i16, ptr %63, align 2, !tbaa !14
  %65 = sext i16 %64 to i32
  switch i32 %65, label %66 [
    i32 0, label %81
    i32 1, label %68
  ]

66:                                               ; preds = %62
  %67 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %60)
  br label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 2, i32 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !9
  %71 = icmp eq ptr %70, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.obj, ptr %70, i64 0, i32 1
  %74 = load i16, ptr %73, align 2, !tbaa !14
  %75 = sext i16 %74 to i32
  switch i32 %75, label %79 [
    i32 0, label %81
    i32 1, label %76
  ]

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.obj, ptr %70, i64 0, i32 2
  %78 = load ptr, ptr %77, align 8, !tbaa !9
  br label %81

79:                                               ; preds = %72
  %80 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %70)
  br label %81

81:                                               ; preds = %47, %51, %56, %58, %62, %66, %68, %72, %76, %79
  %82 = phi ptr [ null, %79 ], [ %78, %76 ], [ null, %72 ], [ null, %68 ], [ null, %66 ], [ null, %62 ], [ null, %58 ], [ null, %56 ], [ null, %51 ], [ null, %47 ]
  store ptr %82, ptr %0, align 8, !tbaa !5
  %83 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %83
}

; Function Attrs: nounwind uwtable
define dso_local ptr @letstar_macro(ptr noundef returned %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %198, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %7 [
    i32 0, label %200
    i32 1, label %9
  ]

7:                                                ; preds = %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %200

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %200, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %17 [
    i32 0, label %200
    i32 1, label %19
  ]

17:                                               ; preds = %13
  %18 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %11)
  br label %200

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  %22 = icmp eq ptr %21, null
  br i1 %22, label %200, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.obj, ptr %21, i64 0, i32 1
  %25 = load i16, ptr %24, align 2, !tbaa !14
  %26 = sext i16 %25 to i32
  switch i32 %26, label %27 [
    i32 0, label %200
    i32 1, label %29
  ]

27:                                               ; preds = %23
  %28 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %21)
  br label %200

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.obj, ptr %21, i64 0, i32 2, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !9
  %32 = icmp eq ptr %31, null
  br i1 %32, label %200, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.obj, ptr %21, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !9
  %36 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = load ptr, ptr @heap, align 8, !tbaa !5
  %40 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %41 = icmp ult ptr %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.obj, ptr %39, i64 1
  store ptr %45, ptr @heap, align 8, !tbaa !5
  br label %57

46:                                               ; preds = %33
  %47 = load ptr, ptr @freelist, align 8, !tbaa !5
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  tail call void @gc_for_newcell() #38
  %50 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi ptr [ %50, %49 ], [ %47, %46 ]
  %53 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !9
  store ptr %54, ptr @freelist, align 8, !tbaa !5
  %55 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %57

57:                                               ; preds = %44, %51
  %58 = phi ptr [ %39, %44 ], [ %52, %51 ]
  store i16 0, ptr %58, align 8, !tbaa !35
  %59 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 1
  store i16 1, ptr %59, align 2, !tbaa !14
  %60 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2
  store ptr %35, ptr %60, align 8, !tbaa !9
  %61 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %61, align 8, !tbaa !9
  %62 = tail call ptr @gen_intern(ptr noundef nonnull @.str.59, i64 noundef 0)
  %63 = load i16, ptr %24, align 2, !tbaa !14
  %64 = sext i16 %63 to i32
  switch i32 %64, label %67 [
    i32 0, label %69
    i32 1, label %65
  ]

65:                                               ; preds = %57
  %66 = load ptr, ptr %30, align 8, !tbaa !9
  br label %69

67:                                               ; preds = %57
  %68 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %21)
  br label %69

69:                                               ; preds = %67, %65, %57
  %70 = phi ptr [ null, %67 ], [ %66, %65 ], [ null, %57 ]
  %71 = load i16, ptr %4, align 2, !tbaa !14
  %72 = sext i16 %71 to i32
  switch i32 %72, label %73 [
    i32 0, label %87
    i32 1, label %75
  ]

73:                                               ; preds = %69
  %74 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %87

75:                                               ; preds = %69
  %76 = load ptr, ptr %10, align 8, !tbaa !9
  %77 = icmp eq ptr %76, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.obj, ptr %76, i64 0, i32 1
  %80 = load i16, ptr %79, align 2, !tbaa !14
  %81 = sext i16 %80 to i32
  switch i32 %81, label %85 [
    i32 0, label %87
    i32 1, label %82
  ]

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.obj, ptr %76, i64 0, i32 2, i32 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !9
  br label %87

85:                                               ; preds = %78
  %86 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %76)
  br label %87

87:                                               ; preds = %69, %73, %75, %78, %82, %85
  %88 = phi ptr [ null, %85 ], [ %84, %82 ], [ null, %78 ], [ null, %75 ], [ null, %73 ], [ null, %69 ]
  %89 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %90 = icmp eq i64 %89, 1
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = load ptr, ptr @heap, align 8, !tbaa !5
  %93 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %94 = icmp ult ptr %92, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %97

97:                                               ; preds = %95, %91
  %98 = getelementptr inbounds %struct.obj, ptr %92, i64 1
  store ptr %98, ptr @heap, align 8, !tbaa !5
  br label %110

99:                                               ; preds = %87
  %100 = load ptr, ptr @freelist, align 8, !tbaa !5
  %101 = icmp eq ptr %100, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  tail call void @gc_for_newcell() #38
  %103 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %104

104:                                              ; preds = %102, %99
  %105 = phi ptr [ %103, %102 ], [ %100, %99 ]
  %106 = getelementptr inbounds %struct.obj, ptr %105, i64 0, i32 2, i32 0, i32 1
  %107 = load ptr, ptr %106, align 8, !tbaa !9
  store ptr %107, ptr @freelist, align 8, !tbaa !5
  %108 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %109 = add nsw i64 %108, 1
  store i64 %109, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %110

110:                                              ; preds = %97, %104
  %111 = phi ptr [ %92, %97 ], [ %105, %104 ]
  store i16 0, ptr %111, align 8, !tbaa !35
  %112 = getelementptr inbounds %struct.obj, ptr %111, i64 0, i32 1
  store i16 1, ptr %112, align 2, !tbaa !14
  %113 = getelementptr inbounds %struct.obj, ptr %111, i64 0, i32 2
  store ptr %70, ptr %113, align 8, !tbaa !9
  %114 = getelementptr inbounds %struct.obj, ptr %111, i64 0, i32 2, i32 0, i32 1
  store ptr %88, ptr %114, align 8, !tbaa !9
  %115 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %116 = icmp eq i64 %115, 1
  br i1 %116, label %117, label %125

117:                                              ; preds = %110
  %118 = load ptr, ptr @heap, align 8, !tbaa !5
  %119 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %120 = icmp ult ptr %118, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %123

123:                                              ; preds = %121, %117
  %124 = getelementptr inbounds %struct.obj, ptr %118, i64 1
  store ptr %124, ptr @heap, align 8, !tbaa !5
  br label %136

125:                                              ; preds = %110
  %126 = load ptr, ptr @freelist, align 8, !tbaa !5
  %127 = icmp eq ptr %126, null
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  tail call void @gc_for_newcell() #38
  %129 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi ptr [ %129, %128 ], [ %126, %125 ]
  %132 = getelementptr inbounds %struct.obj, ptr %131, i64 0, i32 2, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !9
  store ptr %133, ptr @freelist, align 8, !tbaa !5
  %134 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %135 = add nsw i64 %134, 1
  store i64 %135, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %136

136:                                              ; preds = %123, %130
  %137 = phi ptr [ %118, %123 ], [ %131, %130 ]
  store i16 0, ptr %137, align 8, !tbaa !35
  %138 = getelementptr inbounds %struct.obj, ptr %137, i64 0, i32 1
  store i16 1, ptr %138, align 2, !tbaa !14
  %139 = getelementptr inbounds %struct.obj, ptr %137, i64 0, i32 2
  store ptr %62, ptr %139, align 8, !tbaa !9
  %140 = getelementptr inbounds %struct.obj, ptr %137, i64 0, i32 2, i32 0, i32 1
  store ptr %111, ptr %140, align 8, !tbaa !9
  %141 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %142 = icmp eq i64 %141, 1
  br i1 %142, label %143, label %151

143:                                              ; preds = %136
  %144 = load ptr, ptr @heap, align 8, !tbaa !5
  %145 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %146 = icmp ult ptr %144, %145
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %149

149:                                              ; preds = %147, %143
  %150 = getelementptr inbounds %struct.obj, ptr %144, i64 1
  store ptr %150, ptr @heap, align 8, !tbaa !5
  br label %162

151:                                              ; preds = %136
  %152 = load ptr, ptr @freelist, align 8, !tbaa !5
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %156

154:                                              ; preds = %151
  tail call void @gc_for_newcell() #38
  %155 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %156

156:                                              ; preds = %154, %151
  %157 = phi ptr [ %155, %154 ], [ %152, %151 ]
  %158 = getelementptr inbounds %struct.obj, ptr %157, i64 0, i32 2, i32 0, i32 1
  %159 = load ptr, ptr %158, align 8, !tbaa !9
  store ptr %159, ptr @freelist, align 8, !tbaa !5
  %160 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %161 = add nsw i64 %160, 1
  store i64 %161, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %162

162:                                              ; preds = %149, %156
  %163 = phi ptr [ %144, %149 ], [ %157, %156 ]
  store i16 0, ptr %163, align 8, !tbaa !35
  %164 = getelementptr inbounds %struct.obj, ptr %163, i64 0, i32 1
  store i16 1, ptr %164, align 2, !tbaa !14
  %165 = getelementptr inbounds %struct.obj, ptr %163, i64 0, i32 2
  store ptr %137, ptr %165, align 8, !tbaa !9
  %166 = getelementptr inbounds %struct.obj, ptr %163, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %166, align 8, !tbaa !9
  %167 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %168 = icmp eq i64 %167, 1
  br i1 %168, label %169, label %177

169:                                              ; preds = %162
  %170 = load ptr, ptr @heap, align 8, !tbaa !5
  %171 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %172 = icmp ult ptr %170, %171
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %175

175:                                              ; preds = %173, %169
  %176 = getelementptr inbounds %struct.obj, ptr %170, i64 1
  store ptr %176, ptr @heap, align 8, !tbaa !5
  br label %188

177:                                              ; preds = %162
  %178 = load ptr, ptr @freelist, align 8, !tbaa !5
  %179 = icmp eq ptr %178, null
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  tail call void @gc_for_newcell() #38
  %181 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %182

182:                                              ; preds = %180, %177
  %183 = phi ptr [ %181, %180 ], [ %178, %177 ]
  %184 = getelementptr inbounds %struct.obj, ptr %183, i64 0, i32 2, i32 0, i32 1
  %185 = load ptr, ptr %184, align 8, !tbaa !9
  store ptr %185, ptr @freelist, align 8, !tbaa !5
  %186 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %187 = add nsw i64 %186, 1
  store i64 %187, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %188

188:                                              ; preds = %182, %175
  %189 = phi ptr [ %170, %175 ], [ %183, %182 ]
  store i16 0, ptr %189, align 8, !tbaa !35
  %190 = getelementptr inbounds %struct.obj, ptr %189, i64 0, i32 1
  store i16 1, ptr %190, align 2, !tbaa !14
  %191 = getelementptr inbounds %struct.obj, ptr %189, i64 0, i32 2
  store ptr %58, ptr %191, align 8, !tbaa !9
  %192 = getelementptr inbounds %struct.obj, ptr %189, i64 0, i32 2, i32 0, i32 1
  store ptr %163, ptr %192, align 8, !tbaa !9
  %193 = load i16, ptr %4, align 2, !tbaa !14
  %194 = icmp eq i16 %193, 1
  br i1 %194, label %197, label %195

195:                                              ; preds = %188
  %196 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef nonnull %0)
  br label %197

197:                                              ; preds = %188, %195
  store ptr %189, ptr %10, align 8, !tbaa !9
  br label %200

198:                                              ; preds = %1
  %199 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  br label %204

200:                                              ; preds = %3, %7, %9, %13, %17, %23, %27, %19, %29, %197
  %201 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  %202 = load i16, ptr %4, align 2, !tbaa !14
  %203 = icmp eq i16 %202, 1
  br i1 %203, label %207, label %204

204:                                              ; preds = %198, %200
  %205 = phi ptr [ %201, %200 ], [ %199, %198 ]
  %206 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef %0)
  br label %207

207:                                              ; preds = %200, %204
  %208 = phi ptr [ %201, %200 ], [ %205, %204 ]
  %209 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  store ptr %208, ptr %209, align 8, !tbaa !9
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cadr(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %7 [
    i32 0, label %22
    i32 1, label %9
  ]

7:                                                ; preds = %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %20 [
    i32 0, label %22
    i32 1, label %17
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  br label %22

20:                                               ; preds = %13
  %21 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %11)
  br label %22

22:                                               ; preds = %1, %3, %7, %9, %13, %17, %20
  %23 = phi ptr [ null, %20 ], [ %19, %17 ], [ null, %13 ], [ null, %9 ], [ null, %7 ], [ null, %3 ], [ null, %1 ]
  ret ptr %23
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cddr(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %7 [
    i32 0, label %22
    i32 1, label %9
  ]

7:                                                ; preds = %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %20 [
    i32 0, label %22
    i32 1, label %17
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  br label %22

20:                                               ; preds = %13
  %21 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %11)
  br label %22

22:                                               ; preds = %1, %3, %7, %9, %13, %17, %20
  %23 = phi ptr [ null, %20 ], [ %19, %17 ], [ null, %13 ], [ null, %9 ], [ null, %7 ], [ null, %3 ], [ null, %1 ]
  ret ptr %23
}

; Function Attrs: nounwind uwtable
define dso_local ptr @letrec_macro(ptr noundef returned %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %174, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %7 [
    i32 0, label %22
    i32 1, label %9
  ]

7:                                                ; preds = %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %20 [
    i32 0, label %22
    i32 1, label %17
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  br label %22

20:                                               ; preds = %13
  %21 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %11)
  br label %22

22:                                               ; preds = %3, %7, %9, %13, %17, %20
  %23 = phi ptr [ null, %3 ], [ null, %7 ], [ null, %9 ], [ null, %13 ], [ %19, %17 ], [ null, %20 ]
  %24 = load i16, ptr %4, align 2, !tbaa !14
  %25 = sext i16 %24 to i32
  switch i32 %25, label %26 [
    i32 0, label %174
    i32 1, label %28
  ]

26:                                               ; preds = %22
  %27 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %174

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !9
  %31 = icmp eq ptr %30, null
  br i1 %31, label %174, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 1
  %34 = load i16, ptr %33, align 2, !tbaa !14
  %35 = sext i16 %34 to i32
  switch i32 %35, label %36 [
    i32 0, label %174
    i32 1, label %38
  ]

36:                                               ; preds = %32
  %37 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %30)
  br label %174

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !9
  %41 = icmp eq ptr %40, null
  br i1 %41, label %174, label %42

42:                                               ; preds = %38, %170
  %43 = phi ptr [ %172, %170 ], [ %40, %38 ]
  %44 = phi ptr [ %162, %170 ], [ %23, %38 ]
  %45 = phi ptr [ %114, %170 ], [ null, %38 ]
  %46 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 1
  %47 = load i16, ptr %46, align 2, !tbaa !14
  %48 = sext i16 %47 to i32
  switch i32 %48, label %49 [
    i32 0, label %64
    i32 1, label %51
  ]

49:                                               ; preds = %42
  %50 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %43)
  br label %64

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !9
  %54 = icmp eq ptr %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.obj, ptr %53, i64 0, i32 1
  %57 = load i16, ptr %56, align 2, !tbaa !14
  %58 = sext i16 %57 to i32
  switch i32 %58, label %62 [
    i32 0, label %64
    i32 1, label %59
  ]

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.obj, ptr %53, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !9
  br label %64

62:                                               ; preds = %55
  %63 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %53)
  br label %64

64:                                               ; preds = %42, %49, %51, %55, %59, %62
  %65 = phi ptr [ null, %62 ], [ %61, %59 ], [ null, %55 ], [ null, %51 ], [ null, %49 ], [ null, %42 ]
  %66 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = load ptr, ptr @heap, align 8, !tbaa !5
  %70 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %71 = icmp ult ptr %69, %70
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %74

74:                                               ; preds = %72, %68
  %75 = getelementptr inbounds %struct.obj, ptr %69, i64 1
  store ptr %75, ptr @heap, align 8, !tbaa !5
  br label %87

76:                                               ; preds = %64
  %77 = load ptr, ptr @freelist, align 8, !tbaa !5
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  tail call void @gc_for_newcell() #38
  %80 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %81

81:                                               ; preds = %79, %76
  %82 = phi ptr [ %80, %79 ], [ %77, %76 ]
  %83 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !9
  store ptr %84, ptr @freelist, align 8, !tbaa !5
  %85 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %86 = add nsw i64 %85, 1
  store i64 %86, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %87

87:                                               ; preds = %74, %81
  %88 = phi ptr [ %69, %74 ], [ %82, %81 ]
  store i16 0, ptr %88, align 8, !tbaa !35
  %89 = getelementptr inbounds %struct.obj, ptr %88, i64 0, i32 1
  store i16 1, ptr %89, align 2, !tbaa !14
  %90 = getelementptr inbounds %struct.obj, ptr %88, i64 0, i32 2
  store ptr %65, ptr %90, align 8, !tbaa !9
  %91 = getelementptr inbounds %struct.obj, ptr %88, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %91, align 8, !tbaa !9
  %92 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %93 = icmp eq i64 %92, 1
  br i1 %93, label %94, label %102

94:                                               ; preds = %87
  %95 = load ptr, ptr @heap, align 8, !tbaa !5
  %96 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %97 = icmp ult ptr %95, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %100

100:                                              ; preds = %98, %94
  %101 = getelementptr inbounds %struct.obj, ptr %95, i64 1
  store ptr %101, ptr @heap, align 8, !tbaa !5
  br label %113

102:                                              ; preds = %87
  %103 = load ptr, ptr @freelist, align 8, !tbaa !5
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  tail call void @gc_for_newcell() #38
  %106 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %107

107:                                              ; preds = %105, %102
  %108 = phi ptr [ %106, %105 ], [ %103, %102 ]
  %109 = getelementptr inbounds %struct.obj, ptr %108, i64 0, i32 2, i32 0, i32 1
  %110 = load ptr, ptr %109, align 8, !tbaa !9
  store ptr %110, ptr @freelist, align 8, !tbaa !5
  %111 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %112 = add nsw i64 %111, 1
  store i64 %112, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %113

113:                                              ; preds = %100, %107
  %114 = phi ptr [ %95, %100 ], [ %108, %107 ]
  store i16 0, ptr %114, align 8, !tbaa !35
  %115 = getelementptr inbounds %struct.obj, ptr %114, i64 0, i32 1
  store i16 1, ptr %115, align 2, !tbaa !14
  %116 = getelementptr inbounds %struct.obj, ptr %114, i64 0, i32 2
  store ptr %88, ptr %116, align 8, !tbaa !9
  %117 = getelementptr inbounds %struct.obj, ptr %114, i64 0, i32 2, i32 0, i32 1
  store ptr %45, ptr %117, align 8, !tbaa !9
  %118 = tail call ptr @gen_intern(ptr noundef nonnull @.str.95, i64 noundef 0)
  %119 = load i16, ptr %46, align 2, !tbaa !14
  %120 = sext i16 %119 to i32
  switch i32 %120, label %121 [
    i32 0, label %136
    i32 1, label %123
  ]

121:                                              ; preds = %113
  %122 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %43)
  br label %136

123:                                              ; preds = %113
  %124 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2
  %125 = load ptr, ptr %124, align 8, !tbaa !9
  %126 = icmp eq ptr %125, null
  br i1 %126, label %136, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.obj, ptr %125, i64 0, i32 1
  %129 = load i16, ptr %128, align 2, !tbaa !14
  %130 = sext i16 %129 to i32
  switch i32 %130, label %134 [
    i32 0, label %136
    i32 1, label %131
  ]

131:                                              ; preds = %127
  %132 = getelementptr inbounds %struct.obj, ptr %125, i64 0, i32 2
  %133 = load ptr, ptr %132, align 8, !tbaa !9
  br label %136

134:                                              ; preds = %127
  %135 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %125)
  br label %136

136:                                              ; preds = %113, %121, %123, %127, %131, %134
  %137 = phi ptr [ null, %134 ], [ %133, %131 ], [ null, %127 ], [ null, %123 ], [ null, %121 ], [ null, %113 ]
  %138 = tail call ptr @cadar(ptr noundef nonnull %43) #33
  %139 = tail call ptr (i64, ...) @listn(i64 noundef 3, ptr noundef %118, ptr noundef %137, ptr noundef %138) #33
  %140 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %141 = icmp eq i64 %140, 1
  br i1 %141, label %142, label %150

142:                                              ; preds = %136
  %143 = load ptr, ptr @heap, align 8, !tbaa !5
  %144 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %145 = icmp ult ptr %143, %144
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  %147 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %148

148:                                              ; preds = %146, %142
  %149 = getelementptr inbounds %struct.obj, ptr %143, i64 1
  store ptr %149, ptr @heap, align 8, !tbaa !5
  br label %161

150:                                              ; preds = %136
  %151 = load ptr, ptr @freelist, align 8, !tbaa !5
  %152 = icmp eq ptr %151, null
  br i1 %152, label %153, label %155

153:                                              ; preds = %150
  tail call void @gc_for_newcell() #38
  %154 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %155

155:                                              ; preds = %153, %150
  %156 = phi ptr [ %154, %153 ], [ %151, %150 ]
  %157 = getelementptr inbounds %struct.obj, ptr %156, i64 0, i32 2, i32 0, i32 1
  %158 = load ptr, ptr %157, align 8, !tbaa !9
  store ptr %158, ptr @freelist, align 8, !tbaa !5
  %159 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %160 = add nsw i64 %159, 1
  store i64 %160, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %161

161:                                              ; preds = %148, %155
  %162 = phi ptr [ %143, %148 ], [ %156, %155 ]
  store i16 0, ptr %162, align 8, !tbaa !35
  %163 = getelementptr inbounds %struct.obj, ptr %162, i64 0, i32 1
  store i16 1, ptr %163, align 2, !tbaa !14
  %164 = getelementptr inbounds %struct.obj, ptr %162, i64 0, i32 2
  store ptr %139, ptr %164, align 8, !tbaa !9
  %165 = getelementptr inbounds %struct.obj, ptr %162, i64 0, i32 2, i32 0, i32 1
  store ptr %44, ptr %165, align 8, !tbaa !9
  %166 = load i16, ptr %46, align 2, !tbaa !14
  %167 = sext i16 %166 to i32
  switch i32 %167, label %168 [
    i32 0, label %174
    i32 1, label %170
  ]

168:                                              ; preds = %161
  %169 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %43)
  br label %174

170:                                              ; preds = %161
  %171 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2, i32 0, i32 1
  %172 = load ptr, ptr %171, align 8, !tbaa !9
  %173 = icmp eq ptr %172, null
  br i1 %173, label %174, label %42, !llvm.loop !97

174:                                              ; preds = %161, %170, %168, %1, %22, %26, %28, %32, %36, %38
  %175 = phi ptr [ null, %38 ], [ null, %36 ], [ null, %32 ], [ null, %28 ], [ null, %26 ], [ null, %22 ], [ null, %1 ], [ %114, %168 ], [ %114, %170 ], [ %114, %161 ]
  %176 = phi ptr [ %23, %38 ], [ %23, %36 ], [ %23, %32 ], [ %23, %28 ], [ %23, %26 ], [ %23, %22 ], [ null, %1 ], [ %162, %168 ], [ %162, %170 ], [ %162, %161 ]
  %177 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %178 = icmp eq i64 %177, 1
  br i1 %178, label %179, label %187

179:                                              ; preds = %174
  %180 = load ptr, ptr @heap, align 8, !tbaa !5
  %181 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %182 = icmp ult ptr %180, %181
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %185

185:                                              ; preds = %183, %179
  %186 = getelementptr inbounds %struct.obj, ptr %180, i64 1
  store ptr %186, ptr @heap, align 8, !tbaa !5
  br label %198

187:                                              ; preds = %174
  %188 = load ptr, ptr @freelist, align 8, !tbaa !5
  %189 = icmp eq ptr %188, null
  br i1 %189, label %190, label %192

190:                                              ; preds = %187
  tail call void @gc_for_newcell() #38
  %191 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %192

192:                                              ; preds = %190, %187
  %193 = phi ptr [ %191, %190 ], [ %188, %187 ]
  %194 = getelementptr inbounds %struct.obj, ptr %193, i64 0, i32 2, i32 0, i32 1
  %195 = load ptr, ptr %194, align 8, !tbaa !9
  store ptr %195, ptr @freelist, align 8, !tbaa !5
  %196 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %197 = add nsw i64 %196, 1
  store i64 %197, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %198

198:                                              ; preds = %185, %192
  %199 = phi ptr [ %180, %185 ], [ %193, %192 ]
  store i16 0, ptr %199, align 8, !tbaa !35
  %200 = getelementptr inbounds %struct.obj, ptr %199, i64 0, i32 1
  store i16 1, ptr %200, align 2, !tbaa !14
  %201 = getelementptr inbounds %struct.obj, ptr %199, i64 0, i32 2
  store ptr %175, ptr %201, align 8, !tbaa !9
  %202 = getelementptr inbounds %struct.obj, ptr %199, i64 0, i32 2, i32 0, i32 1
  store ptr %176, ptr %202, align 8, !tbaa !9
  br i1 %2, label %207, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %205 = load i16, ptr %204, align 2, !tbaa !14
  %206 = icmp eq i16 %205, 1
  br i1 %206, label %209, label %207

207:                                              ; preds = %203, %198
  %208 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %0)
  br label %209

209:                                              ; preds = %207, %203
  %210 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  store ptr %199, ptr %210, align 8, !tbaa !9
  %211 = tail call ptr @gen_intern(ptr noundef nonnull @.str.57, i64 noundef 0)
  %212 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %213 = load i16, ptr %212, align 2, !tbaa !14
  %214 = icmp eq i16 %213, 1
  br i1 %214, label %217, label %215

215:                                              ; preds = %209
  %216 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef nonnull %0)
  br label %217

217:                                              ; preds = %209, %215
  %218 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  store ptr %211, ptr %218, align 8, !tbaa !9
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @caar(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %7 [
    i32 0, label %22
    i32 1, label %9
  ]

7:                                                ; preds = %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %20 [
    i32 0, label %22
    i32 1, label %17
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  br label %22

20:                                               ; preds = %13
  %21 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %11)
  br label %22

22:                                               ; preds = %1, %3, %7, %9, %13, %17, %20
  %23 = phi ptr [ null, %20 ], [ %19, %17 ], [ null, %13 ], [ null, %9 ], [ null, %7 ], [ null, %3 ], [ null, %1 ]
  ret ptr %23
}

declare ptr @listn(i64 noundef, ...) local_unnamed_addr #13

declare ptr @cadar(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @reverse(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %50, label %3

3:                                                ; preds = %1, %46
  %4 = phi ptr [ %48, %46 ], [ %0, %1 ]
  %5 = phi ptr [ %38, %46 ], [ null, %1 ]
  %6 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %12 [
    i32 0, label %14
    i32 1, label %9
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %14

12:                                               ; preds = %3
  %13 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %4)
  br label %14

14:                                               ; preds = %3, %9, %12
  %15 = phi ptr [ null, %12 ], [ %11, %9 ], [ null, %3 ]
  %16 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %17 = icmp eq i64 %16, 1
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = load ptr, ptr @heap, align 8, !tbaa !5
  %20 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %21 = icmp ult ptr %19, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %24

24:                                               ; preds = %22, %18
  %25 = getelementptr inbounds %struct.obj, ptr %19, i64 1
  store ptr %25, ptr @heap, align 8, !tbaa !5
  br label %37

26:                                               ; preds = %14
  %27 = load ptr, ptr @freelist, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  tail call void @gc_for_newcell() #38
  %30 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %31

31:                                               ; preds = %29, %26
  %32 = phi ptr [ %30, %29 ], [ %27, %26 ]
  %33 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !9
  store ptr %34, ptr @freelist, align 8, !tbaa !5
  %35 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %36 = add nsw i64 %35, 1
  store i64 %36, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %37

37:                                               ; preds = %24, %31
  %38 = phi ptr [ %19, %24 ], [ %32, %31 ]
  store i16 0, ptr %38, align 8, !tbaa !35
  %39 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 1
  store i16 1, ptr %39, align 2, !tbaa !14
  %40 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 2
  store ptr %15, ptr %40, align 8, !tbaa !9
  %41 = getelementptr inbounds %struct.obj, ptr %38, i64 0, i32 2, i32 0, i32 1
  store ptr %5, ptr %41, align 8, !tbaa !9
  %42 = load i16, ptr %6, align 2, !tbaa !14
  %43 = sext i16 %42 to i32
  switch i32 %43, label %44 [
    i32 0, label %50
    i32 1, label %46
  ]

44:                                               ; preds = %37
  %45 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %4)
  br label %50

46:                                               ; preds = %37
  %47 = getelementptr inbounds %struct.obj, ptr %4, i64 0, i32 2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !9
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %3, !llvm.loop !98

50:                                               ; preds = %37, %46, %44, %1
  %51 = phi ptr [ null, %1 ], [ %38, %44 ], [ %38, %46 ], [ %38, %37 ]
  ret ptr %51
}

; Function Attrs: nounwind uwtable
define dso_local ptr @let_macro(ptr noundef returned %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %252, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %7 [
    i32 0, label %183
    i32 1, label %9
  ]

7:                                                ; preds = %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %183

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %183, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %17 [
    i32 0, label %183
    i32 1, label %19
  ]

17:                                               ; preds = %13
  %18 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %11)
  br label %183

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  %22 = icmp eq ptr %21, null
  br i1 %22, label %183, label %23

23:                                               ; preds = %19, %178
  %24 = phi ptr [ %180, %178 ], [ %21, %19 ]
  %25 = phi ptr [ %168, %178 ], [ null, %19 ]
  %26 = phi ptr [ %170, %178 ], [ null, %19 ]
  %27 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 1
  %28 = load i16, ptr %27, align 2, !tbaa !14
  %29 = sext i16 %28 to i32
  switch i32 %29, label %30 [
    i32 0, label %95
    i32 1, label %32
  ]

30:                                               ; preds = %23
  %31 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %24)
  br label %95

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !9
  %35 = icmp eq ptr %34, null
  br i1 %35, label %95, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 1
  %38 = load i16, ptr %37, align 2, !tbaa !14
  %39 = icmp eq i16 %38, 3
  br i1 %39, label %40, label %88

40:                                               ; preds = %36
  %41 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %42 = icmp eq i64 %41, 1
  br i1 %42, label %43, label %51

43:                                               ; preds = %40
  %44 = load ptr, ptr @heap, align 8, !tbaa !5
  %45 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %46 = icmp ult ptr %44, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %struct.obj, ptr %44, i64 1
  store ptr %50, ptr @heap, align 8, !tbaa !5
  br label %62

51:                                               ; preds = %40
  %52 = load ptr, ptr @freelist, align 8, !tbaa !5
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  tail call void @gc_for_newcell() #38
  %55 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %56

56:                                               ; preds = %54, %51
  %57 = phi ptr [ %55, %54 ], [ %52, %51 ]
  %58 = getelementptr inbounds %struct.obj, ptr %57, i64 0, i32 2, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !9
  store ptr %59, ptr @freelist, align 8, !tbaa !5
  %60 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %61 = add nsw i64 %60, 1
  store i64 %61, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %62

62:                                               ; preds = %49, %56
  %63 = phi ptr [ %44, %49 ], [ %57, %56 ]
  store i16 0, ptr %63, align 8, !tbaa !35
  %64 = getelementptr inbounds %struct.obj, ptr %63, i64 0, i32 1
  store i16 1, ptr %64, align 2, !tbaa !14
  %65 = getelementptr inbounds %struct.obj, ptr %63, i64 0, i32 2
  store ptr %34, ptr %65, align 8, !tbaa !9
  %66 = getelementptr inbounds %struct.obj, ptr %63, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %66, align 8, !tbaa !9
  %67 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %69, label %77

69:                                               ; preds = %62
  %70 = load ptr, ptr @heap, align 8, !tbaa !5
  %71 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %72 = icmp ult ptr %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %75

75:                                               ; preds = %73, %69
  %76 = getelementptr inbounds %struct.obj, ptr %70, i64 1
  store ptr %76, ptr @heap, align 8, !tbaa !5
  br label %167

77:                                               ; preds = %62
  %78 = load ptr, ptr @freelist, align 8, !tbaa !5
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  tail call void @gc_for_newcell() #38
  %81 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %82

82:                                               ; preds = %80, %77
  %83 = phi ptr [ %81, %80 ], [ %78, %77 ]
  %84 = getelementptr inbounds %struct.obj, ptr %83, i64 0, i32 2, i32 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !9
  store ptr %85, ptr @freelist, align 8, !tbaa !5
  %86 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %87 = add nsw i64 %86, 1
  store i64 %87, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %167

88:                                               ; preds = %36
  %89 = sext i16 %38 to i32
  switch i32 %89, label %93 [
    i32 0, label %95
    i32 1, label %90
  ]

90:                                               ; preds = %88
  %91 = getelementptr inbounds %struct.obj, ptr %34, i64 0, i32 2
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  br label %95

93:                                               ; preds = %88
  %94 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %34)
  br label %95

95:                                               ; preds = %32, %30, %23, %88, %90, %93
  %96 = phi i1 [ false, %93 ], [ false, %90 ], [ false, %88 ], [ true, %32 ], [ true, %30 ], [ true, %23 ]
  %97 = phi ptr [ %34, %93 ], [ %34, %90 ], [ %34, %88 ], [ null, %32 ], [ null, %30 ], [ null, %23 ]
  %98 = phi ptr [ null, %93 ], [ %92, %90 ], [ null, %88 ], [ null, %32 ], [ null, %30 ], [ null, %23 ]
  %99 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %100 = icmp eq i64 %99, 1
  br i1 %100, label %101, label %109

101:                                              ; preds = %95
  %102 = load ptr, ptr @heap, align 8, !tbaa !5
  %103 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %104 = icmp ult ptr %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %107

107:                                              ; preds = %105, %101
  %108 = getelementptr inbounds %struct.obj, ptr %102, i64 1
  store ptr %108, ptr @heap, align 8, !tbaa !5
  br label %120

109:                                              ; preds = %95
  %110 = load ptr, ptr @freelist, align 8, !tbaa !5
  %111 = icmp eq ptr %110, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  tail call void @gc_for_newcell() #38
  %113 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %114

114:                                              ; preds = %112, %109
  %115 = phi ptr [ %113, %112 ], [ %110, %109 ]
  %116 = getelementptr inbounds %struct.obj, ptr %115, i64 0, i32 2, i32 0, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !9
  store ptr %117, ptr @freelist, align 8, !tbaa !5
  %118 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %119 = add nsw i64 %118, 1
  store i64 %119, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %120

120:                                              ; preds = %107, %114
  %121 = phi ptr [ %102, %107 ], [ %115, %114 ]
  store i16 0, ptr %121, align 8, !tbaa !35
  %122 = getelementptr inbounds %struct.obj, ptr %121, i64 0, i32 1
  store i16 1, ptr %122, align 2, !tbaa !14
  %123 = getelementptr inbounds %struct.obj, ptr %121, i64 0, i32 2
  store ptr %98, ptr %123, align 8, !tbaa !9
  %124 = getelementptr inbounds %struct.obj, ptr %121, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %124, align 8, !tbaa !9
  br i1 %96, label %144, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 1
  %127 = load i16, ptr %126, align 2, !tbaa !14
  %128 = sext i16 %127 to i32
  switch i32 %128, label %129 [
    i32 0, label %144
    i32 1, label %131
  ]

129:                                              ; preds = %125
  %130 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %97)
  br label %144

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 2, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !9
  %134 = icmp eq ptr %133, null
  br i1 %134, label %144, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.obj, ptr %133, i64 0, i32 1
  %137 = load i16, ptr %136, align 2, !tbaa !14
  %138 = sext i16 %137 to i32
  switch i32 %138, label %142 [
    i32 0, label %144
    i32 1, label %139
  ]

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.obj, ptr %133, i64 0, i32 2
  %141 = load ptr, ptr %140, align 8, !tbaa !9
  br label %144

142:                                              ; preds = %135
  %143 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %133)
  br label %144

144:                                              ; preds = %120, %125, %129, %131, %135, %139, %142
  %145 = phi ptr [ null, %142 ], [ %141, %139 ], [ null, %135 ], [ null, %131 ], [ null, %129 ], [ null, %125 ], [ null, %120 ]
  %146 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %147 = icmp eq i64 %146, 1
  br i1 %147, label %148, label %156

148:                                              ; preds = %144
  %149 = load ptr, ptr @heap, align 8, !tbaa !5
  %150 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %151 = icmp ult ptr %149, %150
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %154

154:                                              ; preds = %152, %148
  %155 = getelementptr inbounds %struct.obj, ptr %149, i64 1
  store ptr %155, ptr @heap, align 8, !tbaa !5
  br label %167

156:                                              ; preds = %144
  %157 = load ptr, ptr @freelist, align 8, !tbaa !5
  %158 = icmp eq ptr %157, null
  br i1 %158, label %159, label %161

159:                                              ; preds = %156
  tail call void @gc_for_newcell() #38
  %160 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %161

161:                                              ; preds = %159, %156
  %162 = phi ptr [ %160, %159 ], [ %157, %156 ]
  %163 = getelementptr inbounds %struct.obj, ptr %162, i64 0, i32 2, i32 0, i32 1
  %164 = load ptr, ptr %163, align 8, !tbaa !9
  store ptr %164, ptr @freelist, align 8, !tbaa !5
  %165 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %166 = add nsw i64 %165, 1
  store i64 %166, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %167

167:                                              ; preds = %161, %154, %82, %75
  %168 = phi ptr [ %70, %75 ], [ %83, %82 ], [ %149, %154 ], [ %162, %161 ]
  %169 = phi ptr [ null, %75 ], [ null, %82 ], [ %145, %154 ], [ %145, %161 ]
  %170 = phi ptr [ %63, %75 ], [ %63, %82 ], [ %121, %154 ], [ %121, %161 ]
  store i16 0, ptr %168, align 8, !tbaa !35
  %171 = getelementptr inbounds %struct.obj, ptr %168, i64 0, i32 1
  store i16 1, ptr %171, align 2, !tbaa !14
  %172 = getelementptr inbounds %struct.obj, ptr %168, i64 0, i32 2
  store ptr %169, ptr %172, align 8, !tbaa !9
  %173 = getelementptr inbounds %struct.obj, ptr %168, i64 0, i32 2, i32 0, i32 1
  store ptr %25, ptr %173, align 8, !tbaa !9
  %174 = load i16, ptr %27, align 2, !tbaa !14
  %175 = sext i16 %174 to i32
  switch i32 %175, label %176 [
    i32 0, label %182
    i32 1, label %178
  ]

176:                                              ; preds = %167
  %177 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %24)
  br label %182

178:                                              ; preds = %167
  %179 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2, i32 0, i32 1
  %180 = load ptr, ptr %179, align 8, !tbaa !9
  %181 = icmp eq ptr %180, null
  br i1 %181, label %182, label %23, !llvm.loop !99

182:                                              ; preds = %167, %178, %176
  br i1 %2, label %252, label %183

183:                                              ; preds = %17, %13, %9, %7, %3, %19, %182
  %184 = phi ptr [ %168, %182 ], [ null, %19 ], [ null, %3 ], [ null, %7 ], [ null, %9 ], [ null, %13 ], [ null, %17 ]
  %185 = phi ptr [ %170, %182 ], [ null, %19 ], [ null, %3 ], [ null, %7 ], [ null, %9 ], [ null, %13 ], [ null, %17 ]
  %186 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %187 = load i16, ptr %186, align 2, !tbaa !14
  %188 = sext i16 %187 to i32
  switch i32 %188, label %189 [
    i32 0, label %252
    i32 1, label %191
  ]

189:                                              ; preds = %183
  %190 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %0)
  br label %252

191:                                              ; preds = %183
  %192 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %193 = load ptr, ptr %192, align 8, !tbaa !9
  %194 = icmp eq ptr %193, null
  br i1 %194, label %252, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %struct.obj, ptr %193, i64 0, i32 1
  %197 = load i16, ptr %196, align 2, !tbaa !14
  %198 = sext i16 %197 to i32
  switch i32 %198, label %199 [
    i32 0, label %252
    i32 1, label %201
  ]

199:                                              ; preds = %195
  %200 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %193)
  br label %252

201:                                              ; preds = %195
  %202 = getelementptr inbounds %struct.obj, ptr %193, i64 0, i32 2, i32 0, i32 1
  %203 = load ptr, ptr %202, align 8, !tbaa !9
  %204 = icmp eq ptr %203, null
  br i1 %204, label %252, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.obj, ptr %203, i64 0, i32 1
  %207 = load i16, ptr %206, align 2, !tbaa !14
  %208 = sext i16 %207 to i32
  switch i32 %208, label %209 [
    i32 0, label %216
    i32 1, label %212
  ]

209:                                              ; preds = %205
  %210 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %203)
  %211 = load i16, ptr %206, align 2, !tbaa !14
  br label %216

212:                                              ; preds = %205
  %213 = getelementptr inbounds %struct.obj, ptr %203, i64 0, i32 2, i32 0, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !9
  %215 = icmp eq ptr %214, null
  br i1 %215, label %216, label %224

216:                                              ; preds = %212, %205, %209
  %217 = phi i16 [ %207, %212 ], [ %207, %205 ], [ %211, %209 ]
  %218 = sext i16 %217 to i32
  switch i32 %218, label %222 [
    i32 0, label %252
    i32 1, label %219
  ]

219:                                              ; preds = %216
  %220 = getelementptr inbounds %struct.obj, ptr %203, i64 0, i32 2
  %221 = load ptr, ptr %220, align 8, !tbaa !9
  br label %252

222:                                              ; preds = %216
  %223 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %203)
  br label %252

224:                                              ; preds = %212
  %225 = load ptr, ptr @sym_progn, align 8, !tbaa !5
  %226 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %227 = icmp eq i64 %226, 1
  br i1 %227, label %228, label %236

228:                                              ; preds = %224
  %229 = load ptr, ptr @heap, align 8, !tbaa !5
  %230 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %231 = icmp ult ptr %229, %230
  br i1 %231, label %234, label %232

232:                                              ; preds = %228
  %233 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %234

234:                                              ; preds = %232, %228
  %235 = getelementptr inbounds %struct.obj, ptr %229, i64 1
  store ptr %235, ptr @heap, align 8, !tbaa !5
  br label %247

236:                                              ; preds = %224
  %237 = load ptr, ptr @freelist, align 8, !tbaa !5
  %238 = icmp eq ptr %237, null
  br i1 %238, label %239, label %241

239:                                              ; preds = %236
  tail call void @gc_for_newcell() #38
  %240 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %241

241:                                              ; preds = %239, %236
  %242 = phi ptr [ %240, %239 ], [ %237, %236 ]
  %243 = getelementptr inbounds %struct.obj, ptr %242, i64 0, i32 2, i32 0, i32 1
  %244 = load ptr, ptr %243, align 8, !tbaa !9
  store ptr %244, ptr @freelist, align 8, !tbaa !5
  %245 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %246 = add nsw i64 %245, 1
  store i64 %246, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %247

247:                                              ; preds = %234, %241
  %248 = phi ptr [ %229, %234 ], [ %242, %241 ]
  store i16 0, ptr %248, align 8, !tbaa !35
  %249 = getelementptr inbounds %struct.obj, ptr %248, i64 0, i32 1
  store i16 1, ptr %249, align 2, !tbaa !14
  %250 = getelementptr inbounds %struct.obj, ptr %248, i64 0, i32 2
  store ptr %225, ptr %250, align 8, !tbaa !9
  %251 = getelementptr inbounds %struct.obj, ptr %248, i64 0, i32 2, i32 0, i32 1
  store ptr %203, ptr %251, align 8, !tbaa !9
  br label %252

252:                                              ; preds = %1, %182, %183, %189, %191, %195, %199, %201, %222, %219, %216, %247
  %253 = phi ptr [ %184, %247 ], [ %184, %222 ], [ %184, %219 ], [ %184, %216 ], [ %184, %201 ], [ %184, %199 ], [ %184, %195 ], [ %184, %191 ], [ %184, %189 ], [ %184, %183 ], [ %168, %182 ], [ null, %1 ]
  %254 = phi ptr [ %185, %247 ], [ %185, %222 ], [ %185, %219 ], [ %185, %216 ], [ %185, %201 ], [ %185, %199 ], [ %185, %195 ], [ %185, %191 ], [ %185, %189 ], [ %185, %183 ], [ %170, %182 ], [ null, %1 ]
  %255 = phi ptr [ %248, %247 ], [ null, %222 ], [ %221, %219 ], [ null, %216 ], [ null, %201 ], [ null, %199 ], [ null, %195 ], [ null, %191 ], [ null, %189 ], [ null, %183 ], [ null, %182 ], [ null, %1 ]
  %256 = tail call ptr @reverse(ptr noundef %254)
  %257 = tail call ptr @reverse(ptr noundef %253)
  %258 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %259 = icmp eq i64 %258, 1
  br i1 %259, label %260, label %268

260:                                              ; preds = %252
  %261 = load ptr, ptr @heap, align 8, !tbaa !5
  %262 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %263 = icmp ult ptr %261, %262
  br i1 %263, label %266, label %264

264:                                              ; preds = %260
  %265 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %266

266:                                              ; preds = %264, %260
  %267 = getelementptr inbounds %struct.obj, ptr %261, i64 1
  store ptr %267, ptr @heap, align 8, !tbaa !5
  br label %279

268:                                              ; preds = %252
  %269 = load ptr, ptr @freelist, align 8, !tbaa !5
  %270 = icmp eq ptr %269, null
  br i1 %270, label %271, label %273

271:                                              ; preds = %268
  tail call void @gc_for_newcell() #38
  %272 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %273

273:                                              ; preds = %271, %268
  %274 = phi ptr [ %272, %271 ], [ %269, %268 ]
  %275 = getelementptr inbounds %struct.obj, ptr %274, i64 0, i32 2, i32 0, i32 1
  %276 = load ptr, ptr %275, align 8, !tbaa !9
  store ptr %276, ptr @freelist, align 8, !tbaa !5
  %277 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %278 = add nsw i64 %277, 1
  store i64 %278, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %279

279:                                              ; preds = %266, %273
  %280 = phi ptr [ %261, %266 ], [ %274, %273 ]
  store i16 0, ptr %280, align 8, !tbaa !35
  %281 = getelementptr inbounds %struct.obj, ptr %280, i64 0, i32 1
  store i16 1, ptr %281, align 2, !tbaa !14
  %282 = getelementptr inbounds %struct.obj, ptr %280, i64 0, i32 2
  store ptr %255, ptr %282, align 8, !tbaa !9
  %283 = getelementptr inbounds %struct.obj, ptr %280, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %283, align 8, !tbaa !9
  %284 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %285 = icmp eq i64 %284, 1
  br i1 %285, label %286, label %294

286:                                              ; preds = %279
  %287 = load ptr, ptr @heap, align 8, !tbaa !5
  %288 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %289 = icmp ult ptr %287, %288
  br i1 %289, label %292, label %290

290:                                              ; preds = %286
  %291 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %292

292:                                              ; preds = %290, %286
  %293 = getelementptr inbounds %struct.obj, ptr %287, i64 1
  store ptr %293, ptr @heap, align 8, !tbaa !5
  br label %305

294:                                              ; preds = %279
  %295 = load ptr, ptr @freelist, align 8, !tbaa !5
  %296 = icmp eq ptr %295, null
  br i1 %296, label %297, label %299

297:                                              ; preds = %294
  tail call void @gc_for_newcell() #38
  %298 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %299

299:                                              ; preds = %297, %294
  %300 = phi ptr [ %298, %297 ], [ %295, %294 ]
  %301 = getelementptr inbounds %struct.obj, ptr %300, i64 0, i32 2, i32 0, i32 1
  %302 = load ptr, ptr %301, align 8, !tbaa !9
  store ptr %302, ptr @freelist, align 8, !tbaa !5
  %303 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %304 = add nsw i64 %303, 1
  store i64 %304, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %305

305:                                              ; preds = %292, %299
  %306 = phi ptr [ %287, %292 ], [ %300, %299 ]
  store i16 0, ptr %306, align 8, !tbaa !35
  %307 = getelementptr inbounds %struct.obj, ptr %306, i64 0, i32 1
  store i16 1, ptr %307, align 2, !tbaa !14
  %308 = getelementptr inbounds %struct.obj, ptr %306, i64 0, i32 2
  store ptr %257, ptr %308, align 8, !tbaa !9
  %309 = getelementptr inbounds %struct.obj, ptr %306, i64 0, i32 2, i32 0, i32 1
  store ptr %280, ptr %309, align 8, !tbaa !9
  %310 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %311 = icmp eq i64 %310, 1
  br i1 %311, label %312, label %320

312:                                              ; preds = %305
  %313 = load ptr, ptr @heap, align 8, !tbaa !5
  %314 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %315 = icmp ult ptr %313, %314
  br i1 %315, label %318, label %316

316:                                              ; preds = %312
  %317 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %318

318:                                              ; preds = %316, %312
  %319 = getelementptr inbounds %struct.obj, ptr %313, i64 1
  store ptr %319, ptr @heap, align 8, !tbaa !5
  br label %331

320:                                              ; preds = %305
  %321 = load ptr, ptr @freelist, align 8, !tbaa !5
  %322 = icmp eq ptr %321, null
  br i1 %322, label %323, label %325

323:                                              ; preds = %320
  tail call void @gc_for_newcell() #38
  %324 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %325

325:                                              ; preds = %323, %320
  %326 = phi ptr [ %324, %323 ], [ %321, %320 ]
  %327 = getelementptr inbounds %struct.obj, ptr %326, i64 0, i32 2, i32 0, i32 1
  %328 = load ptr, ptr %327, align 8, !tbaa !9
  store ptr %328, ptr @freelist, align 8, !tbaa !5
  %329 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %330 = add nsw i64 %329, 1
  store i64 %330, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %331

331:                                              ; preds = %318, %325
  %332 = phi ptr [ %313, %318 ], [ %326, %325 ]
  store i16 0, ptr %332, align 8, !tbaa !35
  %333 = getelementptr inbounds %struct.obj, ptr %332, i64 0, i32 1
  store i16 1, ptr %333, align 2, !tbaa !14
  %334 = getelementptr inbounds %struct.obj, ptr %332, i64 0, i32 2
  store ptr %256, ptr %334, align 8, !tbaa !9
  %335 = getelementptr inbounds %struct.obj, ptr %332, i64 0, i32 2, i32 0, i32 1
  store ptr %306, ptr %335, align 8, !tbaa !9
  br i1 %2, label %340, label %336

336:                                              ; preds = %331
  %337 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %338 = load i16, ptr %337, align 2, !tbaa !14
  %339 = icmp eq i16 %338, 1
  br i1 %339, label %342, label %340

340:                                              ; preds = %336, %331
  %341 = tail call ptr @err(ptr noundef nonnull @.str.30, ptr noundef %0)
  br label %342

342:                                              ; preds = %340, %336
  %343 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  store ptr %332, ptr %343, align 8, !tbaa !9
  %344 = tail call ptr @gen_intern(ptr noundef nonnull @.str.96, i64 noundef 0)
  %345 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %346 = load i16, ptr %345, align 2, !tbaa !14
  %347 = icmp eq i16 %346, 1
  br i1 %347, label %350, label %348

348:                                              ; preds = %342
  %349 = tail call ptr @err(ptr noundef nonnull @.str.29, ptr noundef nonnull %0)
  br label %350

350:                                              ; preds = %342, %348
  %351 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  store ptr %344, ptr %351, align 8, !tbaa !9
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @leval_quote(ptr noundef %0, ptr nocapture readnone %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = sext i16 %6 to i32
  switch i32 %7, label %11 [
    i32 0, label %13
    i32 1, label %8
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !9
  br label %13

11:                                               ; preds = %4
  %12 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %13

13:                                               ; preds = %2, %4, %8, %11
  %14 = phi ptr [ null, %11 ], [ %10, %8 ], [ null, %4 ], [ null, %2 ]
  ret ptr %14
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local ptr @leval_tenv(ptr nocapture readnone %0, ptr noundef readnone returned %1) #0 {
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @leval_while(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %6 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  br i1 %3, label %7, label %14

7:                                                ; preds = %2, %7
  %8 = tail call ptr @leval(ptr noundef null, ptr noundef %1)
  %9 = icmp eq ptr %8, null
  br i1 %9, label %50, label %7, !llvm.loop !100

10:                                               ; preds = %41, %25
  %11 = phi ptr [ %0, %25 ], [ %32, %41 ]
  %12 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %11)
  br label %13

13:                                               ; preds = %41, %46, %10, %25, %28
  br label %14, !llvm.loop !100

14:                                               ; preds = %2, %13
  %15 = load i16, ptr %4, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %19 [
    i32 0, label %21
    i32 1, label %17
  ]

17:                                               ; preds = %14
  %18 = load ptr, ptr %5, align 8, !tbaa !9
  br label %21

19:                                               ; preds = %14
  %20 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi ptr [ null, %19 ], [ %18, %17 ], [ null, %14 ]
  %23 = tail call ptr @leval(ptr noundef %22, ptr noundef %1)
  %24 = icmp eq ptr %23, null
  br i1 %24, label %50, label %25

25:                                               ; preds = %21
  %26 = load i16, ptr %4, align 2, !tbaa !14
  %27 = sext i16 %26 to i32
  switch i32 %27, label %10 [
    i32 0, label %13
    i32 1, label %28
  ]

28:                                               ; preds = %25
  %29 = load ptr, ptr %6, align 8, !tbaa !9
  %30 = icmp eq ptr %29, null
  br i1 %30, label %13, label %31

31:                                               ; preds = %28, %46
  %32 = phi ptr [ %48, %46 ], [ %29, %28 ]
  %33 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 1
  %34 = load i16, ptr %33, align 2, !tbaa !14
  %35 = sext i16 %34 to i32
  switch i32 %35, label %39 [
    i32 0, label %41
    i32 1, label %36
  ]

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !9
  br label %41

39:                                               ; preds = %31
  %40 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %32)
  br label %41

41:                                               ; preds = %31, %36, %39
  %42 = phi ptr [ null, %39 ], [ %38, %36 ], [ null, %31 ]
  %43 = tail call ptr @leval(ptr noundef %42, ptr noundef %1)
  %44 = load i16, ptr %33, align 2, !tbaa !14
  %45 = sext i16 %44 to i32
  switch i32 %45, label %10 [
    i32 0, label %13
    i32 1, label %46
  ]

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !9
  %49 = icmp eq ptr %48, null
  br i1 %49, label %13, label %31, !llvm.loop !101

50:                                               ; preds = %21, %7
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @symbolconc(ptr noundef %0) #6 {
  %2 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  store i8 0, ptr %2, align 1, !tbaa !9
  %3 = icmp eq ptr %0, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %1, %41
  %5 = phi i64 [ %28, %41 ], [ 0, %1 ]
  %6 = phi ptr [ %43, %41 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  %9 = sext i16 %8 to i32
  switch i32 %9, label %10 [
    i32 0, label %20
    i32 1, label %12
  ]

10:                                               ; preds = %4
  %11 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %6)
  br label %20

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %18 = load i16, ptr %17, align 2, !tbaa !14
  %19 = icmp eq i16 %18, 3
  br i1 %19, label %23, label %20

20:                                               ; preds = %4, %10, %12, %16
  %21 = phi ptr [ %14, %16 ], [ null, %12 ], [ null, %10 ], [ null, %4 ]
  %22 = tail call ptr @err(ptr noundef nonnull @.str.97, ptr noundef %21)
  br label %23

23:                                               ; preds = %20, %16
  %24 = phi ptr [ %21, %20 ], [ %14, %16 ]
  %25 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %26) #34
  %28 = add i64 %27, %5
  %29 = icmp sgt i64 %28, 5120
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = tail call ptr @err(ptr noundef nonnull @.str.98, ptr noundef null)
  %32 = load ptr, ptr %25, align 8, !tbaa !9
  br label %33

33:                                               ; preds = %30, %23
  %34 = phi ptr [ %32, %30 ], [ %26, %23 ]
  %35 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %36 = tail call ptr @strcat(ptr noundef nonnull dereferenceable(1) %35, ptr noundef nonnull dereferenceable(1) %34) #33
  %37 = load i16, ptr %7, align 2, !tbaa !14
  %38 = sext i16 %37 to i32
  switch i32 %38, label %39 [
    i32 0, label %45
    i32 1, label %41
  ]

39:                                               ; preds = %33
  %40 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %6)
  br label %45

41:                                               ; preds = %33
  %42 = getelementptr inbounds %struct.obj, ptr %6, i64 0, i32 2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !9
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %4, !llvm.loop !102

45:                                               ; preds = %33, %41, %39, %1
  %46 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %47 = tail call ptr @gen_intern(ptr noundef %46, i64 noundef 1)
  ret ptr %47
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcat(ptr noalias noundef returned, ptr noalias nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local nonnull ptr @subr_kind_str(i64 noundef %0) local_unnamed_addr #0 {
  %2 = add i64 %0, -4
  %3 = icmp ult i64 %2, 18
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds [18 x ptr], ptr @switch.table.lprin1g, i64 0, i64 %2
  %6 = load ptr, ptr %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi ptr [ %6, %4 ], [ @.str.109, %1 ]
  ret ptr %8
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lprin1g(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8, !tbaa !5
  %4 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %5 = icmp ult ptr %3, %4
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %8 = load ptr, ptr %3, align 8, !tbaa !5
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi ptr [ %8, %6 ], [ %0, %2 ]
  %11 = icmp eq ptr %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = sext i16 %14 to i32
  switch i32 %15, label %180 [
    i32 0, label %16
    i32 1, label %22
    i32 2, label %88
    i32 3, label %106
    i32 4, label %114
    i32 5, label %114
    i32 6, label %114
    i32 21, label %114
    i32 7, label %114
    i32 19, label %114
    i32 20, label %114
    i32 8, label %114
    i32 9, label %114
    i32 10, label %114
    i32 11, label %140
  ]

16:                                               ; preds = %9, %12
  %17 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !33
  %19 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !34
  %21 = call i32 %18(ptr noundef nonnull @.str.110, ptr noundef %20) #33
  br label %218

22:                                               ; preds = %12
  %23 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !33
  %25 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !34
  %27 = call i32 %24(ptr noundef nonnull @.str.111, ptr noundef %26) #33
  %28 = load ptr, ptr %3, align 8, !tbaa !5
  %29 = icmp eq ptr %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 1
  %32 = load i16, ptr %31, align 2, !tbaa !14
  %33 = sext i16 %32 to i32
  switch i32 %33, label %37 [
    i32 0, label %39
    i32 1, label %34
  ]

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !9
  br label %39

37:                                               ; preds = %30
  %38 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %28)
  br label %39

39:                                               ; preds = %22, %30, %34, %37
  %40 = phi ptr [ null, %37 ], [ %36, %34 ], [ null, %30 ], [ null, %22 ]
  %41 = call ptr @lprin1g(ptr noundef %40, ptr noundef nonnull %1)
  %42 = load ptr, ptr %3, align 8, !tbaa !5
  %43 = icmp eq ptr %42, null
  br i1 %43, label %84, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.obj, ptr %42, i64 0, i32 1
  %46 = load i16, ptr %45, align 2, !tbaa !14
  %47 = sext i16 %46 to i32
  switch i32 %47, label %48 [
    i32 0, label %84
    i32 1, label %50
  ]

48:                                               ; preds = %44
  %49 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %42)
  br label %84

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.obj, ptr %42, i64 0, i32 2, i32 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !9
  %53 = icmp eq ptr %52, null
  br i1 %53, label %84, label %54

54:                                               ; preds = %50, %77
  %55 = phi ptr [ %79, %77 ], [ %52, %50 ]
  %56 = getelementptr inbounds %struct.obj, ptr %55, i64 0, i32 1
  %57 = load i16, ptr %56, align 2, !tbaa !14
  %58 = icmp eq i16 %57, 1
  %59 = load ptr, ptr %23, align 8, !tbaa !33
  %60 = load ptr, ptr %25, align 8, !tbaa !34
  br i1 %58, label %61, label %81

61:                                               ; preds = %54
  %62 = call i32 %59(ptr noundef nonnull @.str.112, ptr noundef %60) #33
  %63 = load i16, ptr %56, align 2, !tbaa !14
  %64 = sext i16 %63 to i32
  switch i32 %64, label %68 [
    i32 0, label %70
    i32 1, label %65
  ]

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.obj, ptr %55, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !9
  br label %70

68:                                               ; preds = %61
  %69 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %55)
  br label %70

70:                                               ; preds = %68, %65, %61
  %71 = phi ptr [ null, %68 ], [ %67, %65 ], [ null, %61 ]
  %72 = call ptr @lprin1g(ptr noundef %71, ptr noundef nonnull %1)
  %73 = load i16, ptr %56, align 2, !tbaa !14
  %74 = sext i16 %73 to i32
  switch i32 %74, label %75 [
    i32 0, label %84
    i32 1, label %77
  ]

75:                                               ; preds = %70
  %76 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %55)
  br label %84

77:                                               ; preds = %70
  %78 = getelementptr inbounds %struct.obj, ptr %55, i64 0, i32 2, i32 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !9
  %80 = icmp eq ptr %79, null
  br i1 %80, label %84, label %54, !llvm.loop !103

81:                                               ; preds = %54
  %82 = call i32 %59(ptr noundef nonnull @.str.113, ptr noundef %60) #33
  %83 = call ptr @lprin1g(ptr noundef nonnull %55, ptr noundef nonnull %1)
  br label %84

84:                                               ; preds = %70, %77, %75, %39, %44, %48, %50, %81
  %85 = load ptr, ptr %23, align 8, !tbaa !33
  %86 = load ptr, ptr %25, align 8, !tbaa !34
  %87 = call i32 %85(ptr noundef nonnull @.str.114, ptr noundef %86) #33
  br label %218

88:                                               ; preds = %12
  %89 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %90 = load double, ptr %89, align 8, !tbaa !9
  %91 = fptosi double %90 to i64
  %92 = sitofp i64 %91 to double
  %93 = fcmp oeq double %90, %92
  %94 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  br i1 %93, label %95, label %97

95:                                               ; preds = %88
  %96 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %94, ptr noundef nonnull dereferenceable(1) @.str.115, i64 noundef %91) #33
  br label %99

97:                                               ; preds = %88
  %98 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %94, ptr noundef nonnull dereferenceable(1) @.str.116, double noundef %90) #33
  br label %99

99:                                               ; preds = %97, %95
  %100 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %101 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !33
  %103 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %104 = load ptr, ptr %103, align 8, !tbaa !34
  %105 = call i32 %102(ptr noundef %100, ptr noundef %104) #33
  br label %218

106:                                              ; preds = %12
  %107 = getelementptr inbounds %struct.obj, ptr %10, i64 0, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !9
  %109 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %110 = load ptr, ptr %109, align 8, !tbaa !33
  %111 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %112 = load ptr, ptr %111, align 8, !tbaa !34
  %113 = call i32 %110(ptr noundef %108, ptr noundef %112) #33
  br label %218

114:                                              ; preds = %12, %12, %12, %12, %12, %12, %12, %12, %12, %12
  %115 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %116 = sext i16 %14 to i64
  %117 = add nsw i64 %116, -4
  %118 = icmp ult i64 %117, 18
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = getelementptr inbounds [18 x ptr], ptr @switch.table.lprin1g, i64 0, i64 %117
  %121 = load ptr, ptr %120, align 8
  br label %122

122:                                              ; preds = %114, %119
  %123 = phi ptr [ %121, %119 ], [ @.str.109, %114 ]
  %124 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %115, ptr noundef nonnull dereferenceable(1) @.str.117, ptr noundef nonnull %123) #33
  %125 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %126 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !33
  %128 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %129 = load ptr, ptr %128, align 8, !tbaa !34
  %130 = call i32 %127(ptr noundef %125, ptr noundef %129) #33
  %131 = load ptr, ptr %3, align 8, !tbaa !5
  %132 = getelementptr inbounds %struct.obj, ptr %131, i64 0, i32 2
  %133 = load ptr, ptr %132, align 8, !tbaa !9
  %134 = load ptr, ptr %126, align 8, !tbaa !33
  %135 = load ptr, ptr %128, align 8, !tbaa !34
  %136 = call i32 %134(ptr noundef %133, ptr noundef %135) #33
  %137 = load ptr, ptr %126, align 8, !tbaa !33
  %138 = load ptr, ptr %128, align 8, !tbaa !34
  %139 = call i32 %137(ptr noundef nonnull @.str.118, ptr noundef %138) #33
  br label %218

140:                                              ; preds = %12
  %141 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !33
  %143 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8, !tbaa !34
  %145 = call i32 %142(ptr noundef nonnull @.str.119, ptr noundef %144) #33
  %146 = load ptr, ptr %3, align 8, !tbaa !5
  %147 = getelementptr inbounds %struct.obj, ptr %146, i64 0, i32 2, i32 0, i32 1
  %148 = load ptr, ptr %147, align 8, !tbaa !9
  %149 = icmp eq ptr %148, null
  br i1 %149, label %174, label %150

150:                                              ; preds = %140
  %151 = getelementptr inbounds %struct.obj, ptr %148, i64 0, i32 1
  %152 = load i16, ptr %151, align 2, !tbaa !14
  %153 = icmp eq i16 %152, 1
  br i1 %153, label %154, label %174

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.obj, ptr %148, i64 0, i32 2
  %156 = load ptr, ptr %155, align 8, !tbaa !9
  %157 = call ptr @lprin1g(ptr noundef %156, ptr noundef nonnull %1)
  %158 = load ptr, ptr %141, align 8, !tbaa !33
  %159 = load ptr, ptr %143, align 8, !tbaa !34
  %160 = call i32 %158(ptr noundef nonnull @.str.112, ptr noundef %159) #33
  %161 = load ptr, ptr %3, align 8, !tbaa !5
  %162 = getelementptr inbounds %struct.obj, ptr %161, i64 0, i32 2, i32 0, i32 1
  %163 = load ptr, ptr %162, align 8, !tbaa !9
  %164 = icmp eq ptr %163, null
  br i1 %164, label %174, label %165

165:                                              ; preds = %154
  %166 = getelementptr inbounds %struct.obj, ptr %163, i64 0, i32 1
  %167 = load i16, ptr %166, align 2, !tbaa !14
  %168 = sext i16 %167 to i32
  switch i32 %168, label %172 [
    i32 0, label %174
    i32 1, label %169
  ]

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.obj, ptr %163, i64 0, i32 2, i32 0, i32 1
  %171 = load ptr, ptr %170, align 8, !tbaa !9
  br label %174

172:                                              ; preds = %165
  %173 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %163)
  br label %174

174:                                              ; preds = %150, %140, %172, %169, %165, %154
  %175 = phi ptr [ null, %172 ], [ %171, %169 ], [ null, %165 ], [ null, %154 ], [ %148, %140 ], [ %148, %150 ]
  %176 = call ptr @lprin1g(ptr noundef %175, ptr noundef nonnull %1)
  %177 = load ptr, ptr %141, align 8, !tbaa !33
  %178 = load ptr, ptr %143, align 8, !tbaa !34
  %179 = call i32 %177(ptr noundef nonnull @.str.118, ptr noundef %178) #33
  br label %218

180:                                              ; preds = %12
  %181 = sext i16 %14 to i64
  %182 = load ptr, ptr @user_types, align 8, !tbaa !5
  %183 = icmp eq ptr %182, null
  br i1 %183, label %184, label %190

184:                                              ; preds = %180
  %185 = call dereferenceable_or_null(8000) ptr @calloc(i64 1, i64 8000)
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %189

187:                                              ; preds = %184
  %188 = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %189

189:                                              ; preds = %187, %184
  store ptr %185, ptr @user_types, align 8, !tbaa !5
  br label %190

190:                                              ; preds = %189, %180
  %191 = phi ptr [ %185, %189 ], [ %182, %180 ]
  %192 = icmp ult i16 %14, 100
  br i1 %192, label %193, label %197

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.user_type_hooks, ptr %191, i64 %181, i32 4
  %195 = load ptr, ptr %194, align 8, !tbaa !65
  %196 = icmp eq ptr %195, null
  br i1 %196, label %201, label %199

197:                                              ; preds = %190
  %198 = call ptr @err(ptr noundef nonnull @.str.72, ptr noundef null)
  unreachable

199:                                              ; preds = %193
  %200 = load ptr, ptr %3, align 8, !tbaa !5
  call void %195(ptr noundef %200, ptr noundef %1) #33
  br label %218

201:                                              ; preds = %193
  %202 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %203 = load ptr, ptr %3, align 8, !tbaa !5
  %204 = icmp eq ptr %203, null
  br i1 %204, label %209, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.obj, ptr %203, i64 0, i32 1
  %207 = load i16, ptr %206, align 2, !tbaa !14
  %208 = sext i16 %207 to i32
  br label %209

209:                                              ; preds = %201, %205
  %210 = phi i32 [ %208, %205 ], [ 0, %201 ]
  %211 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %202, ptr noundef nonnull dereferenceable(1) @.str.120, i32 noundef %210, ptr noundef %203) #33
  %212 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %213 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !33
  %215 = getelementptr inbounds %struct.gen_printio, ptr %1, i64 0, i32 2
  %216 = load ptr, ptr %215, align 8, !tbaa !34
  %217 = call i32 %214(ptr noundef %212, ptr noundef %216) #33
  br label %218

218:                                              ; preds = %199, %209, %174, %122, %106, %99, %84, %16
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @get_c_file(ptr noundef %0, ptr noundef readnone %1) local_unnamed_addr #6 {
  %3 = icmp eq ptr %0, null
  %4 = icmp ne ptr %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  br i1 %3, label %11, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %9 = load i16, ptr %8, align 2, !tbaa !14
  %10 = icmp eq i16 %9, 17
  br i1 %10, label %13, label %11

11:                                               ; preds = %6, %7
  %12 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %0)
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !9
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %0)
  %19 = load ptr, ptr %14, align 8, !tbaa !9
  br label %20

20:                                               ; preds = %13, %17, %2
  %21 = phi ptr [ %1, %2 ], [ %19, %17 ], [ %15, %13 ]
  ret ptr %21
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lprin1f(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = alloca %struct.gen_printio, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #33
  store ptr null, ptr %3, align 8, !tbaa !31
  %4 = getelementptr inbounds %struct.gen_printio, ptr %3, i64 0, i32 1
  store ptr @fputs_fcn, ptr %4, align 8, !tbaa !33
  %5 = getelementptr inbounds %struct.gen_printio, ptr %3, i64 0, i32 2
  store ptr %1, ptr %5, align 8, !tbaa !34
  %6 = call ptr @lprin1g(ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #33
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lprin1(ptr noundef %0, ptr noundef %1) #6 {
  %3 = alloca %struct.gen_printio, align 8
  %4 = load ptr, ptr @stdout, align 8, !tbaa !5
  %5 = icmp eq ptr %1, null
  %6 = icmp ne ptr %4, null
  %7 = and i1 %5, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  br i1 %5, label %13, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %11 = load i16, ptr %10, align 2, !tbaa !14
  %12 = icmp eq i16 %11, 17
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %8
  %14 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %1)
  br label %15

15:                                               ; preds = %13, %9
  %16 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %1)
  %21 = load ptr, ptr %16, align 8, !tbaa !9
  br label %22

22:                                               ; preds = %2, %15, %19
  %23 = phi ptr [ %4, %2 ], [ %21, %19 ], [ %17, %15 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #33
  store ptr null, ptr %3, align 8, !tbaa !31
  %24 = getelementptr inbounds %struct.gen_printio, ptr %3, i64 0, i32 1
  store ptr @fputs_fcn, ptr %24, align 8, !tbaa !33
  %25 = getelementptr inbounds %struct.gen_printio, ptr %3, i64 0, i32 2
  store ptr %23, ptr %25, align 8, !tbaa !34
  %26 = call ptr @lprin1g(ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #33
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadf(ptr noundef %0) local_unnamed_addr #6 {
  %2 = alloca %struct.gen_readio, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #33
  store ptr @f_getc, ptr %2, align 8, !tbaa !104
  %3 = getelementptr inbounds %struct.gen_readio, ptr %2, i64 0, i32 1
  store ptr @f_ungetc, ptr %3, align 8, !tbaa !106
  %4 = getelementptr inbounds %struct.gen_readio, ptr %2, i64 0, i32 2
  store ptr %0, ptr %4, align 8, !tbaa !107
  %5 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %6 = tail call i32 @getc(ptr noundef %0)
  store i64 %5, ptr @nointerrupt, align 8, !tbaa !10
  %7 = icmp eq i64 %5, 0
  %8 = load i64, ptr @interrupt_differed, align 8
  %9 = icmp eq i64 %8, 1
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %12 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %13

13:                                               ; preds = %1, %11
  %14 = icmp eq i32 %6, -1
  br i1 %14, label %44, label %15

15:                                               ; preds = %13, %42
  %16 = phi i32 [ %35, %42 ], [ %6, %13 ]
  %17 = phi i32 [ %33, %42 ], [ 0, %13 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = icmp eq i32 %16, 59
  br i1 %20, label %32, label %24

21:                                               ; preds = %15
  %22 = icmp ne i32 %16, 10
  %23 = zext i1 %22 to i32
  br label %32

24:                                               ; preds = %19
  %25 = tail call ptr @__ctype_b_loc() #37
  %26 = load ptr, ptr %25, align 8, !tbaa !5
  %27 = sext i32 %16 to i64
  %28 = getelementptr inbounds i16, ptr %26, i64 %27
  %29 = load i16, ptr %28, align 2, !tbaa !29
  %30 = and i16 %29, 8192
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %21, %19
  %33 = phi i32 [ 0, %24 ], [ %23, %21 ], [ 1, %19 ]
  %34 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %35 = tail call i32 @getc(ptr noundef %0)
  store i64 %34, ptr @nointerrupt, align 8, !tbaa !10
  %36 = icmp eq i64 %34, 0
  %37 = load i64, ptr @interrupt_differed, align 8
  %38 = icmp eq i64 %37, 1
  %39 = select i1 %36, i1 %38, i1 false
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %41 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %42

42:                                               ; preds = %32, %40
  %43 = icmp eq i32 %35, -1
  br i1 %43, label %44, label %15

44:                                               ; preds = %42, %13
  %45 = load ptr, ptr @eof_val, align 8, !tbaa !5
  br label %49

46:                                               ; preds = %24
  %47 = tail call i32 @ungetc(i32 noundef %16, ptr noundef %0)
  %48 = call ptr @lreadr(ptr noundef nonnull %2)
  br label %49

49:                                               ; preds = %44, %46
  %50 = phi ptr [ %45, %44 ], [ %48, %46 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #33
  ret ptr %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @f_getc(ptr nocapture noundef %0) #6 {
  %2 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %3 = tail call i32 @getc(ptr noundef %0)
  store i64 %2, ptr @nointerrupt, align 8, !tbaa !10
  %4 = icmp eq i64 %2, 0
  %5 = load i64, ptr @interrupt_differed, align 8
  %6 = icmp eq i64 %5, 1
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %9 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %10

10:                                               ; preds = %1, %8
  ret i32 %3
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind uwtable
define dso_local void @f_ungetc(i32 noundef %0, ptr nocapture noundef %1) #1 {
  %3 = tail call i32 @ungetc(i32 noundef %0, ptr noundef %1)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @ungetc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @flush_ws(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.gen_readio, ptr %0, i64 0, i32 2
  %4 = icmp eq ptr %1, null
  br i1 %4, label %5, label %33

5:                                                ; preds = %2
  %6 = load ptr, ptr %0, align 8, !tbaa !104
  %7 = load ptr, ptr %3, align 8, !tbaa !107
  %8 = tail call i32 %6(ptr noundef %7) #33
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %59, label %10

10:                                               ; preds = %5, %27
  %11 = phi i32 [ %31, %27 ], [ %8, %5 ]
  %12 = phi i32 [ %28, %27 ], [ 0, %5 ]
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = icmp eq i32 %11, 59
  br i1 %15, label %27, label %19

16:                                               ; preds = %10
  %17 = icmp ne i32 %11, 10
  %18 = zext i1 %17 to i32
  br label %27

19:                                               ; preds = %14
  %20 = tail call ptr @__ctype_b_loc() #37
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %22 = sext i32 %11 to i64
  %23 = getelementptr inbounds i16, ptr %21, i64 %22
  %24 = load i16, ptr %23, align 2, !tbaa !29
  %25 = and i16 %24, 8192
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %59, label %27

27:                                               ; preds = %19, %16, %14
  %28 = phi i32 [ 0, %19 ], [ %18, %16 ], [ 1, %14 ]
  %29 = load ptr, ptr %0, align 8, !tbaa !104
  %30 = load ptr, ptr %3, align 8, !tbaa !107
  %31 = tail call i32 %29(ptr noundef %30) #33
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %59, label %10

33:                                               ; preds = %2, %47
  %34 = phi i32 [ %48, %47 ], [ 0, %2 ]
  %35 = load ptr, ptr %0, align 8, !tbaa !104
  %36 = load ptr, ptr %3, align 8, !tbaa !107
  %37 = tail call i32 %35(ptr noundef %36) #33
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = tail call ptr @err(ptr noundef nonnull %1, ptr noundef null)
  %41 = icmp eq i32 %34, 0
  br i1 %41, label %51, label %44

42:                                               ; preds = %33
  %43 = icmp eq i32 %34, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39, %42
  %45 = icmp ne i32 %37, 10
  %46 = zext i1 %45 to i32
  br label %47

47:                                               ; preds = %44, %49, %51
  %48 = phi i32 [ 0, %51 ], [ %46, %44 ], [ 1, %49 ]
  br label %33

49:                                               ; preds = %42
  %50 = icmp eq i32 %37, 59
  br i1 %50, label %47, label %51

51:                                               ; preds = %39, %49
  %52 = tail call ptr @__ctype_b_loc() #37
  %53 = load ptr, ptr %52, align 8, !tbaa !5
  %54 = sext i32 %37 to i64
  %55 = getelementptr inbounds i16, ptr %53, i64 %54
  %56 = load i16, ptr %55, align 2, !tbaa !29
  %57 = and i16 %56, 8192
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %47

59:                                               ; preds = %51, %27, %19, %5
  %60 = phi i32 [ -1, %5 ], [ -1, %27 ], [ %11, %19 ], [ %37, %51 ]
  ret i32 %60
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() local_unnamed_addr #23

; Function Attrs: nounwind uwtable
define dso_local ptr @readtl(ptr noundef %0) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.gen_readio, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %0, align 8, !tbaa !104
  %4 = load ptr, ptr %2, align 8, !tbaa !107
  %5 = tail call i32 %3(ptr noundef %4) #33
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %30, label %7

7:                                                ; preds = %1, %24
  %8 = phi i32 [ %28, %24 ], [ %5, %1 ]
  %9 = phi i32 [ %25, %24 ], [ 0, %1 ]
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = icmp eq i32 %8, 59
  br i1 %12, label %24, label %16

13:                                               ; preds = %7
  %14 = icmp ne i32 %8, 10
  %15 = zext i1 %14 to i32
  br label %24

16:                                               ; preds = %11
  %17 = tail call ptr @__ctype_b_loc() #37
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = sext i32 %8 to i64
  %20 = getelementptr inbounds i16, ptr %18, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !29
  %22 = and i16 %21, 8192
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %16, %13, %11
  %25 = phi i32 [ 0, %16 ], [ %15, %13 ], [ 1, %11 ]
  %26 = load ptr, ptr %0, align 8, !tbaa !104
  %27 = load ptr, ptr %2, align 8, !tbaa !107
  %28 = tail call i32 %26(ptr noundef %27) #33
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %7

30:                                               ; preds = %24, %1
  %31 = load ptr, ptr @eof_val, align 8, !tbaa !5
  br label %37

32:                                               ; preds = %16
  %33 = getelementptr inbounds %struct.gen_readio, ptr %0, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !106
  %35 = load ptr, ptr %2, align 8, !tbaa !107
  tail call void %34(i32 noundef %8, ptr noundef %35) #33
  %36 = tail call ptr @lreadr(ptr noundef nonnull %0)
  br label %37

37:                                               ; preds = %32, %30
  %38 = phi ptr [ %31, %30 ], [ %36, %32 ]
  ret ptr %38
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadr(ptr noundef %0) local_unnamed_addr #6 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8, !tbaa !5
  %3 = load ptr, ptr @tkbuffer, align 8, !tbaa !5
  %4 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %5 = icmp ult ptr %2, %4
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %8 = load ptr, ptr %2, align 8, !tbaa !5
  br label %9

9:                                                ; preds = %6, %1
  %10 = phi ptr [ %8, %6 ], [ %0, %1 ]
  %11 = getelementptr inbounds %struct.gen_readio, ptr %10, i64 0, i32 2
  br label %12

12:                                               ; preds = %36, %9
  %13 = phi i32 [ 0, %9 ], [ %37, %36 ]
  %14 = load ptr, ptr %10, align 8, !tbaa !104
  %15 = load ptr, ptr %11, align 8, !tbaa !107
  %16 = call i32 %14(ptr noundef %15) #33
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = call ptr @err(ptr noundef nonnull @.str.122, ptr noundef null)
  %20 = icmp eq i32 %13, 0
  br i1 %20, label %28, label %23

21:                                               ; preds = %12
  %22 = icmp eq i32 %13, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21, %18
  %24 = icmp ne i32 %16, 10
  %25 = zext i1 %24 to i32
  br label %36

26:                                               ; preds = %21
  %27 = icmp eq i32 %16, 59
  br i1 %27, label %36, label %28

28:                                               ; preds = %26, %18
  %29 = tail call ptr @__ctype_b_loc() #37
  %30 = load ptr, ptr %29, align 8, !tbaa !5
  %31 = sext i32 %16 to i64
  %32 = getelementptr inbounds i16, ptr %30, i64 %31
  %33 = load i16, ptr %32, align 2, !tbaa !29
  %34 = and i16 %33, 8192
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28, %26, %23
  %37 = phi i32 [ 0, %28 ], [ %25, %23 ], [ 1, %26 ]
  br label %12

38:                                               ; preds = %28
  switch i32 %16, label %180 [
    i32 40, label %39
    i32 41, label %42
    i32 39, label %44
    i32 96, label %100
    i32 44, label %130
    i32 34, label %174
    i32 35, label %177
  ]

39:                                               ; preds = %38
  %40 = load ptr, ptr %2, align 8, !tbaa !5
  %41 = call ptr @lreadparen(ptr noundef %40)
  br label %236

42:                                               ; preds = %38
  %43 = call ptr @err(ptr noundef nonnull @.str.123, ptr noundef null)
  br label %44

44:                                               ; preds = %38, %42
  %45 = load ptr, ptr @sym_quote, align 8, !tbaa !5
  %46 = load ptr, ptr %2, align 8, !tbaa !5
  %47 = call ptr @lreadr(ptr noundef %46)
  %48 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %49 = icmp eq i64 %48, 1
  br i1 %49, label %50, label %58

50:                                               ; preds = %44
  %51 = load ptr, ptr @heap, align 8, !tbaa !5
  %52 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %53 = icmp ult ptr %51, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %56

56:                                               ; preds = %54, %50
  %57 = getelementptr inbounds %struct.obj, ptr %51, i64 1
  store ptr %57, ptr @heap, align 8, !tbaa !5
  br label %69

58:                                               ; preds = %44
  %59 = load ptr, ptr @freelist, align 8, !tbaa !5
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  call void @gc_for_newcell() #38
  %62 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %63

63:                                               ; preds = %61, %58
  %64 = phi ptr [ %62, %61 ], [ %59, %58 ]
  %65 = getelementptr inbounds %struct.obj, ptr %64, i64 0, i32 2, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !9
  store ptr %66, ptr @freelist, align 8, !tbaa !5
  %67 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %68 = add nsw i64 %67, 1
  store i64 %68, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %69

69:                                               ; preds = %56, %63
  %70 = phi ptr [ %51, %56 ], [ %64, %63 ]
  store i16 0, ptr %70, align 8, !tbaa !35
  %71 = getelementptr inbounds %struct.obj, ptr %70, i64 0, i32 1
  store i16 1, ptr %71, align 2, !tbaa !14
  %72 = getelementptr inbounds %struct.obj, ptr %70, i64 0, i32 2
  store ptr %47, ptr %72, align 8, !tbaa !9
  %73 = getelementptr inbounds %struct.obj, ptr %70, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %73, align 8, !tbaa !9
  %74 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %75 = icmp eq i64 %74, 1
  br i1 %75, label %76, label %84

76:                                               ; preds = %69
  %77 = load ptr, ptr @heap, align 8, !tbaa !5
  %78 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %79 = icmp ult ptr %77, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %82

82:                                               ; preds = %80, %76
  %83 = getelementptr inbounds %struct.obj, ptr %77, i64 1
  store ptr %83, ptr @heap, align 8, !tbaa !5
  br label %95

84:                                               ; preds = %69
  %85 = load ptr, ptr @freelist, align 8, !tbaa !5
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  call void @gc_for_newcell() #38
  %88 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %89

89:                                               ; preds = %87, %84
  %90 = phi ptr [ %88, %87 ], [ %85, %84 ]
  %91 = getelementptr inbounds %struct.obj, ptr %90, i64 0, i32 2, i32 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  store ptr %92, ptr @freelist, align 8, !tbaa !5
  %93 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %94 = add nsw i64 %93, 1
  store i64 %94, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %95

95:                                               ; preds = %82, %89
  %96 = phi ptr [ %77, %82 ], [ %90, %89 ]
  store i16 0, ptr %96, align 8, !tbaa !35
  %97 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 1
  store i16 1, ptr %97, align 2, !tbaa !14
  %98 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2
  store ptr %45, ptr %98, align 8, !tbaa !9
  %99 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  store ptr %70, ptr %99, align 8, !tbaa !9
  br label %236

100:                                              ; preds = %38
  %101 = call ptr @gen_intern(ptr noundef nonnull @.str.124, i64 noundef 0)
  %102 = load ptr, ptr %2, align 8, !tbaa !5
  %103 = call ptr @lreadr(ptr noundef %102)
  %104 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %105 = icmp eq i64 %104, 1
  br i1 %105, label %106, label %114

106:                                              ; preds = %100
  %107 = load ptr, ptr @heap, align 8, !tbaa !5
  %108 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %109 = icmp ult ptr %107, %108
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  %111 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %112

112:                                              ; preds = %110, %106
  %113 = getelementptr inbounds %struct.obj, ptr %107, i64 1
  store ptr %113, ptr @heap, align 8, !tbaa !5
  br label %125

114:                                              ; preds = %100
  %115 = load ptr, ptr @freelist, align 8, !tbaa !5
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  call void @gc_for_newcell() #38
  %118 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %119

119:                                              ; preds = %117, %114
  %120 = phi ptr [ %118, %117 ], [ %115, %114 ]
  %121 = getelementptr inbounds %struct.obj, ptr %120, i64 0, i32 2, i32 0, i32 1
  %122 = load ptr, ptr %121, align 8, !tbaa !9
  store ptr %122, ptr @freelist, align 8, !tbaa !5
  %123 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %124 = add nsw i64 %123, 1
  store i64 %124, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %125

125:                                              ; preds = %112, %119
  %126 = phi ptr [ %107, %112 ], [ %120, %119 ]
  store i16 0, ptr %126, align 8, !tbaa !35
  %127 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 1
  store i16 1, ptr %127, align 2, !tbaa !14
  %128 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 2
  store ptr %101, ptr %128, align 8, !tbaa !9
  %129 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 2, i32 0, i32 1
  store ptr %103, ptr %129, align 8, !tbaa !9
  br label %236

130:                                              ; preds = %38
  %131 = load ptr, ptr %2, align 8, !tbaa !5
  %132 = load ptr, ptr %131, align 8, !tbaa !104
  %133 = getelementptr inbounds %struct.gen_readio, ptr %131, i64 0, i32 2
  %134 = load ptr, ptr %133, align 8, !tbaa !107
  %135 = call i32 %132(ptr noundef %134) #33
  switch i32 %135, label %137 [
    i32 64, label %143
    i32 46, label %136
  ]

136:                                              ; preds = %130
  br label %143

137:                                              ; preds = %130
  %138 = load ptr, ptr %2, align 8, !tbaa !5
  %139 = getelementptr inbounds %struct.gen_readio, ptr %138, i64 0, i32 1
  %140 = load ptr, ptr %139, align 8, !tbaa !106
  %141 = getelementptr inbounds %struct.gen_readio, ptr %138, i64 0, i32 2
  %142 = load ptr, ptr %141, align 8, !tbaa !107
  call void %140(i32 noundef %135, ptr noundef %142) #33
  br label %143

143:                                              ; preds = %130, %137, %136
  %144 = phi ptr [ @.str.127, %137 ], [ @.str.126, %136 ], [ @.str.125, %130 ]
  %145 = call ptr @gen_intern(ptr noundef nonnull %144, i64 noundef 0)
  %146 = load ptr, ptr %2, align 8, !tbaa !5
  %147 = call ptr @lreadr(ptr noundef %146)
  %148 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %149 = icmp eq i64 %148, 1
  br i1 %149, label %150, label %158

150:                                              ; preds = %143
  %151 = load ptr, ptr @heap, align 8, !tbaa !5
  %152 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %153 = icmp ult ptr %151, %152
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %156

156:                                              ; preds = %154, %150
  %157 = getelementptr inbounds %struct.obj, ptr %151, i64 1
  store ptr %157, ptr @heap, align 8, !tbaa !5
  br label %169

158:                                              ; preds = %143
  %159 = load ptr, ptr @freelist, align 8, !tbaa !5
  %160 = icmp eq ptr %159, null
  br i1 %160, label %161, label %163

161:                                              ; preds = %158
  call void @gc_for_newcell() #38
  %162 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %163

163:                                              ; preds = %161, %158
  %164 = phi ptr [ %162, %161 ], [ %159, %158 ]
  %165 = getelementptr inbounds %struct.obj, ptr %164, i64 0, i32 2, i32 0, i32 1
  %166 = load ptr, ptr %165, align 8, !tbaa !9
  store ptr %166, ptr @freelist, align 8, !tbaa !5
  %167 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %168 = add nsw i64 %167, 1
  store i64 %168, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %169

169:                                              ; preds = %156, %163
  %170 = phi ptr [ %151, %156 ], [ %164, %163 ]
  store i16 0, ptr %170, align 8, !tbaa !35
  %171 = getelementptr inbounds %struct.obj, ptr %170, i64 0, i32 1
  store i16 1, ptr %171, align 2, !tbaa !14
  %172 = getelementptr inbounds %struct.obj, ptr %170, i64 0, i32 2
  store ptr %145, ptr %172, align 8, !tbaa !9
  %173 = getelementptr inbounds %struct.obj, ptr %170, i64 0, i32 2, i32 0, i32 1
  store ptr %147, ptr %173, align 8, !tbaa !9
  br label %236

174:                                              ; preds = %38
  %175 = load ptr, ptr %2, align 8, !tbaa !5
  %176 = call ptr @lreadstring(ptr noundef %175) #33
  br label %236

177:                                              ; preds = %38
  %178 = load ptr, ptr %2, align 8, !tbaa !5
  %179 = call ptr @lreadsharp(ptr noundef %178) #33
  br label %236

180:                                              ; preds = %38
  %181 = load ptr, ptr @user_readm, align 8, !tbaa !5
  %182 = icmp eq ptr %181, null
  br i1 %182, label %190, label %183

183:                                              ; preds = %180
  %184 = load ptr, ptr @user_ch_readm, align 8, !tbaa !5
  %185 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %184, i32 noundef %16) #34
  %186 = icmp eq ptr %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %183
  %188 = load ptr, ptr %2, align 8, !tbaa !5
  %189 = call ptr %181(i32 noundef %16, ptr noundef %188) #33
  br label %236

190:                                              ; preds = %180, %183
  %191 = trunc i32 %16 to i8
  store i8 %191, ptr %3, align 1, !tbaa !9
  br label %192

192:                                              ; preds = %190, %230
  %193 = phi ptr [ %3, %190 ], [ %195, %230 ]
  %194 = phi i32 [ 1, %190 ], [ %232, %230 ]
  %195 = getelementptr inbounds i8, ptr %193, i64 1
  %196 = load ptr, ptr %2, align 8, !tbaa !5
  %197 = load ptr, ptr %196, align 8, !tbaa !104
  %198 = getelementptr inbounds %struct.gen_readio, ptr %196, i64 0, i32 2
  %199 = load ptr, ptr %198, align 8, !tbaa !107
  %200 = call i32 %197(ptr noundef %199) #33
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %202, label %205

202:                                              ; preds = %192
  %203 = zext i32 %194 to i64
  %204 = call ptr @lreadtk(ptr noundef nonnull %3, i64 noundef %203)
  br label %236

205:                                              ; preds = %192
  %206 = load ptr, ptr %29, align 8, !tbaa !5
  %207 = sext i32 %200 to i64
  %208 = getelementptr inbounds i16, ptr %206, i64 %207
  %209 = load i16, ptr %208, align 2, !tbaa !29
  %210 = and i16 %209, 8192
  %211 = icmp eq i16 %210, 0
  br i1 %211, label %215, label %212

212:                                              ; preds = %205
  %213 = zext i32 %194 to i64
  %214 = call ptr @lreadtk(ptr noundef nonnull %3, i64 noundef %213)
  br label %236

215:                                              ; preds = %205
  %216 = call ptr @memchr(ptr nonnull dereferenceable(1) @.str.128, i32 %200, i64 8)
  %217 = icmp eq ptr %216, null
  br i1 %217, label %218, label %222

218:                                              ; preds = %215
  %219 = load ptr, ptr @user_te_readm, align 8, !tbaa !5
  %220 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %219, i32 noundef %200) #34
  %221 = icmp eq ptr %220, null
  br i1 %221, label %230, label %222

222:                                              ; preds = %218, %215
  %223 = load ptr, ptr %2, align 8, !tbaa !5
  %224 = getelementptr inbounds %struct.gen_readio, ptr %223, i64 0, i32 1
  %225 = load ptr, ptr %224, align 8, !tbaa !106
  %226 = getelementptr inbounds %struct.gen_readio, ptr %223, i64 0, i32 2
  %227 = load ptr, ptr %226, align 8, !tbaa !107
  call void %225(i32 noundef %200, ptr noundef %227) #33
  %228 = zext i32 %194 to i64
  %229 = call ptr @lreadtk(ptr noundef nonnull %3, i64 noundef %228)
  br label %236

230:                                              ; preds = %218
  %231 = trunc i32 %200 to i8
  store i8 %231, ptr %195, align 1, !tbaa !9
  %232 = add nuw nsw i32 %194, 1
  %233 = icmp eq i32 %232, 5120
  br i1 %233, label %234, label %192, !llvm.loop !108

234:                                              ; preds = %230
  %235 = call ptr @err(ptr noundef nonnull @.str.129, ptr noundef null)
  br label %236

236:                                              ; preds = %234, %222, %212, %202, %187, %177, %174, %169, %125, %95, %39
  %237 = phi ptr [ %189, %187 ], [ %204, %202 ], [ %214, %212 ], [ %229, %222 ], [ null, %234 ], [ %179, %177 ], [ %176, %174 ], [ %170, %169 ], [ %126, %125 ], [ %96, %95 ], [ %41, %39 ]
  ret ptr %237
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @set_read_hooks(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #10 {
  store ptr %0, ptr @user_ch_readm, align 8, !tbaa !5
  store ptr %1, ptr @user_te_readm, align 8, !tbaa !5
  store ptr %2, ptr @user_readm, align 8, !tbaa !5
  store ptr %3, ptr @user_readt, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadparen(ptr noundef %0) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.gen_readio, ptr %0, i64 0, i32 2
  br label %3

3:                                                ; preds = %27, %1
  %4 = phi i32 [ 0, %1 ], [ %28, %27 ]
  %5 = load ptr, ptr %0, align 8, !tbaa !104
  %6 = load ptr, ptr %2, align 8, !tbaa !107
  %7 = tail call i32 %5(ptr noundef %6) #33
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call ptr @err(ptr noundef nonnull @.str.130, ptr noundef null)
  %11 = icmp eq i32 %4, 0
  br i1 %11, label %19, label %14

12:                                               ; preds = %3
  %13 = icmp eq i32 %4, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %12, %9
  %15 = icmp ne i32 %7, 10
  %16 = zext i1 %15 to i32
  br label %27

17:                                               ; preds = %12
  %18 = icmp eq i32 %7, 59
  br i1 %18, label %27, label %19

19:                                               ; preds = %17, %9
  %20 = tail call ptr @__ctype_b_loc() #37
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %22 = sext i32 %7 to i64
  %23 = getelementptr inbounds i16, ptr %21, i64 %22
  %24 = load i16, ptr %23, align 2, !tbaa !29
  %25 = and i16 %24, 8192
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %19, %17, %14
  %28 = phi i32 [ 0, %19 ], [ %16, %14 ], [ 1, %17 ]
  br label %3

29:                                               ; preds = %19
  %30 = icmp eq i32 %7, 41
  br i1 %30, label %103, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.gen_readio, ptr %0, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = load ptr, ptr %2, align 8, !tbaa !107
  tail call void %33(i32 noundef %7, ptr noundef %34) #33
  %35 = tail call ptr @lreadr(ptr noundef nonnull %0)
  %36 = load ptr, ptr @sym_dot, align 8, !tbaa !5
  %37 = icmp eq ptr %35, %36
  br i1 %37, label %38, label %75

38:                                               ; preds = %31
  %39 = tail call ptr @lreadr(ptr noundef nonnull %0)
  br label %40

40:                                               ; preds = %69, %38
  %41 = phi i32 [ 0, %38 ], [ %70, %69 ]
  %42 = load ptr, ptr %0, align 8, !tbaa !104
  %43 = load ptr, ptr %2, align 8, !tbaa !107
  %44 = tail call i32 %42(ptr noundef %43) #33
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = tail call ptr @err(ptr noundef nonnull @.str.130, ptr noundef null)
  %48 = icmp eq i32 %41, 0
  br i1 %48, label %63, label %51

49:                                               ; preds = %40
  %50 = icmp eq i32 %41, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %49, %46
  %52 = icmp ne i32 %44, 10
  %53 = zext i1 %52 to i32
  br label %69

54:                                               ; preds = %49
  %55 = icmp eq i32 %44, 59
  br i1 %55, label %69, label %56

56:                                               ; preds = %54
  %57 = load ptr, ptr %20, align 8, !tbaa !5
  %58 = sext i32 %44 to i64
  %59 = getelementptr inbounds i16, ptr %57, i64 %58
  %60 = load i16, ptr %59, align 2, !tbaa !29
  %61 = and i16 %60, 8192
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %71, label %69

63:                                               ; preds = %46
  %64 = load ptr, ptr %20, align 8, !tbaa !5
  %65 = getelementptr inbounds i16, ptr %64, i64 -1
  %66 = load i16, ptr %65, align 2, !tbaa !29
  %67 = and i16 %66, 8192
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %63, %56, %54, %51
  %70 = phi i32 [ 0, %56 ], [ %53, %51 ], [ 1, %54 ], [ 0, %63 ]
  br label %40

71:                                               ; preds = %56
  %72 = icmp eq i32 %44, 41
  br i1 %72, label %103, label %73

73:                                               ; preds = %63, %71
  %74 = tail call ptr @err(ptr noundef nonnull @.str.131, ptr noundef null)
  br label %103

75:                                               ; preds = %31
  %76 = tail call ptr @lreadparen(ptr noundef nonnull %0)
  %77 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %78 = icmp eq i64 %77, 1
  br i1 %78, label %79, label %87

79:                                               ; preds = %75
  %80 = load ptr, ptr @heap, align 8, !tbaa !5
  %81 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %82 = icmp ult ptr %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %85

85:                                               ; preds = %83, %79
  %86 = getelementptr inbounds %struct.obj, ptr %80, i64 1
  store ptr %86, ptr @heap, align 8, !tbaa !5
  br label %98

87:                                               ; preds = %75
  %88 = load ptr, ptr @freelist, align 8, !tbaa !5
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  tail call void @gc_for_newcell() #38
  %91 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %92

92:                                               ; preds = %90, %87
  %93 = phi ptr [ %91, %90 ], [ %88, %87 ]
  %94 = getelementptr inbounds %struct.obj, ptr %93, i64 0, i32 2, i32 0, i32 1
  %95 = load ptr, ptr %94, align 8, !tbaa !9
  store ptr %95, ptr @freelist, align 8, !tbaa !5
  %96 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %97 = add nsw i64 %96, 1
  store i64 %97, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %98

98:                                               ; preds = %85, %92
  %99 = phi ptr [ %80, %85 ], [ %93, %92 ]
  store i16 0, ptr %99, align 8, !tbaa !35
  %100 = getelementptr inbounds %struct.obj, ptr %99, i64 0, i32 1
  store i16 1, ptr %100, align 2, !tbaa !14
  %101 = getelementptr inbounds %struct.obj, ptr %99, i64 0, i32 2
  store ptr %35, ptr %101, align 8, !tbaa !9
  %102 = getelementptr inbounds %struct.obj, ptr %99, i64 0, i32 2, i32 0, i32 1
  store ptr %76, ptr %102, align 8, !tbaa !9
  br label %103

103:                                              ; preds = %71, %73, %29, %98
  %104 = phi ptr [ %99, %98 ], [ null, %29 ], [ %39, %73 ], [ %39, %71 ]
  ret ptr %104
}

declare ptr @lreadstring(ptr noundef) local_unnamed_addr #13

declare ptr @lreadsharp(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @lreadtk(ptr noundef %0, i64 noundef %1) local_unnamed_addr #6 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #33
  %4 = getelementptr inbounds i8, ptr %0, i64 %1
  store i8 0, ptr %4, align 1, !tbaa !9
  %5 = load ptr, ptr @user_readt, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = call ptr %5(ptr noundef nonnull %0, i64 noundef %1, ptr noundef nonnull %3) #33
  %9 = load i32, ptr %3, align 4, !tbaa !109
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %132

11:                                               ; preds = %7, %2
  %12 = load i8, ptr %0, align 1, !tbaa !9
  %13 = icmp eq i8 %12, 45
  %14 = zext i1 %13 to i64
  %15 = getelementptr i8, ptr %0, i64 %14
  %16 = tail call ptr @__ctype_b_loc() #37
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = load i8, ptr %15, align 1, !tbaa !9
  %19 = sext i8 %18 to i64
  %20 = getelementptr inbounds i16, ptr %17, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !29
  %22 = and i16 %21, 2048
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %11, %24
  %25 = phi ptr [ %26, %24 ], [ %15, %11 ]
  %26 = getelementptr inbounds i8, ptr %25, i64 1
  %27 = load i8, ptr %26, align 1, !tbaa !9
  %28 = sext i8 %27 to i64
  %29 = getelementptr inbounds i16, ptr %17, i64 %28
  %30 = load i16, ptr %29, align 2, !tbaa !29
  %31 = and i16 %30, 2048
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %24, !llvm.loop !111

33:                                               ; preds = %24, %11
  %34 = phi ptr [ %15, %11 ], [ %26, %24 ]
  %35 = phi i8 [ %18, %11 ], [ %27, %24 ]
  %36 = icmp eq i8 %35, 46
  br i1 %36, label %37, label %54

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, ptr %34, i64 1
  %39 = load i8, ptr %38, align 1, !tbaa !9
  %40 = sext i8 %39 to i64
  %41 = getelementptr inbounds i16, ptr %17, i64 %40
  %42 = load i16, ptr %41, align 2, !tbaa !29
  %43 = and i16 %42, 2048
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %37, %45
  %46 = phi ptr [ %47, %45 ], [ %38, %37 ]
  %47 = getelementptr inbounds i8, ptr %46, i64 1
  %48 = load i8, ptr %47, align 1, !tbaa !9
  %49 = sext i8 %48 to i64
  %50 = getelementptr inbounds i16, ptr %17, i64 %49
  %51 = load i16, ptr %50, align 2, !tbaa !29
  %52 = and i16 %51, 2048
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %57, label %45, !llvm.loop !113

54:                                               ; preds = %37, %33
  %55 = phi i8 [ %35, %33 ], [ %39, %37 ]
  %56 = phi ptr [ %34, %33 ], [ %38, %37 ]
  br i1 %23, label %130, label %57

57:                                               ; preds = %45, %54
  %58 = phi ptr [ %56, %54 ], [ %47, %45 ]
  %59 = phi i8 [ %55, %54 ], [ %48, %45 ]
  %60 = icmp eq i8 %59, 101
  br i1 %60, label %61, label %84

61:                                               ; preds = %57
  %62 = getelementptr inbounds i8, ptr %58, i64 1
  %63 = load i8, ptr %62, align 1, !tbaa !9
  switch i8 %63, label %67 [
    i8 45, label %64
    i8 43, label %64
  ]

64:                                               ; preds = %61, %61
  %65 = getelementptr inbounds i8, ptr %58, i64 2
  %66 = load i8, ptr %65, align 1, !tbaa !9
  br label %67

67:                                               ; preds = %61, %64
  %68 = phi i8 [ %66, %64 ], [ %63, %61 ]
  %69 = phi ptr [ %65, %64 ], [ %62, %61 ]
  %70 = sext i8 %68 to i64
  %71 = getelementptr inbounds i16, ptr %17, i64 %70
  %72 = load i16, ptr %71, align 2, !tbaa !29
  %73 = and i16 %72, 2048
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %130, label %75

75:                                               ; preds = %67, %75
  %76 = phi ptr [ %77, %75 ], [ %69, %67 ]
  %77 = getelementptr inbounds i8, ptr %76, i64 1
  %78 = load i8, ptr %77, align 1, !tbaa !9
  %79 = sext i8 %78 to i64
  %80 = getelementptr inbounds i16, ptr %17, i64 %79
  %81 = load i16, ptr %80, align 2, !tbaa !29
  %82 = and i16 %81, 2048
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %84, label %75, !llvm.loop !114

84:                                               ; preds = %75, %57
  %85 = phi i8 [ %59, %57 ], [ %78, %75 ]
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %130

87:                                               ; preds = %84
  %88 = call double @strtod(ptr nocapture noundef nonnull %0, ptr noundef null) #33
  %89 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %104

91:                                               ; preds = %87
  %92 = fptosi double %88 to i64
  %93 = sitofp i64 %92 to double
  %94 = fsub double %88, %93
  %95 = fcmp oeq double %94, 0.000000e+00
  %96 = fcmp oge double %88, 0.000000e+00
  %97 = and i1 %96, %95
  %98 = icmp sgt i64 %89, %92
  %99 = select i1 %97, i1 %98, i1 false
  br i1 %99, label %100, label %104

100:                                              ; preds = %91
  %101 = load ptr, ptr @inums, align 8, !tbaa !5
  %102 = getelementptr inbounds ptr, ptr %101, i64 %92
  %103 = load ptr, ptr %102, align 8, !tbaa !5
  br label %132

104:                                              ; preds = %91, %87
  %105 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %106 = icmp eq i64 %105, 1
  br i1 %106, label %107, label %115

107:                                              ; preds = %104
  %108 = load ptr, ptr @heap, align 8, !tbaa !5
  %109 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %110 = icmp ult ptr %108, %109
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  %112 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %113

113:                                              ; preds = %111, %107
  %114 = getelementptr inbounds %struct.obj, ptr %108, i64 1
  store ptr %114, ptr @heap, align 8, !tbaa !5
  br label %126

115:                                              ; preds = %104
  %116 = load ptr, ptr @freelist, align 8, !tbaa !5
  %117 = icmp eq ptr %116, null
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  call void @gc_for_newcell()
  %119 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %120

120:                                              ; preds = %118, %115
  %121 = phi ptr [ %119, %118 ], [ %116, %115 ]
  %122 = getelementptr inbounds %struct.obj, ptr %121, i64 0, i32 2, i32 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !9
  store ptr %123, ptr @freelist, align 8, !tbaa !5
  %124 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %125 = add nsw i64 %124, 1
  store i64 %125, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %126

126:                                              ; preds = %120, %113
  %127 = phi ptr [ %108, %113 ], [ %121, %120 ]
  store i16 0, ptr %127, align 8, !tbaa !35
  %128 = getelementptr inbounds %struct.obj, ptr %127, i64 0, i32 1
  store i16 2, ptr %128, align 2, !tbaa !14
  %129 = getelementptr inbounds %struct.obj, ptr %127, i64 0, i32 2
  store double %88, ptr %129, align 8, !tbaa !9
  br label %132

130:                                              ; preds = %84, %67, %54
  %131 = call ptr @gen_intern(ptr noundef nonnull %0, i64 noundef 1)
  br label %132

132:                                              ; preds = %126, %100, %7, %130
  %133 = phi ptr [ %131, %130 ], [ %8, %7 ], [ %103, %100 ], [ %127, %126 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #33
  ret ptr %133
}

; Function Attrs: nounwind uwtable
define dso_local ptr @copy_list(ptr noundef %0) #6 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8, !tbaa !5
  %3 = icmp eq ptr %0, null
  br i1 %3, label %64, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %6 = icmp ult ptr %2, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %9 = load ptr, ptr %2, align 8, !tbaa !5
  %10 = icmp eq ptr %9, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %4, %7
  %12 = phi ptr [ %9, %7 ], [ %0, %4 ]
  %13 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = sext i16 %14 to i32
  switch i32 %15, label %19 [
    i32 0, label %23
    i32 1, label %16
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.obj, ptr %12, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  br label %23

19:                                               ; preds = %11
  %20 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %12)
  %21 = load ptr, ptr %2, align 8, !tbaa !5
  %22 = icmp eq ptr %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %16, %11, %19
  %24 = phi ptr [ null, %19 ], [ %18, %16 ], [ null, %11 ]
  %25 = phi ptr [ %21, %19 ], [ %12, %16 ], [ %12, %11 ]
  %26 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 1
  %27 = load i16, ptr %26, align 2, !tbaa !14
  %28 = sext i16 %27 to i32
  switch i32 %28, label %32 [
    i32 0, label %34
    i32 1, label %29
  ]

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.obj, ptr %25, i64 0, i32 2, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !9
  br label %34

32:                                               ; preds = %23
  %33 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %25)
  br label %34

34:                                               ; preds = %7, %19, %23, %29, %32
  %35 = phi ptr [ %24, %32 ], [ %24, %29 ], [ %24, %23 ], [ null, %19 ], [ null, %7 ]
  %36 = phi ptr [ null, %32 ], [ %31, %29 ], [ null, %23 ], [ null, %19 ], [ null, %7 ]
  %37 = call ptr @copy_list(ptr noundef %36)
  %38 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = load ptr, ptr @heap, align 8, !tbaa !5
  %42 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %43 = icmp ult ptr %41, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %46

46:                                               ; preds = %44, %40
  %47 = getelementptr inbounds %struct.obj, ptr %41, i64 1
  store ptr %47, ptr @heap, align 8, !tbaa !5
  br label %59

48:                                               ; preds = %34
  %49 = load ptr, ptr @freelist, align 8, !tbaa !5
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  call void @gc_for_newcell() #38
  %52 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi ptr [ %52, %51 ], [ %49, %48 ]
  %55 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 2, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !9
  store ptr %56, ptr @freelist, align 8, !tbaa !5
  %57 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %58 = add nsw i64 %57, 1
  store i64 %58, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %59

59:                                               ; preds = %46, %53
  %60 = phi ptr [ %41, %46 ], [ %54, %53 ]
  store i16 0, ptr %60, align 8, !tbaa !35
  %61 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 1
  store i16 1, ptr %61, align 2, !tbaa !14
  %62 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 2
  store ptr %35, ptr %62, align 8, !tbaa !9
  %63 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 2, i32 0, i32 1
  store ptr %37, ptr %63, align 8, !tbaa !9
  br label %64

64:                                               ; preds = %1, %59
  %65 = phi ptr [ %60, %59 ], [ null, %1 ]
  ret ptr %65
}

; Function Attrs: nounwind uwtable
define dso_local ptr @apropos(ptr noundef readonly %0) #6 {
  %2 = load ptr, ptr @oblistvar, align 8, !tbaa !9
  %3 = icmp eq ptr %2, null
  br i1 %3, label %89, label %4

4:                                                ; preds = %1
  %5 = icmp eq ptr %0, null
  br label %6

6:                                                ; preds = %4, %84
  %7 = phi ptr [ %2, %4 ], [ %87, %84 ]
  %8 = phi ptr [ null, %4 ], [ %85, %84 ]
  %9 = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 1
  %10 = load i16, ptr %9, align 2, !tbaa !14
  %11 = icmp eq i16 %10, 1
  br i1 %11, label %12, label %89

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = icmp eq ptr %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 1
  %18 = load i16, ptr %17, align 2, !tbaa !14
  switch i16 %18, label %25 [
    i16 3, label %19
    i16 13, label %22
  ]

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  br label %27

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.obj, ptr %14, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  br label %27

25:                                               ; preds = %16, %12
  %26 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %14)
  br label %27

27:                                               ; preds = %19, %22, %25
  %28 = phi ptr [ %21, %19 ], [ %24, %22 ], [ null, %25 ]
  br i1 %5, label %56, label %29

29:                                               ; preds = %27, %52
  %30 = phi ptr [ %54, %52 ], [ %0, %27 ]
  %31 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 1
  %32 = load i16, ptr %31, align 2, !tbaa !14
  %33 = icmp eq i16 %32, 1
  br i1 %33, label %34, label %84

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !9
  %37 = icmp eq ptr %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 1
  %40 = load i16, ptr %39, align 2, !tbaa !14
  switch i16 %40, label %45 [
    i16 3, label %41
    i16 13, label %43
  ]

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2
  br label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.obj, ptr %36, i64 0, i32 2, i32 0, i32 1
  br label %47

45:                                               ; preds = %38, %34
  %46 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %36)
  unreachable

47:                                               ; preds = %41, %43
  %48 = phi ptr [ %42, %41 ], [ %44, %43 ]
  %49 = load ptr, ptr %48, align 8, !tbaa !9
  %50 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %28, ptr noundef nonnull dereferenceable(1) %49) #34
  %51 = icmp eq ptr %50, null
  br i1 %51, label %84, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.obj, ptr %30, i64 0, i32 2, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !9
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %29, !llvm.loop !115

56:                                               ; preds = %52, %27
  %57 = load ptr, ptr %13, align 8, !tbaa !9
  %58 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %59 = icmp eq i64 %58, 1
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = load ptr, ptr @heap, align 8, !tbaa !5
  %62 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %63 = icmp ult ptr %61, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %66

66:                                               ; preds = %64, %60
  %67 = getelementptr inbounds %struct.obj, ptr %61, i64 1
  store ptr %67, ptr @heap, align 8, !tbaa !5
  br label %79

68:                                               ; preds = %56
  %69 = load ptr, ptr @freelist, align 8, !tbaa !5
  %70 = icmp eq ptr %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  tail call void @gc_for_newcell() #38
  %72 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %73

73:                                               ; preds = %71, %68
  %74 = phi ptr [ %72, %71 ], [ %69, %68 ]
  %75 = getelementptr inbounds %struct.obj, ptr %74, i64 0, i32 2, i32 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !9
  store ptr %76, ptr @freelist, align 8, !tbaa !5
  %77 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %78 = add nsw i64 %77, 1
  store i64 %78, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %79

79:                                               ; preds = %66, %73
  %80 = phi ptr [ %61, %66 ], [ %74, %73 ]
  store i16 0, ptr %80, align 8, !tbaa !35
  %81 = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 1
  store i16 1, ptr %81, align 2, !tbaa !14
  %82 = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 2
  store ptr %57, ptr %82, align 8, !tbaa !9
  %83 = getelementptr inbounds %struct.obj, ptr %80, i64 0, i32 2, i32 0, i32 1
  store ptr %8, ptr %83, align 8, !tbaa !9
  br label %84

84:                                               ; preds = %47, %29, %79
  %85 = phi ptr [ %80, %79 ], [ %8, %29 ], [ %8, %47 ]
  %86 = getelementptr inbounds %struct.obj, ptr %7, i64 0, i32 2, i32 0, i32 1
  %87 = load ptr, ptr %86, align 8, !tbaa !9
  %88 = icmp eq ptr %87, null
  br i1 %88, label %89, label %6, !llvm.loop !116

89:                                               ; preds = %6, %84, %1
  %90 = phi ptr [ null, %1 ], [ %85, %84 ], [ %8, %6 ]
  ret ptr %90
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define dso_local ptr @fopen_cg(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #6 {
  %4 = alloca [256 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %4) #33
  %5 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %6 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = load ptr, ptr @heap, align 8, !tbaa !5
  %10 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %11 = icmp ult ptr %9, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %struct.obj, ptr %9, i64 1
  store ptr %15, ptr @heap, align 8, !tbaa !5
  br label %27

16:                                               ; preds = %3
  %17 = load ptr, ptr @freelist, align 8, !tbaa !5
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  tail call void @gc_for_newcell()
  %20 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %21

21:                                               ; preds = %19, %16
  %22 = phi ptr [ %20, %19 ], [ %17, %16 ]
  %23 = getelementptr inbounds %struct.obj, ptr %22, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  store ptr %24, ptr @freelist, align 8, !tbaa !5
  %25 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %26 = add nsw i64 %25, 1
  store i64 %26, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %27

27:                                               ; preds = %14, %21
  %28 = phi ptr [ %9, %14 ], [ %22, %21 ]
  store i16 0, ptr %28, align 8, !tbaa !35
  %29 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 1
  store i16 17, ptr %29, align 2, !tbaa !14
  %30 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 2
  %31 = getelementptr inbounds %struct.obj, ptr %28, i64 0, i32 2, i32 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, i8 0, i64 16, i1 false)
  %32 = tail call ptr %0(ptr noundef %1, ptr noundef %2) #33
  store ptr %32, ptr %30, align 8, !tbaa !9
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %59

34:                                               ; preds = %27
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %4, ptr noundef nonnull align 1 dereferenceable(15) @.str.132, i64 15, i1 false)
  %35 = getelementptr inbounds i8, ptr %4, i64 15
  store i8 0, ptr %35, align 1, !tbaa !9
  %36 = call ptr @memchr(ptr noundef nonnull dereferenceable(1) %4, i32 noundef 0, i64 noundef 256) #34
  %37 = icmp eq ptr %36, null
  %38 = ptrtoint ptr %36 to i64
  %39 = ptrtoint ptr %4 to i64
  %40 = sub i64 %38, %39
  %41 = select i1 %37, i64 256, i64 %40
  %42 = getelementptr inbounds i8, ptr %4, i64 %41
  %43 = sub i64 256, %41
  %44 = icmp eq i64 %41, 256
  br i1 %44, label %56, label %45

45:                                               ; preds = %34
  %46 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #34
  %47 = icmp ult i64 %46, %43
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = icmp eq i64 %46, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %48
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %42, ptr align 1 %1, i64 %46, i1 false)
  br label %53

51:                                               ; preds = %45
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %42, ptr align 1 %1, i64 %43, i1 false)
  %52 = sub i64 255, %41
  br label %53

53:                                               ; preds = %51, %50, %48
  %54 = phi i64 [ %52, %51 ], [ %46, %50 ], [ 0, %48 ]
  %55 = getelementptr inbounds i8, ptr %42, i64 %54
  store i8 0, ptr %55, align 1, !tbaa !9
  br label %56

56:                                               ; preds = %34, %53
  %57 = call ptr @llast_c_errmsg(i32 noundef -1)
  %58 = call ptr @err(ptr noundef nonnull %4, ptr noundef %57)
  br label %59

59:                                               ; preds = %56, %27
  %60 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #34
  %61 = add i64 %60, 1
  %62 = call i64 @llvm.umax.i64(i64 %61, i64 1)
  %63 = call noalias ptr @malloc(i64 noundef %62) #39
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = call ptr @err(ptr noundef nonnull @.str.51, ptr noundef null)
  br label %67

67:                                               ; preds = %59, %65
  store ptr %63, ptr %31, align 8, !tbaa !9
  %68 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %63, ptr noundef nonnull dereferenceable(1) %1) #33
  store i64 %5, ptr @nointerrupt, align 8, !tbaa !10
  %69 = icmp eq i64 %5, 0
  %70 = load i64, ptr @interrupt_differed, align 8
  %71 = icmp eq i64 %70, 1
  %72 = select i1 %69, i1 %71, i1 false
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %74 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %75

75:                                               ; preds = %67, %73
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %4) #33
  ret ptr %28
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local ptr @safe_strcpy(ptr noundef returned writeonly %0, i64 noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #24 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #34
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %0, ptr align 1 %2, i64 %6, i1 false)
  br label %13

11:                                               ; preds = %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %0, ptr align 1 %2, i64 %1, i1 false)
  %12 = add i64 %1, -1
  br label %13

13:                                               ; preds = %8, %10, %11
  %14 = phi i64 [ %12, %11 ], [ %6, %10 ], [ %6, %8 ]
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  store i8 0, ptr %15, align 1, !tbaa !9
  br label %16

16:                                               ; preds = %13, %3
  ret ptr %0
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local ptr @safe_strcat(ptr noundef returned %0, i64 noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #24 {
  %4 = tail call ptr @memchr(ptr noundef %0, i32 noundef 0, i64 noundef %1) #34
  %5 = icmp eq ptr %4, null
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %0 to i64
  %8 = sub i64 %6, %7
  %9 = select i1 %5, i64 %1, i64 %8
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  %11 = sub i64 %1, %9
  %12 = icmp eq i64 %9, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #34
  %15 = icmp ult i64 %14, %11
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %10, ptr align 1 %2, i64 %14, i1 false)
  br label %21

19:                                               ; preds = %13
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %10, ptr align 1 %2, i64 %11, i1 false)
  %20 = add i64 %11, -1
  br label %21

21:                                               ; preds = %19, %18, %16
  %22 = phi i64 [ %20, %19 ], [ %14, %18 ], [ 0, %16 ]
  %23 = getelementptr inbounds i8, ptr %10, i64 %22
  store i8 0, ptr %23, align 1, !tbaa !9
  br label %24

24:                                               ; preds = %3, %21
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local ptr @llast_c_errmsg(i32 noundef %0) local_unnamed_addr #6 {
  %2 = icmp slt i32 %0, 0
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = tail call ptr @__errno_location() #37
  %5 = load i32, ptr %4, align 4, !tbaa !109
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ]
  %8 = tail call ptr @strerror(i32 noundef %7) #33
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %52

10:                                               ; preds = %6
  %11 = sitofp i32 %7 to double
  %12 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = sext i32 %7 to i64
  %16 = fsub double %11, %11
  %17 = fcmp oeq double %16, 0.000000e+00
  %18 = icmp sgt i32 %7, -1
  %19 = and i1 %18, %17
  %20 = icmp sgt i64 %12, %15
  %21 = select i1 %19, i1 %20, i1 false
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = load ptr, ptr @inums, align 8, !tbaa !5
  %24 = getelementptr inbounds ptr, ptr %23, i64 %15
  %25 = load ptr, ptr %24, align 8, !tbaa !5
  br label %54

26:                                               ; preds = %14, %10
  %27 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %28 = icmp eq i64 %27, 1
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = load ptr, ptr @heap, align 8, !tbaa !5
  %31 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %32 = icmp ult ptr %30, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %35

35:                                               ; preds = %33, %29
  %36 = getelementptr inbounds %struct.obj, ptr %30, i64 1
  store ptr %36, ptr @heap, align 8, !tbaa !5
  br label %48

37:                                               ; preds = %26
  %38 = load ptr, ptr @freelist, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  tail call void @gc_for_newcell()
  %41 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi ptr [ %41, %40 ], [ %38, %37 ]
  %44 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2, i32 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !9
  store ptr %45, ptr @freelist, align 8, !tbaa !5
  %46 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %48

48:                                               ; preds = %42, %35
  %49 = phi ptr [ %30, %35 ], [ %43, %42 ]
  store i16 0, ptr %49, align 8, !tbaa !35
  %50 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 1
  store i16 2, ptr %50, align 2, !tbaa !14
  %51 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 2
  store double %11, ptr %51, align 8, !tbaa !9
  br label %54

52:                                               ; preds = %6
  %53 = tail call ptr @gen_intern(ptr noundef nonnull %8, i64 noundef 0)
  br label %54

54:                                               ; preds = %48, %22, %52
  %55 = phi ptr [ %53, %52 ], [ %25, %22 ], [ %49, %48 ]
  ret ptr %55
}

; Function Attrs: nounwind uwtable
define dso_local ptr @fopen_c(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = tail call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %0, ptr noundef %1)
  ret ptr %3
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) #5

; Function Attrs: nounwind uwtable
define dso_local ptr @fopen_l(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  switch i16 %6, label %13 [
    i16 3, label %7
    i16 13, label %10
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  br label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !9
  br label %15

13:                                               ; preds = %4, %2
  %14 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %15

15:                                               ; preds = %7, %10, %13
  %16 = phi ptr [ %9, %7 ], [ %12, %10 ], [ null, %13 ]
  %17 = icmp eq ptr %1, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %20 = load i16, ptr %19, align 2, !tbaa !14
  switch i16 %20, label %27 [
    i16 3, label %21
    i16 13, label %24
  ]

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  br label %29

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  br label %29

27:                                               ; preds = %18
  %28 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef nonnull %1)
  br label %29

29:                                               ; preds = %27, %24, %21, %15
  %30 = phi ptr [ @.str.133, %15 ], [ %23, %21 ], [ %26, %24 ], [ null, %27 ]
  %31 = tail call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %16, ptr noundef %30)
  ret ptr %31
}

; Function Attrs: nounwind uwtable
define dso_local ptr @delq(ptr noundef %0, ptr noundef %1) #6 {
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8, !tbaa !5
  %4 = icmp eq ptr %1, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %2
  %6 = load ptr, ptr @stack_limit_ptr, align 8, !tbaa !5
  %7 = icmp ult ptr %3, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = call ptr @err(ptr noundef nonnull @.str.23, ptr noundef null)
  %10 = load ptr, ptr %3, align 8, !tbaa !5
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi ptr [ %10, %8 ], [ %0, %5 ]
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = sext i16 %14 to i32
  switch i32 %15, label %19 [
    i32 0, label %21
    i32 1, label %16
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  br label %21

19:                                               ; preds = %11
  %20 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %1)
  br label %21

21:                                               ; preds = %11, %16, %19
  %22 = phi ptr [ null, %19 ], [ %18, %16 ], [ null, %11 ]
  %23 = icmp eq ptr %12, %22
  %24 = load ptr, ptr %3, align 8, !tbaa !5
  %25 = load i16, ptr %13, align 2, !tbaa !14
  %26 = sext i16 %25 to i32
  br i1 %23, label %27, label %36

27:                                               ; preds = %21
  switch i32 %26, label %31 [
    i32 0, label %33
    i32 1, label %28
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !9
  br label %33

31:                                               ; preds = %27
  %32 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %33

33:                                               ; preds = %27, %28, %31
  %34 = phi ptr [ null, %31 ], [ %30, %28 ], [ null, %27 ]
  %35 = call ptr @delq(ptr noundef %24, ptr noundef %34)
  br label %51

36:                                               ; preds = %21
  switch i32 %26, label %40 [
    i32 0, label %42
    i32 1, label %37
  ]

37:                                               ; preds = %36
  %38 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !9
  br label %42

40:                                               ; preds = %36
  %41 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %1)
  br label %42

42:                                               ; preds = %36, %37, %40
  %43 = phi ptr [ null, %40 ], [ %39, %37 ], [ null, %36 ]
  %44 = call ptr @delq(ptr noundef %24, ptr noundef %43)
  %45 = load i16, ptr %13, align 2, !tbaa !14
  %46 = icmp eq i16 %45, 1
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = call ptr @err(ptr noundef nonnull @.str.30, ptr noundef nonnull %1)
  br label %49

49:                                               ; preds = %42, %47
  %50 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  store ptr %44, ptr %50, align 8, !tbaa !9
  br label %51

51:                                               ; preds = %2, %49, %33
  %52 = phi ptr [ %35, %33 ], [ %1, %49 ], [ null, %2 ]
  ret ptr %52
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @fclose_l(ptr noundef %0) #6 {
  %2 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %6 = load i16, ptr %5, align 2, !tbaa !14
  %7 = icmp eq i16 %6, 17
  br i1 %7, label %10, label %8

8:                                                ; preds = %1, %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %0)
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !9
  %13 = icmp eq ptr %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call i32 @fclose(ptr noundef nonnull %12)
  store ptr null, ptr %11, align 8, !tbaa !9
  br label %16

16:                                               ; preds = %14, %10
  %17 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @free(ptr noundef nonnull %18) #33
  store ptr null, ptr %17, align 8, !tbaa !9
  br label %21

21:                                               ; preds = %16, %20
  store i64 %2, ptr @nointerrupt, align 8, !tbaa !10
  %22 = icmp eq i64 %2, 0
  %23 = load i64, ptr @interrupt_differed, align 8
  %24 = icmp eq i64 %23, 1
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %27 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %28

28:                                               ; preds = %21, %26
  ret ptr null
}

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #19

; Function Attrs: nounwind uwtable
define dso_local ptr @require(ptr noundef %0) #6 {
  %2 = tail call ptr @gen_intern(ptr noundef nonnull @.str.141, i64 noundef 0)
  %3 = tail call ptr @gen_intern(ptr noundef nonnull @.str.142, i64 noundef 0)
  %4 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = load ptr, ptr @heap, align 8, !tbaa !5
  %8 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.obj, ptr %7, i64 1
  store ptr %13, ptr @heap, align 8, !tbaa !5
  br label %25

14:                                               ; preds = %1
  %15 = load ptr, ptr @freelist, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  tail call void @gc_for_newcell() #38
  %18 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %18, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.obj, ptr %20, i64 0, i32 2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  store ptr %22, ptr @freelist, align 8, !tbaa !5
  %23 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %24 = add nsw i64 %23, 1
  store i64 %24, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %25

25:                                               ; preds = %12, %19
  %26 = phi ptr [ %7, %12 ], [ %20, %19 ]
  store i16 0, ptr %26, align 8, !tbaa !35
  %27 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 1
  store i16 1, ptr %27, align 2, !tbaa !14
  %28 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2
  store ptr %3, ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %struct.obj, ptr %26, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %29, align 8, !tbaa !9
  %30 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %32, label %40

32:                                               ; preds = %25
  %33 = load ptr, ptr @heap, align 8, !tbaa !5
  %34 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %35 = icmp ult ptr %33, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %38

38:                                               ; preds = %36, %32
  %39 = getelementptr inbounds %struct.obj, ptr %33, i64 1
  store ptr %39, ptr @heap, align 8, !tbaa !5
  br label %51

40:                                               ; preds = %25
  %41 = load ptr, ptr @freelist, align 8, !tbaa !5
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  tail call void @gc_for_newcell() #38
  %44 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %45

45:                                               ; preds = %43, %40
  %46 = phi ptr [ %44, %43 ], [ %41, %40 ]
  %47 = getelementptr inbounds %struct.obj, ptr %46, i64 0, i32 2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !9
  store ptr %48, ptr @freelist, align 8, !tbaa !5
  %49 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %50 = add nsw i64 %49, 1
  store i64 %50, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %51

51:                                               ; preds = %38, %45
  %52 = phi ptr [ %33, %38 ], [ %46, %45 ]
  store i16 0, ptr %52, align 8, !tbaa !35
  %53 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 1
  store i16 1, ptr %53, align 2, !tbaa !14
  %54 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2
  store ptr %0, ptr %54, align 8, !tbaa !9
  %55 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2, i32 0, i32 1
  store ptr %26, ptr %55, align 8, !tbaa !9
  %56 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %57 = icmp eq i64 %56, 1
  br i1 %57, label %58, label %66

58:                                               ; preds = %51
  %59 = load ptr, ptr @heap, align 8, !tbaa !5
  %60 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %61 = icmp ult ptr %59, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %64

64:                                               ; preds = %62, %58
  %65 = getelementptr inbounds %struct.obj, ptr %59, i64 1
  store ptr %65, ptr @heap, align 8, !tbaa !5
  br label %77

66:                                               ; preds = %51
  %67 = load ptr, ptr @freelist, align 8, !tbaa !5
  %68 = icmp eq ptr %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  tail call void @gc_for_newcell() #38
  %70 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %71

71:                                               ; preds = %69, %66
  %72 = phi ptr [ %70, %69 ], [ %67, %66 ]
  %73 = getelementptr inbounds %struct.obj, ptr %72, i64 0, i32 2, i32 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !9
  store ptr %74, ptr @freelist, align 8, !tbaa !5
  %75 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %76 = add nsw i64 %75, 1
  store i64 %76, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %77

77:                                               ; preds = %64, %71
  %78 = phi ptr [ %59, %64 ], [ %72, %71 ]
  store i16 0, ptr %78, align 8, !tbaa !35
  %79 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 1
  store i16 1, ptr %79, align 2, !tbaa !14
  %80 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 2
  store ptr %2, ptr %80, align 8, !tbaa !9
  %81 = getelementptr inbounds %struct.obj, ptr %78, i64 0, i32 2, i32 0, i32 1
  store ptr %52, ptr %81, align 8, !tbaa !9
  %82 = tail call ptr @string_append(ptr noundef nonnull %78) #33
  %83 = icmp eq ptr %82, null
  br i1 %83, label %93, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 1
  %86 = load i16, ptr %85, align 2, !tbaa !14
  switch i16 %86, label %93 [
    i16 3, label %87
    i16 13, label %90
  ]

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !9
  br label %95

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.obj, ptr %82, i64 0, i32 2, i32 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  br label %95

93:                                               ; preds = %84, %77
  %94 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %82)
  br label %95

95:                                               ; preds = %87, %90, %93
  %96 = phi ptr [ %89, %87 ], [ %92, %90 ], [ null, %93 ]
  %97 = tail call ptr @gen_intern(ptr noundef %96, i64 noundef 1)
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 1
  %101 = load i16, ptr %100, align 2, !tbaa !14
  %102 = icmp eq i16 %101, 3
  br i1 %102, label %105, label %103

103:                                              ; preds = %99, %95
  %104 = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef %97)
  br label %105

105:                                              ; preds = %99, %103
  %106 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 2, i32 0, i32 1
  %107 = load ptr, ptr %106, align 8, !tbaa !9
  %108 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  %109 = icmp eq ptr %107, %108
  %110 = load ptr, ptr @sym_t, align 8
  %111 = icmp eq ptr %110, null
  %112 = select i1 %109, i1 true, i1 %111
  br i1 %112, label %131, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 1
  %115 = load i16, ptr %114, align 2, !tbaa !14
  %116 = icmp eq i16 %115, 3
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = tail call ptr @err(ptr noundef nonnull @.str.50, ptr noundef nonnull %97)
  %119 = load ptr, ptr %106, align 8, !tbaa !9
  %120 = load ptr, ptr @unbound_marker, align 8, !tbaa !5
  br label %121

121:                                              ; preds = %113, %117
  %122 = phi ptr [ %108, %113 ], [ %120, %117 ]
  %123 = phi ptr [ %107, %113 ], [ %119, %117 ]
  %124 = icmp eq ptr %123, %122
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = tail call ptr @err(ptr noundef nonnull @.str.49, ptr noundef nonnull %97)
  br label %127

127:                                              ; preds = %121, %125
  %128 = icmp eq ptr %123, null
  br i1 %128, label %129, label %157

129:                                              ; preds = %127
  %130 = load ptr, ptr @sym_t, align 8, !tbaa !5
  br label %131

131:                                              ; preds = %129, %105
  %132 = phi ptr [ %130, %129 ], [ %110, %105 ]
  %133 = icmp eq ptr %0, null
  br i1 %133, label %143, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %136 = load i16, ptr %135, align 2, !tbaa !14
  switch i16 %136, label %143 [
    i16 3, label %137
    i16 13, label %140
  ]

137:                                              ; preds = %134
  %138 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %139 = load ptr, ptr %138, align 8, !tbaa !9
  br label %145

140:                                              ; preds = %134
  %141 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !9
  br label %145

143:                                              ; preds = %134, %131
  %144 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %145

145:                                              ; preds = %143, %140, %137
  %146 = phi ptr [ %139, %137 ], [ %142, %140 ], [ null, %143 ]
  %147 = icmp ne ptr %132, null
  %148 = zext i1 %147 to i64
  %149 = tail call ptr @vload(ptr noundef %146, i64 noundef 0, i64 noundef %148)
  %150 = load ptr, ptr @sym_t, align 8, !tbaa !5
  %151 = getelementptr inbounds %struct.obj, ptr %97, i64 0, i32 1
  %152 = load i16, ptr %151, align 2, !tbaa !14
  %153 = icmp eq i16 %152, 3
  br i1 %153, label %156, label %154

154:                                              ; preds = %145
  %155 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef nonnull %97) #38
  br label %156

156:                                              ; preds = %145, %154
  store ptr %150, ptr %106, align 8, !tbaa !9
  br label %157

157:                                              ; preds = %156, %127
  ret ptr %97
}

declare ptr @funcall1(ptr noundef, ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @load(ptr noundef %0, ptr noundef readnone %1, ptr noundef readnone %2) #6 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  switch i16 %7, label %14 [
    i16 3, label %8
    i16 13, label %11
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !9
  br label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  br label %16

14:                                               ; preds = %5, %3
  %15 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %16

16:                                               ; preds = %8, %11, %14
  %17 = phi ptr [ %10, %8 ], [ %13, %11 ], [ null, %14 ]
  %18 = icmp ne ptr %1, null
  %19 = zext i1 %18 to i64
  %20 = icmp ne ptr %2, null
  %21 = zext i1 %20 to i64
  %22 = tail call ptr @vload(ptr noundef %17, i64 noundef %19, i64 noundef %21)
  ret ptr %22
}

declare ptr @string_append(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define dso_local ptr @save_forms(ptr noundef %0, ptr noundef %1, ptr noundef %2) #6 {
  %4 = alloca %struct.gen_printio, align 8
  %5 = icmp eq ptr %0, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %8 = load i16, ptr %7, align 2, !tbaa !14
  switch i16 %8, label %15 [
    i16 3, label %9
    i16 13, label %12
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %17

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  br label %17

15:                                               ; preds = %6, %3
  %16 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %17

17:                                               ; preds = %9, %12, %15
  %18 = phi ptr [ %11, %9 ], [ %14, %12 ], [ null, %15 ]
  %19 = icmp eq ptr %2, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = tail call ptr @gen_intern(ptr noundef nonnull @.str.144, i64 noundef 0)
  %22 = icmp eq ptr %21, %2
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = tail call ptr @err(ptr noundef nonnull @.str.145, ptr noundef nonnull %2)
  br label %25

25:                                               ; preds = %20, %17, %23
  %26 = phi ptr [ null, %23 ], [ @.str.143, %17 ], [ @.str.144, %20 ]
  %27 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %28 = icmp sgt i64 %27, 2
  br i1 %28, label %29, label %75

29:                                               ; preds = %25
  %30 = load i8, ptr %26, align 1, !tbaa !9
  %31 = icmp eq i8 %30, 97
  %32 = select i1 %31, ptr @.str.146, ptr @.str.147
  %33 = load ptr, ptr @stdout, align 8, !tbaa !5
  %34 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %35 = tail call i32 @fputs(ptr nonnull %32, ptr %33)
  store i64 %34, ptr @nointerrupt, align 8, !tbaa !10
  %36 = icmp eq i64 %34, 0
  %37 = load i64, ptr @interrupt_differed, align 8
  %38 = icmp eq i64 %37, 1
  %39 = select i1 %36, i1 %38, i1 false
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %41 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %42 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %43

43:                                               ; preds = %29, %40
  %44 = phi i64 [ %34, %29 ], [ %42, %40 ]
  %45 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %46 = tail call i64 @fwrite(ptr nonnull @.str.148, i64 10, i64 1, ptr %45)
  store i64 %44, ptr @nointerrupt, align 8, !tbaa !10
  %47 = icmp eq i64 %44, 0
  %48 = load i64, ptr @interrupt_differed, align 8
  %49 = icmp eq i64 %48, 1
  %50 = select i1 %47, i1 %49, i1 false
  br i1 %50, label %51, label %54

51:                                               ; preds = %43
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %52 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %53 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi i64 [ %44, %43 ], [ %53, %51 ]
  %56 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %57 = tail call i32 @fputs(ptr %18, ptr %56)
  store i64 %55, ptr @nointerrupt, align 8, !tbaa !10
  %58 = icmp eq i64 %55, 0
  %59 = load i64, ptr @interrupt_differed, align 8
  %60 = icmp eq i64 %59, 1
  %61 = select i1 %58, i1 %60, i1 false
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %63 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  %64 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  br label %65

65:                                               ; preds = %54, %62
  %66 = phi i64 [ %55, %54 ], [ %64, %62 ]
  %67 = load ptr, ptr @stdout, align 8, !tbaa !5
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %68 = tail call i32 @fputc(i32 10, ptr %67)
  store i64 %66, ptr @nointerrupt, align 8, !tbaa !10
  %69 = icmp eq i64 %66, 0
  %70 = load i64, ptr @interrupt_differed, align 8
  %71 = icmp eq i64 %70, 1
  %72 = select i1 %69, i1 %71, i1 false
  br i1 %72, label %73, label %75

73:                                               ; preds = %65
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %74 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %75

75:                                               ; preds = %73, %65, %25
  %76 = tail call ptr @fopen_cg(ptr noundef nonnull @fopen, ptr noundef %18, ptr noundef %26)
  %77 = getelementptr inbounds %struct.obj, ptr %76, i64 0, i32 2
  %78 = load ptr, ptr %77, align 8, !tbaa !9
  %79 = icmp eq ptr %1, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  br label %110

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.gen_printio, ptr %4, i64 0, i32 1
  %84 = getelementptr inbounds %struct.gen_printio, ptr %4, i64 0, i32 2
  br label %85

85:                                               ; preds = %82, %103
  %86 = phi ptr [ %1, %82 ], [ %105, %103 ]
  %87 = getelementptr inbounds %struct.obj, ptr %86, i64 0, i32 1
  %88 = load i16, ptr %87, align 2, !tbaa !14
  %89 = sext i16 %88 to i32
  switch i32 %89, label %93 [
    i32 0, label %95
    i32 1, label %90
  ]

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.obj, ptr %86, i64 0, i32 2
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  br label %95

93:                                               ; preds = %85
  %94 = call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %86)
  br label %95

95:                                               ; preds = %85, %90, %93
  %96 = phi ptr [ null, %93 ], [ %92, %90 ], [ null, %85 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #33
  store ptr null, ptr %4, align 8, !tbaa !31
  store ptr @fputs_fcn, ptr %83, align 8, !tbaa !33
  store ptr %78, ptr %84, align 8, !tbaa !34
  %97 = call ptr @lprin1g(ptr noundef %96, ptr noundef nonnull %4)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  %98 = call i32 @putc(i32 noundef 10, ptr noundef %78)
  %99 = load i16, ptr %87, align 2, !tbaa !14
  %100 = sext i16 %99 to i32
  switch i32 %100, label %101 [
    i32 0, label %107
    i32 1, label %103
  ]

101:                                              ; preds = %95
  %102 = call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %86)
  br label %107

103:                                              ; preds = %95
  %104 = getelementptr inbounds %struct.obj, ptr %86, i64 0, i32 2, i32 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !9
  %106 = icmp eq ptr %105, null
  br i1 %106, label %107, label %85, !llvm.loop !117

107:                                              ; preds = %95, %103, %101
  %108 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %109 = icmp eq ptr %76, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %80, %107
  %111 = phi i64 [ %81, %80 ], [ %108, %107 ]
  %112 = getelementptr inbounds %struct.obj, ptr %76, i64 0, i32 1
  %113 = load i16, ptr %112, align 2, !tbaa !14
  %114 = icmp eq i16 %113, 17
  br i1 %114, label %118, label %115

115:                                              ; preds = %110, %107
  %116 = phi i64 [ %111, %110 ], [ %108, %107 ]
  %117 = call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %76)
  br label %118

118:                                              ; preds = %115, %110
  %119 = phi i64 [ %116, %115 ], [ %111, %110 ]
  %120 = load ptr, ptr %77, align 8, !tbaa !9
  %121 = icmp eq ptr %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = call i32 @fclose(ptr noundef nonnull %120)
  store ptr null, ptr %77, align 8, !tbaa !9
  br label %124

124:                                              ; preds = %122, %118
  %125 = getelementptr inbounds %struct.obj, ptr %76, i64 0, i32 2, i32 0, i32 1
  %126 = load ptr, ptr %125, align 8, !tbaa !9
  %127 = icmp eq ptr %126, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  call void @free(ptr noundef nonnull %126) #33
  store ptr null, ptr %125, align 8, !tbaa !9
  br label %129

129:                                              ; preds = %128, %124
  store i64 %119, ptr @nointerrupt, align 8, !tbaa !10
  %130 = icmp eq i64 %119, 0
  %131 = load i64, ptr @interrupt_differed, align 8
  %132 = icmp eq i64 %131, 1
  %133 = select i1 %130, i1 %132, i1 false
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %135 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %136

136:                                              ; preds = %129, %134
  %137 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %138 = icmp sgt i64 %137, 2
  br i1 %138, label %139, label %149

139:                                              ; preds = %136
  %140 = load ptr, ptr @stdout, align 8, !tbaa !5
  %141 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %142 = call i64 @fwrite(ptr nonnull @.str.140, i64 6, i64 1, ptr %140)
  store i64 %141, ptr @nointerrupt, align 8, !tbaa !10
  %143 = icmp eq i64 %141, 0
  %144 = load i64, ptr @interrupt_differed, align 8
  %145 = icmp eq i64 %144, 1
  %146 = select i1 %143, i1 %145, i1 false
  br i1 %146, label %147, label %149

147:                                              ; preds = %139
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %148 = call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %149

149:                                              ; preds = %147, %139, %136
  %150 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %150
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @quit() #6 {
  %1 = tail call ptr @err(ptr noundef null, ptr noundef null)
  ret ptr null
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @nullp(ptr noundef readnone %0) #8 {
  %2 = icmp eq ptr %0, null
  %3 = load ptr, ptr @sym_t, align 8
  %4 = select i1 %2, ptr %3, ptr null
  ret ptr %4
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #25

; Function Attrs: nounwind uwtable
define dso_local ptr @lgetc(ptr noundef %0) #6 {
  %2 = load ptr, ptr @stdin, align 8, !tbaa !5
  %3 = icmp eq ptr %0, null
  %4 = icmp ne ptr %2, null
  %5 = and i1 %3, %4
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  br i1 %3, label %11, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %9 = load i16, ptr %8, align 2, !tbaa !14
  %10 = icmp eq i16 %9, 17
  br i1 %10, label %13, label %11

11:                                               ; preds = %7, %6
  %12 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %0)
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !9
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %0)
  %19 = load ptr, ptr %14, align 8, !tbaa !9
  br label %20

20:                                               ; preds = %1, %13, %17
  %21 = phi ptr [ %2, %1 ], [ %19, %17 ], [ %15, %13 ]
  %22 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %23 = tail call i32 @getc(ptr noundef %21)
  store i64 %22, ptr @nointerrupt, align 8, !tbaa !10
  %24 = icmp eq i64 %22, 0
  %25 = load i64, ptr @interrupt_differed, align 8
  %26 = icmp eq i64 %25, 1
  %27 = select i1 %24, i1 %26, i1 false
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %29 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %30

30:                                               ; preds = %20, %28
  %31 = icmp eq i32 %23, -1
  br i1 %31, label %74, label %32

32:                                               ; preds = %30
  %33 = sitofp i32 %23 to double
  %34 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %32
  %37 = sext i32 %23 to i64
  %38 = fsub double %33, %33
  %39 = fcmp oeq double %38, 0.000000e+00
  %40 = icmp sgt i32 %23, -1
  %41 = and i1 %40, %39
  %42 = icmp sgt i64 %34, %37
  %43 = select i1 %41, i1 %42, i1 false
  br i1 %43, label %44, label %48

44:                                               ; preds = %36
  %45 = load ptr, ptr @inums, align 8, !tbaa !5
  %46 = getelementptr inbounds ptr, ptr %45, i64 %37
  %47 = load ptr, ptr %46, align 8, !tbaa !5
  br label %74

48:                                               ; preds = %36, %32
  %49 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %50 = icmp eq i64 %49, 1
  br i1 %50, label %51, label %59

51:                                               ; preds = %48
  %52 = load ptr, ptr @heap, align 8, !tbaa !5
  %53 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %54 = icmp ult ptr %52, %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %57

57:                                               ; preds = %55, %51
  %58 = getelementptr inbounds %struct.obj, ptr %52, i64 1
  store ptr %58, ptr @heap, align 8, !tbaa !5
  br label %70

59:                                               ; preds = %48
  %60 = load ptr, ptr @freelist, align 8, !tbaa !5
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  tail call void @gc_for_newcell()
  %63 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %64

64:                                               ; preds = %62, %59
  %65 = phi ptr [ %63, %62 ], [ %60, %59 ]
  %66 = getelementptr inbounds %struct.obj, ptr %65, i64 0, i32 2, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !9
  store ptr %67, ptr @freelist, align 8, !tbaa !5
  %68 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %69 = add nsw i64 %68, 1
  store i64 %69, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %70

70:                                               ; preds = %64, %57
  %71 = phi ptr [ %52, %57 ], [ %65, %64 ]
  store i16 0, ptr %71, align 8, !tbaa !35
  %72 = getelementptr inbounds %struct.obj, ptr %71, i64 0, i32 1
  store i16 2, ptr %72, align 2, !tbaa !14
  %73 = getelementptr inbounds %struct.obj, ptr %71, i64 0, i32 2
  store double %33, ptr %73, align 8, !tbaa !9
  br label %74

74:                                               ; preds = %70, %44, %30
  %75 = phi ptr [ null, %30 ], [ %47, %44 ], [ %71, %70 ]
  ret ptr %75
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lungetc(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @get_c_long(ptr noundef nonnull %0) #33
  %6 = trunc i64 %5 to i32
  %7 = load ptr, ptr @stdin, align 8, !tbaa !5
  %8 = icmp eq ptr %1, null
  %9 = icmp ne ptr %7, null
  %10 = and i1 %8, %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %4
  br i1 %8, label %16, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %14 = load i16, ptr %13, align 2, !tbaa !14
  %15 = icmp eq i16 %14, 17
  br i1 %15, label %18, label %16

16:                                               ; preds = %12, %11
  %17 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %1)
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !9
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %1)
  %24 = load ptr, ptr %19, align 8, !tbaa !9
  br label %25

25:                                               ; preds = %4, %18, %22
  %26 = phi ptr [ %7, %4 ], [ %24, %22 ], [ %20, %18 ]
  %27 = tail call i32 @ungetc(i32 noundef %6, ptr noundef %26)
  br label %28

28:                                               ; preds = %25, %2
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lputc(ptr noundef %0, ptr noundef %1) #6 {
  %3 = load ptr, ptr @stdout, align 8, !tbaa !5
  %4 = icmp eq ptr %1, null
  %5 = icmp ne ptr %3, null
  %6 = and i1 %4, %5
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  br i1 %4, label %12, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %10 = load i16, ptr %9, align 2, !tbaa !14
  %11 = icmp eq i16 %10, 17
  br i1 %11, label %14, label %12

12:                                               ; preds = %8, %7
  %13 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %1)
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %1)
  %20 = load ptr, ptr %15, align 8, !tbaa !9
  br label %21

21:                                               ; preds = %2, %14, %18
  %22 = phi ptr [ %3, %2 ], [ %20, %18 ], [ %16, %14 ]
  %23 = icmp eq ptr %0, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %26 = load i16, ptr %25, align 2, !tbaa !14
  switch i16 %26, label %35 [
    i16 2, label %27
    i16 3, label %31
    i16 13, label %33
  ]

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %29 = load double, ptr %28, align 8, !tbaa !9
  %30 = fptosi double %29 to i32
  br label %42

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  br label %37

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  br label %37

35:                                               ; preds = %24, %21
  %36 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  unreachable

37:                                               ; preds = %31, %33
  %38 = phi ptr [ %32, %31 ], [ %34, %33 ]
  %39 = load ptr, ptr %38, align 8, !tbaa !9
  %40 = load i8, ptr %39, align 1, !tbaa !9
  %41 = sext i8 %40 to i32
  br label %42

42:                                               ; preds = %37, %27
  %43 = phi i32 [ %30, %27 ], [ %41, %37 ]
  %44 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %45 = tail call i32 @putc(i32 noundef %43, ptr noundef %22)
  store i64 %44, ptr @nointerrupt, align 8, !tbaa !10
  %46 = icmp eq i64 %44, 0
  %47 = load i64, ptr @interrupt_differed, align 8
  %48 = icmp eq i64 %47, 1
  %49 = select i1 %46, i1 %48, i1 false
  br i1 %49, label %50, label %52

50:                                               ; preds = %42
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %51 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %52

52:                                               ; preds = %42, %50
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lputs(ptr noundef %0, ptr noundef %1) #6 {
  %3 = load ptr, ptr @stdout, align 8, !tbaa !5
  %4 = icmp eq ptr %1, null
  %5 = icmp ne ptr %3, null
  %6 = and i1 %4, %5
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  br i1 %4, label %12, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %10 = load i16, ptr %9, align 2, !tbaa !14
  %11 = icmp eq i16 %10, 17
  br i1 %11, label %14, label %12

12:                                               ; preds = %8, %7
  %13 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %1)
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %1)
  %20 = load ptr, ptr %15, align 8, !tbaa !9
  br label %21

21:                                               ; preds = %2, %14, %18
  %22 = phi ptr [ %3, %2 ], [ %20, %18 ], [ %16, %14 ]
  %23 = icmp eq ptr %0, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %26 = load i16, ptr %25, align 2, !tbaa !14
  switch i16 %26, label %33 [
    i16 3, label %27
    i16 13, label %30
  ]

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !9
  br label %35

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  br label %35

33:                                               ; preds = %24, %21
  %34 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  br label %35

35:                                               ; preds = %27, %30, %33
  %36 = phi ptr [ %29, %27 ], [ %32, %30 ], [ null, %33 ]
  %37 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %38 = tail call i32 @fputs(ptr %36, ptr %22)
  store i64 %37, ptr @nointerrupt, align 8, !tbaa !10
  %39 = icmp eq i64 %37, 0
  %40 = load i64, ptr @interrupt_differed, align 8
  %41 = icmp eq i64 %40, 1
  %42 = select i1 %39, i1 %41, i1 false
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %44 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %45

45:                                               ; preds = %35, %43
  ret ptr null
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lftell(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = icmp eq i16 %5, 17
  br i1 %6, label %9, label %7

7:                                                ; preds = %3, %1
  %8 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %0)
  br label %9

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %0)
  %15 = load ptr, ptr %10, align 8, !tbaa !9
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi ptr [ %15, %13 ], [ %11, %9 ]
  %18 = tail call i64 @ftell(ptr noundef %17)
  %19 = sitofp i64 %18 to double
  %20 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %16
  %23 = fptosi double %19 to i64
  %24 = sitofp i64 %23 to double
  %25 = fsub double %19, %24
  %26 = fcmp oeq double %25, 0.000000e+00
  %27 = icmp sgt i64 %18, -1
  %28 = and i1 %27, %26
  %29 = icmp sgt i64 %20, %23
  %30 = select i1 %28, i1 %29, i1 false
  br i1 %30, label %31, label %35

31:                                               ; preds = %22
  %32 = load ptr, ptr @inums, align 8, !tbaa !5
  %33 = getelementptr inbounds ptr, ptr %32, i64 %23
  %34 = load ptr, ptr %33, align 8, !tbaa !5
  br label %61

35:                                               ; preds = %22, %16
  %36 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %35
  %39 = load ptr, ptr @heap, align 8, !tbaa !5
  %40 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %41 = icmp ult ptr %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.obj, ptr %39, i64 1
  store ptr %45, ptr @heap, align 8, !tbaa !5
  br label %57

46:                                               ; preds = %35
  %47 = load ptr, ptr @freelist, align 8, !tbaa !5
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  tail call void @gc_for_newcell()
  %50 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi ptr [ %50, %49 ], [ %47, %46 ]
  %53 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !9
  store ptr %54, ptr @freelist, align 8, !tbaa !5
  %55 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %57

57:                                               ; preds = %51, %44
  %58 = phi ptr [ %39, %44 ], [ %52, %51 ]
  store i16 0, ptr %58, align 8, !tbaa !35
  %59 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 1
  store i16 2, ptr %59, align 2, !tbaa !14
  %60 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2
  store double %19, ptr %60, align 8, !tbaa !9
  br label %61

61:                                               ; preds = %31, %57
  %62 = phi ptr [ %34, %31 ], [ %58, %57 ]
  ret ptr %62
}

; Function Attrs: nofree nounwind
declare noundef i64 @ftell(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local ptr @lfseek(ptr noundef %0, ptr noundef %1, ptr noundef %2) #6 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 17
  br i1 %8, label %11, label %9

9:                                                ; preds = %5, %3
  %10 = tail call ptr @err(ptr noundef nonnull @.str.134, ptr noundef %0)
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = tail call ptr @err(ptr noundef nonnull @.str.151, ptr noundef nonnull %0)
  %17 = load ptr, ptr %12, align 8, !tbaa !9
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi ptr [ %17, %15 ], [ %13, %11 ]
  %20 = tail call i64 @get_c_long(ptr noundef %1) #33
  %21 = tail call i64 @get_c_long(ptr noundef %2) #33
  %22 = trunc i64 %21 to i32
  %23 = tail call i32 @fseek(ptr noundef %19, i64 noundef %20, i32 noundef %22)
  %24 = icmp eq i32 %23, 0
  %25 = load ptr, ptr @sym_t, align 8
  %26 = select i1 %24, ptr %25, ptr null
  ret ptr %26
}

; Function Attrs: nofree nounwind
declare noundef i32 @fseek(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local ptr @parse_number(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  switch i16 %5, label %10 [
    i16 3, label %6
    i16 13, label %8
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  br label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  br label %12

10:                                               ; preds = %3, %1
  %11 = tail call ptr @err(ptr noundef nonnull @.str.25, ptr noundef %0)
  unreachable

12:                                               ; preds = %6, %8
  %13 = phi ptr [ %7, %6 ], [ %9, %8 ]
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = tail call double @strtod(ptr nocapture noundef nonnull %14, ptr noundef null) #33
  %16 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %12
  %19 = fptosi double %15 to i64
  %20 = sitofp i64 %19 to double
  %21 = fsub double %15, %20
  %22 = fcmp oeq double %21, 0.000000e+00
  %23 = fcmp oge double %15, 0.000000e+00
  %24 = and i1 %23, %22
  %25 = icmp sgt i64 %16, %19
  %26 = select i1 %24, i1 %25, i1 false
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = load ptr, ptr @inums, align 8, !tbaa !5
  %29 = getelementptr inbounds ptr, ptr %28, i64 %19
  %30 = load ptr, ptr %29, align 8, !tbaa !5
  br label %57

31:                                               ; preds = %18, %12
  %32 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load ptr, ptr @heap, align 8, !tbaa !5
  %36 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %37 = icmp ult ptr %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %40

40:                                               ; preds = %38, %34
  %41 = getelementptr inbounds %struct.obj, ptr %35, i64 1
  store ptr %41, ptr @heap, align 8, !tbaa !5
  br label %53

42:                                               ; preds = %31
  %43 = load ptr, ptr @freelist, align 8, !tbaa !5
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  tail call void @gc_for_newcell()
  %46 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %47

47:                                               ; preds = %45, %42
  %48 = phi ptr [ %46, %45 ], [ %43, %42 ]
  %49 = getelementptr inbounds %struct.obj, ptr %48, i64 0, i32 2, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !9
  store ptr %50, ptr @freelist, align 8, !tbaa !5
  %51 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %53

53:                                               ; preds = %47, %40
  %54 = phi ptr [ %35, %40 ], [ %48, %47 ]
  store i16 0, ptr %54, align 8, !tbaa !35
  %55 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 1
  store i16 2, ptr %55, align 2, !tbaa !14
  %56 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 2
  store double %15, ptr %56, align 8, !tbaa !9
  br label %57

57:                                               ; preds = %27, %53
  %58 = phi ptr [ %30, %27 ], [ %54, %53 ]
  ret ptr %58
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subrs() local_unnamed_addr #6 {
  tail call void @init_subrs_1()
  tail call void @init_subrs_a() #33
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_subrs_1() local_unnamed_addr #6 {
  %1 = tail call ptr @gen_intern(ptr noundef nonnull @.str.153, i64 noundef 0)
  %2 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3 = icmp eq i64 %2, 1
  br i1 %3, label %4, label %12

4:                                                ; preds = %0
  %5 = load ptr, ptr @heap, align 8, !tbaa !5
  %6 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %7 = icmp ult ptr %5, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %struct.obj, ptr %5, i64 1
  store ptr %11, ptr @heap, align 8, !tbaa !5
  br label %23

12:                                               ; preds = %0
  %13 = load ptr, ptr @freelist, align 8, !tbaa !5
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  tail call void @gc_for_newcell()
  %16 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi ptr [ %16, %15 ], [ %13, %12 ]
  %19 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 2, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !9
  store ptr %20, ptr @freelist, align 8, !tbaa !5
  %21 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %22 = add nsw i64 %21, 1
  store i64 %22, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %23

23:                                               ; preds = %17, %10
  %24 = phi ptr [ %5, %10 ], [ %18, %17 ]
  store i16 0, ptr %24, align 8, !tbaa !35
  %25 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 1
  store i16 6, ptr %25, align 2, !tbaa !14
  %26 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2
  store ptr @.str.153, ptr %26, align 8, !tbaa !9
  %27 = getelementptr inbounds %struct.obj, ptr %24, i64 0, i32 2, i32 0, i32 1
  store ptr @cons, ptr %27, align 8, !tbaa !9
  %28 = icmp eq ptr %1, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 1
  %31 = load i16, ptr %30, align 2, !tbaa !14
  %32 = icmp eq i16 %31, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %29, %23
  %34 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1) #38
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %struct.obj, ptr %1, i64 0, i32 2, i32 0, i32 1
  store ptr %24, ptr %36, align 8, !tbaa !9
  %37 = tail call ptr @gen_intern(ptr noundef nonnull @.str.154, i64 noundef 0)
  %38 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = load ptr, ptr @heap, align 8, !tbaa !5
  %42 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %43 = icmp ult ptr %41, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %46

46:                                               ; preds = %44, %40
  %47 = getelementptr inbounds %struct.obj, ptr %41, i64 1
  store ptr %47, ptr @heap, align 8, !tbaa !5
  br label %59

48:                                               ; preds = %35
  %49 = load ptr, ptr @freelist, align 8, !tbaa !5
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  tail call void @gc_for_newcell()
  %52 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi ptr [ %52, %51 ], [ %49, %48 ]
  %55 = getelementptr inbounds %struct.obj, ptr %54, i64 0, i32 2, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !9
  store ptr %56, ptr @freelist, align 8, !tbaa !5
  %57 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %58 = add nsw i64 %57, 1
  store i64 %58, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %59

59:                                               ; preds = %53, %46
  %60 = phi ptr [ %41, %46 ], [ %54, %53 ]
  store i16 0, ptr %60, align 8, !tbaa !35
  %61 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 1
  store i16 5, ptr %61, align 2, !tbaa !14
  %62 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 2
  store ptr @.str.154, ptr %62, align 8, !tbaa !9
  %63 = getelementptr inbounds %struct.obj, ptr %60, i64 0, i32 2, i32 0, i32 1
  store ptr @car, ptr %63, align 8, !tbaa !9
  %64 = icmp eq ptr %37, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.obj, ptr %37, i64 0, i32 1
  %67 = load i16, ptr %66, align 2, !tbaa !14
  %68 = icmp eq i16 %67, 3
  br i1 %68, label %71, label %69

69:                                               ; preds = %65, %59
  %70 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %37) #38
  br label %71

71:                                               ; preds = %65, %69
  %72 = getelementptr inbounds %struct.obj, ptr %37, i64 0, i32 2, i32 0, i32 1
  store ptr %60, ptr %72, align 8, !tbaa !9
  %73 = tail call ptr @gen_intern(ptr noundef nonnull @.str.155, i64 noundef 0)
  %74 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %75 = icmp eq i64 %74, 1
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = load ptr, ptr @heap, align 8, !tbaa !5
  %78 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %79 = icmp ult ptr %77, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %82

82:                                               ; preds = %80, %76
  %83 = getelementptr inbounds %struct.obj, ptr %77, i64 1
  store ptr %83, ptr @heap, align 8, !tbaa !5
  br label %95

84:                                               ; preds = %71
  %85 = load ptr, ptr @freelist, align 8, !tbaa !5
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  tail call void @gc_for_newcell()
  %88 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %89

89:                                               ; preds = %87, %84
  %90 = phi ptr [ %88, %87 ], [ %85, %84 ]
  %91 = getelementptr inbounds %struct.obj, ptr %90, i64 0, i32 2, i32 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  store ptr %92, ptr @freelist, align 8, !tbaa !5
  %93 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %94 = add nsw i64 %93, 1
  store i64 %94, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %95

95:                                               ; preds = %89, %82
  %96 = phi ptr [ %77, %82 ], [ %90, %89 ]
  store i16 0, ptr %96, align 8, !tbaa !35
  %97 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 1
  store i16 5, ptr %97, align 2, !tbaa !14
  %98 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2
  store ptr @.str.155, ptr %98, align 8, !tbaa !9
  %99 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2, i32 0, i32 1
  store ptr @cdr, ptr %99, align 8, !tbaa !9
  %100 = icmp eq ptr %73, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %struct.obj, ptr %73, i64 0, i32 1
  %103 = load i16, ptr %102, align 2, !tbaa !14
  %104 = icmp eq i16 %103, 3
  br i1 %104, label %107, label %105

105:                                              ; preds = %101, %95
  %106 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %73) #38
  br label %107

107:                                              ; preds = %101, %105
  %108 = getelementptr inbounds %struct.obj, ptr %73, i64 0, i32 2, i32 0, i32 1
  store ptr %96, ptr %108, align 8, !tbaa !9
  %109 = tail call ptr @gen_intern(ptr noundef nonnull @.str.156, i64 noundef 0)
  %110 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %120

112:                                              ; preds = %107
  %113 = load ptr, ptr @heap, align 8, !tbaa !5
  %114 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %115 = icmp ult ptr %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %118

118:                                              ; preds = %116, %112
  %119 = getelementptr inbounds %struct.obj, ptr %113, i64 1
  store ptr %119, ptr @heap, align 8, !tbaa !5
  br label %131

120:                                              ; preds = %107
  %121 = load ptr, ptr @freelist, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  tail call void @gc_for_newcell()
  %124 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %125

125:                                              ; preds = %123, %120
  %126 = phi ptr [ %124, %123 ], [ %121, %120 ]
  %127 = getelementptr inbounds %struct.obj, ptr %126, i64 0, i32 2, i32 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !9
  store ptr %128, ptr @freelist, align 8, !tbaa !5
  %129 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %130 = add nsw i64 %129, 1
  store i64 %130, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %131

131:                                              ; preds = %125, %118
  %132 = phi ptr [ %113, %118 ], [ %126, %125 ]
  store i16 0, ptr %132, align 8, !tbaa !35
  %133 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 1
  store i16 6, ptr %133, align 2, !tbaa !14
  %134 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 2
  store ptr @.str.156, ptr %134, align 8, !tbaa !9
  %135 = getelementptr inbounds %struct.obj, ptr %132, i64 0, i32 2, i32 0, i32 1
  store ptr @setcar, ptr %135, align 8, !tbaa !9
  %136 = icmp eq ptr %109, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %struct.obj, ptr %109, i64 0, i32 1
  %139 = load i16, ptr %138, align 2, !tbaa !14
  %140 = icmp eq i16 %139, 3
  br i1 %140, label %143, label %141

141:                                              ; preds = %137, %131
  %142 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %109) #38
  br label %143

143:                                              ; preds = %137, %141
  %144 = getelementptr inbounds %struct.obj, ptr %109, i64 0, i32 2, i32 0, i32 1
  store ptr %132, ptr %144, align 8, !tbaa !9
  %145 = tail call ptr @gen_intern(ptr noundef nonnull @.str.157, i64 noundef 0)
  %146 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %147 = icmp eq i64 %146, 1
  br i1 %147, label %148, label %156

148:                                              ; preds = %143
  %149 = load ptr, ptr @heap, align 8, !tbaa !5
  %150 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %151 = icmp ult ptr %149, %150
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %154

154:                                              ; preds = %152, %148
  %155 = getelementptr inbounds %struct.obj, ptr %149, i64 1
  store ptr %155, ptr @heap, align 8, !tbaa !5
  br label %167

156:                                              ; preds = %143
  %157 = load ptr, ptr @freelist, align 8, !tbaa !5
  %158 = icmp eq ptr %157, null
  br i1 %158, label %159, label %161

159:                                              ; preds = %156
  tail call void @gc_for_newcell()
  %160 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %161

161:                                              ; preds = %159, %156
  %162 = phi ptr [ %160, %159 ], [ %157, %156 ]
  %163 = getelementptr inbounds %struct.obj, ptr %162, i64 0, i32 2, i32 0, i32 1
  %164 = load ptr, ptr %163, align 8, !tbaa !9
  store ptr %164, ptr @freelist, align 8, !tbaa !5
  %165 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %166 = add nsw i64 %165, 1
  store i64 %166, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %167

167:                                              ; preds = %161, %154
  %168 = phi ptr [ %149, %154 ], [ %162, %161 ]
  store i16 0, ptr %168, align 8, !tbaa !35
  %169 = getelementptr inbounds %struct.obj, ptr %168, i64 0, i32 1
  store i16 6, ptr %169, align 2, !tbaa !14
  %170 = getelementptr inbounds %struct.obj, ptr %168, i64 0, i32 2
  store ptr @.str.157, ptr %170, align 8, !tbaa !9
  %171 = getelementptr inbounds %struct.obj, ptr %168, i64 0, i32 2, i32 0, i32 1
  store ptr @setcdr, ptr %171, align 8, !tbaa !9
  %172 = icmp eq ptr %145, null
  br i1 %172, label %177, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %struct.obj, ptr %145, i64 0, i32 1
  %175 = load i16, ptr %174, align 2, !tbaa !14
  %176 = icmp eq i16 %175, 3
  br i1 %176, label %179, label %177

177:                                              ; preds = %173, %167
  %178 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %145) #38
  br label %179

179:                                              ; preds = %173, %177
  %180 = getelementptr inbounds %struct.obj, ptr %145, i64 0, i32 2, i32 0, i32 1
  store ptr %168, ptr %180, align 8, !tbaa !9
  %181 = tail call ptr @gen_intern(ptr noundef nonnull @.str.158, i64 noundef 0)
  %182 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %183 = icmp eq i64 %182, 1
  br i1 %183, label %184, label %192

184:                                              ; preds = %179
  %185 = load ptr, ptr @heap, align 8, !tbaa !5
  %186 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %187 = icmp ult ptr %185, %186
  br i1 %187, label %190, label %188

188:                                              ; preds = %184
  %189 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %190

190:                                              ; preds = %188, %184
  %191 = getelementptr inbounds %struct.obj, ptr %185, i64 1
  store ptr %191, ptr @heap, align 8, !tbaa !5
  br label %203

192:                                              ; preds = %179
  %193 = load ptr, ptr @freelist, align 8, !tbaa !5
  %194 = icmp eq ptr %193, null
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  tail call void @gc_for_newcell()
  %196 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %197

197:                                              ; preds = %195, %192
  %198 = phi ptr [ %196, %195 ], [ %193, %192 ]
  %199 = getelementptr inbounds %struct.obj, ptr %198, i64 0, i32 2, i32 0, i32 1
  %200 = load ptr, ptr %199, align 8, !tbaa !9
  store ptr %200, ptr @freelist, align 8, !tbaa !5
  %201 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %202 = add nsw i64 %201, 1
  store i64 %202, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %203

203:                                              ; preds = %197, %190
  %204 = phi ptr [ %185, %190 ], [ %198, %197 ]
  store i16 0, ptr %204, align 8, !tbaa !35
  %205 = getelementptr inbounds %struct.obj, ptr %204, i64 0, i32 1
  store i16 21, ptr %205, align 2, !tbaa !14
  %206 = getelementptr inbounds %struct.obj, ptr %204, i64 0, i32 2
  store ptr @.str.158, ptr %206, align 8, !tbaa !9
  %207 = getelementptr inbounds %struct.obj, ptr %204, i64 0, i32 2, i32 0, i32 1
  store ptr @plus, ptr %207, align 8, !tbaa !9
  %208 = icmp eq ptr %181, null
  br i1 %208, label %213, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %struct.obj, ptr %181, i64 0, i32 1
  %211 = load i16, ptr %210, align 2, !tbaa !14
  %212 = icmp eq i16 %211, 3
  br i1 %212, label %215, label %213

213:                                              ; preds = %209, %203
  %214 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %181) #38
  br label %215

215:                                              ; preds = %209, %213
  %216 = getelementptr inbounds %struct.obj, ptr %181, i64 0, i32 2, i32 0, i32 1
  store ptr %204, ptr %216, align 8, !tbaa !9
  %217 = tail call ptr @gen_intern(ptr noundef nonnull @.str.159, i64 noundef 0)
  %218 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %219 = icmp eq i64 %218, 1
  br i1 %219, label %220, label %228

220:                                              ; preds = %215
  %221 = load ptr, ptr @heap, align 8, !tbaa !5
  %222 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %223 = icmp ult ptr %221, %222
  br i1 %223, label %226, label %224

224:                                              ; preds = %220
  %225 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %226

226:                                              ; preds = %224, %220
  %227 = getelementptr inbounds %struct.obj, ptr %221, i64 1
  store ptr %227, ptr @heap, align 8, !tbaa !5
  br label %239

228:                                              ; preds = %215
  %229 = load ptr, ptr @freelist, align 8, !tbaa !5
  %230 = icmp eq ptr %229, null
  br i1 %230, label %231, label %233

231:                                              ; preds = %228
  tail call void @gc_for_newcell()
  %232 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %233

233:                                              ; preds = %231, %228
  %234 = phi ptr [ %232, %231 ], [ %229, %228 ]
  %235 = getelementptr inbounds %struct.obj, ptr %234, i64 0, i32 2, i32 0, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !9
  store ptr %236, ptr @freelist, align 8, !tbaa !5
  %237 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %238 = add nsw i64 %237, 1
  store i64 %238, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %239

239:                                              ; preds = %233, %226
  %240 = phi ptr [ %221, %226 ], [ %234, %233 ]
  store i16 0, ptr %240, align 8, !tbaa !35
  %241 = getelementptr inbounds %struct.obj, ptr %240, i64 0, i32 1
  store i16 21, ptr %241, align 2, !tbaa !14
  %242 = getelementptr inbounds %struct.obj, ptr %240, i64 0, i32 2
  store ptr @.str.159, ptr %242, align 8, !tbaa !9
  %243 = getelementptr inbounds %struct.obj, ptr %240, i64 0, i32 2, i32 0, i32 1
  store ptr @difference, ptr %243, align 8, !tbaa !9
  %244 = icmp eq ptr %217, null
  br i1 %244, label %249, label %245

245:                                              ; preds = %239
  %246 = getelementptr inbounds %struct.obj, ptr %217, i64 0, i32 1
  %247 = load i16, ptr %246, align 2, !tbaa !14
  %248 = icmp eq i16 %247, 3
  br i1 %248, label %251, label %249

249:                                              ; preds = %245, %239
  %250 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %217) #38
  br label %251

251:                                              ; preds = %245, %249
  %252 = getelementptr inbounds %struct.obj, ptr %217, i64 0, i32 2, i32 0, i32 1
  store ptr %240, ptr %252, align 8, !tbaa !9
  %253 = tail call ptr @gen_intern(ptr noundef nonnull @.str.141, i64 noundef 0)
  %254 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %255 = icmp eq i64 %254, 1
  br i1 %255, label %256, label %264

256:                                              ; preds = %251
  %257 = load ptr, ptr @heap, align 8, !tbaa !5
  %258 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %259 = icmp ult ptr %257, %258
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %262

262:                                              ; preds = %260, %256
  %263 = getelementptr inbounds %struct.obj, ptr %257, i64 1
  store ptr %263, ptr @heap, align 8, !tbaa !5
  br label %275

264:                                              ; preds = %251
  %265 = load ptr, ptr @freelist, align 8, !tbaa !5
  %266 = icmp eq ptr %265, null
  br i1 %266, label %267, label %269

267:                                              ; preds = %264
  tail call void @gc_for_newcell()
  %268 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %269

269:                                              ; preds = %267, %264
  %270 = phi ptr [ %268, %267 ], [ %265, %264 ]
  %271 = getelementptr inbounds %struct.obj, ptr %270, i64 0, i32 2, i32 0, i32 1
  %272 = load ptr, ptr %271, align 8, !tbaa !9
  store ptr %272, ptr @freelist, align 8, !tbaa !5
  %273 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %274 = add nsw i64 %273, 1
  store i64 %274, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %275

275:                                              ; preds = %269, %262
  %276 = phi ptr [ %257, %262 ], [ %270, %269 ]
  store i16 0, ptr %276, align 8, !tbaa !35
  %277 = getelementptr inbounds %struct.obj, ptr %276, i64 0, i32 1
  store i16 21, ptr %277, align 2, !tbaa !14
  %278 = getelementptr inbounds %struct.obj, ptr %276, i64 0, i32 2
  store ptr @.str.141, ptr %278, align 8, !tbaa !9
  %279 = getelementptr inbounds %struct.obj, ptr %276, i64 0, i32 2, i32 0, i32 1
  store ptr @ltimes, ptr %279, align 8, !tbaa !9
  %280 = icmp eq ptr %253, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %struct.obj, ptr %253, i64 0, i32 1
  %283 = load i16, ptr %282, align 2, !tbaa !14
  %284 = icmp eq i16 %283, 3
  br i1 %284, label %287, label %285

285:                                              ; preds = %281, %275
  %286 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %253) #38
  br label %287

287:                                              ; preds = %281, %285
  %288 = getelementptr inbounds %struct.obj, ptr %253, i64 0, i32 2, i32 0, i32 1
  store ptr %276, ptr %288, align 8, !tbaa !9
  %289 = tail call ptr @gen_intern(ptr noundef nonnull @.str.137, i64 noundef 0)
  %290 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %291 = icmp eq i64 %290, 1
  br i1 %291, label %292, label %300

292:                                              ; preds = %287
  %293 = load ptr, ptr @heap, align 8, !tbaa !5
  %294 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %295 = icmp ult ptr %293, %294
  br i1 %295, label %298, label %296

296:                                              ; preds = %292
  %297 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %298

298:                                              ; preds = %296, %292
  %299 = getelementptr inbounds %struct.obj, ptr %293, i64 1
  store ptr %299, ptr @heap, align 8, !tbaa !5
  br label %311

300:                                              ; preds = %287
  %301 = load ptr, ptr @freelist, align 8, !tbaa !5
  %302 = icmp eq ptr %301, null
  br i1 %302, label %303, label %305

303:                                              ; preds = %300
  tail call void @gc_for_newcell()
  %304 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %305

305:                                              ; preds = %303, %300
  %306 = phi ptr [ %304, %303 ], [ %301, %300 ]
  %307 = getelementptr inbounds %struct.obj, ptr %306, i64 0, i32 2, i32 0, i32 1
  %308 = load ptr, ptr %307, align 8, !tbaa !9
  store ptr %308, ptr @freelist, align 8, !tbaa !5
  %309 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %310 = add nsw i64 %309, 1
  store i64 %310, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %311

311:                                              ; preds = %305, %298
  %312 = phi ptr [ %293, %298 ], [ %306, %305 ]
  store i16 0, ptr %312, align 8, !tbaa !35
  %313 = getelementptr inbounds %struct.obj, ptr %312, i64 0, i32 1
  store i16 21, ptr %313, align 2, !tbaa !14
  %314 = getelementptr inbounds %struct.obj, ptr %312, i64 0, i32 2
  store ptr @.str.137, ptr %314, align 8, !tbaa !9
  %315 = getelementptr inbounds %struct.obj, ptr %312, i64 0, i32 2, i32 0, i32 1
  store ptr @Quotient, ptr %315, align 8, !tbaa !9
  %316 = icmp eq ptr %289, null
  br i1 %316, label %321, label %317

317:                                              ; preds = %311
  %318 = getelementptr inbounds %struct.obj, ptr %289, i64 0, i32 1
  %319 = load i16, ptr %318, align 2, !tbaa !14
  %320 = icmp eq i16 %319, 3
  br i1 %320, label %323, label %321

321:                                              ; preds = %317, %311
  %322 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %289) #38
  br label %323

323:                                              ; preds = %317, %321
  %324 = getelementptr inbounds %struct.obj, ptr %289, i64 0, i32 2, i32 0, i32 1
  store ptr %312, ptr %324, align 8, !tbaa !9
  %325 = tail call ptr @gen_intern(ptr noundef nonnull @.str.160, i64 noundef 0)
  %326 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %327 = icmp eq i64 %326, 1
  br i1 %327, label %328, label %336

328:                                              ; preds = %323
  %329 = load ptr, ptr @heap, align 8, !tbaa !5
  %330 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %331 = icmp ult ptr %329, %330
  br i1 %331, label %334, label %332

332:                                              ; preds = %328
  %333 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %334

334:                                              ; preds = %332, %328
  %335 = getelementptr inbounds %struct.obj, ptr %329, i64 1
  store ptr %335, ptr @heap, align 8, !tbaa !5
  br label %347

336:                                              ; preds = %323
  %337 = load ptr, ptr @freelist, align 8, !tbaa !5
  %338 = icmp eq ptr %337, null
  br i1 %338, label %339, label %341

339:                                              ; preds = %336
  tail call void @gc_for_newcell()
  %340 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %341

341:                                              ; preds = %339, %336
  %342 = phi ptr [ %340, %339 ], [ %337, %336 ]
  %343 = getelementptr inbounds %struct.obj, ptr %342, i64 0, i32 2, i32 0, i32 1
  %344 = load ptr, ptr %343, align 8, !tbaa !9
  store ptr %344, ptr @freelist, align 8, !tbaa !5
  %345 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %346 = add nsw i64 %345, 1
  store i64 %346, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %347

347:                                              ; preds = %341, %334
  %348 = phi ptr [ %329, %334 ], [ %342, %341 ]
  store i16 0, ptr %348, align 8, !tbaa !35
  %349 = getelementptr inbounds %struct.obj, ptr %348, i64 0, i32 1
  store i16 21, ptr %349, align 2, !tbaa !14
  %350 = getelementptr inbounds %struct.obj, ptr %348, i64 0, i32 2
  store ptr @.str.160, ptr %350, align 8, !tbaa !9
  %351 = getelementptr inbounds %struct.obj, ptr %348, i64 0, i32 2, i32 0, i32 1
  store ptr @lmin, ptr %351, align 8, !tbaa !9
  %352 = icmp eq ptr %325, null
  br i1 %352, label %357, label %353

353:                                              ; preds = %347
  %354 = getelementptr inbounds %struct.obj, ptr %325, i64 0, i32 1
  %355 = load i16, ptr %354, align 2, !tbaa !14
  %356 = icmp eq i16 %355, 3
  br i1 %356, label %359, label %357

357:                                              ; preds = %353, %347
  %358 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %325) #38
  br label %359

359:                                              ; preds = %353, %357
  %360 = getelementptr inbounds %struct.obj, ptr %325, i64 0, i32 2, i32 0, i32 1
  store ptr %348, ptr %360, align 8, !tbaa !9
  %361 = tail call ptr @gen_intern(ptr noundef nonnull @.str.161, i64 noundef 0)
  %362 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %363 = icmp eq i64 %362, 1
  br i1 %363, label %364, label %372

364:                                              ; preds = %359
  %365 = load ptr, ptr @heap, align 8, !tbaa !5
  %366 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %367 = icmp ult ptr %365, %366
  br i1 %367, label %370, label %368

368:                                              ; preds = %364
  %369 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %370

370:                                              ; preds = %368, %364
  %371 = getelementptr inbounds %struct.obj, ptr %365, i64 1
  store ptr %371, ptr @heap, align 8, !tbaa !5
  br label %383

372:                                              ; preds = %359
  %373 = load ptr, ptr @freelist, align 8, !tbaa !5
  %374 = icmp eq ptr %373, null
  br i1 %374, label %375, label %377

375:                                              ; preds = %372
  tail call void @gc_for_newcell()
  %376 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %377

377:                                              ; preds = %375, %372
  %378 = phi ptr [ %376, %375 ], [ %373, %372 ]
  %379 = getelementptr inbounds %struct.obj, ptr %378, i64 0, i32 2, i32 0, i32 1
  %380 = load ptr, ptr %379, align 8, !tbaa !9
  store ptr %380, ptr @freelist, align 8, !tbaa !5
  %381 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %382 = add nsw i64 %381, 1
  store i64 %382, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %383

383:                                              ; preds = %377, %370
  %384 = phi ptr [ %365, %370 ], [ %378, %377 ]
  store i16 0, ptr %384, align 8, !tbaa !35
  %385 = getelementptr inbounds %struct.obj, ptr %384, i64 0, i32 1
  store i16 21, ptr %385, align 2, !tbaa !14
  %386 = getelementptr inbounds %struct.obj, ptr %384, i64 0, i32 2
  store ptr @.str.161, ptr %386, align 8, !tbaa !9
  %387 = getelementptr inbounds %struct.obj, ptr %384, i64 0, i32 2, i32 0, i32 1
  store ptr @lmax, ptr %387, align 8, !tbaa !9
  %388 = icmp eq ptr %361, null
  br i1 %388, label %393, label %389

389:                                              ; preds = %383
  %390 = getelementptr inbounds %struct.obj, ptr %361, i64 0, i32 1
  %391 = load i16, ptr %390, align 2, !tbaa !14
  %392 = icmp eq i16 %391, 3
  br i1 %392, label %395, label %393

393:                                              ; preds = %389, %383
  %394 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %361) #38
  br label %395

395:                                              ; preds = %389, %393
  %396 = getelementptr inbounds %struct.obj, ptr %361, i64 0, i32 2, i32 0, i32 1
  store ptr %384, ptr %396, align 8, !tbaa !9
  %397 = tail call ptr @gen_intern(ptr noundef nonnull @.str.162, i64 noundef 0)
  %398 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %399 = icmp eq i64 %398, 1
  br i1 %399, label %400, label %408

400:                                              ; preds = %395
  %401 = load ptr, ptr @heap, align 8, !tbaa !5
  %402 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %403 = icmp ult ptr %401, %402
  br i1 %403, label %406, label %404

404:                                              ; preds = %400
  %405 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %406

406:                                              ; preds = %404, %400
  %407 = getelementptr inbounds %struct.obj, ptr %401, i64 1
  store ptr %407, ptr @heap, align 8, !tbaa !5
  br label %419

408:                                              ; preds = %395
  %409 = load ptr, ptr @freelist, align 8, !tbaa !5
  %410 = icmp eq ptr %409, null
  br i1 %410, label %411, label %413

411:                                              ; preds = %408
  tail call void @gc_for_newcell()
  %412 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %413

413:                                              ; preds = %411, %408
  %414 = phi ptr [ %412, %411 ], [ %409, %408 ]
  %415 = getelementptr inbounds %struct.obj, ptr %414, i64 0, i32 2, i32 0, i32 1
  %416 = load ptr, ptr %415, align 8, !tbaa !9
  store ptr %416, ptr @freelist, align 8, !tbaa !5
  %417 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %418 = add nsw i64 %417, 1
  store i64 %418, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %419

419:                                              ; preds = %413, %406
  %420 = phi ptr [ %401, %406 ], [ %414, %413 ]
  store i16 0, ptr %420, align 8, !tbaa !35
  %421 = getelementptr inbounds %struct.obj, ptr %420, i64 0, i32 1
  store i16 5, ptr %421, align 2, !tbaa !14
  %422 = getelementptr inbounds %struct.obj, ptr %420, i64 0, i32 2
  store ptr @.str.162, ptr %422, align 8, !tbaa !9
  %423 = getelementptr inbounds %struct.obj, ptr %420, i64 0, i32 2, i32 0, i32 1
  store ptr @lllabs, ptr %423, align 8, !tbaa !9
  %424 = icmp eq ptr %397, null
  br i1 %424, label %429, label %425

425:                                              ; preds = %419
  %426 = getelementptr inbounds %struct.obj, ptr %397, i64 0, i32 1
  %427 = load i16, ptr %426, align 2, !tbaa !14
  %428 = icmp eq i16 %427, 3
  br i1 %428, label %431, label %429

429:                                              ; preds = %425, %419
  %430 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %397) #38
  br label %431

431:                                              ; preds = %425, %429
  %432 = getelementptr inbounds %struct.obj, ptr %397, i64 0, i32 2, i32 0, i32 1
  store ptr %420, ptr %432, align 8, !tbaa !9
  %433 = tail call ptr @gen_intern(ptr noundef nonnull @.str.163, i64 noundef 0)
  %434 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %435 = icmp eq i64 %434, 1
  br i1 %435, label %436, label %444

436:                                              ; preds = %431
  %437 = load ptr, ptr @heap, align 8, !tbaa !5
  %438 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %439 = icmp ult ptr %437, %438
  br i1 %439, label %442, label %440

440:                                              ; preds = %436
  %441 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %442

442:                                              ; preds = %440, %436
  %443 = getelementptr inbounds %struct.obj, ptr %437, i64 1
  store ptr %443, ptr @heap, align 8, !tbaa !5
  br label %455

444:                                              ; preds = %431
  %445 = load ptr, ptr @freelist, align 8, !tbaa !5
  %446 = icmp eq ptr %445, null
  br i1 %446, label %447, label %449

447:                                              ; preds = %444
  tail call void @gc_for_newcell()
  %448 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %449

449:                                              ; preds = %447, %444
  %450 = phi ptr [ %448, %447 ], [ %445, %444 ]
  %451 = getelementptr inbounds %struct.obj, ptr %450, i64 0, i32 2, i32 0, i32 1
  %452 = load ptr, ptr %451, align 8, !tbaa !9
  store ptr %452, ptr @freelist, align 8, !tbaa !5
  %453 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %454 = add nsw i64 %453, 1
  store i64 %454, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %455

455:                                              ; preds = %449, %442
  %456 = phi ptr [ %437, %442 ], [ %450, %449 ]
  store i16 0, ptr %456, align 8, !tbaa !35
  %457 = getelementptr inbounds %struct.obj, ptr %456, i64 0, i32 1
  store i16 5, ptr %457, align 2, !tbaa !14
  %458 = getelementptr inbounds %struct.obj, ptr %456, i64 0, i32 2
  store ptr @.str.163, ptr %458, align 8, !tbaa !9
  %459 = getelementptr inbounds %struct.obj, ptr %456, i64 0, i32 2, i32 0, i32 1
  store ptr @lsqrt, ptr %459, align 8, !tbaa !9
  %460 = icmp eq ptr %433, null
  br i1 %460, label %465, label %461

461:                                              ; preds = %455
  %462 = getelementptr inbounds %struct.obj, ptr %433, i64 0, i32 1
  %463 = load i16, ptr %462, align 2, !tbaa !14
  %464 = icmp eq i16 %463, 3
  br i1 %464, label %467, label %465

465:                                              ; preds = %461, %455
  %466 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %433) #38
  br label %467

467:                                              ; preds = %461, %465
  %468 = getelementptr inbounds %struct.obj, ptr %433, i64 0, i32 2, i32 0, i32 1
  store ptr %456, ptr %468, align 8, !tbaa !9
  %469 = tail call ptr @gen_intern(ptr noundef nonnull @.str.118, i64 noundef 0)
  %470 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %471 = icmp eq i64 %470, 1
  br i1 %471, label %472, label %480

472:                                              ; preds = %467
  %473 = load ptr, ptr @heap, align 8, !tbaa !5
  %474 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %475 = icmp ult ptr %473, %474
  br i1 %475, label %478, label %476

476:                                              ; preds = %472
  %477 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %struct.obj, ptr %473, i64 1
  store ptr %479, ptr @heap, align 8, !tbaa !5
  br label %491

480:                                              ; preds = %467
  %481 = load ptr, ptr @freelist, align 8, !tbaa !5
  %482 = icmp eq ptr %481, null
  br i1 %482, label %483, label %485

483:                                              ; preds = %480
  tail call void @gc_for_newcell()
  %484 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %485

485:                                              ; preds = %483, %480
  %486 = phi ptr [ %484, %483 ], [ %481, %480 ]
  %487 = getelementptr inbounds %struct.obj, ptr %486, i64 0, i32 2, i32 0, i32 1
  %488 = load ptr, ptr %487, align 8, !tbaa !9
  store ptr %488, ptr @freelist, align 8, !tbaa !5
  %489 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %490 = add nsw i64 %489, 1
  store i64 %490, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %491

491:                                              ; preds = %485, %478
  %492 = phi ptr [ %473, %478 ], [ %486, %485 ]
  store i16 0, ptr %492, align 8, !tbaa !35
  %493 = getelementptr inbounds %struct.obj, ptr %492, i64 0, i32 1
  store i16 6, ptr %493, align 2, !tbaa !14
  %494 = getelementptr inbounds %struct.obj, ptr %492, i64 0, i32 2
  store ptr @.str.118, ptr %494, align 8, !tbaa !9
  %495 = getelementptr inbounds %struct.obj, ptr %492, i64 0, i32 2, i32 0, i32 1
  store ptr @greaterp, ptr %495, align 8, !tbaa !9
  %496 = icmp eq ptr %469, null
  br i1 %496, label %501, label %497

497:                                              ; preds = %491
  %498 = getelementptr inbounds %struct.obj, ptr %469, i64 0, i32 1
  %499 = load i16, ptr %498, align 2, !tbaa !14
  %500 = icmp eq i16 %499, 3
  br i1 %500, label %503, label %501

501:                                              ; preds = %497, %491
  %502 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %469) #38
  br label %503

503:                                              ; preds = %497, %501
  %504 = getelementptr inbounds %struct.obj, ptr %469, i64 0, i32 2, i32 0, i32 1
  store ptr %492, ptr %504, align 8, !tbaa !9
  %505 = tail call ptr @gen_intern(ptr noundef nonnull @.str.164, i64 noundef 0)
  %506 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %507 = icmp eq i64 %506, 1
  br i1 %507, label %508, label %516

508:                                              ; preds = %503
  %509 = load ptr, ptr @heap, align 8, !tbaa !5
  %510 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %511 = icmp ult ptr %509, %510
  br i1 %511, label %514, label %512

512:                                              ; preds = %508
  %513 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %514

514:                                              ; preds = %512, %508
  %515 = getelementptr inbounds %struct.obj, ptr %509, i64 1
  store ptr %515, ptr @heap, align 8, !tbaa !5
  br label %527

516:                                              ; preds = %503
  %517 = load ptr, ptr @freelist, align 8, !tbaa !5
  %518 = icmp eq ptr %517, null
  br i1 %518, label %519, label %521

519:                                              ; preds = %516
  tail call void @gc_for_newcell()
  %520 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %521

521:                                              ; preds = %519, %516
  %522 = phi ptr [ %520, %519 ], [ %517, %516 ]
  %523 = getelementptr inbounds %struct.obj, ptr %522, i64 0, i32 2, i32 0, i32 1
  %524 = load ptr, ptr %523, align 8, !tbaa !9
  store ptr %524, ptr @freelist, align 8, !tbaa !5
  %525 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %526 = add nsw i64 %525, 1
  store i64 %526, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %527

527:                                              ; preds = %521, %514
  %528 = phi ptr [ %509, %514 ], [ %522, %521 ]
  store i16 0, ptr %528, align 8, !tbaa !35
  %529 = getelementptr inbounds %struct.obj, ptr %528, i64 0, i32 1
  store i16 6, ptr %529, align 2, !tbaa !14
  %530 = getelementptr inbounds %struct.obj, ptr %528, i64 0, i32 2
  store ptr @.str.164, ptr %530, align 8, !tbaa !9
  %531 = getelementptr inbounds %struct.obj, ptr %528, i64 0, i32 2, i32 0, i32 1
  store ptr @lessp, ptr %531, align 8, !tbaa !9
  %532 = icmp eq ptr %505, null
  br i1 %532, label %537, label %533

533:                                              ; preds = %527
  %534 = getelementptr inbounds %struct.obj, ptr %505, i64 0, i32 1
  %535 = load i16, ptr %534, align 2, !tbaa !14
  %536 = icmp eq i16 %535, 3
  br i1 %536, label %539, label %537

537:                                              ; preds = %533, %527
  %538 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %505) #38
  br label %539

539:                                              ; preds = %533, %537
  %540 = getelementptr inbounds %struct.obj, ptr %505, i64 0, i32 2, i32 0, i32 1
  store ptr %528, ptr %540, align 8, !tbaa !9
  %541 = tail call ptr @gen_intern(ptr noundef nonnull @.str.165, i64 noundef 0)
  %542 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %543 = icmp eq i64 %542, 1
  br i1 %543, label %544, label %552

544:                                              ; preds = %539
  %545 = load ptr, ptr @heap, align 8, !tbaa !5
  %546 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %547 = icmp ult ptr %545, %546
  br i1 %547, label %550, label %548

548:                                              ; preds = %544
  %549 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %550

550:                                              ; preds = %548, %544
  %551 = getelementptr inbounds %struct.obj, ptr %545, i64 1
  store ptr %551, ptr @heap, align 8, !tbaa !5
  br label %563

552:                                              ; preds = %539
  %553 = load ptr, ptr @freelist, align 8, !tbaa !5
  %554 = icmp eq ptr %553, null
  br i1 %554, label %555, label %557

555:                                              ; preds = %552
  tail call void @gc_for_newcell()
  %556 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %557

557:                                              ; preds = %555, %552
  %558 = phi ptr [ %556, %555 ], [ %553, %552 ]
  %559 = getelementptr inbounds %struct.obj, ptr %558, i64 0, i32 2, i32 0, i32 1
  %560 = load ptr, ptr %559, align 8, !tbaa !9
  store ptr %560, ptr @freelist, align 8, !tbaa !5
  %561 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %562 = add nsw i64 %561, 1
  store i64 %562, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %563

563:                                              ; preds = %557, %550
  %564 = phi ptr [ %545, %550 ], [ %558, %557 ]
  store i16 0, ptr %564, align 8, !tbaa !35
  %565 = getelementptr inbounds %struct.obj, ptr %564, i64 0, i32 1
  store i16 6, ptr %565, align 2, !tbaa !14
  %566 = getelementptr inbounds %struct.obj, ptr %564, i64 0, i32 2
  store ptr @.str.165, ptr %566, align 8, !tbaa !9
  %567 = getelementptr inbounds %struct.obj, ptr %564, i64 0, i32 2, i32 0, i32 1
  store ptr @greaterEp, ptr %567, align 8, !tbaa !9
  %568 = icmp eq ptr %541, null
  br i1 %568, label %573, label %569

569:                                              ; preds = %563
  %570 = getelementptr inbounds %struct.obj, ptr %541, i64 0, i32 1
  %571 = load i16, ptr %570, align 2, !tbaa !14
  %572 = icmp eq i16 %571, 3
  br i1 %572, label %575, label %573

573:                                              ; preds = %569, %563
  %574 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %541) #38
  br label %575

575:                                              ; preds = %569, %573
  %576 = getelementptr inbounds %struct.obj, ptr %541, i64 0, i32 2, i32 0, i32 1
  store ptr %564, ptr %576, align 8, !tbaa !9
  %577 = tail call ptr @gen_intern(ptr noundef nonnull @.str.166, i64 noundef 0)
  %578 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %579 = icmp eq i64 %578, 1
  br i1 %579, label %580, label %588

580:                                              ; preds = %575
  %581 = load ptr, ptr @heap, align 8, !tbaa !5
  %582 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %583 = icmp ult ptr %581, %582
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %586

586:                                              ; preds = %584, %580
  %587 = getelementptr inbounds %struct.obj, ptr %581, i64 1
  store ptr %587, ptr @heap, align 8, !tbaa !5
  br label %599

588:                                              ; preds = %575
  %589 = load ptr, ptr @freelist, align 8, !tbaa !5
  %590 = icmp eq ptr %589, null
  br i1 %590, label %591, label %593

591:                                              ; preds = %588
  tail call void @gc_for_newcell()
  %592 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %593

593:                                              ; preds = %591, %588
  %594 = phi ptr [ %592, %591 ], [ %589, %588 ]
  %595 = getelementptr inbounds %struct.obj, ptr %594, i64 0, i32 2, i32 0, i32 1
  %596 = load ptr, ptr %595, align 8, !tbaa !9
  store ptr %596, ptr @freelist, align 8, !tbaa !5
  %597 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %598 = add nsw i64 %597, 1
  store i64 %598, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %599

599:                                              ; preds = %593, %586
  %600 = phi ptr [ %581, %586 ], [ %594, %593 ]
  store i16 0, ptr %600, align 8, !tbaa !35
  %601 = getelementptr inbounds %struct.obj, ptr %600, i64 0, i32 1
  store i16 6, ptr %601, align 2, !tbaa !14
  %602 = getelementptr inbounds %struct.obj, ptr %600, i64 0, i32 2
  store ptr @.str.166, ptr %602, align 8, !tbaa !9
  %603 = getelementptr inbounds %struct.obj, ptr %600, i64 0, i32 2, i32 0, i32 1
  store ptr @lessEp, ptr %603, align 8, !tbaa !9
  %604 = icmp eq ptr %577, null
  br i1 %604, label %609, label %605

605:                                              ; preds = %599
  %606 = getelementptr inbounds %struct.obj, ptr %577, i64 0, i32 1
  %607 = load i16, ptr %606, align 2, !tbaa !14
  %608 = icmp eq i16 %607, 3
  br i1 %608, label %611, label %609

609:                                              ; preds = %605, %599
  %610 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %577) #38
  br label %611

611:                                              ; preds = %605, %609
  %612 = getelementptr inbounds %struct.obj, ptr %577, i64 0, i32 2, i32 0, i32 1
  store ptr %600, ptr %612, align 8, !tbaa !9
  %613 = tail call ptr @gen_intern(ptr noundef nonnull @.str.167, i64 noundef 0)
  %614 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %615 = icmp eq i64 %614, 1
  br i1 %615, label %616, label %624

616:                                              ; preds = %611
  %617 = load ptr, ptr @heap, align 8, !tbaa !5
  %618 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %619 = icmp ult ptr %617, %618
  br i1 %619, label %622, label %620

620:                                              ; preds = %616
  %621 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %622

622:                                              ; preds = %620, %616
  %623 = getelementptr inbounds %struct.obj, ptr %617, i64 1
  store ptr %623, ptr @heap, align 8, !tbaa !5
  br label %635

624:                                              ; preds = %611
  %625 = load ptr, ptr @freelist, align 8, !tbaa !5
  %626 = icmp eq ptr %625, null
  br i1 %626, label %627, label %629

627:                                              ; preds = %624
  tail call void @gc_for_newcell()
  %628 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %629

629:                                              ; preds = %627, %624
  %630 = phi ptr [ %628, %627 ], [ %625, %624 ]
  %631 = getelementptr inbounds %struct.obj, ptr %630, i64 0, i32 2, i32 0, i32 1
  %632 = load ptr, ptr %631, align 8, !tbaa !9
  store ptr %632, ptr @freelist, align 8, !tbaa !5
  %633 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %634 = add nsw i64 %633, 1
  store i64 %634, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %635

635:                                              ; preds = %629, %622
  %636 = phi ptr [ %617, %622 ], [ %630, %629 ]
  store i16 0, ptr %636, align 8, !tbaa !35
  %637 = getelementptr inbounds %struct.obj, ptr %636, i64 0, i32 1
  store i16 6, ptr %637, align 2, !tbaa !14
  %638 = getelementptr inbounds %struct.obj, ptr %636, i64 0, i32 2
  store ptr @.str.167, ptr %638, align 8, !tbaa !9
  %639 = getelementptr inbounds %struct.obj, ptr %636, i64 0, i32 2, i32 0, i32 1
  store ptr @eq, ptr %639, align 8, !tbaa !9
  %640 = icmp eq ptr %613, null
  br i1 %640, label %645, label %641

641:                                              ; preds = %635
  %642 = getelementptr inbounds %struct.obj, ptr %613, i64 0, i32 1
  %643 = load i16, ptr %642, align 2, !tbaa !14
  %644 = icmp eq i16 %643, 3
  br i1 %644, label %647, label %645

645:                                              ; preds = %641, %635
  %646 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %613) #38
  br label %647

647:                                              ; preds = %641, %645
  %648 = getelementptr inbounds %struct.obj, ptr %613, i64 0, i32 2, i32 0, i32 1
  store ptr %636, ptr %648, align 8, !tbaa !9
  %649 = tail call ptr @gen_intern(ptr noundef nonnull @.str.168, i64 noundef 0)
  %650 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %651 = icmp eq i64 %650, 1
  br i1 %651, label %652, label %660

652:                                              ; preds = %647
  %653 = load ptr, ptr @heap, align 8, !tbaa !5
  %654 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %655 = icmp ult ptr %653, %654
  br i1 %655, label %658, label %656

656:                                              ; preds = %652
  %657 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %658

658:                                              ; preds = %656, %652
  %659 = getelementptr inbounds %struct.obj, ptr %653, i64 1
  store ptr %659, ptr @heap, align 8, !tbaa !5
  br label %671

660:                                              ; preds = %647
  %661 = load ptr, ptr @freelist, align 8, !tbaa !5
  %662 = icmp eq ptr %661, null
  br i1 %662, label %663, label %665

663:                                              ; preds = %660
  tail call void @gc_for_newcell()
  %664 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %665

665:                                              ; preds = %663, %660
  %666 = phi ptr [ %664, %663 ], [ %661, %660 ]
  %667 = getelementptr inbounds %struct.obj, ptr %666, i64 0, i32 2, i32 0, i32 1
  %668 = load ptr, ptr %667, align 8, !tbaa !9
  store ptr %668, ptr @freelist, align 8, !tbaa !5
  %669 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %670 = add nsw i64 %669, 1
  store i64 %670, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %671

671:                                              ; preds = %665, %658
  %672 = phi ptr [ %653, %658 ], [ %666, %665 ]
  store i16 0, ptr %672, align 8, !tbaa !35
  %673 = getelementptr inbounds %struct.obj, ptr %672, i64 0, i32 1
  store i16 6, ptr %673, align 2, !tbaa !14
  %674 = getelementptr inbounds %struct.obj, ptr %672, i64 0, i32 2
  store ptr @.str.168, ptr %674, align 8, !tbaa !9
  %675 = getelementptr inbounds %struct.obj, ptr %672, i64 0, i32 2, i32 0, i32 1
  store ptr @eql, ptr %675, align 8, !tbaa !9
  %676 = icmp eq ptr %649, null
  br i1 %676, label %681, label %677

677:                                              ; preds = %671
  %678 = getelementptr inbounds %struct.obj, ptr %649, i64 0, i32 1
  %679 = load i16, ptr %678, align 2, !tbaa !14
  %680 = icmp eq i16 %679, 3
  br i1 %680, label %683, label %681

681:                                              ; preds = %677, %671
  %682 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %649) #38
  br label %683

683:                                              ; preds = %677, %681
  %684 = getelementptr inbounds %struct.obj, ptr %649, i64 0, i32 2, i32 0, i32 1
  store ptr %672, ptr %684, align 8, !tbaa !9
  %685 = tail call ptr @gen_intern(ptr noundef nonnull @.str.169, i64 noundef 0)
  %686 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %687 = icmp eq i64 %686, 1
  br i1 %687, label %688, label %696

688:                                              ; preds = %683
  %689 = load ptr, ptr @heap, align 8, !tbaa !5
  %690 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %691 = icmp ult ptr %689, %690
  br i1 %691, label %694, label %692

692:                                              ; preds = %688
  %693 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %694

694:                                              ; preds = %692, %688
  %695 = getelementptr inbounds %struct.obj, ptr %689, i64 1
  store ptr %695, ptr @heap, align 8, !tbaa !5
  br label %707

696:                                              ; preds = %683
  %697 = load ptr, ptr @freelist, align 8, !tbaa !5
  %698 = icmp eq ptr %697, null
  br i1 %698, label %699, label %701

699:                                              ; preds = %696
  tail call void @gc_for_newcell()
  %700 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %701

701:                                              ; preds = %699, %696
  %702 = phi ptr [ %700, %699 ], [ %697, %696 ]
  %703 = getelementptr inbounds %struct.obj, ptr %702, i64 0, i32 2, i32 0, i32 1
  %704 = load ptr, ptr %703, align 8, !tbaa !9
  store ptr %704, ptr @freelist, align 8, !tbaa !5
  %705 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %706 = add nsw i64 %705, 1
  store i64 %706, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %707

707:                                              ; preds = %701, %694
  %708 = phi ptr [ %689, %694 ], [ %702, %701 ]
  store i16 0, ptr %708, align 8, !tbaa !35
  %709 = getelementptr inbounds %struct.obj, ptr %708, i64 0, i32 1
  store i16 6, ptr %709, align 2, !tbaa !14
  %710 = getelementptr inbounds %struct.obj, ptr %708, i64 0, i32 2
  store ptr @.str.169, ptr %710, align 8, !tbaa !9
  %711 = getelementptr inbounds %struct.obj, ptr %708, i64 0, i32 2, i32 0, i32 1
  store ptr @eql, ptr %711, align 8, !tbaa !9
  %712 = icmp eq ptr %685, null
  br i1 %712, label %717, label %713

713:                                              ; preds = %707
  %714 = getelementptr inbounds %struct.obj, ptr %685, i64 0, i32 1
  %715 = load i16, ptr %714, align 2, !tbaa !14
  %716 = icmp eq i16 %715, 3
  br i1 %716, label %719, label %717

717:                                              ; preds = %713, %707
  %718 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %685) #38
  br label %719

719:                                              ; preds = %713, %717
  %720 = getelementptr inbounds %struct.obj, ptr %685, i64 0, i32 2, i32 0, i32 1
  store ptr %708, ptr %720, align 8, !tbaa !9
  %721 = tail call ptr @gen_intern(ptr noundef nonnull @.str.170, i64 noundef 0)
  %722 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %723 = icmp eq i64 %722, 1
  br i1 %723, label %724, label %732

724:                                              ; preds = %719
  %725 = load ptr, ptr @heap, align 8, !tbaa !5
  %726 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %727 = icmp ult ptr %725, %726
  br i1 %727, label %730, label %728

728:                                              ; preds = %724
  %729 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %730

730:                                              ; preds = %728, %724
  %731 = getelementptr inbounds %struct.obj, ptr %725, i64 1
  store ptr %731, ptr @heap, align 8, !tbaa !5
  br label %743

732:                                              ; preds = %719
  %733 = load ptr, ptr @freelist, align 8, !tbaa !5
  %734 = icmp eq ptr %733, null
  br i1 %734, label %735, label %737

735:                                              ; preds = %732
  tail call void @gc_for_newcell()
  %736 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %737

737:                                              ; preds = %735, %732
  %738 = phi ptr [ %736, %735 ], [ %733, %732 ]
  %739 = getelementptr inbounds %struct.obj, ptr %738, i64 0, i32 2, i32 0, i32 1
  %740 = load ptr, ptr %739, align 8, !tbaa !9
  store ptr %740, ptr @freelist, align 8, !tbaa !5
  %741 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %742 = add nsw i64 %741, 1
  store i64 %742, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %743

743:                                              ; preds = %737, %730
  %744 = phi ptr [ %725, %730 ], [ %738, %737 ]
  store i16 0, ptr %744, align 8, !tbaa !35
  %745 = getelementptr inbounds %struct.obj, ptr %744, i64 0, i32 1
  store i16 6, ptr %745, align 2, !tbaa !14
  %746 = getelementptr inbounds %struct.obj, ptr %744, i64 0, i32 2
  store ptr @.str.170, ptr %746, align 8, !tbaa !9
  %747 = getelementptr inbounds %struct.obj, ptr %744, i64 0, i32 2, i32 0, i32 1
  store ptr @assq, ptr %747, align 8, !tbaa !9
  %748 = icmp eq ptr %721, null
  br i1 %748, label %753, label %749

749:                                              ; preds = %743
  %750 = getelementptr inbounds %struct.obj, ptr %721, i64 0, i32 1
  %751 = load i16, ptr %750, align 2, !tbaa !14
  %752 = icmp eq i16 %751, 3
  br i1 %752, label %755, label %753

753:                                              ; preds = %749, %743
  %754 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %721) #38
  br label %755

755:                                              ; preds = %749, %753
  %756 = getelementptr inbounds %struct.obj, ptr %721, i64 0, i32 2, i32 0, i32 1
  store ptr %744, ptr %756, align 8, !tbaa !9
  %757 = tail call ptr @gen_intern(ptr noundef nonnull @.str.171, i64 noundef 0)
  %758 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %759 = icmp eq i64 %758, 1
  br i1 %759, label %760, label %768

760:                                              ; preds = %755
  %761 = load ptr, ptr @heap, align 8, !tbaa !5
  %762 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %763 = icmp ult ptr %761, %762
  br i1 %763, label %766, label %764

764:                                              ; preds = %760
  %765 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %766

766:                                              ; preds = %764, %760
  %767 = getelementptr inbounds %struct.obj, ptr %761, i64 1
  store ptr %767, ptr @heap, align 8, !tbaa !5
  br label %779

768:                                              ; preds = %755
  %769 = load ptr, ptr @freelist, align 8, !tbaa !5
  %770 = icmp eq ptr %769, null
  br i1 %770, label %771, label %773

771:                                              ; preds = %768
  tail call void @gc_for_newcell()
  %772 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %773

773:                                              ; preds = %771, %768
  %774 = phi ptr [ %772, %771 ], [ %769, %768 ]
  %775 = getelementptr inbounds %struct.obj, ptr %774, i64 0, i32 2, i32 0, i32 1
  %776 = load ptr, ptr %775, align 8, !tbaa !9
  store ptr %776, ptr @freelist, align 8, !tbaa !5
  %777 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %778 = add nsw i64 %777, 1
  store i64 %778, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %779

779:                                              ; preds = %773, %766
  %780 = phi ptr [ %761, %766 ], [ %774, %773 ]
  store i16 0, ptr %780, align 8, !tbaa !35
  %781 = getelementptr inbounds %struct.obj, ptr %780, i64 0, i32 1
  store i16 6, ptr %781, align 2, !tbaa !14
  %782 = getelementptr inbounds %struct.obj, ptr %780, i64 0, i32 2
  store ptr @.str.171, ptr %782, align 8, !tbaa !9
  %783 = getelementptr inbounds %struct.obj, ptr %780, i64 0, i32 2, i32 0, i32 1
  store ptr @delq, ptr %783, align 8, !tbaa !9
  %784 = icmp eq ptr %757, null
  br i1 %784, label %789, label %785

785:                                              ; preds = %779
  %786 = getelementptr inbounds %struct.obj, ptr %757, i64 0, i32 1
  %787 = load i16, ptr %786, align 2, !tbaa !14
  %788 = icmp eq i16 %787, 3
  br i1 %788, label %791, label %789

789:                                              ; preds = %785, %779
  %790 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %757) #38
  br label %791

791:                                              ; preds = %785, %789
  %792 = getelementptr inbounds %struct.obj, ptr %757, i64 0, i32 2, i32 0, i32 1
  store ptr %780, ptr %792, align 8, !tbaa !9
  %793 = tail call ptr @gen_intern(ptr noundef nonnull @.str.172, i64 noundef 0)
  %794 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %795 = icmp eq i64 %794, 1
  br i1 %795, label %796, label %804

796:                                              ; preds = %791
  %797 = load ptr, ptr @heap, align 8, !tbaa !5
  %798 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %799 = icmp ult ptr %797, %798
  br i1 %799, label %802, label %800

800:                                              ; preds = %796
  %801 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %802

802:                                              ; preds = %800, %796
  %803 = getelementptr inbounds %struct.obj, ptr %797, i64 1
  store ptr %803, ptr @heap, align 8, !tbaa !5
  br label %815

804:                                              ; preds = %791
  %805 = load ptr, ptr @freelist, align 8, !tbaa !5
  %806 = icmp eq ptr %805, null
  br i1 %806, label %807, label %809

807:                                              ; preds = %804
  tail call void @gc_for_newcell()
  %808 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %809

809:                                              ; preds = %807, %804
  %810 = phi ptr [ %808, %807 ], [ %805, %804 ]
  %811 = getelementptr inbounds %struct.obj, ptr %810, i64 0, i32 2, i32 0, i32 1
  %812 = load ptr, ptr %811, align 8, !tbaa !9
  store ptr %812, ptr @freelist, align 8, !tbaa !5
  %813 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %814 = add nsw i64 %813, 1
  store i64 %814, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %815

815:                                              ; preds = %809, %802
  %816 = phi ptr [ %797, %802 ], [ %810, %809 ]
  store i16 0, ptr %816, align 8, !tbaa !35
  %817 = getelementptr inbounds %struct.obj, ptr %816, i64 0, i32 1
  store i16 5, ptr %817, align 2, !tbaa !14
  %818 = getelementptr inbounds %struct.obj, ptr %816, i64 0, i32 2
  store ptr @.str.172, ptr %818, align 8, !tbaa !9
  %819 = getelementptr inbounds %struct.obj, ptr %816, i64 0, i32 2, i32 0, i32 1
  store ptr @lread, ptr %819, align 8, !tbaa !9
  %820 = icmp eq ptr %793, null
  br i1 %820, label %825, label %821

821:                                              ; preds = %815
  %822 = getelementptr inbounds %struct.obj, ptr %793, i64 0, i32 1
  %823 = load i16, ptr %822, align 2, !tbaa !14
  %824 = icmp eq i16 %823, 3
  br i1 %824, label %827, label %825

825:                                              ; preds = %821, %815
  %826 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %793) #38
  br label %827

827:                                              ; preds = %821, %825
  %828 = getelementptr inbounds %struct.obj, ptr %793, i64 0, i32 2, i32 0, i32 1
  store ptr %816, ptr %828, align 8, !tbaa !9
  %829 = tail call ptr @gen_intern(ptr noundef nonnull @.str.173, i64 noundef 0)
  %830 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %831 = icmp eq i64 %830, 1
  br i1 %831, label %832, label %840

832:                                              ; preds = %827
  %833 = load ptr, ptr @heap, align 8, !tbaa !5
  %834 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %835 = icmp ult ptr %833, %834
  br i1 %835, label %838, label %836

836:                                              ; preds = %832
  %837 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %838

838:                                              ; preds = %836, %832
  %839 = getelementptr inbounds %struct.obj, ptr %833, i64 1
  store ptr %839, ptr @heap, align 8, !tbaa !5
  br label %851

840:                                              ; preds = %827
  %841 = load ptr, ptr @freelist, align 8, !tbaa !5
  %842 = icmp eq ptr %841, null
  br i1 %842, label %843, label %845

843:                                              ; preds = %840
  tail call void @gc_for_newcell()
  %844 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %845

845:                                              ; preds = %843, %840
  %846 = phi ptr [ %844, %843 ], [ %841, %840 ]
  %847 = getelementptr inbounds %struct.obj, ptr %846, i64 0, i32 2, i32 0, i32 1
  %848 = load ptr, ptr %847, align 8, !tbaa !9
  store ptr %848, ptr @freelist, align 8, !tbaa !5
  %849 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %850 = add nsw i64 %849, 1
  store i64 %850, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %851

851:                                              ; preds = %845, %838
  %852 = phi ptr [ %833, %838 ], [ %846, %845 ]
  store i16 0, ptr %852, align 8, !tbaa !35
  %853 = getelementptr inbounds %struct.obj, ptr %852, i64 0, i32 1
  store i16 5, ptr %853, align 2, !tbaa !14
  %854 = getelementptr inbounds %struct.obj, ptr %852, i64 0, i32 2
  store ptr @.str.173, ptr %854, align 8, !tbaa !9
  %855 = getelementptr inbounds %struct.obj, ptr %852, i64 0, i32 2, i32 0, i32 1
  store ptr @parser_read, ptr %855, align 8, !tbaa !9
  %856 = icmp eq ptr %829, null
  br i1 %856, label %861, label %857

857:                                              ; preds = %851
  %858 = getelementptr inbounds %struct.obj, ptr %829, i64 0, i32 1
  %859 = load i16, ptr %858, align 2, !tbaa !14
  %860 = icmp eq i16 %859, 3
  br i1 %860, label %863, label %861

861:                                              ; preds = %857, %851
  %862 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %829) #38
  br label %863

863:                                              ; preds = %857, %861
  %864 = getelementptr inbounds %struct.obj, ptr %829, i64 0, i32 2, i32 0, i32 1
  store ptr %852, ptr %864, align 8, !tbaa !9
  %865 = tail call ptr @gen_intern(ptr noundef nonnull @.str.174, i64 noundef 0)
  %866 = load ptr, ptr @sym_t, align 8, !tbaa !5
  %867 = icmp eq ptr %865, null
  br i1 %867, label %872, label %868

868:                                              ; preds = %863
  %869 = getelementptr inbounds %struct.obj, ptr %865, i64 0, i32 1
  %870 = load i16, ptr %869, align 2, !tbaa !14
  %871 = icmp eq i16 %870, 3
  br i1 %871, label %874, label %872

872:                                              ; preds = %868, %863
  %873 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %865) #38
  br label %874

874:                                              ; preds = %868, %872
  %875 = getelementptr inbounds %struct.obj, ptr %865, i64 0, i32 2, i32 0, i32 1
  store ptr %866, ptr %875, align 8, !tbaa !9
  %876 = tail call ptr @gen_intern(ptr noundef nonnull @.str.175, i64 noundef 0)
  %877 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %878 = icmp eq i64 %877, 1
  br i1 %878, label %879, label %887

879:                                              ; preds = %874
  %880 = load ptr, ptr @heap, align 8, !tbaa !5
  %881 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %882 = icmp ult ptr %880, %881
  br i1 %882, label %885, label %883

883:                                              ; preds = %879
  %884 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %885

885:                                              ; preds = %883, %879
  %886 = getelementptr inbounds %struct.obj, ptr %880, i64 1
  store ptr %886, ptr @heap, align 8, !tbaa !5
  br label %898

887:                                              ; preds = %874
  %888 = load ptr, ptr @freelist, align 8, !tbaa !5
  %889 = icmp eq ptr %888, null
  br i1 %889, label %890, label %892

890:                                              ; preds = %887
  tail call void @gc_for_newcell()
  %891 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %892

892:                                              ; preds = %890, %887
  %893 = phi ptr [ %891, %890 ], [ %888, %887 ]
  %894 = getelementptr inbounds %struct.obj, ptr %893, i64 0, i32 2, i32 0, i32 1
  %895 = load ptr, ptr %894, align 8, !tbaa !9
  store ptr %895, ptr @freelist, align 8, !tbaa !5
  %896 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %897 = add nsw i64 %896, 1
  store i64 %897, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %898

898:                                              ; preds = %892, %885
  %899 = phi ptr [ %880, %885 ], [ %893, %892 ]
  store i16 0, ptr %899, align 8, !tbaa !35
  %900 = getelementptr inbounds %struct.obj, ptr %899, i64 0, i32 1
  store i16 4, ptr %900, align 2, !tbaa !14
  %901 = getelementptr inbounds %struct.obj, ptr %899, i64 0, i32 2
  store ptr @.str.175, ptr %901, align 8, !tbaa !9
  %902 = getelementptr inbounds %struct.obj, ptr %899, i64 0, i32 2, i32 0, i32 1
  store ptr @get_eof_val, ptr %902, align 8, !tbaa !9
  %903 = icmp eq ptr %876, null
  br i1 %903, label %908, label %904

904:                                              ; preds = %898
  %905 = getelementptr inbounds %struct.obj, ptr %876, i64 0, i32 1
  %906 = load i16, ptr %905, align 2, !tbaa !14
  %907 = icmp eq i16 %906, 3
  br i1 %907, label %910, label %908

908:                                              ; preds = %904, %898
  %909 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %876) #38
  br label %910

910:                                              ; preds = %904, %908
  %911 = getelementptr inbounds %struct.obj, ptr %876, i64 0, i32 2, i32 0, i32 1
  store ptr %899, ptr %911, align 8, !tbaa !9
  %912 = tail call ptr @gen_intern(ptr noundef nonnull @.str.176, i64 noundef 0)
  %913 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %914 = icmp eq i64 %913, 1
  br i1 %914, label %915, label %923

915:                                              ; preds = %910
  %916 = load ptr, ptr @heap, align 8, !tbaa !5
  %917 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %918 = icmp ult ptr %916, %917
  br i1 %918, label %921, label %919

919:                                              ; preds = %915
  %920 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %921

921:                                              ; preds = %919, %915
  %922 = getelementptr inbounds %struct.obj, ptr %916, i64 1
  store ptr %922, ptr @heap, align 8, !tbaa !5
  br label %934

923:                                              ; preds = %910
  %924 = load ptr, ptr @freelist, align 8, !tbaa !5
  %925 = icmp eq ptr %924, null
  br i1 %925, label %926, label %928

926:                                              ; preds = %923
  tail call void @gc_for_newcell()
  %927 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %928

928:                                              ; preds = %926, %923
  %929 = phi ptr [ %927, %926 ], [ %924, %923 ]
  %930 = getelementptr inbounds %struct.obj, ptr %929, i64 0, i32 2, i32 0, i32 1
  %931 = load ptr, ptr %930, align 8, !tbaa !9
  store ptr %931, ptr @freelist, align 8, !tbaa !5
  %932 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %933 = add nsw i64 %932, 1
  store i64 %933, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %934

934:                                              ; preds = %928, %921
  %935 = phi ptr [ %916, %921 ], [ %929, %928 ]
  store i16 0, ptr %935, align 8, !tbaa !35
  %936 = getelementptr inbounds %struct.obj, ptr %935, i64 0, i32 1
  store i16 6, ptr %936, align 2, !tbaa !14
  %937 = getelementptr inbounds %struct.obj, ptr %935, i64 0, i32 2
  store ptr @.str.176, ptr %937, align 8, !tbaa !9
  %938 = getelementptr inbounds %struct.obj, ptr %935, i64 0, i32 2, i32 0, i32 1
  store ptr @lprint, ptr %938, align 8, !tbaa !9
  %939 = icmp eq ptr %912, null
  br i1 %939, label %944, label %940

940:                                              ; preds = %934
  %941 = getelementptr inbounds %struct.obj, ptr %912, i64 0, i32 1
  %942 = load i16, ptr %941, align 2, !tbaa !14
  %943 = icmp eq i16 %942, 3
  br i1 %943, label %946, label %944

944:                                              ; preds = %940, %934
  %945 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %912) #38
  br label %946

946:                                              ; preds = %940, %944
  %947 = getelementptr inbounds %struct.obj, ptr %912, i64 0, i32 2, i32 0, i32 1
  store ptr %935, ptr %947, align 8, !tbaa !9
  %948 = tail call ptr @gen_intern(ptr noundef nonnull @.str.177, i64 noundef 0)
  %949 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %950 = icmp eq i64 %949, 1
  br i1 %950, label %951, label %959

951:                                              ; preds = %946
  %952 = load ptr, ptr @heap, align 8, !tbaa !5
  %953 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %954 = icmp ult ptr %952, %953
  br i1 %954, label %957, label %955

955:                                              ; preds = %951
  %956 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %957

957:                                              ; preds = %955, %951
  %958 = getelementptr inbounds %struct.obj, ptr %952, i64 1
  store ptr %958, ptr @heap, align 8, !tbaa !5
  br label %970

959:                                              ; preds = %946
  %960 = load ptr, ptr @freelist, align 8, !tbaa !5
  %961 = icmp eq ptr %960, null
  br i1 %961, label %962, label %964

962:                                              ; preds = %959
  tail call void @gc_for_newcell()
  %963 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %964

964:                                              ; preds = %962, %959
  %965 = phi ptr [ %963, %962 ], [ %960, %959 ]
  %966 = getelementptr inbounds %struct.obj, ptr %965, i64 0, i32 2, i32 0, i32 1
  %967 = load ptr, ptr %966, align 8, !tbaa !9
  store ptr %967, ptr @freelist, align 8, !tbaa !5
  %968 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %969 = add nsw i64 %968, 1
  store i64 %969, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %970

970:                                              ; preds = %964, %957
  %971 = phi ptr [ %952, %957 ], [ %965, %964 ]
  store i16 0, ptr %971, align 8, !tbaa !35
  %972 = getelementptr inbounds %struct.obj, ptr %971, i64 0, i32 1
  store i16 6, ptr %972, align 2, !tbaa !14
  %973 = getelementptr inbounds %struct.obj, ptr %971, i64 0, i32 2
  store ptr @.str.177, ptr %973, align 8, !tbaa !9
  %974 = getelementptr inbounds %struct.obj, ptr %971, i64 0, i32 2, i32 0, i32 1
  store ptr @lprin1, ptr %974, align 8, !tbaa !9
  %975 = icmp eq ptr %948, null
  br i1 %975, label %980, label %976

976:                                              ; preds = %970
  %977 = getelementptr inbounds %struct.obj, ptr %948, i64 0, i32 1
  %978 = load i16, ptr %977, align 2, !tbaa !14
  %979 = icmp eq i16 %978, 3
  br i1 %979, label %982, label %980

980:                                              ; preds = %976, %970
  %981 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %948) #38
  br label %982

982:                                              ; preds = %976, %980
  %983 = getelementptr inbounds %struct.obj, ptr %948, i64 0, i32 2, i32 0, i32 1
  store ptr %971, ptr %983, align 8, !tbaa !9
  %984 = tail call ptr @gen_intern(ptr noundef nonnull @.str.178, i64 noundef 0)
  %985 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %986 = icmp eq i64 %985, 1
  br i1 %986, label %987, label %995

987:                                              ; preds = %982
  %988 = load ptr, ptr @heap, align 8, !tbaa !5
  %989 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %990 = icmp ult ptr %988, %989
  br i1 %990, label %993, label %991

991:                                              ; preds = %987
  %992 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %993

993:                                              ; preds = %991, %987
  %994 = getelementptr inbounds %struct.obj, ptr %988, i64 1
  store ptr %994, ptr @heap, align 8, !tbaa !5
  br label %1006

995:                                              ; preds = %982
  %996 = load ptr, ptr @freelist, align 8, !tbaa !5
  %997 = icmp eq ptr %996, null
  br i1 %997, label %998, label %1000

998:                                              ; preds = %995
  tail call void @gc_for_newcell()
  %999 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1000

1000:                                             ; preds = %998, %995
  %1001 = phi ptr [ %999, %998 ], [ %996, %995 ]
  %1002 = getelementptr inbounds %struct.obj, ptr %1001, i64 0, i32 2, i32 0, i32 1
  %1003 = load ptr, ptr %1002, align 8, !tbaa !9
  store ptr %1003, ptr @freelist, align 8, !tbaa !5
  %1004 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1005 = add nsw i64 %1004, 1
  store i64 %1005, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1006

1006:                                             ; preds = %1000, %993
  %1007 = phi ptr [ %988, %993 ], [ %1001, %1000 ]
  store i16 0, ptr %1007, align 8, !tbaa !35
  %1008 = getelementptr inbounds %struct.obj, ptr %1007, i64 0, i32 1
  store i16 6, ptr %1008, align 2, !tbaa !14
  %1009 = getelementptr inbounds %struct.obj, ptr %1007, i64 0, i32 2
  store ptr @.str.178, ptr %1009, align 8, !tbaa !9
  %1010 = getelementptr inbounds %struct.obj, ptr %1007, i64 0, i32 2, i32 0, i32 1
  store ptr @leval, ptr %1010, align 8, !tbaa !9
  %1011 = icmp eq ptr %984, null
  br i1 %1011, label %1016, label %1012

1012:                                             ; preds = %1006
  %1013 = getelementptr inbounds %struct.obj, ptr %984, i64 0, i32 1
  %1014 = load i16, ptr %1013, align 2, !tbaa !14
  %1015 = icmp eq i16 %1014, 3
  br i1 %1015, label %1018, label %1016

1016:                                             ; preds = %1012, %1006
  %1017 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %984) #38
  br label %1018

1018:                                             ; preds = %1012, %1016
  %1019 = getelementptr inbounds %struct.obj, ptr %984, i64 0, i32 2, i32 0, i32 1
  store ptr %1007, ptr %1019, align 8, !tbaa !9
  %1020 = tail call ptr @gen_intern(ptr noundef nonnull @.str.179, i64 noundef 0)
  %1021 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1022 = icmp eq i64 %1021, 1
  br i1 %1022, label %1023, label %1031

1023:                                             ; preds = %1018
  %1024 = load ptr, ptr @heap, align 8, !tbaa !5
  %1025 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1026 = icmp ult ptr %1024, %1025
  br i1 %1026, label %1029, label %1027

1027:                                             ; preds = %1023
  %1028 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1029

1029:                                             ; preds = %1027, %1023
  %1030 = getelementptr inbounds %struct.obj, ptr %1024, i64 1
  store ptr %1030, ptr @heap, align 8, !tbaa !5
  br label %1042

1031:                                             ; preds = %1018
  %1032 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1033 = icmp eq ptr %1032, null
  br i1 %1033, label %1034, label %1036

1034:                                             ; preds = %1031
  tail call void @gc_for_newcell()
  %1035 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1036

1036:                                             ; preds = %1034, %1031
  %1037 = phi ptr [ %1035, %1034 ], [ %1032, %1031 ]
  %1038 = getelementptr inbounds %struct.obj, ptr %1037, i64 0, i32 2, i32 0, i32 1
  %1039 = load ptr, ptr %1038, align 8, !tbaa !9
  store ptr %1039, ptr @freelist, align 8, !tbaa !5
  %1040 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1041 = add nsw i64 %1040, 1
  store i64 %1041, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1042

1042:                                             ; preds = %1036, %1029
  %1043 = phi ptr [ %1024, %1029 ], [ %1037, %1036 ]
  store i16 0, ptr %1043, align 8, !tbaa !35
  %1044 = getelementptr inbounds %struct.obj, ptr %1043, i64 0, i32 1
  store i16 6, ptr %1044, align 2, !tbaa !14
  %1045 = getelementptr inbounds %struct.obj, ptr %1043, i64 0, i32 2
  store ptr @.str.179, ptr %1045, align 8, !tbaa !9
  %1046 = getelementptr inbounds %struct.obj, ptr %1043, i64 0, i32 2, i32 0, i32 1
  store ptr @lapply, ptr %1046, align 8, !tbaa !9
  %1047 = icmp eq ptr %1020, null
  br i1 %1047, label %1052, label %1048

1048:                                             ; preds = %1042
  %1049 = getelementptr inbounds %struct.obj, ptr %1020, i64 0, i32 1
  %1050 = load i16, ptr %1049, align 2, !tbaa !14
  %1051 = icmp eq i16 %1050, 3
  br i1 %1051, label %1054, label %1052

1052:                                             ; preds = %1048, %1042
  %1053 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1020) #38
  br label %1054

1054:                                             ; preds = %1048, %1052
  %1055 = getelementptr inbounds %struct.obj, ptr %1020, i64 0, i32 2, i32 0, i32 1
  store ptr %1043, ptr %1055, align 8, !tbaa !9
  %1056 = tail call ptr @gen_intern(ptr noundef nonnull @.str.180, i64 noundef 0)
  %1057 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1058 = icmp eq i64 %1057, 1
  br i1 %1058, label %1059, label %1067

1059:                                             ; preds = %1054
  %1060 = load ptr, ptr @heap, align 8, !tbaa !5
  %1061 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1062 = icmp ult ptr %1060, %1061
  br i1 %1062, label %1065, label %1063

1063:                                             ; preds = %1059
  %1064 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1065

1065:                                             ; preds = %1063, %1059
  %1066 = getelementptr inbounds %struct.obj, ptr %1060, i64 1
  store ptr %1066, ptr @heap, align 8, !tbaa !5
  br label %1078

1067:                                             ; preds = %1054
  %1068 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1069 = icmp eq ptr %1068, null
  br i1 %1069, label %1070, label %1072

1070:                                             ; preds = %1067
  tail call void @gc_for_newcell()
  %1071 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1072

1072:                                             ; preds = %1070, %1067
  %1073 = phi ptr [ %1071, %1070 ], [ %1068, %1067 ]
  %1074 = getelementptr inbounds %struct.obj, ptr %1073, i64 0, i32 2, i32 0, i32 1
  %1075 = load ptr, ptr %1074, align 8, !tbaa !9
  store ptr %1075, ptr @freelist, align 8, !tbaa !5
  %1076 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1077 = add nsw i64 %1076, 1
  store i64 %1077, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1078

1078:                                             ; preds = %1072, %1065
  %1079 = phi ptr [ %1060, %1065 ], [ %1073, %1072 ]
  store i16 0, ptr %1079, align 8, !tbaa !35
  %1080 = getelementptr inbounds %struct.obj, ptr %1079, i64 0, i32 1
  store i16 9, ptr %1080, align 2, !tbaa !14
  %1081 = getelementptr inbounds %struct.obj, ptr %1079, i64 0, i32 2
  store ptr @.str.180, ptr %1081, align 8, !tbaa !9
  %1082 = getelementptr inbounds %struct.obj, ptr %1079, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_define, ptr %1082, align 8, !tbaa !9
  %1083 = icmp eq ptr %1056, null
  br i1 %1083, label %1088, label %1084

1084:                                             ; preds = %1078
  %1085 = getelementptr inbounds %struct.obj, ptr %1056, i64 0, i32 1
  %1086 = load i16, ptr %1085, align 2, !tbaa !14
  %1087 = icmp eq i16 %1086, 3
  br i1 %1087, label %1090, label %1088

1088:                                             ; preds = %1084, %1078
  %1089 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1056) #38
  br label %1090

1090:                                             ; preds = %1084, %1088
  %1091 = getelementptr inbounds %struct.obj, ptr %1056, i64 0, i32 2, i32 0, i32 1
  store ptr %1079, ptr %1091, align 8, !tbaa !9
  %1092 = tail call ptr @gen_intern(ptr noundef nonnull @.str.66, i64 noundef 0)
  %1093 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1094 = icmp eq i64 %1093, 1
  br i1 %1094, label %1095, label %1103

1095:                                             ; preds = %1090
  %1096 = load ptr, ptr @heap, align 8, !tbaa !5
  %1097 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1098 = icmp ult ptr %1096, %1097
  br i1 %1098, label %1101, label %1099

1099:                                             ; preds = %1095
  %1100 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1101

1101:                                             ; preds = %1099, %1095
  %1102 = getelementptr inbounds %struct.obj, ptr %1096, i64 1
  store ptr %1102, ptr @heap, align 8, !tbaa !5
  br label %1114

1103:                                             ; preds = %1090
  %1104 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1105 = icmp eq ptr %1104, null
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1103
  tail call void @gc_for_newcell()
  %1107 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1108

1108:                                             ; preds = %1106, %1103
  %1109 = phi ptr [ %1107, %1106 ], [ %1104, %1103 ]
  %1110 = getelementptr inbounds %struct.obj, ptr %1109, i64 0, i32 2, i32 0, i32 1
  %1111 = load ptr, ptr %1110, align 8, !tbaa !9
  store ptr %1111, ptr @freelist, align 8, !tbaa !5
  %1112 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1113 = add nsw i64 %1112, 1
  store i64 %1113, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1114

1114:                                             ; preds = %1108, %1101
  %1115 = phi ptr [ %1096, %1101 ], [ %1109, %1108 ]
  store i16 0, ptr %1115, align 8, !tbaa !35
  %1116 = getelementptr inbounds %struct.obj, ptr %1115, i64 0, i32 1
  store i16 9, ptr %1116, align 2, !tbaa !14
  %1117 = getelementptr inbounds %struct.obj, ptr %1115, i64 0, i32 2
  store ptr @.str.66, ptr %1117, align 8, !tbaa !9
  %1118 = getelementptr inbounds %struct.obj, ptr %1115, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_lambda, ptr %1118, align 8, !tbaa !9
  %1119 = icmp eq ptr %1092, null
  br i1 %1119, label %1124, label %1120

1120:                                             ; preds = %1114
  %1121 = getelementptr inbounds %struct.obj, ptr %1092, i64 0, i32 1
  %1122 = load i16, ptr %1121, align 2, !tbaa !14
  %1123 = icmp eq i16 %1122, 3
  br i1 %1123, label %1126, label %1124

1124:                                             ; preds = %1120, %1114
  %1125 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1092) #38
  br label %1126

1126:                                             ; preds = %1120, %1124
  %1127 = getelementptr inbounds %struct.obj, ptr %1092, i64 0, i32 2, i32 0, i32 1
  store ptr %1115, ptr %1127, align 8, !tbaa !9
  %1128 = tail call ptr @gen_intern(ptr noundef nonnull @.str.181, i64 noundef 0)
  %1129 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1130 = icmp eq i64 %1129, 1
  br i1 %1130, label %1131, label %1139

1131:                                             ; preds = %1126
  %1132 = load ptr, ptr @heap, align 8, !tbaa !5
  %1133 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1134 = icmp ult ptr %1132, %1133
  br i1 %1134, label %1137, label %1135

1135:                                             ; preds = %1131
  %1136 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1137

1137:                                             ; preds = %1135, %1131
  %1138 = getelementptr inbounds %struct.obj, ptr %1132, i64 1
  store ptr %1138, ptr @heap, align 8, !tbaa !5
  br label %1150

1139:                                             ; preds = %1126
  %1140 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1141 = icmp eq ptr %1140, null
  br i1 %1141, label %1142, label %1144

1142:                                             ; preds = %1139
  tail call void @gc_for_newcell()
  %1143 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1144

1144:                                             ; preds = %1142, %1139
  %1145 = phi ptr [ %1143, %1142 ], [ %1140, %1139 ]
  %1146 = getelementptr inbounds %struct.obj, ptr %1145, i64 0, i32 2, i32 0, i32 1
  %1147 = load ptr, ptr %1146, align 8, !tbaa !9
  store ptr %1147, ptr @freelist, align 8, !tbaa !5
  %1148 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1149 = add nsw i64 %1148, 1
  store i64 %1149, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1150

1150:                                             ; preds = %1144, %1137
  %1151 = phi ptr [ %1132, %1137 ], [ %1145, %1144 ]
  store i16 0, ptr %1151, align 8, !tbaa !35
  %1152 = getelementptr inbounds %struct.obj, ptr %1151, i64 0, i32 1
  store i16 10, ptr %1152, align 2, !tbaa !14
  %1153 = getelementptr inbounds %struct.obj, ptr %1151, i64 0, i32 2
  store ptr @.str.181, ptr %1153, align 8, !tbaa !9
  %1154 = getelementptr inbounds %struct.obj, ptr %1151, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_if, ptr %1154, align 8, !tbaa !9
  %1155 = icmp eq ptr %1128, null
  br i1 %1155, label %1160, label %1156

1156:                                             ; preds = %1150
  %1157 = getelementptr inbounds %struct.obj, ptr %1128, i64 0, i32 1
  %1158 = load i16, ptr %1157, align 2, !tbaa !14
  %1159 = icmp eq i16 %1158, 3
  br i1 %1159, label %1162, label %1160

1160:                                             ; preds = %1156, %1150
  %1161 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1128) #38
  br label %1162

1162:                                             ; preds = %1156, %1160
  %1163 = getelementptr inbounds %struct.obj, ptr %1128, i64 0, i32 2, i32 0, i32 1
  store ptr %1151, ptr %1163, align 8, !tbaa !9
  %1164 = tail call ptr @gen_intern(ptr noundef nonnull @.str.182, i64 noundef 0)
  %1165 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1166 = icmp eq i64 %1165, 1
  br i1 %1166, label %1167, label %1175

1167:                                             ; preds = %1162
  %1168 = load ptr, ptr @heap, align 8, !tbaa !5
  %1169 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1170 = icmp ult ptr %1168, %1169
  br i1 %1170, label %1173, label %1171

1171:                                             ; preds = %1167
  %1172 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1173

1173:                                             ; preds = %1171, %1167
  %1174 = getelementptr inbounds %struct.obj, ptr %1168, i64 1
  store ptr %1174, ptr @heap, align 8, !tbaa !5
  br label %1186

1175:                                             ; preds = %1162
  %1176 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1177 = icmp eq ptr %1176, null
  br i1 %1177, label %1178, label %1180

1178:                                             ; preds = %1175
  tail call void @gc_for_newcell()
  %1179 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1180

1180:                                             ; preds = %1178, %1175
  %1181 = phi ptr [ %1179, %1178 ], [ %1176, %1175 ]
  %1182 = getelementptr inbounds %struct.obj, ptr %1181, i64 0, i32 2, i32 0, i32 1
  %1183 = load ptr, ptr %1182, align 8, !tbaa !9
  store ptr %1183, ptr @freelist, align 8, !tbaa !5
  %1184 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1185 = add nsw i64 %1184, 1
  store i64 %1185, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1186

1186:                                             ; preds = %1180, %1173
  %1187 = phi ptr [ %1168, %1173 ], [ %1181, %1180 ]
  store i16 0, ptr %1187, align 8, !tbaa !35
  %1188 = getelementptr inbounds %struct.obj, ptr %1187, i64 0, i32 1
  store i16 9, ptr %1188, align 2, !tbaa !14
  %1189 = getelementptr inbounds %struct.obj, ptr %1187, i64 0, i32 2
  store ptr @.str.182, ptr %1189, align 8, !tbaa !9
  %1190 = getelementptr inbounds %struct.obj, ptr %1187, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_while, ptr %1190, align 8, !tbaa !9
  %1191 = icmp eq ptr %1164, null
  br i1 %1191, label %1196, label %1192

1192:                                             ; preds = %1186
  %1193 = getelementptr inbounds %struct.obj, ptr %1164, i64 0, i32 1
  %1194 = load i16, ptr %1193, align 2, !tbaa !14
  %1195 = icmp eq i16 %1194, 3
  br i1 %1195, label %1198, label %1196

1196:                                             ; preds = %1192, %1186
  %1197 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1164) #38
  br label %1198

1198:                                             ; preds = %1192, %1196
  %1199 = getelementptr inbounds %struct.obj, ptr %1164, i64 0, i32 2, i32 0, i32 1
  store ptr %1187, ptr %1199, align 8, !tbaa !9
  %1200 = tail call ptr @gen_intern(ptr noundef nonnull @.str.65, i64 noundef 0)
  %1201 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1202 = icmp eq i64 %1201, 1
  br i1 %1202, label %1203, label %1211

1203:                                             ; preds = %1198
  %1204 = load ptr, ptr @heap, align 8, !tbaa !5
  %1205 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1206 = icmp ult ptr %1204, %1205
  br i1 %1206, label %1209, label %1207

1207:                                             ; preds = %1203
  %1208 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1209

1209:                                             ; preds = %1207, %1203
  %1210 = getelementptr inbounds %struct.obj, ptr %1204, i64 1
  store ptr %1210, ptr @heap, align 8, !tbaa !5
  br label %1222

1211:                                             ; preds = %1198
  %1212 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1213 = icmp eq ptr %1212, null
  br i1 %1213, label %1214, label %1216

1214:                                             ; preds = %1211
  tail call void @gc_for_newcell()
  %1215 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1216

1216:                                             ; preds = %1214, %1211
  %1217 = phi ptr [ %1215, %1214 ], [ %1212, %1211 ]
  %1218 = getelementptr inbounds %struct.obj, ptr %1217, i64 0, i32 2, i32 0, i32 1
  %1219 = load ptr, ptr %1218, align 8, !tbaa !9
  store ptr %1219, ptr @freelist, align 8, !tbaa !5
  %1220 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1221 = add nsw i64 %1220, 1
  store i64 %1221, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1222

1222:                                             ; preds = %1216, %1209
  %1223 = phi ptr [ %1204, %1209 ], [ %1217, %1216 ]
  store i16 0, ptr %1223, align 8, !tbaa !35
  %1224 = getelementptr inbounds %struct.obj, ptr %1223, i64 0, i32 1
  store i16 10, ptr %1224, align 2, !tbaa !14
  %1225 = getelementptr inbounds %struct.obj, ptr %1223, i64 0, i32 2
  store ptr @.str.65, ptr %1225, align 8, !tbaa !9
  %1226 = getelementptr inbounds %struct.obj, ptr %1223, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_progn, ptr %1226, align 8, !tbaa !9
  %1227 = icmp eq ptr %1200, null
  br i1 %1227, label %1232, label %1228

1228:                                             ; preds = %1222
  %1229 = getelementptr inbounds %struct.obj, ptr %1200, i64 0, i32 1
  %1230 = load i16, ptr %1229, align 2, !tbaa !14
  %1231 = icmp eq i16 %1230, 3
  br i1 %1231, label %1234, label %1232

1232:                                             ; preds = %1228, %1222
  %1233 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1200) #38
  br label %1234

1234:                                             ; preds = %1228, %1232
  %1235 = getelementptr inbounds %struct.obj, ptr %1200, i64 0, i32 2, i32 0, i32 1
  store ptr %1223, ptr %1235, align 8, !tbaa !9
  %1236 = tail call ptr @gen_intern(ptr noundef nonnull @.str.95, i64 noundef 0)
  %1237 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1238 = icmp eq i64 %1237, 1
  br i1 %1238, label %1239, label %1247

1239:                                             ; preds = %1234
  %1240 = load ptr, ptr @heap, align 8, !tbaa !5
  %1241 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1242 = icmp ult ptr %1240, %1241
  br i1 %1242, label %1245, label %1243

1243:                                             ; preds = %1239
  %1244 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1245

1245:                                             ; preds = %1243, %1239
  %1246 = getelementptr inbounds %struct.obj, ptr %1240, i64 1
  store ptr %1246, ptr @heap, align 8, !tbaa !5
  br label %1258

1247:                                             ; preds = %1234
  %1248 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1249 = icmp eq ptr %1248, null
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1247
  tail call void @gc_for_newcell()
  %1251 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1252

1252:                                             ; preds = %1250, %1247
  %1253 = phi ptr [ %1251, %1250 ], [ %1248, %1247 ]
  %1254 = getelementptr inbounds %struct.obj, ptr %1253, i64 0, i32 2, i32 0, i32 1
  %1255 = load ptr, ptr %1254, align 8, !tbaa !9
  store ptr %1255, ptr @freelist, align 8, !tbaa !5
  %1256 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1257 = add nsw i64 %1256, 1
  store i64 %1257, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1258

1258:                                             ; preds = %1252, %1245
  %1259 = phi ptr [ %1240, %1245 ], [ %1253, %1252 ]
  store i16 0, ptr %1259, align 8, !tbaa !35
  %1260 = getelementptr inbounds %struct.obj, ptr %1259, i64 0, i32 1
  store i16 9, ptr %1260, align 2, !tbaa !14
  %1261 = getelementptr inbounds %struct.obj, ptr %1259, i64 0, i32 2
  store ptr @.str.95, ptr %1261, align 8, !tbaa !9
  %1262 = getelementptr inbounds %struct.obj, ptr %1259, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_setq, ptr %1262, align 8, !tbaa !9
  %1263 = icmp eq ptr %1236, null
  br i1 %1263, label %1268, label %1264

1264:                                             ; preds = %1258
  %1265 = getelementptr inbounds %struct.obj, ptr %1236, i64 0, i32 1
  %1266 = load i16, ptr %1265, align 2, !tbaa !14
  %1267 = icmp eq i16 %1266, 3
  br i1 %1267, label %1270, label %1268

1268:                                             ; preds = %1264, %1258
  %1269 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1236) #38
  br label %1270

1270:                                             ; preds = %1264, %1268
  %1271 = getelementptr inbounds %struct.obj, ptr %1236, i64 0, i32 2, i32 0, i32 1
  store ptr %1259, ptr %1271, align 8, !tbaa !9
  %1272 = tail call ptr @gen_intern(ptr noundef nonnull @.str.183, i64 noundef 0)
  %1273 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1274 = icmp eq i64 %1273, 1
  br i1 %1274, label %1275, label %1283

1275:                                             ; preds = %1270
  %1276 = load ptr, ptr @heap, align 8, !tbaa !5
  %1277 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1278 = icmp ult ptr %1276, %1277
  br i1 %1278, label %1281, label %1279

1279:                                             ; preds = %1275
  %1280 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1281

1281:                                             ; preds = %1279, %1275
  %1282 = getelementptr inbounds %struct.obj, ptr %1276, i64 1
  store ptr %1282, ptr @heap, align 8, !tbaa !5
  br label %1294

1283:                                             ; preds = %1270
  %1284 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1285 = icmp eq ptr %1284, null
  br i1 %1285, label %1286, label %1288

1286:                                             ; preds = %1283
  tail call void @gc_for_newcell()
  %1287 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1288

1288:                                             ; preds = %1286, %1283
  %1289 = phi ptr [ %1287, %1286 ], [ %1284, %1283 ]
  %1290 = getelementptr inbounds %struct.obj, ptr %1289, i64 0, i32 2, i32 0, i32 1
  %1291 = load ptr, ptr %1290, align 8, !tbaa !9
  store ptr %1291, ptr @freelist, align 8, !tbaa !5
  %1292 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1293 = add nsw i64 %1292, 1
  store i64 %1293, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1294

1294:                                             ; preds = %1288, %1281
  %1295 = phi ptr [ %1276, %1281 ], [ %1289, %1288 ]
  store i16 0, ptr %1295, align 8, !tbaa !35
  %1296 = getelementptr inbounds %struct.obj, ptr %1295, i64 0, i32 1
  store i16 10, ptr %1296, align 2, !tbaa !14
  %1297 = getelementptr inbounds %struct.obj, ptr %1295, i64 0, i32 2
  store ptr @.str.183, ptr %1297, align 8, !tbaa !9
  %1298 = getelementptr inbounds %struct.obj, ptr %1295, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_or, ptr %1298, align 8, !tbaa !9
  %1299 = icmp eq ptr %1272, null
  br i1 %1299, label %1304, label %1300

1300:                                             ; preds = %1294
  %1301 = getelementptr inbounds %struct.obj, ptr %1272, i64 0, i32 1
  %1302 = load i16, ptr %1301, align 2, !tbaa !14
  %1303 = icmp eq i16 %1302, 3
  br i1 %1303, label %1306, label %1304

1304:                                             ; preds = %1300, %1294
  %1305 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1272) #38
  br label %1306

1306:                                             ; preds = %1300, %1304
  %1307 = getelementptr inbounds %struct.obj, ptr %1272, i64 0, i32 2, i32 0, i32 1
  store ptr %1295, ptr %1307, align 8, !tbaa !9
  %1308 = tail call ptr @gen_intern(ptr noundef nonnull @.str.184, i64 noundef 0)
  %1309 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1310 = icmp eq i64 %1309, 1
  br i1 %1310, label %1311, label %1319

1311:                                             ; preds = %1306
  %1312 = load ptr, ptr @heap, align 8, !tbaa !5
  %1313 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1314 = icmp ult ptr %1312, %1313
  br i1 %1314, label %1317, label %1315

1315:                                             ; preds = %1311
  %1316 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1317

1317:                                             ; preds = %1315, %1311
  %1318 = getelementptr inbounds %struct.obj, ptr %1312, i64 1
  store ptr %1318, ptr @heap, align 8, !tbaa !5
  br label %1330

1319:                                             ; preds = %1306
  %1320 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1321 = icmp eq ptr %1320, null
  br i1 %1321, label %1322, label %1324

1322:                                             ; preds = %1319
  tail call void @gc_for_newcell()
  %1323 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1324

1324:                                             ; preds = %1322, %1319
  %1325 = phi ptr [ %1323, %1322 ], [ %1320, %1319 ]
  %1326 = getelementptr inbounds %struct.obj, ptr %1325, i64 0, i32 2, i32 0, i32 1
  %1327 = load ptr, ptr %1326, align 8, !tbaa !9
  store ptr %1327, ptr @freelist, align 8, !tbaa !5
  %1328 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1329 = add nsw i64 %1328, 1
  store i64 %1329, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1330

1330:                                             ; preds = %1324, %1317
  %1331 = phi ptr [ %1312, %1317 ], [ %1325, %1324 ]
  store i16 0, ptr %1331, align 8, !tbaa !35
  %1332 = getelementptr inbounds %struct.obj, ptr %1331, i64 0, i32 1
  store i16 10, ptr %1332, align 2, !tbaa !14
  %1333 = getelementptr inbounds %struct.obj, ptr %1331, i64 0, i32 2
  store ptr @.str.184, ptr %1333, align 8, !tbaa !9
  %1334 = getelementptr inbounds %struct.obj, ptr %1331, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_and, ptr %1334, align 8, !tbaa !9
  %1335 = icmp eq ptr %1308, null
  br i1 %1335, label %1340, label %1336

1336:                                             ; preds = %1330
  %1337 = getelementptr inbounds %struct.obj, ptr %1308, i64 0, i32 1
  %1338 = load i16, ptr %1337, align 2, !tbaa !14
  %1339 = icmp eq i16 %1338, 3
  br i1 %1339, label %1342, label %1340

1340:                                             ; preds = %1336, %1330
  %1341 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1308) #38
  br label %1342

1342:                                             ; preds = %1336, %1340
  %1343 = getelementptr inbounds %struct.obj, ptr %1308, i64 0, i32 2, i32 0, i32 1
  store ptr %1331, ptr %1343, align 8, !tbaa !9
  %1344 = tail call ptr @gen_intern(ptr noundef nonnull @.str.185, i64 noundef 0)
  %1345 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1346 = icmp eq i64 %1345, 1
  br i1 %1346, label %1347, label %1355

1347:                                             ; preds = %1342
  %1348 = load ptr, ptr @heap, align 8, !tbaa !5
  %1349 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1350 = icmp ult ptr %1348, %1349
  br i1 %1350, label %1353, label %1351

1351:                                             ; preds = %1347
  %1352 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1353

1353:                                             ; preds = %1351, %1347
  %1354 = getelementptr inbounds %struct.obj, ptr %1348, i64 1
  store ptr %1354, ptr @heap, align 8, !tbaa !5
  br label %1366

1355:                                             ; preds = %1342
  %1356 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1357 = icmp eq ptr %1356, null
  br i1 %1357, label %1358, label %1360

1358:                                             ; preds = %1355
  tail call void @gc_for_newcell()
  %1359 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1360

1360:                                             ; preds = %1358, %1355
  %1361 = phi ptr [ %1359, %1358 ], [ %1356, %1355 ]
  %1362 = getelementptr inbounds %struct.obj, ptr %1361, i64 0, i32 2, i32 0, i32 1
  %1363 = load ptr, ptr %1362, align 8, !tbaa !9
  store ptr %1363, ptr @freelist, align 8, !tbaa !5
  %1364 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1365 = add nsw i64 %1364, 1
  store i64 %1365, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1366

1366:                                             ; preds = %1360, %1353
  %1367 = phi ptr [ %1348, %1353 ], [ %1361, %1360 ]
  store i16 0, ptr %1367, align 8, !tbaa !35
  %1368 = getelementptr inbounds %struct.obj, ptr %1367, i64 0, i32 1
  store i16 9, ptr %1368, align 2, !tbaa !14
  %1369 = getelementptr inbounds %struct.obj, ptr %1367, i64 0, i32 2
  store ptr @.str.185, ptr %1369, align 8, !tbaa !9
  %1370 = getelementptr inbounds %struct.obj, ptr %1367, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_catch, ptr %1370, align 8, !tbaa !9
  %1371 = icmp eq ptr %1344, null
  br i1 %1371, label %1376, label %1372

1372:                                             ; preds = %1366
  %1373 = getelementptr inbounds %struct.obj, ptr %1344, i64 0, i32 1
  %1374 = load i16, ptr %1373, align 2, !tbaa !14
  %1375 = icmp eq i16 %1374, 3
  br i1 %1375, label %1378, label %1376

1376:                                             ; preds = %1372, %1366
  %1377 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1344) #38
  br label %1378

1378:                                             ; preds = %1372, %1376
  %1379 = getelementptr inbounds %struct.obj, ptr %1344, i64 0, i32 2, i32 0, i32 1
  store ptr %1367, ptr %1379, align 8, !tbaa !9
  %1380 = tail call ptr @gen_intern(ptr noundef nonnull @.str.186, i64 noundef 0)
  %1381 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1382 = icmp eq i64 %1381, 1
  br i1 %1382, label %1383, label %1391

1383:                                             ; preds = %1378
  %1384 = load ptr, ptr @heap, align 8, !tbaa !5
  %1385 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1386 = icmp ult ptr %1384, %1385
  br i1 %1386, label %1389, label %1387

1387:                                             ; preds = %1383
  %1388 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1389

1389:                                             ; preds = %1387, %1383
  %1390 = getelementptr inbounds %struct.obj, ptr %1384, i64 1
  store ptr %1390, ptr @heap, align 8, !tbaa !5
  br label %1402

1391:                                             ; preds = %1378
  %1392 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1393 = icmp eq ptr %1392, null
  br i1 %1393, label %1394, label %1396

1394:                                             ; preds = %1391
  tail call void @gc_for_newcell()
  %1395 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1396

1396:                                             ; preds = %1394, %1391
  %1397 = phi ptr [ %1395, %1394 ], [ %1392, %1391 ]
  %1398 = getelementptr inbounds %struct.obj, ptr %1397, i64 0, i32 2, i32 0, i32 1
  %1399 = load ptr, ptr %1398, align 8, !tbaa !9
  store ptr %1399, ptr @freelist, align 8, !tbaa !5
  %1400 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1401 = add nsw i64 %1400, 1
  store i64 %1401, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1402

1402:                                             ; preds = %1396, %1389
  %1403 = phi ptr [ %1384, %1389 ], [ %1397, %1396 ]
  store i16 0, ptr %1403, align 8, !tbaa !35
  %1404 = getelementptr inbounds %struct.obj, ptr %1403, i64 0, i32 1
  store i16 6, ptr %1404, align 2, !tbaa !14
  %1405 = getelementptr inbounds %struct.obj, ptr %1403, i64 0, i32 2
  store ptr @.str.186, ptr %1405, align 8, !tbaa !9
  %1406 = getelementptr inbounds %struct.obj, ptr %1403, i64 0, i32 2, i32 0, i32 1
  store ptr @lthrow, ptr %1406, align 8, !tbaa !9
  %1407 = icmp eq ptr %1380, null
  br i1 %1407, label %1412, label %1408

1408:                                             ; preds = %1402
  %1409 = getelementptr inbounds %struct.obj, ptr %1380, i64 0, i32 1
  %1410 = load i16, ptr %1409, align 2, !tbaa !14
  %1411 = icmp eq i16 %1410, 3
  br i1 %1411, label %1414, label %1412

1412:                                             ; preds = %1408, %1402
  %1413 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1380) #38
  br label %1414

1414:                                             ; preds = %1408, %1412
  %1415 = getelementptr inbounds %struct.obj, ptr %1380, i64 0, i32 2, i32 0, i32 1
  store ptr %1403, ptr %1415, align 8, !tbaa !9
  %1416 = tail call ptr @gen_intern(ptr noundef nonnull @.str.67, i64 noundef 0)
  %1417 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1418 = icmp eq i64 %1417, 1
  br i1 %1418, label %1419, label %1427

1419:                                             ; preds = %1414
  %1420 = load ptr, ptr @heap, align 8, !tbaa !5
  %1421 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1422 = icmp ult ptr %1420, %1421
  br i1 %1422, label %1425, label %1423

1423:                                             ; preds = %1419
  %1424 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1425

1425:                                             ; preds = %1423, %1419
  %1426 = getelementptr inbounds %struct.obj, ptr %1420, i64 1
  store ptr %1426, ptr @heap, align 8, !tbaa !5
  br label %1438

1427:                                             ; preds = %1414
  %1428 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1429 = icmp eq ptr %1428, null
  br i1 %1429, label %1430, label %1432

1430:                                             ; preds = %1427
  tail call void @gc_for_newcell()
  %1431 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1432

1432:                                             ; preds = %1430, %1427
  %1433 = phi ptr [ %1431, %1430 ], [ %1428, %1427 ]
  %1434 = getelementptr inbounds %struct.obj, ptr %1433, i64 0, i32 2, i32 0, i32 1
  %1435 = load ptr, ptr %1434, align 8, !tbaa !9
  store ptr %1435, ptr @freelist, align 8, !tbaa !5
  %1436 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1437 = add nsw i64 %1436, 1
  store i64 %1437, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1438

1438:                                             ; preds = %1432, %1425
  %1439 = phi ptr [ %1420, %1425 ], [ %1433, %1432 ]
  store i16 0, ptr %1439, align 8, !tbaa !35
  %1440 = getelementptr inbounds %struct.obj, ptr %1439, i64 0, i32 1
  store i16 9, ptr %1440, align 2, !tbaa !14
  %1441 = getelementptr inbounds %struct.obj, ptr %1439, i64 0, i32 2
  store ptr @.str.67, ptr %1441, align 8, !tbaa !9
  %1442 = getelementptr inbounds %struct.obj, ptr %1439, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_quote, ptr %1442, align 8, !tbaa !9
  %1443 = icmp eq ptr %1416, null
  br i1 %1443, label %1448, label %1444

1444:                                             ; preds = %1438
  %1445 = getelementptr inbounds %struct.obj, ptr %1416, i64 0, i32 1
  %1446 = load i16, ptr %1445, align 2, !tbaa !14
  %1447 = icmp eq i16 %1446, 3
  br i1 %1447, label %1450, label %1448

1448:                                             ; preds = %1444, %1438
  %1449 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1416) #38
  br label %1450

1450:                                             ; preds = %1444, %1448
  %1451 = getelementptr inbounds %struct.obj, ptr %1416, i64 0, i32 2, i32 0, i32 1
  store ptr %1439, ptr %1451, align 8, !tbaa !9
  %1452 = tail call ptr @gen_intern(ptr noundef nonnull @.str.187, i64 noundef 0)
  %1453 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1454 = icmp eq i64 %1453, 1
  br i1 %1454, label %1455, label %1463

1455:                                             ; preds = %1450
  %1456 = load ptr, ptr @heap, align 8, !tbaa !5
  %1457 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1458 = icmp ult ptr %1456, %1457
  br i1 %1458, label %1461, label %1459

1459:                                             ; preds = %1455
  %1460 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1461

1461:                                             ; preds = %1459, %1455
  %1462 = getelementptr inbounds %struct.obj, ptr %1456, i64 1
  store ptr %1462, ptr @heap, align 8, !tbaa !5
  br label %1474

1463:                                             ; preds = %1450
  %1464 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1465 = icmp eq ptr %1464, null
  br i1 %1465, label %1466, label %1468

1466:                                             ; preds = %1463
  tail call void @gc_for_newcell()
  %1467 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1468

1468:                                             ; preds = %1466, %1463
  %1469 = phi ptr [ %1467, %1466 ], [ %1464, %1463 ]
  %1470 = getelementptr inbounds %struct.obj, ptr %1469, i64 0, i32 2, i32 0, i32 1
  %1471 = load ptr, ptr %1470, align 8, !tbaa !9
  store ptr %1471, ptr @freelist, align 8, !tbaa !5
  %1472 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1473 = add nsw i64 %1472, 1
  store i64 %1473, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1474

1474:                                             ; preds = %1468, %1461
  %1475 = phi ptr [ %1456, %1461 ], [ %1469, %1468 ]
  store i16 0, ptr %1475, align 8, !tbaa !35
  %1476 = getelementptr inbounds %struct.obj, ptr %1475, i64 0, i32 1
  store i16 8, ptr %1476, align 2, !tbaa !14
  %1477 = getelementptr inbounds %struct.obj, ptr %1475, i64 0, i32 2
  store ptr @.str.187, ptr %1477, align 8, !tbaa !9
  %1478 = getelementptr inbounds %struct.obj, ptr %1475, i64 0, i32 2, i32 0, i32 1
  store ptr @apropos, ptr %1478, align 8, !tbaa !9
  %1479 = icmp eq ptr %1452, null
  br i1 %1479, label %1484, label %1480

1480:                                             ; preds = %1474
  %1481 = getelementptr inbounds %struct.obj, ptr %1452, i64 0, i32 1
  %1482 = load i16, ptr %1481, align 2, !tbaa !14
  %1483 = icmp eq i16 %1482, 3
  br i1 %1483, label %1486, label %1484

1484:                                             ; preds = %1480, %1474
  %1485 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1452) #38
  br label %1486

1486:                                             ; preds = %1480, %1484
  %1487 = getelementptr inbounds %struct.obj, ptr %1452, i64 0, i32 2, i32 0, i32 1
  store ptr %1475, ptr %1487, align 8, !tbaa !9
  %1488 = tail call ptr @gen_intern(ptr noundef nonnull @.str.188, i64 noundef 0)
  %1489 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1490 = icmp eq i64 %1489, 1
  br i1 %1490, label %1491, label %1499

1491:                                             ; preds = %1486
  %1492 = load ptr, ptr @heap, align 8, !tbaa !5
  %1493 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1494 = icmp ult ptr %1492, %1493
  br i1 %1494, label %1497, label %1495

1495:                                             ; preds = %1491
  %1496 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1497

1497:                                             ; preds = %1495, %1491
  %1498 = getelementptr inbounds %struct.obj, ptr %1492, i64 1
  store ptr %1498, ptr @heap, align 8, !tbaa !5
  br label %1510

1499:                                             ; preds = %1486
  %1500 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1501 = icmp eq ptr %1500, null
  br i1 %1501, label %1502, label %1504

1502:                                             ; preds = %1499
  tail call void @gc_for_newcell()
  %1503 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1504

1504:                                             ; preds = %1502, %1499
  %1505 = phi ptr [ %1503, %1502 ], [ %1500, %1499 ]
  %1506 = getelementptr inbounds %struct.obj, ptr %1505, i64 0, i32 2, i32 0, i32 1
  %1507 = load ptr, ptr %1506, align 8, !tbaa !9
  store ptr %1507, ptr @freelist, align 8, !tbaa !5
  %1508 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1509 = add nsw i64 %1508, 1
  store i64 %1509, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1510

1510:                                             ; preds = %1504, %1497
  %1511 = phi ptr [ %1492, %1497 ], [ %1505, %1504 ]
  store i16 0, ptr %1511, align 8, !tbaa !35
  %1512 = getelementptr inbounds %struct.obj, ptr %1511, i64 0, i32 1
  store i16 8, ptr %1512, align 2, !tbaa !14
  %1513 = getelementptr inbounds %struct.obj, ptr %1511, i64 0, i32 2
  store ptr @.str.188, ptr %1513, align 8, !tbaa !9
  %1514 = getelementptr inbounds %struct.obj, ptr %1511, i64 0, i32 2, i32 0, i32 1
  store ptr @siod_verbose, ptr %1514, align 8, !tbaa !9
  %1515 = icmp eq ptr %1488, null
  br i1 %1515, label %1520, label %1516

1516:                                             ; preds = %1510
  %1517 = getelementptr inbounds %struct.obj, ptr %1488, i64 0, i32 1
  %1518 = load i16, ptr %1517, align 2, !tbaa !14
  %1519 = icmp eq i16 %1518, 3
  br i1 %1519, label %1522, label %1520

1520:                                             ; preds = %1516, %1510
  %1521 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1488) #38
  br label %1522

1522:                                             ; preds = %1516, %1520
  %1523 = getelementptr inbounds %struct.obj, ptr %1488, i64 0, i32 2, i32 0, i32 1
  store ptr %1511, ptr %1523, align 8, !tbaa !9
  %1524 = tail call ptr @gen_intern(ptr noundef nonnull @.str.189, i64 noundef 0)
  %1525 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1526 = icmp eq i64 %1525, 1
  br i1 %1526, label %1527, label %1535

1527:                                             ; preds = %1522
  %1528 = load ptr, ptr @heap, align 8, !tbaa !5
  %1529 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1530 = icmp ult ptr %1528, %1529
  br i1 %1530, label %1533, label %1531

1531:                                             ; preds = %1527
  %1532 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1533

1533:                                             ; preds = %1531, %1527
  %1534 = getelementptr inbounds %struct.obj, ptr %1528, i64 1
  store ptr %1534, ptr @heap, align 8, !tbaa !5
  br label %1546

1535:                                             ; preds = %1522
  %1536 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1537 = icmp eq ptr %1536, null
  br i1 %1537, label %1538, label %1540

1538:                                             ; preds = %1535
  tail call void @gc_for_newcell()
  %1539 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1540

1540:                                             ; preds = %1538, %1535
  %1541 = phi ptr [ %1539, %1538 ], [ %1536, %1535 ]
  %1542 = getelementptr inbounds %struct.obj, ptr %1541, i64 0, i32 2, i32 0, i32 1
  %1543 = load ptr, ptr %1542, align 8, !tbaa !9
  store ptr %1543, ptr @freelist, align 8, !tbaa !5
  %1544 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1545 = add nsw i64 %1544, 1
  store i64 %1545, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1546

1546:                                             ; preds = %1540, %1533
  %1547 = phi ptr [ %1528, %1533 ], [ %1541, %1540 ]
  store i16 0, ptr %1547, align 8, !tbaa !35
  %1548 = getelementptr inbounds %struct.obj, ptr %1547, i64 0, i32 1
  store i16 5, ptr %1548, align 2, !tbaa !14
  %1549 = getelementptr inbounds %struct.obj, ptr %1547, i64 0, i32 2
  store ptr @.str.189, ptr %1549, align 8, !tbaa !9
  %1550 = getelementptr inbounds %struct.obj, ptr %1547, i64 0, i32 2, i32 0, i32 1
  store ptr @copy_list, ptr %1550, align 8, !tbaa !9
  %1551 = icmp eq ptr %1524, null
  br i1 %1551, label %1556, label %1552

1552:                                             ; preds = %1546
  %1553 = getelementptr inbounds %struct.obj, ptr %1524, i64 0, i32 1
  %1554 = load i16, ptr %1553, align 2, !tbaa !14
  %1555 = icmp eq i16 %1554, 3
  br i1 %1555, label %1558, label %1556

1556:                                             ; preds = %1552, %1546
  %1557 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1524) #38
  br label %1558

1558:                                             ; preds = %1552, %1556
  %1559 = getelementptr inbounds %struct.obj, ptr %1524, i64 0, i32 2, i32 0, i32 1
  store ptr %1547, ptr %1559, align 8, !tbaa !9
  %1560 = tail call ptr @gen_intern(ptr noundef nonnull @.str.190, i64 noundef 0)
  %1561 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1562 = icmp eq i64 %1561, 1
  br i1 %1562, label %1563, label %1571

1563:                                             ; preds = %1558
  %1564 = load ptr, ptr @heap, align 8, !tbaa !5
  %1565 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1566 = icmp ult ptr %1564, %1565
  br i1 %1566, label %1569, label %1567

1567:                                             ; preds = %1563
  %1568 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1569

1569:                                             ; preds = %1567, %1563
  %1570 = getelementptr inbounds %struct.obj, ptr %1564, i64 1
  store ptr %1570, ptr @heap, align 8, !tbaa !5
  br label %1582

1571:                                             ; preds = %1558
  %1572 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1573 = icmp eq ptr %1572, null
  br i1 %1573, label %1574, label %1576

1574:                                             ; preds = %1571
  tail call void @gc_for_newcell()
  %1575 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1576

1576:                                             ; preds = %1574, %1571
  %1577 = phi ptr [ %1575, %1574 ], [ %1572, %1571 ]
  %1578 = getelementptr inbounds %struct.obj, ptr %1577, i64 0, i32 2, i32 0, i32 1
  %1579 = load ptr, ptr %1578, align 8, !tbaa !9
  store ptr %1579, ptr @freelist, align 8, !tbaa !5
  %1580 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1581 = add nsw i64 %1580, 1
  store i64 %1581, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1582

1582:                                             ; preds = %1576, %1569
  %1583 = phi ptr [ %1564, %1569 ], [ %1577, %1576 ]
  store i16 0, ptr %1583, align 8, !tbaa !35
  %1584 = getelementptr inbounds %struct.obj, ptr %1583, i64 0, i32 1
  store i16 8, ptr %1584, align 2, !tbaa !14
  %1585 = getelementptr inbounds %struct.obj, ptr %1583, i64 0, i32 2
  store ptr @.str.190, ptr %1585, align 8, !tbaa !9
  %1586 = getelementptr inbounds %struct.obj, ptr %1583, i64 0, i32 2, i32 0, i32 1
  store ptr @gc_status, ptr %1586, align 8, !tbaa !9
  %1587 = icmp eq ptr %1560, null
  br i1 %1587, label %1592, label %1588

1588:                                             ; preds = %1582
  %1589 = getelementptr inbounds %struct.obj, ptr %1560, i64 0, i32 1
  %1590 = load i16, ptr %1589, align 2, !tbaa !14
  %1591 = icmp eq i16 %1590, 3
  br i1 %1591, label %1594, label %1592

1592:                                             ; preds = %1588, %1582
  %1593 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1560) #38
  br label %1594

1594:                                             ; preds = %1588, %1592
  %1595 = getelementptr inbounds %struct.obj, ptr %1560, i64 0, i32 2, i32 0, i32 1
  store ptr %1583, ptr %1595, align 8, !tbaa !9
  %1596 = tail call ptr @gen_intern(ptr noundef nonnull @.str.191, i64 noundef 0)
  %1597 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1598 = icmp eq i64 %1597, 1
  br i1 %1598, label %1599, label %1607

1599:                                             ; preds = %1594
  %1600 = load ptr, ptr @heap, align 8, !tbaa !5
  %1601 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1602 = icmp ult ptr %1600, %1601
  br i1 %1602, label %1605, label %1603

1603:                                             ; preds = %1599
  %1604 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1605

1605:                                             ; preds = %1603, %1599
  %1606 = getelementptr inbounds %struct.obj, ptr %1600, i64 1
  store ptr %1606, ptr @heap, align 8, !tbaa !5
  br label %1618

1607:                                             ; preds = %1594
  %1608 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1609 = icmp eq ptr %1608, null
  br i1 %1609, label %1610, label %1612

1610:                                             ; preds = %1607
  tail call void @gc_for_newcell()
  %1611 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1612

1612:                                             ; preds = %1610, %1607
  %1613 = phi ptr [ %1611, %1610 ], [ %1608, %1607 ]
  %1614 = getelementptr inbounds %struct.obj, ptr %1613, i64 0, i32 2, i32 0, i32 1
  %1615 = load ptr, ptr %1614, align 8, !tbaa !9
  store ptr %1615, ptr @freelist, align 8, !tbaa !5
  %1616 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1617 = add nsw i64 %1616, 1
  store i64 %1617, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1618

1618:                                             ; preds = %1612, %1605
  %1619 = phi ptr [ %1600, %1605 ], [ %1613, %1612 ]
  store i16 0, ptr %1619, align 8, !tbaa !35
  %1620 = getelementptr inbounds %struct.obj, ptr %1619, i64 0, i32 1
  store i16 8, ptr %1620, align 2, !tbaa !14
  %1621 = getelementptr inbounds %struct.obj, ptr %1619, i64 0, i32 2
  store ptr @.str.191, ptr %1621, align 8, !tbaa !9
  %1622 = getelementptr inbounds %struct.obj, ptr %1619, i64 0, i32 2, i32 0, i32 1
  store ptr @user_gc, ptr %1622, align 8, !tbaa !9
  %1623 = icmp eq ptr %1596, null
  br i1 %1623, label %1628, label %1624

1624:                                             ; preds = %1618
  %1625 = getelementptr inbounds %struct.obj, ptr %1596, i64 0, i32 1
  %1626 = load i16, ptr %1625, align 2, !tbaa !14
  %1627 = icmp eq i16 %1626, 3
  br i1 %1627, label %1630, label %1628

1628:                                             ; preds = %1624, %1618
  %1629 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1596) #38
  br label %1630

1630:                                             ; preds = %1624, %1628
  %1631 = getelementptr inbounds %struct.obj, ptr %1596, i64 0, i32 2, i32 0, i32 1
  store ptr %1619, ptr %1631, align 8, !tbaa !9
  %1632 = tail call ptr @gen_intern(ptr noundef nonnull @.str.192, i64 noundef 0)
  %1633 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1634 = icmp eq i64 %1633, 1
  br i1 %1634, label %1635, label %1643

1635:                                             ; preds = %1630
  %1636 = load ptr, ptr @heap, align 8, !tbaa !5
  %1637 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1638 = icmp ult ptr %1636, %1637
  br i1 %1638, label %1641, label %1639

1639:                                             ; preds = %1635
  %1640 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1641

1641:                                             ; preds = %1639, %1635
  %1642 = getelementptr inbounds %struct.obj, ptr %1636, i64 1
  store ptr %1642, ptr @heap, align 8, !tbaa !5
  br label %1654

1643:                                             ; preds = %1630
  %1644 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1645 = icmp eq ptr %1644, null
  br i1 %1645, label %1646, label %1648

1646:                                             ; preds = %1643
  tail call void @gc_for_newcell()
  %1647 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1648

1648:                                             ; preds = %1646, %1643
  %1649 = phi ptr [ %1647, %1646 ], [ %1644, %1643 ]
  %1650 = getelementptr inbounds %struct.obj, ptr %1649, i64 0, i32 2, i32 0, i32 1
  %1651 = load ptr, ptr %1650, align 8, !tbaa !9
  store ptr %1651, ptr @freelist, align 8, !tbaa !5
  %1652 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1653 = add nsw i64 %1652, 1
  store i64 %1653, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1654

1654:                                             ; preds = %1648, %1641
  %1655 = phi ptr [ %1636, %1641 ], [ %1649, %1648 ]
  store i16 0, ptr %1655, align 8, !tbaa !35
  %1656 = getelementptr inbounds %struct.obj, ptr %1655, i64 0, i32 1
  store i16 7, ptr %1656, align 2, !tbaa !14
  %1657 = getelementptr inbounds %struct.obj, ptr %1655, i64 0, i32 2
  store ptr @.str.192, ptr %1657, align 8, !tbaa !9
  %1658 = getelementptr inbounds %struct.obj, ptr %1655, i64 0, i32 2, i32 0, i32 1
  store ptr @load, ptr %1658, align 8, !tbaa !9
  %1659 = icmp eq ptr %1632, null
  br i1 %1659, label %1664, label %1660

1660:                                             ; preds = %1654
  %1661 = getelementptr inbounds %struct.obj, ptr %1632, i64 0, i32 1
  %1662 = load i16, ptr %1661, align 2, !tbaa !14
  %1663 = icmp eq i16 %1662, 3
  br i1 %1663, label %1666, label %1664

1664:                                             ; preds = %1660, %1654
  %1665 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1632) #38
  br label %1666

1666:                                             ; preds = %1660, %1664
  %1667 = getelementptr inbounds %struct.obj, ptr %1632, i64 0, i32 2, i32 0, i32 1
  store ptr %1655, ptr %1667, align 8, !tbaa !9
  %1668 = tail call ptr @gen_intern(ptr noundef nonnull @.str.193, i64 noundef 0)
  %1669 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1670 = icmp eq i64 %1669, 1
  br i1 %1670, label %1671, label %1679

1671:                                             ; preds = %1666
  %1672 = load ptr, ptr @heap, align 8, !tbaa !5
  %1673 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1674 = icmp ult ptr %1672, %1673
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1671
  %1676 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1677

1677:                                             ; preds = %1675, %1671
  %1678 = getelementptr inbounds %struct.obj, ptr %1672, i64 1
  store ptr %1678, ptr @heap, align 8, !tbaa !5
  br label %1690

1679:                                             ; preds = %1666
  %1680 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1681 = icmp eq ptr %1680, null
  br i1 %1681, label %1682, label %1684

1682:                                             ; preds = %1679
  tail call void @gc_for_newcell()
  %1683 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1684

1684:                                             ; preds = %1682, %1679
  %1685 = phi ptr [ %1683, %1682 ], [ %1680, %1679 ]
  %1686 = getelementptr inbounds %struct.obj, ptr %1685, i64 0, i32 2, i32 0, i32 1
  %1687 = load ptr, ptr %1686, align 8, !tbaa !9
  store ptr %1687, ptr @freelist, align 8, !tbaa !5
  %1688 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1689 = add nsw i64 %1688, 1
  store i64 %1689, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1690

1690:                                             ; preds = %1684, %1677
  %1691 = phi ptr [ %1672, %1677 ], [ %1685, %1684 ]
  store i16 0, ptr %1691, align 8, !tbaa !35
  %1692 = getelementptr inbounds %struct.obj, ptr %1691, i64 0, i32 1
  store i16 5, ptr %1692, align 2, !tbaa !14
  %1693 = getelementptr inbounds %struct.obj, ptr %1691, i64 0, i32 2
  store ptr @.str.193, ptr %1693, align 8, !tbaa !9
  %1694 = getelementptr inbounds %struct.obj, ptr %1691, i64 0, i32 2, i32 0, i32 1
  store ptr @require, ptr %1694, align 8, !tbaa !9
  %1695 = icmp eq ptr %1668, null
  br i1 %1695, label %1700, label %1696

1696:                                             ; preds = %1690
  %1697 = getelementptr inbounds %struct.obj, ptr %1668, i64 0, i32 1
  %1698 = load i16, ptr %1697, align 2, !tbaa !14
  %1699 = icmp eq i16 %1698, 3
  br i1 %1699, label %1702, label %1700

1700:                                             ; preds = %1696, %1690
  %1701 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1668) #38
  br label %1702

1702:                                             ; preds = %1696, %1700
  %1703 = getelementptr inbounds %struct.obj, ptr %1668, i64 0, i32 2, i32 0, i32 1
  store ptr %1691, ptr %1703, align 8, !tbaa !9
  %1704 = tail call ptr @gen_intern(ptr noundef nonnull @.str.194, i64 noundef 0)
  %1705 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1706 = icmp eq i64 %1705, 1
  br i1 %1706, label %1707, label %1715

1707:                                             ; preds = %1702
  %1708 = load ptr, ptr @heap, align 8, !tbaa !5
  %1709 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1710 = icmp ult ptr %1708, %1709
  br i1 %1710, label %1713, label %1711

1711:                                             ; preds = %1707
  %1712 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1713

1713:                                             ; preds = %1711, %1707
  %1714 = getelementptr inbounds %struct.obj, ptr %1708, i64 1
  store ptr %1714, ptr @heap, align 8, !tbaa !5
  br label %1726

1715:                                             ; preds = %1702
  %1716 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1717 = icmp eq ptr %1716, null
  br i1 %1717, label %1718, label %1720

1718:                                             ; preds = %1715
  tail call void @gc_for_newcell()
  %1719 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1720

1720:                                             ; preds = %1718, %1715
  %1721 = phi ptr [ %1719, %1718 ], [ %1716, %1715 ]
  %1722 = getelementptr inbounds %struct.obj, ptr %1721, i64 0, i32 2, i32 0, i32 1
  %1723 = load ptr, ptr %1722, align 8, !tbaa !9
  store ptr %1723, ptr @freelist, align 8, !tbaa !5
  %1724 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1725 = add nsw i64 %1724, 1
  store i64 %1725, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1726

1726:                                             ; preds = %1720, %1713
  %1727 = phi ptr [ %1708, %1713 ], [ %1721, %1720 ]
  store i16 0, ptr %1727, align 8, !tbaa !35
  %1728 = getelementptr inbounds %struct.obj, ptr %1727, i64 0, i32 1
  store i16 5, ptr %1728, align 2, !tbaa !14
  %1729 = getelementptr inbounds %struct.obj, ptr %1727, i64 0, i32 2
  store ptr @.str.194, ptr %1729, align 8, !tbaa !9
  %1730 = getelementptr inbounds %struct.obj, ptr %1727, i64 0, i32 2, i32 0, i32 1
  store ptr @consp, ptr %1730, align 8, !tbaa !9
  %1731 = icmp eq ptr %1704, null
  br i1 %1731, label %1736, label %1732

1732:                                             ; preds = %1726
  %1733 = getelementptr inbounds %struct.obj, ptr %1704, i64 0, i32 1
  %1734 = load i16, ptr %1733, align 2, !tbaa !14
  %1735 = icmp eq i16 %1734, 3
  br i1 %1735, label %1738, label %1736

1736:                                             ; preds = %1732, %1726
  %1737 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1704) #38
  br label %1738

1738:                                             ; preds = %1732, %1736
  %1739 = getelementptr inbounds %struct.obj, ptr %1704, i64 0, i32 2, i32 0, i32 1
  store ptr %1727, ptr %1739, align 8, !tbaa !9
  %1740 = tail call ptr @gen_intern(ptr noundef nonnull @.str.195, i64 noundef 0)
  %1741 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1742 = icmp eq i64 %1741, 1
  br i1 %1742, label %1743, label %1751

1743:                                             ; preds = %1738
  %1744 = load ptr, ptr @heap, align 8, !tbaa !5
  %1745 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1746 = icmp ult ptr %1744, %1745
  br i1 %1746, label %1749, label %1747

1747:                                             ; preds = %1743
  %1748 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1749

1749:                                             ; preds = %1747, %1743
  %1750 = getelementptr inbounds %struct.obj, ptr %1744, i64 1
  store ptr %1750, ptr @heap, align 8, !tbaa !5
  br label %1762

1751:                                             ; preds = %1738
  %1752 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1753 = icmp eq ptr %1752, null
  br i1 %1753, label %1754, label %1756

1754:                                             ; preds = %1751
  tail call void @gc_for_newcell()
  %1755 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1756

1756:                                             ; preds = %1754, %1751
  %1757 = phi ptr [ %1755, %1754 ], [ %1752, %1751 ]
  %1758 = getelementptr inbounds %struct.obj, ptr %1757, i64 0, i32 2, i32 0, i32 1
  %1759 = load ptr, ptr %1758, align 8, !tbaa !9
  store ptr %1759, ptr @freelist, align 8, !tbaa !5
  %1760 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1761 = add nsw i64 %1760, 1
  store i64 %1761, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1762

1762:                                             ; preds = %1756, %1749
  %1763 = phi ptr [ %1744, %1749 ], [ %1757, %1756 ]
  store i16 0, ptr %1763, align 8, !tbaa !35
  %1764 = getelementptr inbounds %struct.obj, ptr %1763, i64 0, i32 1
  store i16 5, ptr %1764, align 2, !tbaa !14
  %1765 = getelementptr inbounds %struct.obj, ptr %1763, i64 0, i32 2
  store ptr @.str.195, ptr %1765, align 8, !tbaa !9
  %1766 = getelementptr inbounds %struct.obj, ptr %1763, i64 0, i32 2, i32 0, i32 1
  store ptr @symbolp, ptr %1766, align 8, !tbaa !9
  %1767 = icmp eq ptr %1740, null
  br i1 %1767, label %1772, label %1768

1768:                                             ; preds = %1762
  %1769 = getelementptr inbounds %struct.obj, ptr %1740, i64 0, i32 1
  %1770 = load i16, ptr %1769, align 2, !tbaa !14
  %1771 = icmp eq i16 %1770, 3
  br i1 %1771, label %1774, label %1772

1772:                                             ; preds = %1768, %1762
  %1773 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1740) #38
  br label %1774

1774:                                             ; preds = %1768, %1772
  %1775 = getelementptr inbounds %struct.obj, ptr %1740, i64 0, i32 2, i32 0, i32 1
  store ptr %1763, ptr %1775, align 8, !tbaa !9
  %1776 = tail call ptr @gen_intern(ptr noundef nonnull @.str.196, i64 noundef 0)
  %1777 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1778 = icmp eq i64 %1777, 1
  br i1 %1778, label %1779, label %1787

1779:                                             ; preds = %1774
  %1780 = load ptr, ptr @heap, align 8, !tbaa !5
  %1781 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1782 = icmp ult ptr %1780, %1781
  br i1 %1782, label %1785, label %1783

1783:                                             ; preds = %1779
  %1784 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1785

1785:                                             ; preds = %1783, %1779
  %1786 = getelementptr inbounds %struct.obj, ptr %1780, i64 1
  store ptr %1786, ptr @heap, align 8, !tbaa !5
  br label %1798

1787:                                             ; preds = %1774
  %1788 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1789 = icmp eq ptr %1788, null
  br i1 %1789, label %1790, label %1792

1790:                                             ; preds = %1787
  tail call void @gc_for_newcell()
  %1791 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1792

1792:                                             ; preds = %1790, %1787
  %1793 = phi ptr [ %1791, %1790 ], [ %1788, %1787 ]
  %1794 = getelementptr inbounds %struct.obj, ptr %1793, i64 0, i32 2, i32 0, i32 1
  %1795 = load ptr, ptr %1794, align 8, !tbaa !9
  store ptr %1795, ptr @freelist, align 8, !tbaa !5
  %1796 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1797 = add nsw i64 %1796, 1
  store i64 %1797, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1798

1798:                                             ; preds = %1792, %1785
  %1799 = phi ptr [ %1780, %1785 ], [ %1793, %1792 ]
  store i16 0, ptr %1799, align 8, !tbaa !35
  %1800 = getelementptr inbounds %struct.obj, ptr %1799, i64 0, i32 1
  store i16 5, ptr %1800, align 2, !tbaa !14
  %1801 = getelementptr inbounds %struct.obj, ptr %1799, i64 0, i32 2
  store ptr @.str.196, ptr %1801, align 8, !tbaa !9
  %1802 = getelementptr inbounds %struct.obj, ptr %1799, i64 0, i32 2, i32 0, i32 1
  store ptr @numberp, ptr %1802, align 8, !tbaa !9
  %1803 = icmp eq ptr %1776, null
  br i1 %1803, label %1808, label %1804

1804:                                             ; preds = %1798
  %1805 = getelementptr inbounds %struct.obj, ptr %1776, i64 0, i32 1
  %1806 = load i16, ptr %1805, align 2, !tbaa !14
  %1807 = icmp eq i16 %1806, 3
  br i1 %1807, label %1810, label %1808

1808:                                             ; preds = %1804, %1798
  %1809 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1776) #38
  br label %1810

1810:                                             ; preds = %1804, %1808
  %1811 = getelementptr inbounds %struct.obj, ptr %1776, i64 0, i32 2, i32 0, i32 1
  store ptr %1799, ptr %1811, align 8, !tbaa !9
  %1812 = tail call ptr @gen_intern(ptr noundef nonnull @.str.96, i64 noundef 0)
  %1813 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1814 = icmp eq i64 %1813, 1
  br i1 %1814, label %1815, label %1823

1815:                                             ; preds = %1810
  %1816 = load ptr, ptr @heap, align 8, !tbaa !5
  %1817 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1818 = icmp ult ptr %1816, %1817
  br i1 %1818, label %1821, label %1819

1819:                                             ; preds = %1815
  %1820 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1821

1821:                                             ; preds = %1819, %1815
  %1822 = getelementptr inbounds %struct.obj, ptr %1816, i64 1
  store ptr %1822, ptr @heap, align 8, !tbaa !5
  br label %1834

1823:                                             ; preds = %1810
  %1824 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1825 = icmp eq ptr %1824, null
  br i1 %1825, label %1826, label %1828

1826:                                             ; preds = %1823
  tail call void @gc_for_newcell()
  %1827 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1828

1828:                                             ; preds = %1826, %1823
  %1829 = phi ptr [ %1827, %1826 ], [ %1824, %1823 ]
  %1830 = getelementptr inbounds %struct.obj, ptr %1829, i64 0, i32 2, i32 0, i32 1
  %1831 = load ptr, ptr %1830, align 8, !tbaa !9
  store ptr %1831, ptr @freelist, align 8, !tbaa !5
  %1832 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1833 = add nsw i64 %1832, 1
  store i64 %1833, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1834

1834:                                             ; preds = %1828, %1821
  %1835 = phi ptr [ %1816, %1821 ], [ %1829, %1828 ]
  store i16 0, ptr %1835, align 8, !tbaa !35
  %1836 = getelementptr inbounds %struct.obj, ptr %1835, i64 0, i32 1
  store i16 10, ptr %1836, align 2, !tbaa !14
  %1837 = getelementptr inbounds %struct.obj, ptr %1835, i64 0, i32 2
  store ptr @.str.96, ptr %1837, align 8, !tbaa !9
  %1838 = getelementptr inbounds %struct.obj, ptr %1835, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_let, ptr %1838, align 8, !tbaa !9
  %1839 = icmp eq ptr %1812, null
  br i1 %1839, label %1844, label %1840

1840:                                             ; preds = %1834
  %1841 = getelementptr inbounds %struct.obj, ptr %1812, i64 0, i32 1
  %1842 = load i16, ptr %1841, align 2, !tbaa !14
  %1843 = icmp eq i16 %1842, 3
  br i1 %1843, label %1846, label %1844

1844:                                             ; preds = %1840, %1834
  %1845 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1812) #38
  br label %1846

1846:                                             ; preds = %1840, %1844
  %1847 = getelementptr inbounds %struct.obj, ptr %1812, i64 0, i32 2, i32 0, i32 1
  store ptr %1835, ptr %1847, align 8, !tbaa !9
  %1848 = tail call ptr @gen_intern(ptr noundef nonnull @.str.58, i64 noundef 0)
  %1849 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1850 = icmp eq i64 %1849, 1
  br i1 %1850, label %1851, label %1859

1851:                                             ; preds = %1846
  %1852 = load ptr, ptr @heap, align 8, !tbaa !5
  %1853 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1854 = icmp ult ptr %1852, %1853
  br i1 %1854, label %1857, label %1855

1855:                                             ; preds = %1851
  %1856 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1857

1857:                                             ; preds = %1855, %1851
  %1858 = getelementptr inbounds %struct.obj, ptr %1852, i64 1
  store ptr %1858, ptr @heap, align 8, !tbaa !5
  br label %1870

1859:                                             ; preds = %1846
  %1860 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1861 = icmp eq ptr %1860, null
  br i1 %1861, label %1862, label %1864

1862:                                             ; preds = %1859
  tail call void @gc_for_newcell()
  %1863 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1864

1864:                                             ; preds = %1862, %1859
  %1865 = phi ptr [ %1863, %1862 ], [ %1860, %1859 ]
  %1866 = getelementptr inbounds %struct.obj, ptr %1865, i64 0, i32 2, i32 0, i32 1
  %1867 = load ptr, ptr %1866, align 8, !tbaa !9
  store ptr %1867, ptr @freelist, align 8, !tbaa !5
  %1868 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1869 = add nsw i64 %1868, 1
  store i64 %1869, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1870

1870:                                             ; preds = %1864, %1857
  %1871 = phi ptr [ %1852, %1857 ], [ %1865, %1864 ]
  store i16 0, ptr %1871, align 8, !tbaa !35
  %1872 = getelementptr inbounds %struct.obj, ptr %1871, i64 0, i32 1
  store i16 5, ptr %1872, align 2, !tbaa !14
  %1873 = getelementptr inbounds %struct.obj, ptr %1871, i64 0, i32 2
  store ptr @.str.58, ptr %1873, align 8, !tbaa !9
  %1874 = getelementptr inbounds %struct.obj, ptr %1871, i64 0, i32 2, i32 0, i32 1
  store ptr @let_macro, ptr %1874, align 8, !tbaa !9
  %1875 = icmp eq ptr %1848, null
  br i1 %1875, label %1880, label %1876

1876:                                             ; preds = %1870
  %1877 = getelementptr inbounds %struct.obj, ptr %1848, i64 0, i32 1
  %1878 = load i16, ptr %1877, align 2, !tbaa !14
  %1879 = icmp eq i16 %1878, 3
  br i1 %1879, label %1882, label %1880

1880:                                             ; preds = %1876, %1870
  %1881 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1848) #38
  br label %1882

1882:                                             ; preds = %1876, %1880
  %1883 = getelementptr inbounds %struct.obj, ptr %1848, i64 0, i32 2, i32 0, i32 1
  store ptr %1871, ptr %1883, align 8, !tbaa !9
  %1884 = tail call ptr @gen_intern(ptr noundef nonnull @.str.60, i64 noundef 0)
  %1885 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1886 = icmp eq i64 %1885, 1
  br i1 %1886, label %1887, label %1895

1887:                                             ; preds = %1882
  %1888 = load ptr, ptr @heap, align 8, !tbaa !5
  %1889 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1890 = icmp ult ptr %1888, %1889
  br i1 %1890, label %1893, label %1891

1891:                                             ; preds = %1887
  %1892 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1893

1893:                                             ; preds = %1891, %1887
  %1894 = getelementptr inbounds %struct.obj, ptr %1888, i64 1
  store ptr %1894, ptr @heap, align 8, !tbaa !5
  br label %1906

1895:                                             ; preds = %1882
  %1896 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1897 = icmp eq ptr %1896, null
  br i1 %1897, label %1898, label %1900

1898:                                             ; preds = %1895
  tail call void @gc_for_newcell()
  %1899 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1900

1900:                                             ; preds = %1898, %1895
  %1901 = phi ptr [ %1899, %1898 ], [ %1896, %1895 ]
  %1902 = getelementptr inbounds %struct.obj, ptr %1901, i64 0, i32 2, i32 0, i32 1
  %1903 = load ptr, ptr %1902, align 8, !tbaa !9
  store ptr %1903, ptr @freelist, align 8, !tbaa !5
  %1904 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1905 = add nsw i64 %1904, 1
  store i64 %1905, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1906

1906:                                             ; preds = %1900, %1893
  %1907 = phi ptr [ %1888, %1893 ], [ %1901, %1900 ]
  store i16 0, ptr %1907, align 8, !tbaa !35
  %1908 = getelementptr inbounds %struct.obj, ptr %1907, i64 0, i32 1
  store i16 5, ptr %1908, align 2, !tbaa !14
  %1909 = getelementptr inbounds %struct.obj, ptr %1907, i64 0, i32 2
  store ptr @.str.60, ptr %1909, align 8, !tbaa !9
  %1910 = getelementptr inbounds %struct.obj, ptr %1907, i64 0, i32 2, i32 0, i32 1
  store ptr @letstar_macro, ptr %1910, align 8, !tbaa !9
  %1911 = icmp eq ptr %1884, null
  br i1 %1911, label %1916, label %1912

1912:                                             ; preds = %1906
  %1913 = getelementptr inbounds %struct.obj, ptr %1884, i64 0, i32 1
  %1914 = load i16, ptr %1913, align 2, !tbaa !14
  %1915 = icmp eq i16 %1914, 3
  br i1 %1915, label %1918, label %1916

1916:                                             ; preds = %1912, %1906
  %1917 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1884) #38
  br label %1918

1918:                                             ; preds = %1912, %1916
  %1919 = getelementptr inbounds %struct.obj, ptr %1884, i64 0, i32 2, i32 0, i32 1
  store ptr %1907, ptr %1919, align 8, !tbaa !9
  %1920 = tail call ptr @gen_intern(ptr noundef nonnull @.str.62, i64 noundef 0)
  %1921 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1922 = icmp eq i64 %1921, 1
  br i1 %1922, label %1923, label %1931

1923:                                             ; preds = %1918
  %1924 = load ptr, ptr @heap, align 8, !tbaa !5
  %1925 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1926 = icmp ult ptr %1924, %1925
  br i1 %1926, label %1929, label %1927

1927:                                             ; preds = %1923
  %1928 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1929

1929:                                             ; preds = %1927, %1923
  %1930 = getelementptr inbounds %struct.obj, ptr %1924, i64 1
  store ptr %1930, ptr @heap, align 8, !tbaa !5
  br label %1942

1931:                                             ; preds = %1918
  %1932 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1933 = icmp eq ptr %1932, null
  br i1 %1933, label %1934, label %1936

1934:                                             ; preds = %1931
  tail call void @gc_for_newcell()
  %1935 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1936

1936:                                             ; preds = %1934, %1931
  %1937 = phi ptr [ %1935, %1934 ], [ %1932, %1931 ]
  %1938 = getelementptr inbounds %struct.obj, ptr %1937, i64 0, i32 2, i32 0, i32 1
  %1939 = load ptr, ptr %1938, align 8, !tbaa !9
  store ptr %1939, ptr @freelist, align 8, !tbaa !5
  %1940 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1941 = add nsw i64 %1940, 1
  store i64 %1941, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1942

1942:                                             ; preds = %1936, %1929
  %1943 = phi ptr [ %1924, %1929 ], [ %1937, %1936 ]
  store i16 0, ptr %1943, align 8, !tbaa !35
  %1944 = getelementptr inbounds %struct.obj, ptr %1943, i64 0, i32 1
  store i16 5, ptr %1944, align 2, !tbaa !14
  %1945 = getelementptr inbounds %struct.obj, ptr %1943, i64 0, i32 2
  store ptr @.str.62, ptr %1945, align 8, !tbaa !9
  %1946 = getelementptr inbounds %struct.obj, ptr %1943, i64 0, i32 2, i32 0, i32 1
  store ptr @letrec_macro, ptr %1946, align 8, !tbaa !9
  %1947 = icmp eq ptr %1920, null
  br i1 %1947, label %1952, label %1948

1948:                                             ; preds = %1942
  %1949 = getelementptr inbounds %struct.obj, ptr %1920, i64 0, i32 1
  %1950 = load i16, ptr %1949, align 2, !tbaa !14
  %1951 = icmp eq i16 %1950, 3
  br i1 %1951, label %1954, label %1952

1952:                                             ; preds = %1948, %1942
  %1953 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1920) #38
  br label %1954

1954:                                             ; preds = %1948, %1952
  %1955 = getelementptr inbounds %struct.obj, ptr %1920, i64 0, i32 2, i32 0, i32 1
  store ptr %1943, ptr %1955, align 8, !tbaa !9
  %1956 = tail call ptr @gen_intern(ptr noundef nonnull @.str.197, i64 noundef 0)
  %1957 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1958 = icmp eq i64 %1957, 1
  br i1 %1958, label %1959, label %1967

1959:                                             ; preds = %1954
  %1960 = load ptr, ptr @heap, align 8, !tbaa !5
  %1961 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1962 = icmp ult ptr %1960, %1961
  br i1 %1962, label %1965, label %1963

1963:                                             ; preds = %1959
  %1964 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %1965

1965:                                             ; preds = %1963, %1959
  %1966 = getelementptr inbounds %struct.obj, ptr %1960, i64 1
  store ptr %1966, ptr @heap, align 8, !tbaa !5
  br label %1978

1967:                                             ; preds = %1954
  %1968 = load ptr, ptr @freelist, align 8, !tbaa !5
  %1969 = icmp eq ptr %1968, null
  br i1 %1969, label %1970, label %1972

1970:                                             ; preds = %1967
  tail call void @gc_for_newcell()
  %1971 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %1972

1972:                                             ; preds = %1970, %1967
  %1973 = phi ptr [ %1971, %1970 ], [ %1968, %1967 ]
  %1974 = getelementptr inbounds %struct.obj, ptr %1973, i64 0, i32 2, i32 0, i32 1
  %1975 = load ptr, ptr %1974, align 8, !tbaa !9
  store ptr %1975, ptr @freelist, align 8, !tbaa !5
  %1976 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %1977 = add nsw i64 %1976, 1
  store i64 %1977, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %1978

1978:                                             ; preds = %1972, %1965
  %1979 = phi ptr [ %1960, %1965 ], [ %1973, %1972 ]
  store i16 0, ptr %1979, align 8, !tbaa !35
  %1980 = getelementptr inbounds %struct.obj, ptr %1979, i64 0, i32 1
  store i16 6, ptr %1980, align 2, !tbaa !14
  %1981 = getelementptr inbounds %struct.obj, ptr %1979, i64 0, i32 2
  store ptr @.str.197, ptr %1981, align 8, !tbaa !9
  %1982 = getelementptr inbounds %struct.obj, ptr %1979, i64 0, i32 2, i32 0, i32 1
  store ptr @symbol_boundp, ptr %1982, align 8, !tbaa !9
  %1983 = icmp eq ptr %1956, null
  br i1 %1983, label %1988, label %1984

1984:                                             ; preds = %1978
  %1985 = getelementptr inbounds %struct.obj, ptr %1956, i64 0, i32 1
  %1986 = load i16, ptr %1985, align 2, !tbaa !14
  %1987 = icmp eq i16 %1986, 3
  br i1 %1987, label %1990, label %1988

1988:                                             ; preds = %1984, %1978
  %1989 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1956) #38
  br label %1990

1990:                                             ; preds = %1984, %1988
  %1991 = getelementptr inbounds %struct.obj, ptr %1956, i64 0, i32 2, i32 0, i32 1
  store ptr %1979, ptr %1991, align 8, !tbaa !9
  %1992 = tail call ptr @gen_intern(ptr noundef nonnull @.str.198, i64 noundef 0)
  %1993 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %1994 = icmp eq i64 %1993, 1
  br i1 %1994, label %1995, label %2003

1995:                                             ; preds = %1990
  %1996 = load ptr, ptr @heap, align 8, !tbaa !5
  %1997 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %1998 = icmp ult ptr %1996, %1997
  br i1 %1998, label %2001, label %1999

1999:                                             ; preds = %1995
  %2000 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2001

2001:                                             ; preds = %1999, %1995
  %2002 = getelementptr inbounds %struct.obj, ptr %1996, i64 1
  store ptr %2002, ptr @heap, align 8, !tbaa !5
  br label %2014

2003:                                             ; preds = %1990
  %2004 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2005 = icmp eq ptr %2004, null
  br i1 %2005, label %2006, label %2008

2006:                                             ; preds = %2003
  tail call void @gc_for_newcell()
  %2007 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2008

2008:                                             ; preds = %2006, %2003
  %2009 = phi ptr [ %2007, %2006 ], [ %2004, %2003 ]
  %2010 = getelementptr inbounds %struct.obj, ptr %2009, i64 0, i32 2, i32 0, i32 1
  %2011 = load ptr, ptr %2010, align 8, !tbaa !9
  store ptr %2011, ptr @freelist, align 8, !tbaa !5
  %2012 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2013 = add nsw i64 %2012, 1
  store i64 %2013, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2014

2014:                                             ; preds = %2008, %2001
  %2015 = phi ptr [ %1996, %2001 ], [ %2009, %2008 ]
  store i16 0, ptr %2015, align 8, !tbaa !35
  %2016 = getelementptr inbounds %struct.obj, ptr %2015, i64 0, i32 1
  store i16 6, ptr %2016, align 2, !tbaa !14
  %2017 = getelementptr inbounds %struct.obj, ptr %2015, i64 0, i32 2
  store ptr @.str.198, ptr %2017, align 8, !tbaa !9
  %2018 = getelementptr inbounds %struct.obj, ptr %2015, i64 0, i32 2, i32 0, i32 1
  store ptr @symbol_value, ptr %2018, align 8, !tbaa !9
  %2019 = icmp eq ptr %1992, null
  br i1 %2019, label %2024, label %2020

2020:                                             ; preds = %2014
  %2021 = getelementptr inbounds %struct.obj, ptr %1992, i64 0, i32 1
  %2022 = load i16, ptr %2021, align 2, !tbaa !14
  %2023 = icmp eq i16 %2022, 3
  br i1 %2023, label %2026, label %2024

2024:                                             ; preds = %2020, %2014
  %2025 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %1992) #38
  br label %2026

2026:                                             ; preds = %2020, %2024
  %2027 = getelementptr inbounds %struct.obj, ptr %1992, i64 0, i32 2, i32 0, i32 1
  store ptr %2015, ptr %2027, align 8, !tbaa !9
  %2028 = tail call ptr @gen_intern(ptr noundef nonnull @.str.199, i64 noundef 0)
  %2029 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2030 = icmp eq i64 %2029, 1
  br i1 %2030, label %2031, label %2039

2031:                                             ; preds = %2026
  %2032 = load ptr, ptr @heap, align 8, !tbaa !5
  %2033 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2034 = icmp ult ptr %2032, %2033
  br i1 %2034, label %2037, label %2035

2035:                                             ; preds = %2031
  %2036 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2037

2037:                                             ; preds = %2035, %2031
  %2038 = getelementptr inbounds %struct.obj, ptr %2032, i64 1
  store ptr %2038, ptr @heap, align 8, !tbaa !5
  br label %2050

2039:                                             ; preds = %2026
  %2040 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2041 = icmp eq ptr %2040, null
  br i1 %2041, label %2042, label %2044

2042:                                             ; preds = %2039
  tail call void @gc_for_newcell()
  %2043 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2044

2044:                                             ; preds = %2042, %2039
  %2045 = phi ptr [ %2043, %2042 ], [ %2040, %2039 ]
  %2046 = getelementptr inbounds %struct.obj, ptr %2045, i64 0, i32 2, i32 0, i32 1
  %2047 = load ptr, ptr %2046, align 8, !tbaa !9
  store ptr %2047, ptr @freelist, align 8, !tbaa !5
  %2048 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2049 = add nsw i64 %2048, 1
  store i64 %2049, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2050

2050:                                             ; preds = %2044, %2037
  %2051 = phi ptr [ %2032, %2037 ], [ %2045, %2044 ]
  store i16 0, ptr %2051, align 8, !tbaa !35
  %2052 = getelementptr inbounds %struct.obj, ptr %2051, i64 0, i32 1
  store i16 7, ptr %2052, align 2, !tbaa !14
  %2053 = getelementptr inbounds %struct.obj, ptr %2051, i64 0, i32 2
  store ptr @.str.199, ptr %2053, align 8, !tbaa !9
  %2054 = getelementptr inbounds %struct.obj, ptr %2051, i64 0, i32 2, i32 0, i32 1
  store ptr @setvar, ptr %2054, align 8, !tbaa !9
  %2055 = icmp eq ptr %2028, null
  br i1 %2055, label %2060, label %2056

2056:                                             ; preds = %2050
  %2057 = getelementptr inbounds %struct.obj, ptr %2028, i64 0, i32 1
  %2058 = load i16, ptr %2057, align 2, !tbaa !14
  %2059 = icmp eq i16 %2058, 3
  br i1 %2059, label %2062, label %2060

2060:                                             ; preds = %2056, %2050
  %2061 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2028) #38
  br label %2062

2062:                                             ; preds = %2056, %2060
  %2063 = getelementptr inbounds %struct.obj, ptr %2028, i64 0, i32 2, i32 0, i32 1
  store ptr %2051, ptr %2063, align 8, !tbaa !9
  %2064 = tail call ptr @gen_intern(ptr noundef nonnull @.str.200, i64 noundef 0)
  %2065 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2066 = icmp eq i64 %2065, 1
  br i1 %2066, label %2067, label %2075

2067:                                             ; preds = %2062
  %2068 = load ptr, ptr @heap, align 8, !tbaa !5
  %2069 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2070 = icmp ult ptr %2068, %2069
  br i1 %2070, label %2073, label %2071

2071:                                             ; preds = %2067
  %2072 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2073

2073:                                             ; preds = %2071, %2067
  %2074 = getelementptr inbounds %struct.obj, ptr %2068, i64 1
  store ptr %2074, ptr @heap, align 8, !tbaa !5
  br label %2086

2075:                                             ; preds = %2062
  %2076 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2077 = icmp eq ptr %2076, null
  br i1 %2077, label %2078, label %2080

2078:                                             ; preds = %2075
  tail call void @gc_for_newcell()
  %2079 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2080

2080:                                             ; preds = %2078, %2075
  %2081 = phi ptr [ %2079, %2078 ], [ %2076, %2075 ]
  %2082 = getelementptr inbounds %struct.obj, ptr %2081, i64 0, i32 2, i32 0, i32 1
  %2083 = load ptr, ptr %2082, align 8, !tbaa !9
  store ptr %2083, ptr @freelist, align 8, !tbaa !5
  %2084 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2085 = add nsw i64 %2084, 1
  store i64 %2085, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2086

2086:                                             ; preds = %2080, %2073
  %2087 = phi ptr [ %2068, %2073 ], [ %2081, %2080 ]
  store i16 0, ptr %2087, align 8, !tbaa !35
  %2088 = getelementptr inbounds %struct.obj, ptr %2087, i64 0, i32 1
  store i16 9, ptr %2088, align 2, !tbaa !14
  %2089 = getelementptr inbounds %struct.obj, ptr %2087, i64 0, i32 2
  store ptr @.str.200, ptr %2089, align 8, !tbaa !9
  %2090 = getelementptr inbounds %struct.obj, ptr %2087, i64 0, i32 2, i32 0, i32 1
  store ptr @leval_tenv, ptr %2090, align 8, !tbaa !9
  %2091 = icmp eq ptr %2064, null
  br i1 %2091, label %2096, label %2092

2092:                                             ; preds = %2086
  %2093 = getelementptr inbounds %struct.obj, ptr %2064, i64 0, i32 1
  %2094 = load i16, ptr %2093, align 2, !tbaa !14
  %2095 = icmp eq i16 %2094, 3
  br i1 %2095, label %2098, label %2096

2096:                                             ; preds = %2092, %2086
  %2097 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2064) #38
  br label %2098

2098:                                             ; preds = %2092, %2096
  %2099 = getelementptr inbounds %struct.obj, ptr %2064, i64 0, i32 2, i32 0, i32 1
  store ptr %2087, ptr %2099, align 8, !tbaa !9
  %2100 = tail call ptr @gen_intern(ptr noundef nonnull @.str.201, i64 noundef 0)
  %2101 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2102 = icmp eq i64 %2101, 1
  br i1 %2102, label %2103, label %2111

2103:                                             ; preds = %2098
  %2104 = load ptr, ptr @heap, align 8, !tbaa !5
  %2105 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2106 = icmp ult ptr %2104, %2105
  br i1 %2106, label %2109, label %2107

2107:                                             ; preds = %2103
  %2108 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2109

2109:                                             ; preds = %2107, %2103
  %2110 = getelementptr inbounds %struct.obj, ptr %2104, i64 1
  store ptr %2110, ptr @heap, align 8, !tbaa !5
  br label %2122

2111:                                             ; preds = %2098
  %2112 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2113 = icmp eq ptr %2112, null
  br i1 %2113, label %2114, label %2116

2114:                                             ; preds = %2111
  tail call void @gc_for_newcell()
  %2115 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2116

2116:                                             ; preds = %2114, %2111
  %2117 = phi ptr [ %2115, %2114 ], [ %2112, %2111 ]
  %2118 = getelementptr inbounds %struct.obj, ptr %2117, i64 0, i32 2, i32 0, i32 1
  %2119 = load ptr, ptr %2118, align 8, !tbaa !9
  store ptr %2119, ptr @freelist, align 8, !tbaa !5
  %2120 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2121 = add nsw i64 %2120, 1
  store i64 %2121, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2122

2122:                                             ; preds = %2116, %2109
  %2123 = phi ptr [ %2104, %2109 ], [ %2117, %2116 ]
  store i16 0, ptr %2123, align 8, !tbaa !35
  %2124 = getelementptr inbounds %struct.obj, ptr %2123, i64 0, i32 1
  store i16 6, ptr %2124, align 2, !tbaa !14
  %2125 = getelementptr inbounds %struct.obj, ptr %2123, i64 0, i32 2
  store ptr @.str.201, ptr %2125, align 8, !tbaa !9
  %2126 = getelementptr inbounds %struct.obj, ptr %2123, i64 0, i32 2, i32 0, i32 1
  store ptr @lerr, ptr %2126, align 8, !tbaa !9
  %2127 = icmp eq ptr %2100, null
  br i1 %2127, label %2132, label %2128

2128:                                             ; preds = %2122
  %2129 = getelementptr inbounds %struct.obj, ptr %2100, i64 0, i32 1
  %2130 = load i16, ptr %2129, align 2, !tbaa !14
  %2131 = icmp eq i16 %2130, 3
  br i1 %2131, label %2134, label %2132

2132:                                             ; preds = %2128, %2122
  %2133 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2100) #38
  br label %2134

2134:                                             ; preds = %2128, %2132
  %2135 = getelementptr inbounds %struct.obj, ptr %2100, i64 0, i32 2, i32 0, i32 1
  store ptr %2123, ptr %2135, align 8, !tbaa !9
  %2136 = tail call ptr @gen_intern(ptr noundef nonnull @.str.20, i64 noundef 0)
  %2137 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2138 = icmp eq i64 %2137, 1
  br i1 %2138, label %2139, label %2147

2139:                                             ; preds = %2134
  %2140 = load ptr, ptr @heap, align 8, !tbaa !5
  %2141 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2142 = icmp ult ptr %2140, %2141
  br i1 %2142, label %2145, label %2143

2143:                                             ; preds = %2139
  %2144 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2145

2145:                                             ; preds = %2143, %2139
  %2146 = getelementptr inbounds %struct.obj, ptr %2140, i64 1
  store ptr %2146, ptr @heap, align 8, !tbaa !5
  br label %2158

2147:                                             ; preds = %2134
  %2148 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2149 = icmp eq ptr %2148, null
  br i1 %2149, label %2150, label %2152

2150:                                             ; preds = %2147
  tail call void @gc_for_newcell()
  %2151 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2152

2152:                                             ; preds = %2150, %2147
  %2153 = phi ptr [ %2151, %2150 ], [ %2148, %2147 ]
  %2154 = getelementptr inbounds %struct.obj, ptr %2153, i64 0, i32 2, i32 0, i32 1
  %2155 = load ptr, ptr %2154, align 8, !tbaa !9
  store ptr %2155, ptr @freelist, align 8, !tbaa !5
  %2156 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2157 = add nsw i64 %2156, 1
  store i64 %2157, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2158

2158:                                             ; preds = %2152, %2145
  %2159 = phi ptr [ %2140, %2145 ], [ %2153, %2152 ]
  store i16 0, ptr %2159, align 8, !tbaa !35
  %2160 = getelementptr inbounds %struct.obj, ptr %2159, i64 0, i32 1
  store i16 4, ptr %2160, align 2, !tbaa !14
  %2161 = getelementptr inbounds %struct.obj, ptr %2159, i64 0, i32 2
  store ptr @.str.20, ptr %2161, align 8, !tbaa !9
  %2162 = getelementptr inbounds %struct.obj, ptr %2159, i64 0, i32 2, i32 0, i32 1
  store ptr @quit, ptr %2162, align 8, !tbaa !9
  %2163 = icmp eq ptr %2136, null
  br i1 %2163, label %2168, label %2164

2164:                                             ; preds = %2158
  %2165 = getelementptr inbounds %struct.obj, ptr %2136, i64 0, i32 1
  %2166 = load i16, ptr %2165, align 2, !tbaa !14
  %2167 = icmp eq i16 %2166, 3
  br i1 %2167, label %2170, label %2168

2168:                                             ; preds = %2164, %2158
  %2169 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2136) #38
  br label %2170

2170:                                             ; preds = %2164, %2168
  %2171 = getelementptr inbounds %struct.obj, ptr %2136, i64 0, i32 2, i32 0, i32 1
  store ptr %2159, ptr %2171, align 8, !tbaa !9
  %2172 = tail call ptr @gen_intern(ptr noundef nonnull @.str.202, i64 noundef 0)
  %2173 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2174 = icmp eq i64 %2173, 1
  br i1 %2174, label %2175, label %2183

2175:                                             ; preds = %2170
  %2176 = load ptr, ptr @heap, align 8, !tbaa !5
  %2177 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2178 = icmp ult ptr %2176, %2177
  br i1 %2178, label %2181, label %2179

2179:                                             ; preds = %2175
  %2180 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2181

2181:                                             ; preds = %2179, %2175
  %2182 = getelementptr inbounds %struct.obj, ptr %2176, i64 1
  store ptr %2182, ptr @heap, align 8, !tbaa !5
  br label %2194

2183:                                             ; preds = %2170
  %2184 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2185 = icmp eq ptr %2184, null
  br i1 %2185, label %2186, label %2188

2186:                                             ; preds = %2183
  tail call void @gc_for_newcell()
  %2187 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2188

2188:                                             ; preds = %2186, %2183
  %2189 = phi ptr [ %2187, %2186 ], [ %2184, %2183 ]
  %2190 = getelementptr inbounds %struct.obj, ptr %2189, i64 0, i32 2, i32 0, i32 1
  %2191 = load ptr, ptr %2190, align 8, !tbaa !9
  store ptr %2191, ptr @freelist, align 8, !tbaa !5
  %2192 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2193 = add nsw i64 %2192, 1
  store i64 %2193, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2194

2194:                                             ; preds = %2188, %2181
  %2195 = phi ptr [ %2176, %2181 ], [ %2189, %2188 ]
  store i16 0, ptr %2195, align 8, !tbaa !35
  %2196 = getelementptr inbounds %struct.obj, ptr %2195, i64 0, i32 1
  store i16 5, ptr %2196, align 2, !tbaa !14
  %2197 = getelementptr inbounds %struct.obj, ptr %2195, i64 0, i32 2
  store ptr @.str.202, ptr %2197, align 8, !tbaa !9
  %2198 = getelementptr inbounds %struct.obj, ptr %2195, i64 0, i32 2, i32 0, i32 1
  store ptr @nullp, ptr %2198, align 8, !tbaa !9
  %2199 = icmp eq ptr %2172, null
  br i1 %2199, label %2204, label %2200

2200:                                             ; preds = %2194
  %2201 = getelementptr inbounds %struct.obj, ptr %2172, i64 0, i32 1
  %2202 = load i16, ptr %2201, align 2, !tbaa !14
  %2203 = icmp eq i16 %2202, 3
  br i1 %2203, label %2206, label %2204

2204:                                             ; preds = %2200, %2194
  %2205 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2172) #38
  br label %2206

2206:                                             ; preds = %2200, %2204
  %2207 = getelementptr inbounds %struct.obj, ptr %2172, i64 0, i32 2, i32 0, i32 1
  store ptr %2195, ptr %2207, align 8, !tbaa !9
  %2208 = tail call ptr @gen_intern(ptr noundef nonnull @.str.203, i64 noundef 0)
  %2209 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2210 = icmp eq i64 %2209, 1
  br i1 %2210, label %2211, label %2219

2211:                                             ; preds = %2206
  %2212 = load ptr, ptr @heap, align 8, !tbaa !5
  %2213 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2214 = icmp ult ptr %2212, %2213
  br i1 %2214, label %2217, label %2215

2215:                                             ; preds = %2211
  %2216 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2217

2217:                                             ; preds = %2215, %2211
  %2218 = getelementptr inbounds %struct.obj, ptr %2212, i64 1
  store ptr %2218, ptr @heap, align 8, !tbaa !5
  br label %2230

2219:                                             ; preds = %2206
  %2220 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2221 = icmp eq ptr %2220, null
  br i1 %2221, label %2222, label %2224

2222:                                             ; preds = %2219
  tail call void @gc_for_newcell()
  %2223 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2224

2224:                                             ; preds = %2222, %2219
  %2225 = phi ptr [ %2223, %2222 ], [ %2220, %2219 ]
  %2226 = getelementptr inbounds %struct.obj, ptr %2225, i64 0, i32 2, i32 0, i32 1
  %2227 = load ptr, ptr %2226, align 8, !tbaa !9
  store ptr %2227, ptr @freelist, align 8, !tbaa !5
  %2228 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2229 = add nsw i64 %2228, 1
  store i64 %2229, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2230

2230:                                             ; preds = %2224, %2217
  %2231 = phi ptr [ %2212, %2217 ], [ %2225, %2224 ]
  store i16 0, ptr %2231, align 8, !tbaa !35
  %2232 = getelementptr inbounds %struct.obj, ptr %2231, i64 0, i32 1
  store i16 5, ptr %2232, align 2, !tbaa !14
  %2233 = getelementptr inbounds %struct.obj, ptr %2231, i64 0, i32 2
  store ptr @.str.203, ptr %2233, align 8, !tbaa !9
  %2234 = getelementptr inbounds %struct.obj, ptr %2231, i64 0, i32 2, i32 0, i32 1
  store ptr @nullp, ptr %2234, align 8, !tbaa !9
  %2235 = icmp eq ptr %2208, null
  br i1 %2235, label %2240, label %2236

2236:                                             ; preds = %2230
  %2237 = getelementptr inbounds %struct.obj, ptr %2208, i64 0, i32 1
  %2238 = load i16, ptr %2237, align 2, !tbaa !14
  %2239 = icmp eq i16 %2238, 3
  br i1 %2239, label %2242, label %2240

2240:                                             ; preds = %2236, %2230
  %2241 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2208) #38
  br label %2242

2242:                                             ; preds = %2236, %2240
  %2243 = getelementptr inbounds %struct.obj, ptr %2208, i64 0, i32 2, i32 0, i32 1
  store ptr %2231, ptr %2243, align 8, !tbaa !9
  %2244 = tail call ptr @gen_intern(ptr noundef nonnull @.str.204, i64 noundef 0)
  %2245 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2246 = icmp eq i64 %2245, 1
  br i1 %2246, label %2247, label %2255

2247:                                             ; preds = %2242
  %2248 = load ptr, ptr @heap, align 8, !tbaa !5
  %2249 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2250 = icmp ult ptr %2248, %2249
  br i1 %2250, label %2253, label %2251

2251:                                             ; preds = %2247
  %2252 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2253

2253:                                             ; preds = %2251, %2247
  %2254 = getelementptr inbounds %struct.obj, ptr %2248, i64 1
  store ptr %2254, ptr @heap, align 8, !tbaa !5
  br label %2266

2255:                                             ; preds = %2242
  %2256 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2257 = icmp eq ptr %2256, null
  br i1 %2257, label %2258, label %2260

2258:                                             ; preds = %2255
  tail call void @gc_for_newcell()
  %2259 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2260

2260:                                             ; preds = %2258, %2255
  %2261 = phi ptr [ %2259, %2258 ], [ %2256, %2255 ]
  %2262 = getelementptr inbounds %struct.obj, ptr %2261, i64 0, i32 2, i32 0, i32 1
  %2263 = load ptr, ptr %2262, align 8, !tbaa !9
  store ptr %2263, ptr @freelist, align 8, !tbaa !5
  %2264 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2265 = add nsw i64 %2264, 1
  store i64 %2265, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2266

2266:                                             ; preds = %2260, %2253
  %2267 = phi ptr [ %2248, %2253 ], [ %2261, %2260 ]
  store i16 0, ptr %2267, align 8, !tbaa !35
  %2268 = getelementptr inbounds %struct.obj, ptr %2267, i64 0, i32 1
  store i16 6, ptr %2268, align 2, !tbaa !14
  %2269 = getelementptr inbounds %struct.obj, ptr %2267, i64 0, i32 2
  store ptr @.str.204, ptr %2269, align 8, !tbaa !9
  %2270 = getelementptr inbounds %struct.obj, ptr %2267, i64 0, i32 2, i32 0, i32 1
  store ptr @envlookup, ptr %2270, align 8, !tbaa !9
  %2271 = icmp eq ptr %2244, null
  br i1 %2271, label %2276, label %2272

2272:                                             ; preds = %2266
  %2273 = getelementptr inbounds %struct.obj, ptr %2244, i64 0, i32 1
  %2274 = load i16, ptr %2273, align 2, !tbaa !14
  %2275 = icmp eq i16 %2274, 3
  br i1 %2275, label %2278, label %2276

2276:                                             ; preds = %2272, %2266
  %2277 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2244) #38
  br label %2278

2278:                                             ; preds = %2272, %2276
  %2279 = getelementptr inbounds %struct.obj, ptr %2244, i64 0, i32 2, i32 0, i32 1
  store ptr %2267, ptr %2279, align 8, !tbaa !9
  %2280 = tail call ptr @gen_intern(ptr noundef nonnull @.str.205, i64 noundef 0)
  %2281 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2282 = icmp eq i64 %2281, 1
  br i1 %2282, label %2283, label %2291

2283:                                             ; preds = %2278
  %2284 = load ptr, ptr @heap, align 8, !tbaa !5
  %2285 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2286 = icmp ult ptr %2284, %2285
  br i1 %2286, label %2289, label %2287

2287:                                             ; preds = %2283
  %2288 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2289

2289:                                             ; preds = %2287, %2283
  %2290 = getelementptr inbounds %struct.obj, ptr %2284, i64 1
  store ptr %2290, ptr @heap, align 8, !tbaa !5
  br label %2302

2291:                                             ; preds = %2278
  %2292 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2293 = icmp eq ptr %2292, null
  br i1 %2293, label %2294, label %2296

2294:                                             ; preds = %2291
  tail call void @gc_for_newcell()
  %2295 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2296

2296:                                             ; preds = %2294, %2291
  %2297 = phi ptr [ %2295, %2294 ], [ %2292, %2291 ]
  %2298 = getelementptr inbounds %struct.obj, ptr %2297, i64 0, i32 2, i32 0, i32 1
  %2299 = load ptr, ptr %2298, align 8, !tbaa !9
  store ptr %2299, ptr @freelist, align 8, !tbaa !5
  %2300 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2301 = add nsw i64 %2300, 1
  store i64 %2301, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2302

2302:                                             ; preds = %2296, %2289
  %2303 = phi ptr [ %2284, %2289 ], [ %2297, %2296 ]
  store i16 0, ptr %2303, align 8, !tbaa !35
  %2304 = getelementptr inbounds %struct.obj, ptr %2303, i64 0, i32 1
  store i16 5, ptr %2304, align 2, !tbaa !14
  %2305 = getelementptr inbounds %struct.obj, ptr %2303, i64 0, i32 2
  store ptr @.str.205, ptr %2305, align 8, !tbaa !9
  %2306 = getelementptr inbounds %struct.obj, ptr %2303, i64 0, i32 2, i32 0, i32 1
  store ptr @reverse, ptr %2306, align 8, !tbaa !9
  %2307 = icmp eq ptr %2280, null
  br i1 %2307, label %2312, label %2308

2308:                                             ; preds = %2302
  %2309 = getelementptr inbounds %struct.obj, ptr %2280, i64 0, i32 1
  %2310 = load i16, ptr %2309, align 2, !tbaa !14
  %2311 = icmp eq i16 %2310, 3
  br i1 %2311, label %2314, label %2312

2312:                                             ; preds = %2308, %2302
  %2313 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2280) #38
  br label %2314

2314:                                             ; preds = %2308, %2312
  %2315 = getelementptr inbounds %struct.obj, ptr %2280, i64 0, i32 2, i32 0, i32 1
  store ptr %2303, ptr %2315, align 8, !tbaa !9
  %2316 = tail call ptr @gen_intern(ptr noundef nonnull @.str.206, i64 noundef 0)
  %2317 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2318 = icmp eq i64 %2317, 1
  br i1 %2318, label %2319, label %2327

2319:                                             ; preds = %2314
  %2320 = load ptr, ptr @heap, align 8, !tbaa !5
  %2321 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2322 = icmp ult ptr %2320, %2321
  br i1 %2322, label %2325, label %2323

2323:                                             ; preds = %2319
  %2324 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2325

2325:                                             ; preds = %2323, %2319
  %2326 = getelementptr inbounds %struct.obj, ptr %2320, i64 1
  store ptr %2326, ptr @heap, align 8, !tbaa !5
  br label %2338

2327:                                             ; preds = %2314
  %2328 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2329 = icmp eq ptr %2328, null
  br i1 %2329, label %2330, label %2332

2330:                                             ; preds = %2327
  tail call void @gc_for_newcell()
  %2331 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2332

2332:                                             ; preds = %2330, %2327
  %2333 = phi ptr [ %2331, %2330 ], [ %2328, %2327 ]
  %2334 = getelementptr inbounds %struct.obj, ptr %2333, i64 0, i32 2, i32 0, i32 1
  %2335 = load ptr, ptr %2334, align 8, !tbaa !9
  store ptr %2335, ptr @freelist, align 8, !tbaa !5
  %2336 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2337 = add nsw i64 %2336, 1
  store i64 %2337, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2338

2338:                                             ; preds = %2332, %2325
  %2339 = phi ptr [ %2320, %2325 ], [ %2333, %2332 ]
  store i16 0, ptr %2339, align 8, !tbaa !35
  %2340 = getelementptr inbounds %struct.obj, ptr %2339, i64 0, i32 1
  store i16 8, ptr %2340, align 2, !tbaa !14
  %2341 = getelementptr inbounds %struct.obj, ptr %2339, i64 0, i32 2
  store ptr @.str.206, ptr %2341, align 8, !tbaa !9
  %2342 = getelementptr inbounds %struct.obj, ptr %2339, i64 0, i32 2, i32 0, i32 1
  store ptr @symbolconc, ptr %2342, align 8, !tbaa !9
  %2343 = icmp eq ptr %2316, null
  br i1 %2343, label %2348, label %2344

2344:                                             ; preds = %2338
  %2345 = getelementptr inbounds %struct.obj, ptr %2316, i64 0, i32 1
  %2346 = load i16, ptr %2345, align 2, !tbaa !14
  %2347 = icmp eq i16 %2346, 3
  br i1 %2347, label %2350, label %2348

2348:                                             ; preds = %2344, %2338
  %2349 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2316) #38
  br label %2350

2350:                                             ; preds = %2344, %2348
  %2351 = getelementptr inbounds %struct.obj, ptr %2316, i64 0, i32 2, i32 0, i32 1
  store ptr %2339, ptr %2351, align 8, !tbaa !9
  %2352 = tail call ptr @gen_intern(ptr noundef nonnull @.str.207, i64 noundef 0)
  %2353 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2354 = icmp eq i64 %2353, 1
  br i1 %2354, label %2355, label %2363

2355:                                             ; preds = %2350
  %2356 = load ptr, ptr @heap, align 8, !tbaa !5
  %2357 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2358 = icmp ult ptr %2356, %2357
  br i1 %2358, label %2361, label %2359

2359:                                             ; preds = %2355
  %2360 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2361

2361:                                             ; preds = %2359, %2355
  %2362 = getelementptr inbounds %struct.obj, ptr %2356, i64 1
  store ptr %2362, ptr @heap, align 8, !tbaa !5
  br label %2374

2363:                                             ; preds = %2350
  %2364 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2365 = icmp eq ptr %2364, null
  br i1 %2365, label %2366, label %2368

2366:                                             ; preds = %2363
  tail call void @gc_for_newcell()
  %2367 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2368

2368:                                             ; preds = %2366, %2363
  %2369 = phi ptr [ %2367, %2366 ], [ %2364, %2363 ]
  %2370 = getelementptr inbounds %struct.obj, ptr %2369, i64 0, i32 2, i32 0, i32 1
  %2371 = load ptr, ptr %2370, align 8, !tbaa !9
  store ptr %2371, ptr @freelist, align 8, !tbaa !5
  %2372 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2373 = add nsw i64 %2372, 1
  store i64 %2373, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2374

2374:                                             ; preds = %2368, %2361
  %2375 = phi ptr [ %2356, %2361 ], [ %2369, %2368 ]
  store i16 0, ptr %2375, align 8, !tbaa !35
  %2376 = getelementptr inbounds %struct.obj, ptr %2375, i64 0, i32 1
  store i16 7, ptr %2376, align 2, !tbaa !14
  %2377 = getelementptr inbounds %struct.obj, ptr %2375, i64 0, i32 2
  store ptr @.str.207, ptr %2377, align 8, !tbaa !9
  %2378 = getelementptr inbounds %struct.obj, ptr %2375, i64 0, i32 2, i32 0, i32 1
  store ptr @save_forms, ptr %2378, align 8, !tbaa !9
  %2379 = icmp eq ptr %2352, null
  br i1 %2379, label %2384, label %2380

2380:                                             ; preds = %2374
  %2381 = getelementptr inbounds %struct.obj, ptr %2352, i64 0, i32 1
  %2382 = load i16, ptr %2381, align 2, !tbaa !14
  %2383 = icmp eq i16 %2382, 3
  br i1 %2383, label %2386, label %2384

2384:                                             ; preds = %2380, %2374
  %2385 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2352) #38
  br label %2386

2386:                                             ; preds = %2380, %2384
  %2387 = getelementptr inbounds %struct.obj, ptr %2352, i64 0, i32 2, i32 0, i32 1
  store ptr %2375, ptr %2387, align 8, !tbaa !9
  %2388 = tail call ptr @gen_intern(ptr noundef nonnull @.str.208, i64 noundef 0)
  %2389 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2390 = icmp eq i64 %2389, 1
  br i1 %2390, label %2391, label %2399

2391:                                             ; preds = %2386
  %2392 = load ptr, ptr @heap, align 8, !tbaa !5
  %2393 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2394 = icmp ult ptr %2392, %2393
  br i1 %2394, label %2397, label %2395

2395:                                             ; preds = %2391
  %2396 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2397

2397:                                             ; preds = %2395, %2391
  %2398 = getelementptr inbounds %struct.obj, ptr %2392, i64 1
  store ptr %2398, ptr @heap, align 8, !tbaa !5
  br label %2410

2399:                                             ; preds = %2386
  %2400 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2401 = icmp eq ptr %2400, null
  br i1 %2401, label %2402, label %2404

2402:                                             ; preds = %2399
  tail call void @gc_for_newcell()
  %2403 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2404

2404:                                             ; preds = %2402, %2399
  %2405 = phi ptr [ %2403, %2402 ], [ %2400, %2399 ]
  %2406 = getelementptr inbounds %struct.obj, ptr %2405, i64 0, i32 2, i32 0, i32 1
  %2407 = load ptr, ptr %2406, align 8, !tbaa !9
  store ptr %2407, ptr @freelist, align 8, !tbaa !5
  %2408 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2409 = add nsw i64 %2408, 1
  store i64 %2409, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2410

2410:                                             ; preds = %2404, %2397
  %2411 = phi ptr [ %2392, %2397 ], [ %2405, %2404 ]
  store i16 0, ptr %2411, align 8, !tbaa !35
  %2412 = getelementptr inbounds %struct.obj, ptr %2411, i64 0, i32 1
  store i16 6, ptr %2412, align 2, !tbaa !14
  %2413 = getelementptr inbounds %struct.obj, ptr %2411, i64 0, i32 2
  store ptr @.str.208, ptr %2413, align 8, !tbaa !9
  %2414 = getelementptr inbounds %struct.obj, ptr %2411, i64 0, i32 2, i32 0, i32 1
  store ptr @fopen_l, ptr %2414, align 8, !tbaa !9
  %2415 = icmp eq ptr %2388, null
  br i1 %2415, label %2420, label %2416

2416:                                             ; preds = %2410
  %2417 = getelementptr inbounds %struct.obj, ptr %2388, i64 0, i32 1
  %2418 = load i16, ptr %2417, align 2, !tbaa !14
  %2419 = icmp eq i16 %2418, 3
  br i1 %2419, label %2422, label %2420

2420:                                             ; preds = %2416, %2410
  %2421 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2388) #38
  br label %2422

2422:                                             ; preds = %2416, %2420
  %2423 = getelementptr inbounds %struct.obj, ptr %2388, i64 0, i32 2, i32 0, i32 1
  store ptr %2411, ptr %2423, align 8, !tbaa !9
  %2424 = tail call ptr @gen_intern(ptr noundef nonnull @.str.209, i64 noundef 0)
  %2425 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2426 = icmp eq i64 %2425, 1
  br i1 %2426, label %2427, label %2435

2427:                                             ; preds = %2422
  %2428 = load ptr, ptr @heap, align 8, !tbaa !5
  %2429 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2430 = icmp ult ptr %2428, %2429
  br i1 %2430, label %2433, label %2431

2431:                                             ; preds = %2427
  %2432 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2433

2433:                                             ; preds = %2431, %2427
  %2434 = getelementptr inbounds %struct.obj, ptr %2428, i64 1
  store ptr %2434, ptr @heap, align 8, !tbaa !5
  br label %2446

2435:                                             ; preds = %2422
  %2436 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2437 = icmp eq ptr %2436, null
  br i1 %2437, label %2438, label %2440

2438:                                             ; preds = %2435
  tail call void @gc_for_newcell()
  %2439 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2440

2440:                                             ; preds = %2438, %2435
  %2441 = phi ptr [ %2439, %2438 ], [ %2436, %2435 ]
  %2442 = getelementptr inbounds %struct.obj, ptr %2441, i64 0, i32 2, i32 0, i32 1
  %2443 = load ptr, ptr %2442, align 8, !tbaa !9
  store ptr %2443, ptr @freelist, align 8, !tbaa !5
  %2444 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2445 = add nsw i64 %2444, 1
  store i64 %2445, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2446

2446:                                             ; preds = %2440, %2433
  %2447 = phi ptr [ %2428, %2433 ], [ %2441, %2440 ]
  store i16 0, ptr %2447, align 8, !tbaa !35
  %2448 = getelementptr inbounds %struct.obj, ptr %2447, i64 0, i32 1
  store i16 5, ptr %2448, align 2, !tbaa !14
  %2449 = getelementptr inbounds %struct.obj, ptr %2447, i64 0, i32 2
  store ptr @.str.209, ptr %2449, align 8, !tbaa !9
  %2450 = getelementptr inbounds %struct.obj, ptr %2447, i64 0, i32 2, i32 0, i32 1
  store ptr @fclose_l, ptr %2450, align 8, !tbaa !9
  %2451 = icmp eq ptr %2424, null
  br i1 %2451, label %2456, label %2452

2452:                                             ; preds = %2446
  %2453 = getelementptr inbounds %struct.obj, ptr %2424, i64 0, i32 1
  %2454 = load i16, ptr %2453, align 2, !tbaa !14
  %2455 = icmp eq i16 %2454, 3
  br i1 %2455, label %2458, label %2456

2456:                                             ; preds = %2452, %2446
  %2457 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2424) #38
  br label %2458

2458:                                             ; preds = %2452, %2456
  %2459 = getelementptr inbounds %struct.obj, ptr %2424, i64 0, i32 2, i32 0, i32 1
  store ptr %2447, ptr %2459, align 8, !tbaa !9
  %2460 = tail call ptr @gen_intern(ptr noundef nonnull @.str.210, i64 noundef 0)
  %2461 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2462 = icmp eq i64 %2461, 1
  br i1 %2462, label %2463, label %2471

2463:                                             ; preds = %2458
  %2464 = load ptr, ptr @heap, align 8, !tbaa !5
  %2465 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2466 = icmp ult ptr %2464, %2465
  br i1 %2466, label %2469, label %2467

2467:                                             ; preds = %2463
  %2468 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2469

2469:                                             ; preds = %2467, %2463
  %2470 = getelementptr inbounds %struct.obj, ptr %2464, i64 1
  store ptr %2470, ptr @heap, align 8, !tbaa !5
  br label %2482

2471:                                             ; preds = %2458
  %2472 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2473 = icmp eq ptr %2472, null
  br i1 %2473, label %2474, label %2476

2474:                                             ; preds = %2471
  tail call void @gc_for_newcell()
  %2475 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2476

2476:                                             ; preds = %2474, %2471
  %2477 = phi ptr [ %2475, %2474 ], [ %2472, %2471 ]
  %2478 = getelementptr inbounds %struct.obj, ptr %2477, i64 0, i32 2, i32 0, i32 1
  %2479 = load ptr, ptr %2478, align 8, !tbaa !9
  store ptr %2479, ptr @freelist, align 8, !tbaa !5
  %2480 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2481 = add nsw i64 %2480, 1
  store i64 %2481, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2482

2482:                                             ; preds = %2476, %2469
  %2483 = phi ptr [ %2464, %2469 ], [ %2477, %2476 ]
  store i16 0, ptr %2483, align 8, !tbaa !35
  %2484 = getelementptr inbounds %struct.obj, ptr %2483, i64 0, i32 1
  store i16 5, ptr %2484, align 2, !tbaa !14
  %2485 = getelementptr inbounds %struct.obj, ptr %2483, i64 0, i32 2
  store ptr @.str.210, ptr %2485, align 8, !tbaa !9
  %2486 = getelementptr inbounds %struct.obj, ptr %2483, i64 0, i32 2, i32 0, i32 1
  store ptr @lgetc, ptr %2486, align 8, !tbaa !9
  %2487 = icmp eq ptr %2460, null
  br i1 %2487, label %2492, label %2488

2488:                                             ; preds = %2482
  %2489 = getelementptr inbounds %struct.obj, ptr %2460, i64 0, i32 1
  %2490 = load i16, ptr %2489, align 2, !tbaa !14
  %2491 = icmp eq i16 %2490, 3
  br i1 %2491, label %2494, label %2492

2492:                                             ; preds = %2488, %2482
  %2493 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2460) #38
  br label %2494

2494:                                             ; preds = %2488, %2492
  %2495 = getelementptr inbounds %struct.obj, ptr %2460, i64 0, i32 2, i32 0, i32 1
  store ptr %2483, ptr %2495, align 8, !tbaa !9
  %2496 = tail call ptr @gen_intern(ptr noundef nonnull @.str.211, i64 noundef 0)
  %2497 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2498 = icmp eq i64 %2497, 1
  br i1 %2498, label %2499, label %2507

2499:                                             ; preds = %2494
  %2500 = load ptr, ptr @heap, align 8, !tbaa !5
  %2501 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2502 = icmp ult ptr %2500, %2501
  br i1 %2502, label %2505, label %2503

2503:                                             ; preds = %2499
  %2504 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2505

2505:                                             ; preds = %2503, %2499
  %2506 = getelementptr inbounds %struct.obj, ptr %2500, i64 1
  store ptr %2506, ptr @heap, align 8, !tbaa !5
  br label %2518

2507:                                             ; preds = %2494
  %2508 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2509 = icmp eq ptr %2508, null
  br i1 %2509, label %2510, label %2512

2510:                                             ; preds = %2507
  tail call void @gc_for_newcell()
  %2511 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2512

2512:                                             ; preds = %2510, %2507
  %2513 = phi ptr [ %2511, %2510 ], [ %2508, %2507 ]
  %2514 = getelementptr inbounds %struct.obj, ptr %2513, i64 0, i32 2, i32 0, i32 1
  %2515 = load ptr, ptr %2514, align 8, !tbaa !9
  store ptr %2515, ptr @freelist, align 8, !tbaa !5
  %2516 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2517 = add nsw i64 %2516, 1
  store i64 %2517, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2518

2518:                                             ; preds = %2512, %2505
  %2519 = phi ptr [ %2500, %2505 ], [ %2513, %2512 ]
  store i16 0, ptr %2519, align 8, !tbaa !35
  %2520 = getelementptr inbounds %struct.obj, ptr %2519, i64 0, i32 1
  store i16 6, ptr %2520, align 2, !tbaa !14
  %2521 = getelementptr inbounds %struct.obj, ptr %2519, i64 0, i32 2
  store ptr @.str.211, ptr %2521, align 8, !tbaa !9
  %2522 = getelementptr inbounds %struct.obj, ptr %2519, i64 0, i32 2, i32 0, i32 1
  store ptr @lungetc, ptr %2522, align 8, !tbaa !9
  %2523 = icmp eq ptr %2496, null
  br i1 %2523, label %2528, label %2524

2524:                                             ; preds = %2518
  %2525 = getelementptr inbounds %struct.obj, ptr %2496, i64 0, i32 1
  %2526 = load i16, ptr %2525, align 2, !tbaa !14
  %2527 = icmp eq i16 %2526, 3
  br i1 %2527, label %2530, label %2528

2528:                                             ; preds = %2524, %2518
  %2529 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2496) #38
  br label %2530

2530:                                             ; preds = %2524, %2528
  %2531 = getelementptr inbounds %struct.obj, ptr %2496, i64 0, i32 2, i32 0, i32 1
  store ptr %2519, ptr %2531, align 8, !tbaa !9
  %2532 = tail call ptr @gen_intern(ptr noundef nonnull @.str.212, i64 noundef 0)
  %2533 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2534 = icmp eq i64 %2533, 1
  br i1 %2534, label %2535, label %2543

2535:                                             ; preds = %2530
  %2536 = load ptr, ptr @heap, align 8, !tbaa !5
  %2537 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2538 = icmp ult ptr %2536, %2537
  br i1 %2538, label %2541, label %2539

2539:                                             ; preds = %2535
  %2540 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2541

2541:                                             ; preds = %2539, %2535
  %2542 = getelementptr inbounds %struct.obj, ptr %2536, i64 1
  store ptr %2542, ptr @heap, align 8, !tbaa !5
  br label %2554

2543:                                             ; preds = %2530
  %2544 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2545 = icmp eq ptr %2544, null
  br i1 %2545, label %2546, label %2548

2546:                                             ; preds = %2543
  tail call void @gc_for_newcell()
  %2547 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2548

2548:                                             ; preds = %2546, %2543
  %2549 = phi ptr [ %2547, %2546 ], [ %2544, %2543 ]
  %2550 = getelementptr inbounds %struct.obj, ptr %2549, i64 0, i32 2, i32 0, i32 1
  %2551 = load ptr, ptr %2550, align 8, !tbaa !9
  store ptr %2551, ptr @freelist, align 8, !tbaa !5
  %2552 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2553 = add nsw i64 %2552, 1
  store i64 %2553, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2554

2554:                                             ; preds = %2548, %2541
  %2555 = phi ptr [ %2536, %2541 ], [ %2549, %2548 ]
  store i16 0, ptr %2555, align 8, !tbaa !35
  %2556 = getelementptr inbounds %struct.obj, ptr %2555, i64 0, i32 1
  store i16 6, ptr %2556, align 2, !tbaa !14
  %2557 = getelementptr inbounds %struct.obj, ptr %2555, i64 0, i32 2
  store ptr @.str.212, ptr %2557, align 8, !tbaa !9
  %2558 = getelementptr inbounds %struct.obj, ptr %2555, i64 0, i32 2, i32 0, i32 1
  store ptr @lputc, ptr %2558, align 8, !tbaa !9
  %2559 = icmp eq ptr %2532, null
  br i1 %2559, label %2564, label %2560

2560:                                             ; preds = %2554
  %2561 = getelementptr inbounds %struct.obj, ptr %2532, i64 0, i32 1
  %2562 = load i16, ptr %2561, align 2, !tbaa !14
  %2563 = icmp eq i16 %2562, 3
  br i1 %2563, label %2566, label %2564

2564:                                             ; preds = %2560, %2554
  %2565 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2532) #38
  br label %2566

2566:                                             ; preds = %2560, %2564
  %2567 = getelementptr inbounds %struct.obj, ptr %2532, i64 0, i32 2, i32 0, i32 1
  store ptr %2555, ptr %2567, align 8, !tbaa !9
  %2568 = tail call ptr @gen_intern(ptr noundef nonnull @.str.213, i64 noundef 0)
  %2569 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2570 = icmp eq i64 %2569, 1
  br i1 %2570, label %2571, label %2579

2571:                                             ; preds = %2566
  %2572 = load ptr, ptr @heap, align 8, !tbaa !5
  %2573 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2574 = icmp ult ptr %2572, %2573
  br i1 %2574, label %2577, label %2575

2575:                                             ; preds = %2571
  %2576 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2577

2577:                                             ; preds = %2575, %2571
  %2578 = getelementptr inbounds %struct.obj, ptr %2572, i64 1
  store ptr %2578, ptr @heap, align 8, !tbaa !5
  br label %2590

2579:                                             ; preds = %2566
  %2580 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2581 = icmp eq ptr %2580, null
  br i1 %2581, label %2582, label %2584

2582:                                             ; preds = %2579
  tail call void @gc_for_newcell()
  %2583 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2584

2584:                                             ; preds = %2582, %2579
  %2585 = phi ptr [ %2583, %2582 ], [ %2580, %2579 ]
  %2586 = getelementptr inbounds %struct.obj, ptr %2585, i64 0, i32 2, i32 0, i32 1
  %2587 = load ptr, ptr %2586, align 8, !tbaa !9
  store ptr %2587, ptr @freelist, align 8, !tbaa !5
  %2588 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2589 = add nsw i64 %2588, 1
  store i64 %2589, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2590

2590:                                             ; preds = %2584, %2577
  %2591 = phi ptr [ %2572, %2577 ], [ %2585, %2584 ]
  store i16 0, ptr %2591, align 8, !tbaa !35
  %2592 = getelementptr inbounds %struct.obj, ptr %2591, i64 0, i32 1
  store i16 6, ptr %2592, align 2, !tbaa !14
  %2593 = getelementptr inbounds %struct.obj, ptr %2591, i64 0, i32 2
  store ptr @.str.213, ptr %2593, align 8, !tbaa !9
  %2594 = getelementptr inbounds %struct.obj, ptr %2591, i64 0, i32 2, i32 0, i32 1
  store ptr @lputs, ptr %2594, align 8, !tbaa !9
  %2595 = icmp eq ptr %2568, null
  br i1 %2595, label %2600, label %2596

2596:                                             ; preds = %2590
  %2597 = getelementptr inbounds %struct.obj, ptr %2568, i64 0, i32 1
  %2598 = load i16, ptr %2597, align 2, !tbaa !14
  %2599 = icmp eq i16 %2598, 3
  br i1 %2599, label %2602, label %2600

2600:                                             ; preds = %2596, %2590
  %2601 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2568) #38
  br label %2602

2602:                                             ; preds = %2596, %2600
  %2603 = getelementptr inbounds %struct.obj, ptr %2568, i64 0, i32 2, i32 0, i32 1
  store ptr %2591, ptr %2603, align 8, !tbaa !9
  %2604 = tail call ptr @gen_intern(ptr noundef nonnull @.str.214, i64 noundef 0)
  %2605 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2606 = icmp eq i64 %2605, 1
  br i1 %2606, label %2607, label %2615

2607:                                             ; preds = %2602
  %2608 = load ptr, ptr @heap, align 8, !tbaa !5
  %2609 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2610 = icmp ult ptr %2608, %2609
  br i1 %2610, label %2613, label %2611

2611:                                             ; preds = %2607
  %2612 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2613

2613:                                             ; preds = %2611, %2607
  %2614 = getelementptr inbounds %struct.obj, ptr %2608, i64 1
  store ptr %2614, ptr @heap, align 8, !tbaa !5
  br label %2626

2615:                                             ; preds = %2602
  %2616 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2617 = icmp eq ptr %2616, null
  br i1 %2617, label %2618, label %2620

2618:                                             ; preds = %2615
  tail call void @gc_for_newcell()
  %2619 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2620

2620:                                             ; preds = %2618, %2615
  %2621 = phi ptr [ %2619, %2618 ], [ %2616, %2615 ]
  %2622 = getelementptr inbounds %struct.obj, ptr %2621, i64 0, i32 2, i32 0, i32 1
  %2623 = load ptr, ptr %2622, align 8, !tbaa !9
  store ptr %2623, ptr @freelist, align 8, !tbaa !5
  %2624 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2625 = add nsw i64 %2624, 1
  store i64 %2625, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2626

2626:                                             ; preds = %2620, %2613
  %2627 = phi ptr [ %2608, %2613 ], [ %2621, %2620 ]
  store i16 0, ptr %2627, align 8, !tbaa !35
  %2628 = getelementptr inbounds %struct.obj, ptr %2627, i64 0, i32 1
  store i16 5, ptr %2628, align 2, !tbaa !14
  %2629 = getelementptr inbounds %struct.obj, ptr %2627, i64 0, i32 2
  store ptr @.str.214, ptr %2629, align 8, !tbaa !9
  %2630 = getelementptr inbounds %struct.obj, ptr %2627, i64 0, i32 2, i32 0, i32 1
  store ptr @lftell, ptr %2630, align 8, !tbaa !9
  %2631 = icmp eq ptr %2604, null
  br i1 %2631, label %2636, label %2632

2632:                                             ; preds = %2626
  %2633 = getelementptr inbounds %struct.obj, ptr %2604, i64 0, i32 1
  %2634 = load i16, ptr %2633, align 2, !tbaa !14
  %2635 = icmp eq i16 %2634, 3
  br i1 %2635, label %2638, label %2636

2636:                                             ; preds = %2632, %2626
  %2637 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2604) #38
  br label %2638

2638:                                             ; preds = %2632, %2636
  %2639 = getelementptr inbounds %struct.obj, ptr %2604, i64 0, i32 2, i32 0, i32 1
  store ptr %2627, ptr %2639, align 8, !tbaa !9
  %2640 = tail call ptr @gen_intern(ptr noundef nonnull @.str.215, i64 noundef 0)
  %2641 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2642 = icmp eq i64 %2641, 1
  br i1 %2642, label %2643, label %2651

2643:                                             ; preds = %2638
  %2644 = load ptr, ptr @heap, align 8, !tbaa !5
  %2645 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2646 = icmp ult ptr %2644, %2645
  br i1 %2646, label %2649, label %2647

2647:                                             ; preds = %2643
  %2648 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2649

2649:                                             ; preds = %2647, %2643
  %2650 = getelementptr inbounds %struct.obj, ptr %2644, i64 1
  store ptr %2650, ptr @heap, align 8, !tbaa !5
  br label %2662

2651:                                             ; preds = %2638
  %2652 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2653 = icmp eq ptr %2652, null
  br i1 %2653, label %2654, label %2656

2654:                                             ; preds = %2651
  tail call void @gc_for_newcell()
  %2655 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2656

2656:                                             ; preds = %2654, %2651
  %2657 = phi ptr [ %2655, %2654 ], [ %2652, %2651 ]
  %2658 = getelementptr inbounds %struct.obj, ptr %2657, i64 0, i32 2, i32 0, i32 1
  %2659 = load ptr, ptr %2658, align 8, !tbaa !9
  store ptr %2659, ptr @freelist, align 8, !tbaa !5
  %2660 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2661 = add nsw i64 %2660, 1
  store i64 %2661, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2662

2662:                                             ; preds = %2656, %2649
  %2663 = phi ptr [ %2644, %2649 ], [ %2657, %2656 ]
  store i16 0, ptr %2663, align 8, !tbaa !35
  %2664 = getelementptr inbounds %struct.obj, ptr %2663, i64 0, i32 1
  store i16 7, ptr %2664, align 2, !tbaa !14
  %2665 = getelementptr inbounds %struct.obj, ptr %2663, i64 0, i32 2
  store ptr @.str.215, ptr %2665, align 8, !tbaa !9
  %2666 = getelementptr inbounds %struct.obj, ptr %2663, i64 0, i32 2, i32 0, i32 1
  store ptr @lfseek, ptr %2666, align 8, !tbaa !9
  %2667 = icmp eq ptr %2640, null
  br i1 %2667, label %2672, label %2668

2668:                                             ; preds = %2662
  %2669 = getelementptr inbounds %struct.obj, ptr %2640, i64 0, i32 1
  %2670 = load i16, ptr %2669, align 2, !tbaa !14
  %2671 = icmp eq i16 %2670, 3
  br i1 %2671, label %2674, label %2672

2672:                                             ; preds = %2668, %2662
  %2673 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2640) #38
  br label %2674

2674:                                             ; preds = %2668, %2672
  %2675 = getelementptr inbounds %struct.obj, ptr %2640, i64 0, i32 2, i32 0, i32 1
  store ptr %2663, ptr %2675, align 8, !tbaa !9
  %2676 = tail call ptr @gen_intern(ptr noundef nonnull @.str.216, i64 noundef 0)
  %2677 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2678 = icmp eq i64 %2677, 1
  br i1 %2678, label %2679, label %2687

2679:                                             ; preds = %2674
  %2680 = load ptr, ptr @heap, align 8, !tbaa !5
  %2681 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2682 = icmp ult ptr %2680, %2681
  br i1 %2682, label %2685, label %2683

2683:                                             ; preds = %2679
  %2684 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2685

2685:                                             ; preds = %2683, %2679
  %2686 = getelementptr inbounds %struct.obj, ptr %2680, i64 1
  store ptr %2686, ptr @heap, align 8, !tbaa !5
  br label %2698

2687:                                             ; preds = %2674
  %2688 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2689 = icmp eq ptr %2688, null
  br i1 %2689, label %2690, label %2692

2690:                                             ; preds = %2687
  tail call void @gc_for_newcell()
  %2691 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2692

2692:                                             ; preds = %2690, %2687
  %2693 = phi ptr [ %2691, %2690 ], [ %2688, %2687 ]
  %2694 = getelementptr inbounds %struct.obj, ptr %2693, i64 0, i32 2, i32 0, i32 1
  %2695 = load ptr, ptr %2694, align 8, !tbaa !9
  store ptr %2695, ptr @freelist, align 8, !tbaa !5
  %2696 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2697 = add nsw i64 %2696, 1
  store i64 %2697, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2698

2698:                                             ; preds = %2692, %2685
  %2699 = phi ptr [ %2680, %2685 ], [ %2693, %2692 ]
  store i16 0, ptr %2699, align 8, !tbaa !35
  %2700 = getelementptr inbounds %struct.obj, ptr %2699, i64 0, i32 1
  store i16 5, ptr %2700, align 2, !tbaa !14
  %2701 = getelementptr inbounds %struct.obj, ptr %2699, i64 0, i32 2
  store ptr @.str.216, ptr %2701, align 8, !tbaa !9
  %2702 = getelementptr inbounds %struct.obj, ptr %2699, i64 0, i32 2, i32 0, i32 1
  store ptr @parse_number, ptr %2702, align 8, !tbaa !9
  %2703 = icmp eq ptr %2676, null
  br i1 %2703, label %2708, label %2704

2704:                                             ; preds = %2698
  %2705 = getelementptr inbounds %struct.obj, ptr %2676, i64 0, i32 1
  %2706 = load i16, ptr %2705, align 2, !tbaa !14
  %2707 = icmp eq i16 %2706, 3
  br i1 %2707, label %2710, label %2708

2708:                                             ; preds = %2704, %2698
  %2709 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2676) #38
  br label %2710

2710:                                             ; preds = %2704, %2708
  %2711 = getelementptr inbounds %struct.obj, ptr %2676, i64 0, i32 2, i32 0, i32 1
  store ptr %2699, ptr %2711, align 8, !tbaa !9
  %2712 = tail call ptr @gen_intern(ptr noundef nonnull @.str.217, i64 noundef 0)
  %2713 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2714 = icmp eq i64 %2713, 1
  br i1 %2714, label %2715, label %2723

2715:                                             ; preds = %2710
  %2716 = load ptr, ptr @heap, align 8, !tbaa !5
  %2717 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2718 = icmp ult ptr %2716, %2717
  br i1 %2718, label %2721, label %2719

2719:                                             ; preds = %2715
  %2720 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2721

2721:                                             ; preds = %2719, %2715
  %2722 = getelementptr inbounds %struct.obj, ptr %2716, i64 1
  store ptr %2722, ptr @heap, align 8, !tbaa !5
  br label %2734

2723:                                             ; preds = %2710
  %2724 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2725 = icmp eq ptr %2724, null
  br i1 %2725, label %2726, label %2728

2726:                                             ; preds = %2723
  tail call void @gc_for_newcell()
  %2727 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2728

2728:                                             ; preds = %2726, %2723
  %2729 = phi ptr [ %2727, %2726 ], [ %2724, %2723 ]
  %2730 = getelementptr inbounds %struct.obj, ptr %2729, i64 0, i32 2, i32 0, i32 1
  %2731 = load ptr, ptr %2730, align 8, !tbaa !9
  store ptr %2731, ptr @freelist, align 8, !tbaa !5
  %2732 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2733 = add nsw i64 %2732, 1
  store i64 %2733, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2734

2734:                                             ; preds = %2728, %2721
  %2735 = phi ptr [ %2716, %2721 ], [ %2729, %2728 ]
  store i16 0, ptr %2735, align 8, !tbaa !35
  %2736 = getelementptr inbounds %struct.obj, ptr %2735, i64 0, i32 1
  store i16 6, ptr %2736, align 2, !tbaa !14
  %2737 = getelementptr inbounds %struct.obj, ptr %2735, i64 0, i32 2
  store ptr @.str.217, ptr %2737, align 8, !tbaa !9
  %2738 = getelementptr inbounds %struct.obj, ptr %2735, i64 0, i32 2, i32 0, i32 1
  store ptr @stack_limit, ptr %2738, align 8, !tbaa !9
  %2739 = icmp eq ptr %2712, null
  br i1 %2739, label %2744, label %2740

2740:                                             ; preds = %2734
  %2741 = getelementptr inbounds %struct.obj, ptr %2712, i64 0, i32 1
  %2742 = load i16, ptr %2741, align 2, !tbaa !14
  %2743 = icmp eq i16 %2742, 3
  br i1 %2743, label %2746, label %2744

2744:                                             ; preds = %2740, %2734
  %2745 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2712) #38
  br label %2746

2746:                                             ; preds = %2740, %2744
  %2747 = getelementptr inbounds %struct.obj, ptr %2712, i64 0, i32 2, i32 0, i32 1
  store ptr %2735, ptr %2747, align 8, !tbaa !9
  %2748 = tail call ptr @gen_intern(ptr noundef nonnull @.str.218, i64 noundef 0)
  %2749 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2750 = icmp eq i64 %2749, 1
  br i1 %2750, label %2751, label %2759

2751:                                             ; preds = %2746
  %2752 = load ptr, ptr @heap, align 8, !tbaa !5
  %2753 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2754 = icmp ult ptr %2752, %2753
  br i1 %2754, label %2757, label %2755

2755:                                             ; preds = %2751
  %2756 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2757

2757:                                             ; preds = %2755, %2751
  %2758 = getelementptr inbounds %struct.obj, ptr %2752, i64 1
  store ptr %2758, ptr @heap, align 8, !tbaa !5
  br label %2770

2759:                                             ; preds = %2746
  %2760 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2761 = icmp eq ptr %2760, null
  br i1 %2761, label %2762, label %2764

2762:                                             ; preds = %2759
  tail call void @gc_for_newcell()
  %2763 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2764

2764:                                             ; preds = %2762, %2759
  %2765 = phi ptr [ %2763, %2762 ], [ %2760, %2759 ]
  %2766 = getelementptr inbounds %struct.obj, ptr %2765, i64 0, i32 2, i32 0, i32 1
  %2767 = load ptr, ptr %2766, align 8, !tbaa !9
  store ptr %2767, ptr @freelist, align 8, !tbaa !5
  %2768 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2769 = add nsw i64 %2768, 1
  store i64 %2769, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2770

2770:                                             ; preds = %2764, %2757
  %2771 = phi ptr [ %2752, %2757 ], [ %2765, %2764 ]
  store i16 0, ptr %2771, align 8, !tbaa !35
  %2772 = getelementptr inbounds %struct.obj, ptr %2771, i64 0, i32 1
  store i16 5, ptr %2772, align 2, !tbaa !14
  %2773 = getelementptr inbounds %struct.obj, ptr %2771, i64 0, i32 2
  store ptr @.str.218, ptr %2773, align 8, !tbaa !9
  %2774 = getelementptr inbounds %struct.obj, ptr %2771, i64 0, i32 2, i32 0, i32 1
  store ptr @intern, ptr %2774, align 8, !tbaa !9
  %2775 = icmp eq ptr %2748, null
  br i1 %2775, label %2780, label %2776

2776:                                             ; preds = %2770
  %2777 = getelementptr inbounds %struct.obj, ptr %2748, i64 0, i32 1
  %2778 = load i16, ptr %2777, align 2, !tbaa !14
  %2779 = icmp eq i16 %2778, 3
  br i1 %2779, label %2782, label %2780

2780:                                             ; preds = %2776, %2770
  %2781 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2748) #38
  br label %2782

2782:                                             ; preds = %2776, %2780
  %2783 = getelementptr inbounds %struct.obj, ptr %2748, i64 0, i32 2, i32 0, i32 1
  store ptr %2771, ptr %2783, align 8, !tbaa !9
  %2784 = tail call ptr @gen_intern(ptr noundef nonnull @.str.219, i64 noundef 0)
  %2785 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2786 = icmp eq i64 %2785, 1
  br i1 %2786, label %2787, label %2795

2787:                                             ; preds = %2782
  %2788 = load ptr, ptr @heap, align 8, !tbaa !5
  %2789 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2790 = icmp ult ptr %2788, %2789
  br i1 %2790, label %2793, label %2791

2791:                                             ; preds = %2787
  %2792 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2793

2793:                                             ; preds = %2791, %2787
  %2794 = getelementptr inbounds %struct.obj, ptr %2788, i64 1
  store ptr %2794, ptr @heap, align 8, !tbaa !5
  br label %2806

2795:                                             ; preds = %2782
  %2796 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2797 = icmp eq ptr %2796, null
  br i1 %2797, label %2798, label %2800

2798:                                             ; preds = %2795
  tail call void @gc_for_newcell()
  %2799 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2800

2800:                                             ; preds = %2798, %2795
  %2801 = phi ptr [ %2799, %2798 ], [ %2796, %2795 ]
  %2802 = getelementptr inbounds %struct.obj, ptr %2801, i64 0, i32 2, i32 0, i32 1
  %2803 = load ptr, ptr %2802, align 8, !tbaa !9
  store ptr %2803, ptr @freelist, align 8, !tbaa !5
  %2804 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2805 = add nsw i64 %2804, 1
  store i64 %2805, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2806

2806:                                             ; preds = %2800, %2793
  %2807 = phi ptr [ %2788, %2793 ], [ %2801, %2800 ]
  store i16 0, ptr %2807, align 8, !tbaa !35
  %2808 = getelementptr inbounds %struct.obj, ptr %2807, i64 0, i32 1
  store i16 6, ptr %2808, align 2, !tbaa !14
  %2809 = getelementptr inbounds %struct.obj, ptr %2807, i64 0, i32 2
  store ptr @.str.219, ptr %2809, align 8, !tbaa !9
  %2810 = getelementptr inbounds %struct.obj, ptr %2807, i64 0, i32 2, i32 0, i32 1
  store ptr @closure, ptr %2810, align 8, !tbaa !9
  %2811 = icmp eq ptr %2784, null
  br i1 %2811, label %2816, label %2812

2812:                                             ; preds = %2806
  %2813 = getelementptr inbounds %struct.obj, ptr %2784, i64 0, i32 1
  %2814 = load i16, ptr %2813, align 2, !tbaa !14
  %2815 = icmp eq i16 %2814, 3
  br i1 %2815, label %2818, label %2816

2816:                                             ; preds = %2812, %2806
  %2817 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2784) #38
  br label %2818

2818:                                             ; preds = %2812, %2816
  %2819 = getelementptr inbounds %struct.obj, ptr %2784, i64 0, i32 2, i32 0, i32 1
  store ptr %2807, ptr %2819, align 8, !tbaa !9
  %2820 = tail call ptr @gen_intern(ptr noundef nonnull @.str.220, i64 noundef 0)
  %2821 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2822 = icmp eq i64 %2821, 1
  br i1 %2822, label %2823, label %2831

2823:                                             ; preds = %2818
  %2824 = load ptr, ptr @heap, align 8, !tbaa !5
  %2825 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2826 = icmp ult ptr %2824, %2825
  br i1 %2826, label %2829, label %2827

2827:                                             ; preds = %2823
  %2828 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2829

2829:                                             ; preds = %2827, %2823
  %2830 = getelementptr inbounds %struct.obj, ptr %2824, i64 1
  store ptr %2830, ptr @heap, align 8, !tbaa !5
  br label %2842

2831:                                             ; preds = %2818
  %2832 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2833 = icmp eq ptr %2832, null
  br i1 %2833, label %2834, label %2836

2834:                                             ; preds = %2831
  tail call void @gc_for_newcell()
  %2835 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2836

2836:                                             ; preds = %2834, %2831
  %2837 = phi ptr [ %2835, %2834 ], [ %2832, %2831 ]
  %2838 = getelementptr inbounds %struct.obj, ptr %2837, i64 0, i32 2, i32 0, i32 1
  %2839 = load ptr, ptr %2838, align 8, !tbaa !9
  store ptr %2839, ptr @freelist, align 8, !tbaa !5
  %2840 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2841 = add nsw i64 %2840, 1
  store i64 %2841, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2842

2842:                                             ; preds = %2836, %2829
  %2843 = phi ptr [ %2824, %2829 ], [ %2837, %2836 ]
  store i16 0, ptr %2843, align 8, !tbaa !35
  %2844 = getelementptr inbounds %struct.obj, ptr %2843, i64 0, i32 1
  store i16 5, ptr %2844, align 2, !tbaa !14
  %2845 = getelementptr inbounds %struct.obj, ptr %2843, i64 0, i32 2
  store ptr @.str.220, ptr %2845, align 8, !tbaa !9
  %2846 = getelementptr inbounds %struct.obj, ptr %2843, i64 0, i32 2, i32 0, i32 1
  store ptr @closure_code, ptr %2846, align 8, !tbaa !9
  %2847 = icmp eq ptr %2820, null
  br i1 %2847, label %2852, label %2848

2848:                                             ; preds = %2842
  %2849 = getelementptr inbounds %struct.obj, ptr %2820, i64 0, i32 1
  %2850 = load i16, ptr %2849, align 2, !tbaa !14
  %2851 = icmp eq i16 %2850, 3
  br i1 %2851, label %2854, label %2852

2852:                                             ; preds = %2848, %2842
  %2853 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2820) #38
  br label %2854

2854:                                             ; preds = %2848, %2852
  %2855 = getelementptr inbounds %struct.obj, ptr %2820, i64 0, i32 2, i32 0, i32 1
  store ptr %2843, ptr %2855, align 8, !tbaa !9
  %2856 = tail call ptr @gen_intern(ptr noundef nonnull @.str.221, i64 noundef 0)
  %2857 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2858 = icmp eq i64 %2857, 1
  br i1 %2858, label %2859, label %2867

2859:                                             ; preds = %2854
  %2860 = load ptr, ptr @heap, align 8, !tbaa !5
  %2861 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2862 = icmp ult ptr %2860, %2861
  br i1 %2862, label %2865, label %2863

2863:                                             ; preds = %2859
  %2864 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2865

2865:                                             ; preds = %2863, %2859
  %2866 = getelementptr inbounds %struct.obj, ptr %2860, i64 1
  store ptr %2866, ptr @heap, align 8, !tbaa !5
  br label %2878

2867:                                             ; preds = %2854
  %2868 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2869 = icmp eq ptr %2868, null
  br i1 %2869, label %2870, label %2872

2870:                                             ; preds = %2867
  tail call void @gc_for_newcell()
  %2871 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2872

2872:                                             ; preds = %2870, %2867
  %2873 = phi ptr [ %2871, %2870 ], [ %2868, %2867 ]
  %2874 = getelementptr inbounds %struct.obj, ptr %2873, i64 0, i32 2, i32 0, i32 1
  %2875 = load ptr, ptr %2874, align 8, !tbaa !9
  store ptr %2875, ptr @freelist, align 8, !tbaa !5
  %2876 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2877 = add nsw i64 %2876, 1
  store i64 %2877, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2878

2878:                                             ; preds = %2872, %2865
  %2879 = phi ptr [ %2860, %2865 ], [ %2873, %2872 ]
  store i16 0, ptr %2879, align 8, !tbaa !35
  %2880 = getelementptr inbounds %struct.obj, ptr %2879, i64 0, i32 1
  store i16 5, ptr %2880, align 2, !tbaa !14
  %2881 = getelementptr inbounds %struct.obj, ptr %2879, i64 0, i32 2
  store ptr @.str.221, ptr %2881, align 8, !tbaa !9
  %2882 = getelementptr inbounds %struct.obj, ptr %2879, i64 0, i32 2, i32 0, i32 1
  store ptr @closure_env, ptr %2882, align 8, !tbaa !9
  %2883 = icmp eq ptr %2856, null
  br i1 %2883, label %2888, label %2884

2884:                                             ; preds = %2878
  %2885 = getelementptr inbounds %struct.obj, ptr %2856, i64 0, i32 1
  %2886 = load i16, ptr %2885, align 2, !tbaa !14
  %2887 = icmp eq i16 %2886, 3
  br i1 %2887, label %2890, label %2888

2888:                                             ; preds = %2884, %2878
  %2889 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2856) #38
  br label %2890

2890:                                             ; preds = %2884, %2888
  %2891 = getelementptr inbounds %struct.obj, ptr %2856, i64 0, i32 2, i32 0, i32 1
  store ptr %2879, ptr %2891, align 8, !tbaa !9
  %2892 = tail call ptr @gen_intern(ptr noundef nonnull @.str.182, i64 noundef 0)
  %2893 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2894 = icmp eq i64 %2893, 1
  br i1 %2894, label %2895, label %2903

2895:                                             ; preds = %2890
  %2896 = load ptr, ptr @heap, align 8, !tbaa !5
  %2897 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2898 = icmp ult ptr %2896, %2897
  br i1 %2898, label %2901, label %2899

2899:                                             ; preds = %2895
  %2900 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2901

2901:                                             ; preds = %2899, %2895
  %2902 = getelementptr inbounds %struct.obj, ptr %2896, i64 1
  store ptr %2902, ptr @heap, align 8, !tbaa !5
  br label %2914

2903:                                             ; preds = %2890
  %2904 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2905 = icmp eq ptr %2904, null
  br i1 %2905, label %2906, label %2908

2906:                                             ; preds = %2903
  tail call void @gc_for_newcell()
  %2907 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2908

2908:                                             ; preds = %2906, %2903
  %2909 = phi ptr [ %2907, %2906 ], [ %2904, %2903 ]
  %2910 = getelementptr inbounds %struct.obj, ptr %2909, i64 0, i32 2, i32 0, i32 1
  %2911 = load ptr, ptr %2910, align 8, !tbaa !9
  store ptr %2911, ptr @freelist, align 8, !tbaa !5
  %2912 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2913 = add nsw i64 %2912, 1
  store i64 %2913, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2914

2914:                                             ; preds = %2908, %2901
  %2915 = phi ptr [ %2896, %2901 ], [ %2909, %2908 ]
  store i16 0, ptr %2915, align 8, !tbaa !35
  %2916 = getelementptr inbounds %struct.obj, ptr %2915, i64 0, i32 1
  store i16 9, ptr %2916, align 2, !tbaa !14
  %2917 = getelementptr inbounds %struct.obj, ptr %2915, i64 0, i32 2
  store ptr @.str.182, ptr %2917, align 8, !tbaa !9
  %2918 = getelementptr inbounds %struct.obj, ptr %2915, i64 0, i32 2, i32 0, i32 1
  store ptr @lwhile, ptr %2918, align 8, !tbaa !9
  %2919 = icmp eq ptr %2892, null
  br i1 %2919, label %2924, label %2920

2920:                                             ; preds = %2914
  %2921 = getelementptr inbounds %struct.obj, ptr %2892, i64 0, i32 1
  %2922 = load i16, ptr %2921, align 2, !tbaa !14
  %2923 = icmp eq i16 %2922, 3
  br i1 %2923, label %2926, label %2924

2924:                                             ; preds = %2920, %2914
  %2925 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2892) #38
  br label %2926

2926:                                             ; preds = %2920, %2924
  %2927 = getelementptr inbounds %struct.obj, ptr %2892, i64 0, i32 2, i32 0, i32 1
  store ptr %2915, ptr %2927, align 8, !tbaa !9
  %2928 = tail call ptr @gen_intern(ptr noundef nonnull @.str.222, i64 noundef 0)
  %2929 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2930 = icmp eq i64 %2929, 1
  br i1 %2930, label %2931, label %2939

2931:                                             ; preds = %2926
  %2932 = load ptr, ptr @heap, align 8, !tbaa !5
  %2933 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2934 = icmp ult ptr %2932, %2933
  br i1 %2934, label %2937, label %2935

2935:                                             ; preds = %2931
  %2936 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2937

2937:                                             ; preds = %2935, %2931
  %2938 = getelementptr inbounds %struct.obj, ptr %2932, i64 1
  store ptr %2938, ptr @heap, align 8, !tbaa !5
  br label %2950

2939:                                             ; preds = %2926
  %2940 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2941 = icmp eq ptr %2940, null
  br i1 %2941, label %2942, label %2944

2942:                                             ; preds = %2939
  tail call void @gc_for_newcell()
  %2943 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2944

2944:                                             ; preds = %2942, %2939
  %2945 = phi ptr [ %2943, %2942 ], [ %2940, %2939 ]
  %2946 = getelementptr inbounds %struct.obj, ptr %2945, i64 0, i32 2, i32 0, i32 1
  %2947 = load ptr, ptr %2946, align 8, !tbaa !9
  store ptr %2947, ptr @freelist, align 8, !tbaa !5
  %2948 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2949 = add nsw i64 %2948, 1
  store i64 %2949, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2950

2950:                                             ; preds = %2944, %2937
  %2951 = phi ptr [ %2932, %2937 ], [ %2945, %2944 ]
  store i16 0, ptr %2951, align 8, !tbaa !35
  %2952 = getelementptr inbounds %struct.obj, ptr %2951, i64 0, i32 1
  store i16 5, ptr %2952, align 2, !tbaa !14
  %2953 = getelementptr inbounds %struct.obj, ptr %2951, i64 0, i32 2
  store ptr @.str.222, ptr %2953, align 8, !tbaa !9
  %2954 = getelementptr inbounds %struct.obj, ptr %2951, i64 0, i32 2, i32 0, i32 1
  store ptr @nreverse, ptr %2954, align 8, !tbaa !9
  %2955 = icmp eq ptr %2928, null
  br i1 %2955, label %2960, label %2956

2956:                                             ; preds = %2950
  %2957 = getelementptr inbounds %struct.obj, ptr %2928, i64 0, i32 1
  %2958 = load i16, ptr %2957, align 2, !tbaa !14
  %2959 = icmp eq i16 %2958, 3
  br i1 %2959, label %2962, label %2960

2960:                                             ; preds = %2956, %2950
  %2961 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2928) #38
  br label %2962

2962:                                             ; preds = %2956, %2960
  %2963 = getelementptr inbounds %struct.obj, ptr %2928, i64 0, i32 2, i32 0, i32 1
  store ptr %2951, ptr %2963, align 8, !tbaa !9
  %2964 = tail call ptr @gen_intern(ptr noundef nonnull @.str.223, i64 noundef 0)
  %2965 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %2966 = icmp eq i64 %2965, 1
  br i1 %2966, label %2967, label %2975

2967:                                             ; preds = %2962
  %2968 = load ptr, ptr @heap, align 8, !tbaa !5
  %2969 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %2970 = icmp ult ptr %2968, %2969
  br i1 %2970, label %2973, label %2971

2971:                                             ; preds = %2967
  %2972 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %2973

2973:                                             ; preds = %2971, %2967
  %2974 = getelementptr inbounds %struct.obj, ptr %2968, i64 1
  store ptr %2974, ptr @heap, align 8, !tbaa !5
  br label %2986

2975:                                             ; preds = %2962
  %2976 = load ptr, ptr @freelist, align 8, !tbaa !5
  %2977 = icmp eq ptr %2976, null
  br i1 %2977, label %2978, label %2980

2978:                                             ; preds = %2975
  tail call void @gc_for_newcell()
  %2979 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %2980

2980:                                             ; preds = %2978, %2975
  %2981 = phi ptr [ %2979, %2978 ], [ %2976, %2975 ]
  %2982 = getelementptr inbounds %struct.obj, ptr %2981, i64 0, i32 2, i32 0, i32 1
  %2983 = load ptr, ptr %2982, align 8, !tbaa !9
  store ptr %2983, ptr @freelist, align 8, !tbaa !5
  %2984 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %2985 = add nsw i64 %2984, 1
  store i64 %2985, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %2986

2986:                                             ; preds = %2980, %2973
  %2987 = phi ptr [ %2968, %2973 ], [ %2981, %2980 ]
  store i16 0, ptr %2987, align 8, !tbaa !35
  %2988 = getelementptr inbounds %struct.obj, ptr %2987, i64 0, i32 1
  store i16 4, ptr %2988, align 2, !tbaa !14
  %2989 = getelementptr inbounds %struct.obj, ptr %2987, i64 0, i32 2
  store ptr @.str.223, ptr %2989, align 8, !tbaa !9
  %2990 = getelementptr inbounds %struct.obj, ptr %2987, i64 0, i32 2, i32 0, i32 1
  store ptr @allocate_aheap, ptr %2990, align 8, !tbaa !9
  %2991 = icmp eq ptr %2964, null
  br i1 %2991, label %2996, label %2992

2992:                                             ; preds = %2986
  %2993 = getelementptr inbounds %struct.obj, ptr %2964, i64 0, i32 1
  %2994 = load i16, ptr %2993, align 2, !tbaa !14
  %2995 = icmp eq i16 %2994, 3
  br i1 %2995, label %2998, label %2996

2996:                                             ; preds = %2992, %2986
  %2997 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %2964) #38
  br label %2998

2998:                                             ; preds = %2992, %2996
  %2999 = getelementptr inbounds %struct.obj, ptr %2964, i64 0, i32 2, i32 0, i32 1
  store ptr %2987, ptr %2999, align 8, !tbaa !9
  %3000 = tail call ptr @gen_intern(ptr noundef nonnull @.str.224, i64 noundef 0)
  %3001 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3002 = icmp eq i64 %3001, 1
  br i1 %3002, label %3003, label %3011

3003:                                             ; preds = %2998
  %3004 = load ptr, ptr @heap, align 8, !tbaa !5
  %3005 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3006 = icmp ult ptr %3004, %3005
  br i1 %3006, label %3009, label %3007

3007:                                             ; preds = %3003
  %3008 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3009

3009:                                             ; preds = %3007, %3003
  %3010 = getelementptr inbounds %struct.obj, ptr %3004, i64 1
  store ptr %3010, ptr @heap, align 8, !tbaa !5
  br label %3022

3011:                                             ; preds = %2998
  %3012 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3013 = icmp eq ptr %3012, null
  br i1 %3013, label %3014, label %3016

3014:                                             ; preds = %3011
  tail call void @gc_for_newcell()
  %3015 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3016

3016:                                             ; preds = %3014, %3011
  %3017 = phi ptr [ %3015, %3014 ], [ %3012, %3011 ]
  %3018 = getelementptr inbounds %struct.obj, ptr %3017, i64 0, i32 2, i32 0, i32 1
  %3019 = load ptr, ptr %3018, align 8, !tbaa !9
  store ptr %3019, ptr @freelist, align 8, !tbaa !5
  %3020 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3021 = add nsw i64 %3020, 1
  store i64 %3021, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3022

3022:                                             ; preds = %3016, %3009
  %3023 = phi ptr [ %3004, %3009 ], [ %3017, %3016 ]
  store i16 0, ptr %3023, align 8, !tbaa !35
  %3024 = getelementptr inbounds %struct.obj, ptr %3023, i64 0, i32 1
  store i16 5, ptr %3024, align 2, !tbaa !14
  %3025 = getelementptr inbounds %struct.obj, ptr %3023, i64 0, i32 2
  store ptr @.str.224, ptr %3025, align 8, !tbaa !9
  %3026 = getelementptr inbounds %struct.obj, ptr %3023, i64 0, i32 2, i32 0, i32 1
  store ptr @gc_info, ptr %3026, align 8, !tbaa !9
  %3027 = icmp eq ptr %3000, null
  br i1 %3027, label %3032, label %3028

3028:                                             ; preds = %3022
  %3029 = getelementptr inbounds %struct.obj, ptr %3000, i64 0, i32 1
  %3030 = load i16, ptr %3029, align 2, !tbaa !14
  %3031 = icmp eq i16 %3030, 3
  br i1 %3031, label %3034, label %3032

3032:                                             ; preds = %3028, %3022
  %3033 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3000) #38
  br label %3034

3034:                                             ; preds = %3028, %3032
  %3035 = getelementptr inbounds %struct.obj, ptr %3000, i64 0, i32 2, i32 0, i32 1
  store ptr %3023, ptr %3035, align 8, !tbaa !9
  %3036 = tail call ptr @gen_intern(ptr noundef nonnull @.str.225, i64 noundef 0)
  %3037 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3038 = icmp eq i64 %3037, 1
  br i1 %3038, label %3039, label %3047

3039:                                             ; preds = %3034
  %3040 = load ptr, ptr @heap, align 8, !tbaa !5
  %3041 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3042 = icmp ult ptr %3040, %3041
  br i1 %3042, label %3045, label %3043

3043:                                             ; preds = %3039
  %3044 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3045

3045:                                             ; preds = %3043, %3039
  %3046 = getelementptr inbounds %struct.obj, ptr %3040, i64 1
  store ptr %3046, ptr @heap, align 8, !tbaa !5
  br label %3058

3047:                                             ; preds = %3034
  %3048 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3049 = icmp eq ptr %3048, null
  br i1 %3049, label %3050, label %3052

3050:                                             ; preds = %3047
  tail call void @gc_for_newcell()
  %3051 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3052

3052:                                             ; preds = %3050, %3047
  %3053 = phi ptr [ %3051, %3050 ], [ %3048, %3047 ]
  %3054 = getelementptr inbounds %struct.obj, ptr %3053, i64 0, i32 2, i32 0, i32 1
  %3055 = load ptr, ptr %3054, align 8, !tbaa !9
  store ptr %3055, ptr @freelist, align 8, !tbaa !5
  %3056 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3057 = add nsw i64 %3056, 1
  store i64 %3057, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3058

3058:                                             ; preds = %3052, %3045
  %3059 = phi ptr [ %3040, %3045 ], [ %3053, %3052 ]
  store i16 0, ptr %3059, align 8, !tbaa !35
  %3060 = getelementptr inbounds %struct.obj, ptr %3059, i64 0, i32 1
  store i16 4, ptr %3060, align 2, !tbaa !14
  %3061 = getelementptr inbounds %struct.obj, ptr %3059, i64 0, i32 2
  store ptr @.str.225, ptr %3061, align 8, !tbaa !9
  %3062 = getelementptr inbounds %struct.obj, ptr %3059, i64 0, i32 2, i32 0, i32 1
  store ptr @lruntime, ptr %3062, align 8, !tbaa !9
  %3063 = icmp eq ptr %3036, null
  br i1 %3063, label %3068, label %3064

3064:                                             ; preds = %3058
  %3065 = getelementptr inbounds %struct.obj, ptr %3036, i64 0, i32 1
  %3066 = load i16, ptr %3065, align 2, !tbaa !14
  %3067 = icmp eq i16 %3066, 3
  br i1 %3067, label %3070, label %3068

3068:                                             ; preds = %3064, %3058
  %3069 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3036) #38
  br label %3070

3070:                                             ; preds = %3064, %3068
  %3071 = getelementptr inbounds %struct.obj, ptr %3036, i64 0, i32 2, i32 0, i32 1
  store ptr %3059, ptr %3071, align 8, !tbaa !9
  %3072 = tail call ptr @gen_intern(ptr noundef nonnull @.str.226, i64 noundef 0)
  %3073 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3074 = icmp eq i64 %3073, 1
  br i1 %3074, label %3075, label %3083

3075:                                             ; preds = %3070
  %3076 = load ptr, ptr @heap, align 8, !tbaa !5
  %3077 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3078 = icmp ult ptr %3076, %3077
  br i1 %3078, label %3081, label %3079

3079:                                             ; preds = %3075
  %3080 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3081

3081:                                             ; preds = %3079, %3075
  %3082 = getelementptr inbounds %struct.obj, ptr %3076, i64 1
  store ptr %3082, ptr @heap, align 8, !tbaa !5
  br label %3094

3083:                                             ; preds = %3070
  %3084 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3085 = icmp eq ptr %3084, null
  br i1 %3085, label %3086, label %3088

3086:                                             ; preds = %3083
  tail call void @gc_for_newcell()
  %3087 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3088

3088:                                             ; preds = %3086, %3083
  %3089 = phi ptr [ %3087, %3086 ], [ %3084, %3083 ]
  %3090 = getelementptr inbounds %struct.obj, ptr %3089, i64 0, i32 2, i32 0, i32 1
  %3091 = load ptr, ptr %3090, align 8, !tbaa !9
  store ptr %3091, ptr @freelist, align 8, !tbaa !5
  %3092 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3093 = add nsw i64 %3092, 1
  store i64 %3093, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3094

3094:                                             ; preds = %3088, %3081
  %3095 = phi ptr [ %3076, %3081 ], [ %3089, %3088 ]
  store i16 0, ptr %3095, align 8, !tbaa !35
  %3096 = getelementptr inbounds %struct.obj, ptr %3095, i64 0, i32 1
  store i16 4, ptr %3096, align 2, !tbaa !14
  %3097 = getelementptr inbounds %struct.obj, ptr %3095, i64 0, i32 2
  store ptr @.str.226, ptr %3097, align 8, !tbaa !9
  %3098 = getelementptr inbounds %struct.obj, ptr %3095, i64 0, i32 2, i32 0, i32 1
  store ptr @lrealtime, ptr %3098, align 8, !tbaa !9
  %3099 = icmp eq ptr %3072, null
  br i1 %3099, label %3104, label %3100

3100:                                             ; preds = %3094
  %3101 = getelementptr inbounds %struct.obj, ptr %3072, i64 0, i32 1
  %3102 = load i16, ptr %3101, align 2, !tbaa !14
  %3103 = icmp eq i16 %3102, 3
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3100, %3094
  %3105 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3072) #38
  br label %3106

3106:                                             ; preds = %3100, %3104
  %3107 = getelementptr inbounds %struct.obj, ptr %3072, i64 0, i32 2, i32 0, i32 1
  store ptr %3095, ptr %3107, align 8, !tbaa !9
  %3108 = tail call ptr @gen_intern(ptr noundef nonnull @.str.227, i64 noundef 0)
  %3109 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3110 = icmp eq i64 %3109, 1
  br i1 %3110, label %3111, label %3119

3111:                                             ; preds = %3106
  %3112 = load ptr, ptr @heap, align 8, !tbaa !5
  %3113 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3114 = icmp ult ptr %3112, %3113
  br i1 %3114, label %3117, label %3115

3115:                                             ; preds = %3111
  %3116 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3117

3117:                                             ; preds = %3115, %3111
  %3118 = getelementptr inbounds %struct.obj, ptr %3112, i64 1
  store ptr %3118, ptr @heap, align 8, !tbaa !5
  br label %3130

3119:                                             ; preds = %3106
  %3120 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3121 = icmp eq ptr %3120, null
  br i1 %3121, label %3122, label %3124

3122:                                             ; preds = %3119
  tail call void @gc_for_newcell()
  %3123 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3124

3124:                                             ; preds = %3122, %3119
  %3125 = phi ptr [ %3123, %3122 ], [ %3120, %3119 ]
  %3126 = getelementptr inbounds %struct.obj, ptr %3125, i64 0, i32 2, i32 0, i32 1
  %3127 = load ptr, ptr %3126, align 8, !tbaa !9
  store ptr %3127, ptr @freelist, align 8, !tbaa !5
  %3128 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3129 = add nsw i64 %3128, 1
  store i64 %3129, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3130

3130:                                             ; preds = %3124, %3117
  %3131 = phi ptr [ %3112, %3117 ], [ %3125, %3124 ]
  store i16 0, ptr %3131, align 8, !tbaa !35
  %3132 = getelementptr inbounds %struct.obj, ptr %3131, i64 0, i32 1
  store i16 5, ptr %3132, align 2, !tbaa !14
  %3133 = getelementptr inbounds %struct.obj, ptr %3131, i64 0, i32 2
  store ptr @.str.227, ptr %3133, align 8, !tbaa !9
  %3134 = getelementptr inbounds %struct.obj, ptr %3131, i64 0, i32 2, i32 0, i32 1
  store ptr @caar, ptr %3134, align 8, !tbaa !9
  %3135 = icmp eq ptr %3108, null
  br i1 %3135, label %3140, label %3136

3136:                                             ; preds = %3130
  %3137 = getelementptr inbounds %struct.obj, ptr %3108, i64 0, i32 1
  %3138 = load i16, ptr %3137, align 2, !tbaa !14
  %3139 = icmp eq i16 %3138, 3
  br i1 %3139, label %3142, label %3140

3140:                                             ; preds = %3136, %3130
  %3141 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3108) #38
  br label %3142

3142:                                             ; preds = %3136, %3140
  %3143 = getelementptr inbounds %struct.obj, ptr %3108, i64 0, i32 2, i32 0, i32 1
  store ptr %3131, ptr %3143, align 8, !tbaa !9
  %3144 = tail call ptr @gen_intern(ptr noundef nonnull @.str.228, i64 noundef 0)
  %3145 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3146 = icmp eq i64 %3145, 1
  br i1 %3146, label %3147, label %3155

3147:                                             ; preds = %3142
  %3148 = load ptr, ptr @heap, align 8, !tbaa !5
  %3149 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3150 = icmp ult ptr %3148, %3149
  br i1 %3150, label %3153, label %3151

3151:                                             ; preds = %3147
  %3152 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3153

3153:                                             ; preds = %3151, %3147
  %3154 = getelementptr inbounds %struct.obj, ptr %3148, i64 1
  store ptr %3154, ptr @heap, align 8, !tbaa !5
  br label %3166

3155:                                             ; preds = %3142
  %3156 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3157 = icmp eq ptr %3156, null
  br i1 %3157, label %3158, label %3160

3158:                                             ; preds = %3155
  tail call void @gc_for_newcell()
  %3159 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3160

3160:                                             ; preds = %3158, %3155
  %3161 = phi ptr [ %3159, %3158 ], [ %3156, %3155 ]
  %3162 = getelementptr inbounds %struct.obj, ptr %3161, i64 0, i32 2, i32 0, i32 1
  %3163 = load ptr, ptr %3162, align 8, !tbaa !9
  store ptr %3163, ptr @freelist, align 8, !tbaa !5
  %3164 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3165 = add nsw i64 %3164, 1
  store i64 %3165, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3166

3166:                                             ; preds = %3160, %3153
  %3167 = phi ptr [ %3148, %3153 ], [ %3161, %3160 ]
  store i16 0, ptr %3167, align 8, !tbaa !35
  %3168 = getelementptr inbounds %struct.obj, ptr %3167, i64 0, i32 1
  store i16 5, ptr %3168, align 2, !tbaa !14
  %3169 = getelementptr inbounds %struct.obj, ptr %3167, i64 0, i32 2
  store ptr @.str.228, ptr %3169, align 8, !tbaa !9
  %3170 = getelementptr inbounds %struct.obj, ptr %3167, i64 0, i32 2, i32 0, i32 1
  store ptr @cadr, ptr %3170, align 8, !tbaa !9
  %3171 = icmp eq ptr %3144, null
  br i1 %3171, label %3176, label %3172

3172:                                             ; preds = %3166
  %3173 = getelementptr inbounds %struct.obj, ptr %3144, i64 0, i32 1
  %3174 = load i16, ptr %3173, align 2, !tbaa !14
  %3175 = icmp eq i16 %3174, 3
  br i1 %3175, label %3178, label %3176

3176:                                             ; preds = %3172, %3166
  %3177 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3144) #38
  br label %3178

3178:                                             ; preds = %3172, %3176
  %3179 = getelementptr inbounds %struct.obj, ptr %3144, i64 0, i32 2, i32 0, i32 1
  store ptr %3167, ptr %3179, align 8, !tbaa !9
  %3180 = tail call ptr @gen_intern(ptr noundef nonnull @.str.229, i64 noundef 0)
  %3181 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3182 = icmp eq i64 %3181, 1
  br i1 %3182, label %3183, label %3191

3183:                                             ; preds = %3178
  %3184 = load ptr, ptr @heap, align 8, !tbaa !5
  %3185 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3186 = icmp ult ptr %3184, %3185
  br i1 %3186, label %3189, label %3187

3187:                                             ; preds = %3183
  %3188 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3189

3189:                                             ; preds = %3187, %3183
  %3190 = getelementptr inbounds %struct.obj, ptr %3184, i64 1
  store ptr %3190, ptr @heap, align 8, !tbaa !5
  br label %3202

3191:                                             ; preds = %3178
  %3192 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3193 = icmp eq ptr %3192, null
  br i1 %3193, label %3194, label %3196

3194:                                             ; preds = %3191
  tail call void @gc_for_newcell()
  %3195 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3196

3196:                                             ; preds = %3194, %3191
  %3197 = phi ptr [ %3195, %3194 ], [ %3192, %3191 ]
  %3198 = getelementptr inbounds %struct.obj, ptr %3197, i64 0, i32 2, i32 0, i32 1
  %3199 = load ptr, ptr %3198, align 8, !tbaa !9
  store ptr %3199, ptr @freelist, align 8, !tbaa !5
  %3200 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3201 = add nsw i64 %3200, 1
  store i64 %3201, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3202

3202:                                             ; preds = %3196, %3189
  %3203 = phi ptr [ %3184, %3189 ], [ %3197, %3196 ]
  store i16 0, ptr %3203, align 8, !tbaa !35
  %3204 = getelementptr inbounds %struct.obj, ptr %3203, i64 0, i32 1
  store i16 5, ptr %3204, align 2, !tbaa !14
  %3205 = getelementptr inbounds %struct.obj, ptr %3203, i64 0, i32 2
  store ptr @.str.229, ptr %3205, align 8, !tbaa !9
  %3206 = getelementptr inbounds %struct.obj, ptr %3203, i64 0, i32 2, i32 0, i32 1
  store ptr @cdar, ptr %3206, align 8, !tbaa !9
  %3207 = icmp eq ptr %3180, null
  br i1 %3207, label %3212, label %3208

3208:                                             ; preds = %3202
  %3209 = getelementptr inbounds %struct.obj, ptr %3180, i64 0, i32 1
  %3210 = load i16, ptr %3209, align 2, !tbaa !14
  %3211 = icmp eq i16 %3210, 3
  br i1 %3211, label %3214, label %3212

3212:                                             ; preds = %3208, %3202
  %3213 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3180) #38
  br label %3214

3214:                                             ; preds = %3208, %3212
  %3215 = getelementptr inbounds %struct.obj, ptr %3180, i64 0, i32 2, i32 0, i32 1
  store ptr %3203, ptr %3215, align 8, !tbaa !9
  %3216 = tail call ptr @gen_intern(ptr noundef nonnull @.str.230, i64 noundef 0)
  %3217 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3218 = icmp eq i64 %3217, 1
  br i1 %3218, label %3219, label %3227

3219:                                             ; preds = %3214
  %3220 = load ptr, ptr @heap, align 8, !tbaa !5
  %3221 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3222 = icmp ult ptr %3220, %3221
  br i1 %3222, label %3225, label %3223

3223:                                             ; preds = %3219
  %3224 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3225

3225:                                             ; preds = %3223, %3219
  %3226 = getelementptr inbounds %struct.obj, ptr %3220, i64 1
  store ptr %3226, ptr @heap, align 8, !tbaa !5
  br label %3238

3227:                                             ; preds = %3214
  %3228 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3229 = icmp eq ptr %3228, null
  br i1 %3229, label %3230, label %3232

3230:                                             ; preds = %3227
  tail call void @gc_for_newcell()
  %3231 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3232

3232:                                             ; preds = %3230, %3227
  %3233 = phi ptr [ %3231, %3230 ], [ %3228, %3227 ]
  %3234 = getelementptr inbounds %struct.obj, ptr %3233, i64 0, i32 2, i32 0, i32 1
  %3235 = load ptr, ptr %3234, align 8, !tbaa !9
  store ptr %3235, ptr @freelist, align 8, !tbaa !5
  %3236 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3237 = add nsw i64 %3236, 1
  store i64 %3237, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3238

3238:                                             ; preds = %3232, %3225
  %3239 = phi ptr [ %3220, %3225 ], [ %3233, %3232 ]
  store i16 0, ptr %3239, align 8, !tbaa !35
  %3240 = getelementptr inbounds %struct.obj, ptr %3239, i64 0, i32 1
  store i16 5, ptr %3240, align 2, !tbaa !14
  %3241 = getelementptr inbounds %struct.obj, ptr %3239, i64 0, i32 2
  store ptr @.str.230, ptr %3241, align 8, !tbaa !9
  %3242 = getelementptr inbounds %struct.obj, ptr %3239, i64 0, i32 2, i32 0, i32 1
  store ptr @cddr, ptr %3242, align 8, !tbaa !9
  %3243 = icmp eq ptr %3216, null
  br i1 %3243, label %3248, label %3244

3244:                                             ; preds = %3238
  %3245 = getelementptr inbounds %struct.obj, ptr %3216, i64 0, i32 1
  %3246 = load i16, ptr %3245, align 2, !tbaa !14
  %3247 = icmp eq i16 %3246, 3
  br i1 %3247, label %3250, label %3248

3248:                                             ; preds = %3244, %3238
  %3249 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3216) #38
  br label %3250

3250:                                             ; preds = %3244, %3248
  %3251 = getelementptr inbounds %struct.obj, ptr %3216, i64 0, i32 2, i32 0, i32 1
  store ptr %3239, ptr %3251, align 8, !tbaa !9
  %3252 = tail call ptr @gen_intern(ptr noundef nonnull @.str.231, i64 noundef 0)
  %3253 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3254 = icmp eq i64 %3253, 1
  br i1 %3254, label %3255, label %3263

3255:                                             ; preds = %3250
  %3256 = load ptr, ptr @heap, align 8, !tbaa !5
  %3257 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3258 = icmp ult ptr %3256, %3257
  br i1 %3258, label %3261, label %3259

3259:                                             ; preds = %3255
  %3260 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3261

3261:                                             ; preds = %3259, %3255
  %3262 = getelementptr inbounds %struct.obj, ptr %3256, i64 1
  store ptr %3262, ptr @heap, align 8, !tbaa !5
  br label %3274

3263:                                             ; preds = %3250
  %3264 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3265 = icmp eq ptr %3264, null
  br i1 %3265, label %3266, label %3268

3266:                                             ; preds = %3263
  tail call void @gc_for_newcell()
  %3267 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3268

3268:                                             ; preds = %3266, %3263
  %3269 = phi ptr [ %3267, %3266 ], [ %3264, %3263 ]
  %3270 = getelementptr inbounds %struct.obj, ptr %3269, i64 0, i32 2, i32 0, i32 1
  %3271 = load ptr, ptr %3270, align 8, !tbaa !9
  store ptr %3271, ptr @freelist, align 8, !tbaa !5
  %3272 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3273 = add nsw i64 %3272, 1
  store i64 %3273, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3274

3274:                                             ; preds = %3268, %3261
  %3275 = phi ptr [ %3256, %3261 ], [ %3269, %3268 ]
  store i16 0, ptr %3275, align 8, !tbaa !35
  %3276 = getelementptr inbounds %struct.obj, ptr %3275, i64 0, i32 1
  store i16 5, ptr %3276, align 2, !tbaa !14
  %3277 = getelementptr inbounds %struct.obj, ptr %3275, i64 0, i32 2
  store ptr @.str.231, ptr %3277, align 8, !tbaa !9
  %3278 = getelementptr inbounds %struct.obj, ptr %3275, i64 0, i32 2, i32 0, i32 1
  store ptr @lrand, ptr %3278, align 8, !tbaa !9
  %3279 = icmp eq ptr %3252, null
  br i1 %3279, label %3284, label %3280

3280:                                             ; preds = %3274
  %3281 = getelementptr inbounds %struct.obj, ptr %3252, i64 0, i32 1
  %3282 = load i16, ptr %3281, align 2, !tbaa !14
  %3283 = icmp eq i16 %3282, 3
  br i1 %3283, label %3286, label %3284

3284:                                             ; preds = %3280, %3274
  %3285 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3252) #38
  br label %3286

3286:                                             ; preds = %3280, %3284
  %3287 = getelementptr inbounds %struct.obj, ptr %3252, i64 0, i32 2, i32 0, i32 1
  store ptr %3275, ptr %3287, align 8, !tbaa !9
  %3288 = tail call ptr @gen_intern(ptr noundef nonnull @.str.232, i64 noundef 0)
  %3289 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3290 = icmp eq i64 %3289, 1
  br i1 %3290, label %3291, label %3299

3291:                                             ; preds = %3286
  %3292 = load ptr, ptr @heap, align 8, !tbaa !5
  %3293 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3294 = icmp ult ptr %3292, %3293
  br i1 %3294, label %3297, label %3295

3295:                                             ; preds = %3291
  %3296 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3297

3297:                                             ; preds = %3295, %3291
  %3298 = getelementptr inbounds %struct.obj, ptr %3292, i64 1
  store ptr %3298, ptr @heap, align 8, !tbaa !5
  br label %3310

3299:                                             ; preds = %3286
  %3300 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3301 = icmp eq ptr %3300, null
  br i1 %3301, label %3302, label %3304

3302:                                             ; preds = %3299
  tail call void @gc_for_newcell()
  %3303 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3304

3304:                                             ; preds = %3302, %3299
  %3305 = phi ptr [ %3303, %3302 ], [ %3300, %3299 ]
  %3306 = getelementptr inbounds %struct.obj, ptr %3305, i64 0, i32 2, i32 0, i32 1
  %3307 = load ptr, ptr %3306, align 8, !tbaa !9
  store ptr %3307, ptr @freelist, align 8, !tbaa !5
  %3308 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3309 = add nsw i64 %3308, 1
  store i64 %3309, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3310

3310:                                             ; preds = %3304, %3297
  %3311 = phi ptr [ %3292, %3297 ], [ %3305, %3304 ]
  store i16 0, ptr %3311, align 8, !tbaa !35
  %3312 = getelementptr inbounds %struct.obj, ptr %3311, i64 0, i32 1
  store i16 5, ptr %3312, align 2, !tbaa !14
  %3313 = getelementptr inbounds %struct.obj, ptr %3311, i64 0, i32 2
  store ptr @.str.232, ptr %3313, align 8, !tbaa !9
  %3314 = getelementptr inbounds %struct.obj, ptr %3311, i64 0, i32 2, i32 0, i32 1
  store ptr @lsrand, ptr %3314, align 8, !tbaa !9
  %3315 = icmp eq ptr %3288, null
  br i1 %3315, label %3320, label %3316

3316:                                             ; preds = %3310
  %3317 = getelementptr inbounds %struct.obj, ptr %3288, i64 0, i32 1
  %3318 = load i16, ptr %3317, align 2, !tbaa !14
  %3319 = icmp eq i16 %3318, 3
  br i1 %3319, label %3322, label %3320

3320:                                             ; preds = %3316, %3310
  %3321 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3288) #38
  br label %3322

3322:                                             ; preds = %3316, %3320
  %3323 = getelementptr inbounds %struct.obj, ptr %3288, i64 0, i32 2, i32 0, i32 1
  store ptr %3311, ptr %3323, align 8, !tbaa !9
  %3324 = tail call ptr @gen_intern(ptr noundef nonnull @.str.233, i64 noundef 0)
  %3325 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3326 = icmp eq i64 %3325, 1
  br i1 %3326, label %3327, label %3335

3327:                                             ; preds = %3322
  %3328 = load ptr, ptr @heap, align 8, !tbaa !5
  %3329 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3330 = icmp ult ptr %3328, %3329
  br i1 %3330, label %3333, label %3331

3331:                                             ; preds = %3327
  %3332 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3333

3333:                                             ; preds = %3331, %3327
  %3334 = getelementptr inbounds %struct.obj, ptr %3328, i64 1
  store ptr %3334, ptr @heap, align 8, !tbaa !5
  br label %3346

3335:                                             ; preds = %3322
  %3336 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3337 = icmp eq ptr %3336, null
  br i1 %3337, label %3338, label %3340

3338:                                             ; preds = %3335
  tail call void @gc_for_newcell()
  %3339 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3340

3340:                                             ; preds = %3338, %3335
  %3341 = phi ptr [ %3339, %3338 ], [ %3336, %3335 ]
  %3342 = getelementptr inbounds %struct.obj, ptr %3341, i64 0, i32 2, i32 0, i32 1
  %3343 = load ptr, ptr %3342, align 8, !tbaa !9
  store ptr %3343, ptr @freelist, align 8, !tbaa !5
  %3344 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3345 = add nsw i64 %3344, 1
  store i64 %3345, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3346

3346:                                             ; preds = %3340, %3333
  %3347 = phi ptr [ %3328, %3333 ], [ %3341, %3340 ]
  store i16 0, ptr %3347, align 8, !tbaa !35
  %3348 = getelementptr inbounds %struct.obj, ptr %3347, i64 0, i32 1
  store i16 4, ptr %3348, align 2, !tbaa !14
  %3349 = getelementptr inbounds %struct.obj, ptr %3347, i64 0, i32 2
  store ptr @.str.233, ptr %3349, align 8, !tbaa !9
  %3350 = getelementptr inbounds %struct.obj, ptr %3347, i64 0, i32 2, i32 0, i32 1
  store ptr @lllast_c_errmsg, ptr %3350, align 8, !tbaa !9
  %3351 = icmp eq ptr %3324, null
  br i1 %3351, label %3356, label %3352

3352:                                             ; preds = %3346
  %3353 = getelementptr inbounds %struct.obj, ptr %3324, i64 0, i32 1
  %3354 = load i16, ptr %3353, align 2, !tbaa !14
  %3355 = icmp eq i16 %3354, 3
  br i1 %3355, label %3358, label %3356

3356:                                             ; preds = %3352, %3346
  %3357 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3324) #38
  br label %3358

3358:                                             ; preds = %3352, %3356
  %3359 = getelementptr inbounds %struct.obj, ptr %3324, i64 0, i32 2, i32 0, i32 1
  store ptr %3347, ptr %3359, align 8, !tbaa !9
  %3360 = tail call ptr @gen_intern(ptr noundef nonnull @.str.234, i64 noundef 0)
  %3361 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %3362 = icmp eq i64 %3361, 1
  br i1 %3362, label %3363, label %3371

3363:                                             ; preds = %3358
  %3364 = load ptr, ptr @heap, align 8, !tbaa !5
  %3365 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %3366 = icmp ult ptr %3364, %3365
  br i1 %3366, label %3369, label %3367

3367:                                             ; preds = %3363
  %3368 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %3369

3369:                                             ; preds = %3367, %3363
  %3370 = getelementptr inbounds %struct.obj, ptr %3364, i64 1
  store ptr %3370, ptr @heap, align 8, !tbaa !5
  br label %3382

3371:                                             ; preds = %3358
  %3372 = load ptr, ptr @freelist, align 8, !tbaa !5
  %3373 = icmp eq ptr %3372, null
  br i1 %3373, label %3374, label %3376

3374:                                             ; preds = %3371
  tail call void @gc_for_newcell()
  %3375 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %3376

3376:                                             ; preds = %3374, %3371
  %3377 = phi ptr [ %3375, %3374 ], [ %3372, %3371 ]
  %3378 = getelementptr inbounds %struct.obj, ptr %3377, i64 0, i32 2, i32 0, i32 1
  %3379 = load ptr, ptr %3378, align 8, !tbaa !9
  store ptr %3379, ptr @freelist, align 8, !tbaa !5
  %3380 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %3381 = add nsw i64 %3380, 1
  store i64 %3381, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %3382

3382:                                             ; preds = %3376, %3369
  %3383 = phi ptr [ %3364, %3369 ], [ %3377, %3376 ]
  store i16 0, ptr %3383, align 8, !tbaa !35
  %3384 = getelementptr inbounds %struct.obj, ptr %3383, i64 0, i32 1
  store i16 4, ptr %3384, align 2, !tbaa !14
  %3385 = getelementptr inbounds %struct.obj, ptr %3383, i64 0, i32 2
  store ptr @.str.234, ptr %3385, align 8, !tbaa !9
  %3386 = getelementptr inbounds %struct.obj, ptr %3383, i64 0, i32 2, i32 0, i32 1
  store ptr @os_classification, ptr %3386, align 8, !tbaa !9
  %3387 = icmp eq ptr %3360, null
  br i1 %3387, label %3392, label %3388

3388:                                             ; preds = %3382
  %3389 = getelementptr inbounds %struct.obj, ptr %3360, i64 0, i32 1
  %3390 = load i16, ptr %3389, align 2, !tbaa !14
  %3391 = icmp eq i16 %3390, 3
  br i1 %3391, label %3394, label %3392

3392:                                             ; preds = %3388, %3382
  %3393 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3360) #38
  br label %3394

3394:                                             ; preds = %3388, %3392
  %3395 = getelementptr inbounds %struct.obj, ptr %3360, i64 0, i32 2, i32 0, i32 1
  store ptr %3383, ptr %3395, align 8, !tbaa !9
  %3396 = tail call ptr @gen_intern(ptr noundef nonnull @.str.239, i64 noundef 0)
  %3397 = tail call ptr @gen_intern(ptr noundef nonnull @.str.240, i64 noundef 0)
  %3398 = icmp eq ptr %3396, null
  br i1 %3398, label %3403, label %3399

3399:                                             ; preds = %3394
  %3400 = getelementptr inbounds %struct.obj, ptr %3396, i64 0, i32 1
  %3401 = load i16, ptr %3400, align 2, !tbaa !14
  %3402 = icmp eq i16 %3401, 3
  br i1 %3402, label %3405, label %3403

3403:                                             ; preds = %3399, %3394
  %3404 = tail call ptr @err(ptr noundef nonnull @.str.92, ptr noundef %3396) #38
  br label %3405

3405:                                             ; preds = %3399, %3403
  %3406 = getelementptr inbounds %struct.obj, ptr %3396, i64 0, i32 2, i32 0, i32 1
  store ptr %3397, ptr %3406, align 8, !tbaa !9
  ret void
}

declare void @init_subrs_a() local_unnamed_addr #13

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local ptr @closure_code(ptr nocapture noundef readonly %0) #26 {
  %2 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local ptr @closure_env(ptr nocapture noundef readonly %0) #26 {
  %2 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  ret ptr %3
}

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lwhile(ptr noundef %0, ptr noundef %1) #6 {
  %3 = icmp eq ptr %0, null
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %6 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2, i32 0, i32 1
  br i1 %3, label %7, label %14

7:                                                ; preds = %2, %7
  %8 = tail call ptr @leval(ptr noundef null, ptr noundef %1)
  %9 = icmp eq ptr %8, null
  br i1 %9, label %50, label %7, !llvm.loop !118

10:                                               ; preds = %41, %25
  %11 = phi ptr [ %0, %25 ], [ %32, %41 ]
  %12 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %11)
  br label %13

13:                                               ; preds = %41, %46, %10, %25, %28
  br label %14, !llvm.loop !118

14:                                               ; preds = %2, %13
  %15 = load i16, ptr %4, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %19 [
    i32 0, label %21
    i32 1, label %17
  ]

17:                                               ; preds = %14
  %18 = load ptr, ptr %5, align 8, !tbaa !9
  br label %21

19:                                               ; preds = %14
  %20 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi ptr [ null, %19 ], [ %18, %17 ], [ null, %14 ]
  %23 = tail call ptr @leval(ptr noundef %22, ptr noundef %1)
  %24 = icmp eq ptr %23, null
  br i1 %24, label %50, label %25

25:                                               ; preds = %21
  %26 = load i16, ptr %4, align 2, !tbaa !14
  %27 = sext i16 %26 to i32
  switch i32 %27, label %10 [
    i32 0, label %13
    i32 1, label %28
  ]

28:                                               ; preds = %25
  %29 = load ptr, ptr %6, align 8, !tbaa !9
  %30 = icmp eq ptr %29, null
  br i1 %30, label %13, label %31

31:                                               ; preds = %28, %46
  %32 = phi ptr [ %48, %46 ], [ %29, %28 ]
  %33 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 1
  %34 = load i16, ptr %33, align 2, !tbaa !14
  %35 = sext i16 %34 to i32
  switch i32 %35, label %39 [
    i32 0, label %41
    i32 1, label %36
  ]

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !9
  br label %41

39:                                               ; preds = %31
  %40 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %32)
  br label %41

41:                                               ; preds = %31, %36, %39
  %42 = phi ptr [ null, %39 ], [ %38, %36 ], [ null, %31 ]
  %43 = tail call ptr @leval(ptr noundef %42, ptr noundef %1)
  %44 = load i16, ptr %33, align 2, !tbaa !14
  %45 = sext i16 %44 to i32
  switch i32 %45, label %10 [
    i32 0, label %13
    i32 1, label %46
  ]

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.obj, ptr %32, i64 0, i32 2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !9
  %49 = icmp eq ptr %48, null
  br i1 %49, label %13, label %31, !llvm.loop !119

50:                                               ; preds = %21, %7
  ret ptr null
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @nreverse(ptr noundef %0) #27 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1, %9
  %4 = phi ptr [ %5, %9 ], [ null, %1 ]
  %5 = phi ptr [ %11, %9 ], [ %0, %1 ]
  %6 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = icmp eq i16 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %5, i64 0, i32 2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  store ptr %4, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %3, !llvm.loop !120

13:                                               ; preds = %3, %9, %1
  %14 = phi ptr [ null, %1 ], [ %5, %9 ], [ %4, %3 ]
  ret ptr %14
}

; Function Attrs: nounwind uwtable
define dso_local ptr @siod_verbose(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  br label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %12 [
    i32 0, label %14
    i32 1, label %9
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %14

12:                                               ; preds = %5
  %13 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %14

14:                                               ; preds = %5, %9, %12
  %15 = phi ptr [ null, %12 ], [ %11, %9 ], [ null, %5 ]
  %16 = tail call i64 @get_c_long(ptr noundef %15) #33
  store i64 %16, ptr @siod_verbose_level, align 8, !tbaa !10
  br label %17

17:                                               ; preds = %3, %14
  %18 = phi i64 [ %4, %3 ], [ %16, %14 ]
  %19 = sitofp i64 %18 to double
  %20 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = fptosi double %19 to i64
  %24 = sitofp i64 %23 to double
  %25 = fsub double %19, %24
  %26 = fcmp oeq double %25, 0.000000e+00
  %27 = icmp sgt i64 %18, -1
  %28 = and i1 %27, %26
  %29 = icmp sgt i64 %20, %23
  %30 = select i1 %28, i1 %29, i1 false
  br i1 %30, label %31, label %35

31:                                               ; preds = %22
  %32 = load ptr, ptr @inums, align 8, !tbaa !5
  %33 = getelementptr inbounds ptr, ptr %32, i64 %23
  %34 = load ptr, ptr %33, align 8, !tbaa !5
  br label %61

35:                                               ; preds = %22, %17
  %36 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %35
  %39 = load ptr, ptr @heap, align 8, !tbaa !5
  %40 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %41 = icmp ult ptr %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.obj, ptr %39, i64 1
  store ptr %45, ptr @heap, align 8, !tbaa !5
  br label %57

46:                                               ; preds = %35
  %47 = load ptr, ptr @freelist, align 8, !tbaa !5
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  tail call void @gc_for_newcell()
  %50 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi ptr [ %50, %49 ], [ %47, %46 ]
  %53 = getelementptr inbounds %struct.obj, ptr %52, i64 0, i32 2, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !9
  store ptr %54, ptr @freelist, align 8, !tbaa !5
  %55 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %57

57:                                               ; preds = %51, %44
  %58 = phi ptr [ %39, %44 ], [ %52, %51 ]
  store i16 0, ptr %58, align 8, !tbaa !35
  %59 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 1
  store i16 2, ptr %59, align 2, !tbaa !14
  %60 = getelementptr inbounds %struct.obj, ptr %58, i64 0, i32 2
  store double %19, ptr %60, align 8, !tbaa !9
  br label %61

61:                                               ; preds = %31, %57
  %62 = phi ptr [ %34, %31 ], [ %58, %57 ]
  ret ptr %62
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local i32 @siod_verbose_check(i32 noundef %0) local_unnamed_addr #8 {
  %2 = load i64, ptr @siod_verbose_level, align 8, !tbaa !10
  %3 = sext i32 %0 to i64
  %4 = icmp sge i64 %2, %3
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lruntime() #6 {
  %1 = alloca %struct.tms, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %1) #33
  %2 = call i64 @times(ptr noundef nonnull %1) #33
  %3 = load i64, ptr %1, align 8, !tbaa !36
  %4 = sitofp i64 %3 to double
  %5 = getelementptr inbounds %struct.tms, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !38
  %7 = sitofp i64 %6 to double
  %8 = fadd double %4, %7
  %9 = fdiv double %8, 6.000000e+01
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #33
  %10 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %11 = icmp sgt i64 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %0
  %13 = fptosi double %9 to i64
  %14 = sitofp i64 %13 to double
  %15 = fsub double %9, %14
  %16 = fcmp oeq double %15, 0.000000e+00
  %17 = fcmp oge double %9, 0.000000e+00
  %18 = and i1 %17, %16
  %19 = icmp sgt i64 %10, %13
  %20 = select i1 %18, i1 %19, i1 false
  br i1 %20, label %21, label %26

21:                                               ; preds = %12
  %22 = load ptr, ptr @inums, align 8, !tbaa !5
  %23 = getelementptr inbounds ptr, ptr %22, i64 %13
  %24 = load ptr, ptr %23, align 8, !tbaa !5
  %25 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  br label %55

26:                                               ; preds = %12, %0
  %27 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %28 = icmp eq i64 %27, 1
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = load ptr, ptr @heap, align 8, !tbaa !5
  %31 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %32 = icmp ult ptr %30, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %35

35:                                               ; preds = %33, %29
  %36 = getelementptr inbounds %struct.obj, ptr %30, i64 1
  store ptr %36, ptr @heap, align 8, !tbaa !5
  br label %48

37:                                               ; preds = %26
  %38 = load ptr, ptr @freelist, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  tail call void @gc_for_newcell()
  %41 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi ptr [ %41, %40 ], [ %38, %37 ]
  %44 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2, i32 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !9
  store ptr %45, ptr @freelist, align 8, !tbaa !5
  %46 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %48

48:                                               ; preds = %35, %42
  %49 = phi ptr [ %30, %35 ], [ %43, %42 ]
  store i16 0, ptr %49, align 8, !tbaa !35
  %50 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 1
  store i16 2, ptr %50, align 2, !tbaa !14
  %51 = getelementptr inbounds %struct.obj, ptr %49, i64 0, i32 2
  store double %9, ptr %51, align 8, !tbaa !9
  %52 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %53 = load double, ptr @gc_time_taken, align 8, !tbaa !39
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %21, %48
  %56 = phi double [ %25, %21 ], [ %53, %48 ]
  %57 = phi ptr [ %24, %21 ], [ %49, %48 ]
  %58 = phi i64 [ %10, %21 ], [ %52, %48 ]
  %59 = fptosi double %56 to i64
  %60 = sitofp i64 %59 to double
  %61 = fsub double %56, %60
  %62 = fcmp oeq double %61, 0.000000e+00
  %63 = fcmp oge double %56, 0.000000e+00
  %64 = and i1 %63, %62
  %65 = icmp sgt i64 %58, %59
  %66 = select i1 %64, i1 %65, i1 false
  br i1 %66, label %67, label %71

67:                                               ; preds = %55
  %68 = load ptr, ptr @inums, align 8, !tbaa !5
  %69 = getelementptr inbounds ptr, ptr %68, i64 %59
  %70 = load ptr, ptr %69, align 8, !tbaa !5
  br label %99

71:                                               ; preds = %55, %48
  %72 = phi double [ %56, %55 ], [ %53, %48 ]
  %73 = phi ptr [ %57, %55 ], [ %49, %48 ]
  %74 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %75 = icmp eq i64 %74, 1
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = load ptr, ptr @heap, align 8, !tbaa !5
  %78 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %79 = icmp ult ptr %77, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %82

82:                                               ; preds = %80, %76
  %83 = getelementptr inbounds %struct.obj, ptr %77, i64 1
  store ptr %83, ptr @heap, align 8, !tbaa !5
  br label %95

84:                                               ; preds = %71
  %85 = load ptr, ptr @freelist, align 8, !tbaa !5
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  tail call void @gc_for_newcell()
  %88 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %89

89:                                               ; preds = %87, %84
  %90 = phi ptr [ %88, %87 ], [ %85, %84 ]
  %91 = getelementptr inbounds %struct.obj, ptr %90, i64 0, i32 2, i32 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !9
  store ptr %92, ptr @freelist, align 8, !tbaa !5
  %93 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %94 = add nsw i64 %93, 1
  store i64 %94, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %95

95:                                               ; preds = %89, %82
  %96 = phi ptr [ %77, %82 ], [ %90, %89 ]
  store i16 0, ptr %96, align 8, !tbaa !35
  %97 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 1
  store i16 2, ptr %97, align 2, !tbaa !14
  %98 = getelementptr inbounds %struct.obj, ptr %96, i64 0, i32 2
  store double %72, ptr %98, align 8, !tbaa !9
  br label %99

99:                                               ; preds = %67, %95
  %100 = phi ptr [ %57, %67 ], [ %73, %95 ]
  %101 = phi ptr [ %70, %67 ], [ %96, %95 ]
  %102 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %103 = icmp eq i64 %102, 1
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = load ptr, ptr @heap, align 8, !tbaa !5
  %106 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %107 = icmp ult ptr %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %struct.obj, ptr %105, i64 1
  store ptr %111, ptr @heap, align 8, !tbaa !5
  br label %123

112:                                              ; preds = %99
  %113 = load ptr, ptr @freelist, align 8, !tbaa !5
  %114 = icmp eq ptr %113, null
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  tail call void @gc_for_newcell() #38
  %116 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %117

117:                                              ; preds = %115, %112
  %118 = phi ptr [ %116, %115 ], [ %113, %112 ]
  %119 = getelementptr inbounds %struct.obj, ptr %118, i64 0, i32 2, i32 0, i32 1
  %120 = load ptr, ptr %119, align 8, !tbaa !9
  store ptr %120, ptr @freelist, align 8, !tbaa !5
  %121 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %122 = add nsw i64 %121, 1
  store i64 %122, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %123

123:                                              ; preds = %110, %117
  %124 = phi ptr [ %105, %110 ], [ %118, %117 ]
  store i16 0, ptr %124, align 8, !tbaa !35
  %125 = getelementptr inbounds %struct.obj, ptr %124, i64 0, i32 1
  store i16 1, ptr %125, align 2, !tbaa !14
  %126 = getelementptr inbounds %struct.obj, ptr %124, i64 0, i32 2
  store ptr %101, ptr %126, align 8, !tbaa !9
  %127 = getelementptr inbounds %struct.obj, ptr %124, i64 0, i32 2, i32 0, i32 1
  store ptr null, ptr %127, align 8, !tbaa !9
  %128 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %138

130:                                              ; preds = %123
  %131 = load ptr, ptr @heap, align 8, !tbaa !5
  %132 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %133 = icmp ult ptr %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null) #38
  br label %136

136:                                              ; preds = %134, %130
  %137 = getelementptr inbounds %struct.obj, ptr %131, i64 1
  store ptr %137, ptr @heap, align 8, !tbaa !5
  br label %149

138:                                              ; preds = %123
  %139 = load ptr, ptr @freelist, align 8, !tbaa !5
  %140 = icmp eq ptr %139, null
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  tail call void @gc_for_newcell() #38
  %142 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %143

143:                                              ; preds = %141, %138
  %144 = phi ptr [ %142, %141 ], [ %139, %138 ]
  %145 = getelementptr inbounds %struct.obj, ptr %144, i64 0, i32 2, i32 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !9
  store ptr %146, ptr @freelist, align 8, !tbaa !5
  %147 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %148 = add nsw i64 %147, 1
  store i64 %148, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %149

149:                                              ; preds = %136, %143
  %150 = phi ptr [ %131, %136 ], [ %144, %143 ]
  store i16 0, ptr %150, align 8, !tbaa !35
  %151 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 1
  store i16 1, ptr %151, align 2, !tbaa !14
  %152 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 2
  store ptr %100, ptr %152, align 8, !tbaa !9
  %153 = getelementptr inbounds %struct.obj, ptr %150, i64 0, i32 2, i32 0, i32 1
  store ptr %124, ptr %153, align 8, !tbaa !9
  ret ptr %150
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lrealtime() #6 {
  %1 = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %1) #33
  %2 = call i32 @gettimeofday(ptr noundef nonnull %1, ptr noundef null) #33
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %0
  %5 = load i64, ptr %1, align 8, !tbaa !45
  %6 = sitofp i64 %5 to double
  %7 = getelementptr inbounds %struct.timeval, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !47
  %9 = sitofp i64 %8 to double
  %10 = tail call double @llvm.fmuladd.f64(double %9, double 0x3EB0C6F7A0B5ED8D, double %6)
  br label %11

11:                                               ; preds = %0, %4
  %12 = phi double [ %10, %4 ], [ 0.000000e+00, %0 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %1) #33
  %13 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %14 = icmp sgt i64 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = fptosi double %12 to i64
  %17 = sitofp i64 %16 to double
  %18 = fsub double %12, %17
  %19 = fcmp oeq double %18, 0.000000e+00
  %20 = fcmp oge double %12, 0.000000e+00
  %21 = and i1 %20, %19
  %22 = icmp sgt i64 %13, %16
  %23 = select i1 %21, i1 %22, i1 false
  br i1 %23, label %24, label %28

24:                                               ; preds = %15
  %25 = load ptr, ptr @inums, align 8, !tbaa !5
  %26 = getelementptr inbounds ptr, ptr %25, i64 %16
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  br label %54

28:                                               ; preds = %15, %11
  %29 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %30 = icmp eq i64 %29, 1
  br i1 %30, label %31, label %39

31:                                               ; preds = %28
  %32 = load ptr, ptr @heap, align 8, !tbaa !5
  %33 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %34 = icmp ult ptr %32, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %struct.obj, ptr %32, i64 1
  store ptr %38, ptr @heap, align 8, !tbaa !5
  br label %50

39:                                               ; preds = %28
  %40 = load ptr, ptr @freelist, align 8, !tbaa !5
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  tail call void @gc_for_newcell()
  %43 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %44

44:                                               ; preds = %42, %39
  %45 = phi ptr [ %43, %42 ], [ %40, %39 ]
  %46 = getelementptr inbounds %struct.obj, ptr %45, i64 0, i32 2, i32 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !9
  store ptr %47, ptr @freelist, align 8, !tbaa !5
  %48 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %49 = add nsw i64 %48, 1
  store i64 %49, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %50

50:                                               ; preds = %44, %37
  %51 = phi ptr [ %32, %37 ], [ %45, %44 ]
  store i16 0, ptr %51, align 8, !tbaa !35
  %52 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 1
  store i16 2, ptr %52, align 2, !tbaa !14
  %53 = getelementptr inbounds %struct.obj, ptr %51, i64 0, i32 2
  store double %12, ptr %53, align 8, !tbaa !9
  br label %54

54:                                               ; preds = %24, %50
  %55 = phi ptr [ %27, %24 ], [ %51, %50 ]
  ret ptr %55
}

; Function Attrs: nounwind uwtable
define dso_local ptr @cdar(ptr noundef %0) #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %5 = load i16, ptr %4, align 2, !tbaa !14
  %6 = sext i16 %5 to i32
  switch i32 %6, label %7 [
    i32 0, label %22
    i32 1, label %9
  ]

7:                                                ; preds = %3
  %8 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %0)
  br label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 1
  %15 = load i16, ptr %14, align 2, !tbaa !14
  %16 = sext i16 %15 to i32
  switch i32 %16, label %20 [
    i32 0, label %22
    i32 1, label %17
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.obj, ptr %11, i64 0, i32 2, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  br label %22

20:                                               ; preds = %13
  %21 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %11)
  br label %22

22:                                               ; preds = %1, %3, %7, %9, %13, %17, %20
  %23 = phi ptr [ null, %20 ], [ %19, %17 ], [ null, %13 ], [ null, %9 ], [ null, %7 ], [ null, %3 ], [ null, %1 ]
  ret ptr %23
}

; Function Attrs: nounwind uwtable
define dso_local ptr @lrand(ptr noundef %0) #6 {
  %2 = tail call i32 @rand() #33
  %3 = icmp eq ptr %0, null
  br i1 %3, label %4, label %46

4:                                                ; preds = %1
  %5 = sitofp i32 %2 to double
  %6 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = sext i32 %2 to i64
  %10 = fsub double %5, %5
  %11 = fcmp oeq double %10, 0.000000e+00
  %12 = icmp sgt i32 %2, -1
  %13 = and i1 %12, %11
  %14 = icmp sgt i64 %6, %9
  %15 = select i1 %13, i1 %14, i1 false
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  %17 = load ptr, ptr @inums, align 8, !tbaa !5
  %18 = getelementptr inbounds ptr, ptr %17, i64 %9
  %19 = load ptr, ptr %18, align 8, !tbaa !5
  br label %92

20:                                               ; preds = %8, %4
  %21 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %31

23:                                               ; preds = %20
  %24 = load ptr, ptr @heap, align 8, !tbaa !5
  %25 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %26 = icmp ult ptr %24, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %29

29:                                               ; preds = %27, %23
  %30 = getelementptr inbounds %struct.obj, ptr %24, i64 1
  store ptr %30, ptr @heap, align 8, !tbaa !5
  br label %42

31:                                               ; preds = %20
  %32 = load ptr, ptr @freelist, align 8, !tbaa !5
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  tail call void @gc_for_newcell()
  %35 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %36

36:                                               ; preds = %34, %31
  %37 = phi ptr [ %35, %34 ], [ %32, %31 ]
  %38 = getelementptr inbounds %struct.obj, ptr %37, i64 0, i32 2, i32 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !9
  store ptr %39, ptr @freelist, align 8, !tbaa !5
  %40 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %41 = add nsw i64 %40, 1
  store i64 %41, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %42

42:                                               ; preds = %36, %29
  %43 = phi ptr [ %24, %29 ], [ %37, %36 ]
  store i16 0, ptr %43, align 8, !tbaa !35
  %44 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 1
  store i16 2, ptr %44, align 2, !tbaa !14
  %45 = getelementptr inbounds %struct.obj, ptr %43, i64 0, i32 2
  store double %5, ptr %45, align 8, !tbaa !9
  br label %92

46:                                               ; preds = %1
  %47 = sext i32 %2 to i64
  %48 = tail call i64 @get_c_long(ptr noundef nonnull %0) #33
  %49 = srem i64 %47, %48
  %50 = sitofp i64 %49 to double
  %51 = load i64, ptr @inums_dim, align 8, !tbaa !10
  %52 = icmp sgt i64 %51, 0
  br i1 %52, label %53, label %66

53:                                               ; preds = %46
  %54 = fptosi double %50 to i64
  %55 = sitofp i64 %54 to double
  %56 = fsub double %50, %55
  %57 = fcmp oeq double %56, 0.000000e+00
  %58 = icmp sgt i64 %49, -1
  %59 = and i1 %58, %57
  %60 = icmp sgt i64 %51, %54
  %61 = select i1 %59, i1 %60, i1 false
  br i1 %61, label %62, label %66

62:                                               ; preds = %53
  %63 = load ptr, ptr @inums, align 8, !tbaa !5
  %64 = getelementptr inbounds ptr, ptr %63, i64 %54
  %65 = load ptr, ptr %64, align 8, !tbaa !5
  br label %92

66:                                               ; preds = %53, %46
  %67 = load i64, ptr @gc_kind_copying, align 8, !tbaa !10
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %69, label %77

69:                                               ; preds = %66
  %70 = load ptr, ptr @heap, align 8, !tbaa !5
  %71 = load ptr, ptr @heap_end, align 8, !tbaa !5
  %72 = icmp ult ptr %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = tail call ptr @err(ptr noundef nonnull @.str.26, ptr noundef null)
  br label %75

75:                                               ; preds = %73, %69
  %76 = getelementptr inbounds %struct.obj, ptr %70, i64 1
  store ptr %76, ptr @heap, align 8, !tbaa !5
  br label %88

77:                                               ; preds = %66
  %78 = load ptr, ptr @freelist, align 8, !tbaa !5
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  tail call void @gc_for_newcell()
  %81 = load ptr, ptr @freelist, align 8, !tbaa !5
  br label %82

82:                                               ; preds = %80, %77
  %83 = phi ptr [ %81, %80 ], [ %78, %77 ]
  %84 = getelementptr inbounds %struct.obj, ptr %83, i64 0, i32 2, i32 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !9
  store ptr %85, ptr @freelist, align 8, !tbaa !5
  %86 = load i64, ptr @gc_cells_allocated, align 8, !tbaa !10
  %87 = add nsw i64 %86, 1
  store i64 %87, ptr @gc_cells_allocated, align 8, !tbaa !10
  br label %88

88:                                               ; preds = %82, %75
  %89 = phi ptr [ %70, %75 ], [ %83, %82 ]
  store i16 0, ptr %89, align 8, !tbaa !35
  %90 = getelementptr inbounds %struct.obj, ptr %89, i64 0, i32 1
  store i16 2, ptr %90, align 2, !tbaa !14
  %91 = getelementptr inbounds %struct.obj, ptr %89, i64 0, i32 2
  store double %50, ptr %91, align 8, !tbaa !9
  br label %92

92:                                               ; preds = %88, %62, %42, %16
  %93 = phi ptr [ %19, %16 ], [ %43, %42 ], [ %65, %62 ], [ %89, %88 ]
  ret ptr %93
}

; Function Attrs: nounwind
declare i32 @rand() local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define dso_local noalias ptr @lsrand(ptr noundef %0) #6 {
  %2 = tail call i64 @get_c_long(ptr noundef %0) #33
  %3 = trunc i64 %2 to i32
  tail call void @srand(i32 noundef %3) #33
  ret ptr null
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @a_true_value() local_unnamed_addr #8 {
  %1 = load ptr, ptr @sym_t, align 8, !tbaa !5
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define dso_local ptr @poparg(ptr nocapture noundef %0, ptr noundef readnone %1) local_unnamed_addr #6 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 1
  %7 = load i16, ptr %6, align 2, !tbaa !14
  %8 = sext i16 %7 to i32
  switch i32 %8, label %12 [
    i32 0, label %16
    i32 1, label %9
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.obj, ptr %3, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  br label %16

12:                                               ; preds = %5
  %13 = tail call ptr @err(ptr noundef nonnull @.str.27, ptr noundef nonnull %3)
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %5, %9, %12
  %17 = phi ptr [ null, %12 ], [ null, %5 ], [ %11, %9 ]
  %18 = phi ptr [ %14, %12 ], [ %3, %5 ], [ %3, %9 ]
  %19 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 1
  %20 = load i16, ptr %19, align 2, !tbaa !14
  %21 = sext i16 %20 to i32
  switch i32 %21, label %25 [
    i32 0, label %27
    i32 1, label %22
  ]

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.obj, ptr %18, i64 0, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  br label %27

25:                                               ; preds = %16
  %26 = tail call ptr @err(ptr noundef nonnull @.str.28, ptr noundef nonnull %18)
  br label %27

27:                                               ; preds = %12, %16, %22, %25
  %28 = phi ptr [ %17, %25 ], [ %17, %22 ], [ %17, %16 ], [ null, %12 ]
  %29 = phi ptr [ null, %25 ], [ %24, %22 ], [ null, %16 ], [ null, %12 ]
  store ptr %29, ptr %0, align 8, !tbaa !5
  br label %30

30:                                               ; preds = %2, %27
  %31 = phi ptr [ %28, %27 ], [ %1, %2 ]
  ret ptr %31
}

; Function Attrs: nounwind uwtable
define dso_local ptr @last_c_errmsg(i32 noundef %0) local_unnamed_addr #6 {
  %2 = icmp slt i32 %0, 0
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = tail call ptr @__errno_location() #37
  %5 = load i32, ptr %4, align 4, !tbaa !109
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ]
  %8 = tail call ptr @strerror(i32 noundef %7) #33
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @last_c_errmsg.serrmsg, ptr noundef nonnull dereferenceable(1) @.str.152, i32 noundef %7) #33
  br label %12

12:                                               ; preds = %10, %6
  %13 = phi ptr [ %8, %6 ], [ @last_c_errmsg.serrmsg, %10 ]
  ret ptr %13
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__errno_location() local_unnamed_addr #23

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define dso_local ptr @lllast_c_errmsg() #6 {
  %1 = tail call ptr @llast_c_errmsg(i32 noundef -1)
  ret ptr %1
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @safe_strlen(ptr noundef %0, i64 noundef %1) local_unnamed_addr #28 {
  %3 = tail call ptr @memchr(ptr noundef %0, i32 noundef 0, i64 noundef %1) #34
  %4 = icmp eq ptr %3, null
  %5 = ptrtoint ptr %3 to i64
  %6 = ptrtoint ptr %0 to i64
  %7 = sub i64 %5, %6
  %8 = select i1 %4, i64 %1, i64 %7
  ret i64 %8
}

; Function Attrs: nounwind uwtable
define internal ptr @parser_read(ptr nocapture readnone %0) #6 {
  %2 = tail call ptr @gen_intern(ptr noundef nonnull @.str.172, i64 noundef 0)
  %3 = tail call ptr @leval(ptr noundef %2, ptr noundef null)
  ret ptr %3
}

; Function Attrs: nounwind uwtable
define internal ptr @os_classification() #6 {
  %1 = tail call ptr @gen_intern(ptr noundef nonnull @.str.238, i64 noundef 0)
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define dso_local void @err0() local_unnamed_addr #6 {
  %1 = tail call ptr @err(ptr noundef nonnull @.str.235, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @pr(ptr noundef %0) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.obj, ptr %0, i64 0, i32 1
  %3 = load i64, ptr @nheaps, align 8, !tbaa !10
  %4 = icmp sgt i64 %3, 0
  br i1 %4, label %5, label %32

5:                                                ; preds = %1
  %6 = load ptr, ptr @heaps, align 8, !tbaa !5
  %7 = load i64, ptr @heap_size, align 8
  %8 = ptrtoint ptr %0 to i64
  br label %9

9:                                                ; preds = %27, %5
  %10 = phi i64 [ 0, %5 ], [ %28, %27 ]
  %11 = getelementptr inbounds ptr, ptr %6, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = icmp ne ptr %12, null
  %14 = icmp ule ptr %12, %0
  %15 = and i1 %13, %14
  %16 = getelementptr inbounds %struct.obj, ptr %12, i64 %7
  %17 = icmp ugt ptr %16, %0
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %19, label %27

19:                                               ; preds = %9
  %20 = ptrtoint ptr %12 to i64
  %21 = sub i64 %8, %20
  %22 = urem i64 %21, 24
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load i16, ptr %2, align 2, !tbaa !14
  %26 = icmp eq i16 %25, 12
  br i1 %26, label %27, label %30

27:                                               ; preds = %24, %19, %9
  %28 = add nuw nsw i64 %10, 1
  %29 = icmp eq i64 %28, %3
  br i1 %29, label %32, label %9, !llvm.loop !78

30:                                               ; preds = %24
  %31 = tail call ptr @lprint(ptr noundef nonnull %0, ptr noundef null)
  br label %42

32:                                               ; preds = %27, %1
  %33 = load ptr, ptr @stdout, align 8, !tbaa !5
  %34 = load i64, ptr @nointerrupt, align 8, !tbaa !10
  store i64 1, ptr @nointerrupt, align 8, !tbaa !10
  %35 = tail call i64 @fwrite(ptr nonnull @.str.236, i64 8, i64 1, ptr %33)
  store i64 %34, ptr @nointerrupt, align 8, !tbaa !10
  %36 = icmp eq i64 %34, 0
  %37 = load i64, ptr @interrupt_differed, align 8
  %38 = icmp eq i64 %37, 1
  %39 = select i1 %36, i1 %38, i1 false
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  store i64 0, ptr @interrupt_differed, align 8, !tbaa !10
  %41 = tail call ptr @err(ptr noundef nonnull @.str.13, ptr noundef null)
  br label %42

42:                                               ; preds = %40, %32, %30
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @prp(ptr noundef readonly %0) local_unnamed_addr #6 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  tail call void @pr(ptr noundef %4)
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #29

declare ptr @read_from_string(ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define internal i32 @rcsp_puts(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #6 {
  %3 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #34
  %4 = getelementptr inbounds %struct.rcsp_puts, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !44
  %6 = load ptr, ptr %1, align 8, !tbaa !42
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %3, %9
  %11 = tail call i64 @llvm.smin.i64(i64 %3, i64 %9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr align 1 %0, i64 %11, i1 false)
  %12 = load ptr, ptr %1, align 8, !tbaa !42
  %13 = getelementptr inbounds i8, ptr %12, i64 %11
  store ptr %13, ptr %1, align 8, !tbaa !42
  store i8 0, ptr %13, align 1, !tbaa !9
  br i1 %10, label %14, label %16

14:                                               ; preds = %2
  %15 = tail call ptr @err(ptr noundef nonnull @.str.237, ptr noundef null)
  br label %16

16:                                               ; preds = %14, %2
  ret i32 1
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #29

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #30

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #31

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #31

; Function Attrs: nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #32

; Function Attrs: nofree nounwind
declare noundef i32 @fputs(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #30

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #30

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #30

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #31

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nofree nounwind memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind returns_twice "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #12 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #19 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #20 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { returns_twice "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree nosync nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nofree nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { nofree nounwind }
attributes #31 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #32 = { nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" }
attributes #33 = { nounwind }
attributes #34 = { nounwind willreturn memory(read) }
attributes #35 = { noreturn nounwind }
attributes #36 = { nounwind returns_twice }
attributes #37 = { nounwind willreturn memory(none) }
attributes #38 = { "function-inline-cost-multiplier"="2" }
attributes #39 = { nounwind allocsize(0) }
attributes #40 = { "function-inline-cost-multiplier"="4" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"long", !7, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!15, !16, i64 2}
!15 = !{!"obj", !16, i64 0, !16, i64 2, !7, i64 8}
!16 = !{!"short", !7, i64 0}
!17 = !{!18, !6, i64 0}
!18 = !{!"catch_frame", !6, i64 0, !6, i64 8, !7, i64 16, !6, i64 216}
!19 = !{!18, !6, i64 8}
!20 = distinct !{!20, !13}
!21 = !{!22, !6, i64 0}
!22 = !{!"repl_hooks", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!23 = !{!22, !6, i64 8}
!24 = !{!22, !6, i64 16}
!25 = !{!22, !6, i64 24}
!26 = distinct !{!26, !13}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13}
!29 = !{!16, !16, i64 0}
!30 = distinct !{!30, !13}
!31 = !{!32, !6, i64 0}
!32 = !{!"gen_printio", !6, i64 0, !6, i64 8, !6, i64 16}
!33 = !{!32, !6, i64 8}
!34 = !{!32, !6, i64 16}
!35 = !{!15, !16, i64 0}
!36 = !{!37, !11, i64 0}
!37 = !{!"tms", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24}
!38 = !{!37, !11, i64 8}
!39 = !{!40, !40, i64 0}
!40 = !{!"double", !7, i64 0}
!41 = !{i64 0, i64 3}
!42 = !{!43, !6, i64 0}
!43 = !{!"rcsp_puts", !6, i64 0, !6, i64 8}
!44 = !{!43, !6, i64 8}
!45 = !{!46, !11, i64 0}
!46 = !{!"timeval", !11, i64 0, !11, i64 8}
!47 = !{!46, !11, i64 8}
!48 = !{!49, !6, i64 24}
!49 = !{!"user_type_hooks", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13}
!52 = !{!49, !6, i64 40}
!53 = distinct !{!53, !13}
!54 = distinct !{!54, !13}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13}
!57 = distinct !{!57, !13}
!58 = !{!59, !6, i64 0}
!59 = !{!"gc_protected", !6, i64 0, !11, i64 8, !6, i64 16}
!60 = !{!59, !11, i64 8}
!61 = !{!59, !6, i64 16}
!62 = !{!49, !6, i64 0}
!63 = distinct !{!63, !13}
!64 = distinct !{!64, !13}
!65 = !{!49, !6, i64 32}
!66 = distinct !{!66, !13}
!67 = distinct !{!67, !68}
!68 = !{!"llvm.loop.unroll.disable"}
!69 = distinct !{!69, !13}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !13}
!72 = !{!49, !6, i64 8}
!73 = !{!49, !6, i64 16}
!74 = distinct !{!74, !13}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13}
!77 = distinct !{!77, !13}
!78 = distinct !{!78, !13}
!79 = distinct !{!79, !13, !80}
!80 = !{!"llvm.loop.unswitch.partial.disable"}
!81 = distinct !{!81, !13}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !80}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13}
!86 = distinct !{!86, !13, !80}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13}
!91 = distinct !{!91, !13}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13}
!94 = distinct !{!94, !13}
!95 = !{!18, !6, i64 216}
!96 = distinct !{!96, !13}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13}
!101 = distinct !{!101, !13}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13}
!104 = !{!105, !6, i64 0}
!105 = !{!"gen_readio", !6, i64 0, !6, i64 8, !6, i64 16}
!106 = !{!105, !6, i64 8}
!107 = !{!105, !6, i64 16}
!108 = distinct !{!108, !13}
!109 = !{!110, !110, i64 0}
!110 = !{!"int", !7, i64 0}
!111 = distinct !{!111, !13, !112}
!112 = !{!"llvm.loop.peeled.count", i32 1}
!113 = distinct !{!113, !13, !112}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13}
!116 = distinct !{!116, !13}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13}
!119 = distinct !{!119, !13}
!120 = distinct !{!120, !13}
