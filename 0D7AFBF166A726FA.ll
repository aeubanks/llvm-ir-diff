; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/MiBench/telecomm-gsm/gsm_print.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/MiBench/telecomm-gsm/gsm_print.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [62 x i8] c"LARc:\09%2.2d  %2.2d  %2.2d  %2.2d  %2.2d  %2.2d  %2.2d  %2.2d\0A\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"#1: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [67 x i8] c"\09%.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d\0A\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"#2: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"#3: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"#4: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @gsm_print(ptr nocapture noundef %f, ptr nocapture noundef readnone %s, ptr nocapture noundef readonly %c) local_unnamed_addr #0 {
entry:
  %0 = load i8, ptr %c, align 1, !tbaa !5
  %1 = and i8 %0, -16
  %cmp.not = icmp eq i8 %1, -48
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, ptr %c, i64 1
  %conv.tr = zext i8 %0 to i32
  %2 = shl nuw nsw i32 %conv.tr, 2
  %conv4 = and i32 %2, 60
  %3 = load i8, ptr %incdec.ptr, align 1, !tbaa !5
  %4 = lshr i8 %3, 6
  %shr6 = zext i8 %4 to i32
  %or = or i32 %conv4, %shr6
  %incdec.ptr11 = getelementptr inbounds i8, ptr %c, i64 2
  %5 = and i8 %3, 63
  %6 = load i8, ptr %incdec.ptr11, align 1, !tbaa !5
  %7 = lshr i8 %6, 3
  %shr17 = zext i8 %7 to i32
  %incdec.ptr21 = getelementptr inbounds i8, ptr %c, i64 3
  %conv16.tr = zext i8 %6 to i32
  %8 = shl nuw nsw i32 %conv16.tr, 2
  %conv25 = and i32 %8, 28
  %9 = load i8, ptr %incdec.ptr21, align 1, !tbaa !5
  %10 = lshr i8 %9, 6
  %shr28 = zext i8 %10 to i32
  %or32 = or i32 %conv25, %shr28
  %11 = lshr i8 %9, 2
  %12 = and i8 %11, 15
  %incdec.ptr39 = getelementptr inbounds i8, ptr %c, i64 4
  %conv27.tr = zext i8 %9 to i32
  %13 = shl nuw nsw i32 %conv27.tr, 2
  %conv43 = and i32 %13, 12
  %14 = load i8, ptr %incdec.ptr39, align 1, !tbaa !5
  %15 = lshr i8 %14, 6
  %shr46 = zext i8 %15 to i32
  %or50 = or i32 %conv43, %shr46
  %16 = lshr i8 %14, 3
  %17 = and i8 %16, 7
  %incdec.ptr57 = getelementptr inbounds i8, ptr %c, i64 5
  %18 = and i8 %14, 7
  %19 = load i8, ptr %incdec.ptr57, align 1, !tbaa !5
  %20 = lshr i8 %19, 1
  %shr63 = zext i8 %20 to i32
  %incdec.ptr67 = getelementptr inbounds i8, ptr %c, i64 6
  %conv62.tr = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %conv62.tr, 1
  %conv71 = and i32 %21, 2
  %22 = load i8, ptr %incdec.ptr67, align 1, !tbaa !5
  %23 = lshr i8 %22, 7
  %shr74 = zext i8 %23 to i32
  %or78 = or i32 %conv71, %shr74
  %24 = lshr i8 %22, 5
  %25 = and i8 %24, 3
  %incdec.ptr85 = getelementptr inbounds i8, ptr %c, i64 7
  %conv73.tr = zext i8 %22 to i32
  %26 = shl nuw nsw i32 %conv73.tr, 1
  %conv89 = and i32 %26, 62
  %27 = load i8, ptr %incdec.ptr85, align 1, !tbaa !5
  %28 = lshr i8 %27, 7
  %shr92 = zext i8 %28 to i32
  %or96 = or i32 %conv89, %shr92
  %29 = lshr i8 %27, 4
  %30 = and i8 %29, 7
  %31 = lshr i8 %27, 1
  %32 = and i8 %31, 7
  %incdec.ptr108 = getelementptr inbounds i8, ptr %c, i64 8
  %conv91.tr = zext i8 %27 to i32
  %33 = shl nuw nsw i32 %conv91.tr, 2
  %conv112 = and i32 %33, 4
  %34 = load i8, ptr %incdec.ptr108, align 1, !tbaa !5
  %35 = lshr i8 %34, 6
  %shr115 = zext i8 %35 to i32
  %or119 = or i32 %conv112, %shr115
  %36 = lshr i8 %34, 3
  %37 = and i8 %36, 7
  %incdec.ptr126 = getelementptr inbounds i8, ptr %c, i64 9
  %38 = and i8 %34, 7
  %39 = load i8, ptr %incdec.ptr126, align 1, !tbaa !5
  %40 = lshr i8 %39, 5
  %shr132 = zext i8 %40 to i32
  %41 = lshr i8 %39, 2
  %42 = and i8 %41, 7
  %incdec.ptr141 = getelementptr inbounds i8, ptr %c, i64 10
  %conv131.tr = zext i8 %39 to i32
  %43 = shl nuw nsw i32 %conv131.tr, 1
  %conv145 = and i32 %43, 6
  %44 = load i8, ptr %incdec.ptr141, align 1, !tbaa !5
  %45 = lshr i8 %44, 7
  %shr148 = zext i8 %45 to i32
  %or152 = or i32 %conv145, %shr148
  %46 = lshr i8 %44, 4
  %47 = and i8 %46, 7
  %48 = lshr i8 %44, 1
  %49 = and i8 %48, 7
  %incdec.ptr164 = getelementptr inbounds i8, ptr %c, i64 11
  %conv147.tr = zext i8 %44 to i32
  %50 = shl nuw nsw i32 %conv147.tr, 2
  %conv168 = and i32 %50, 4
  %51 = load i8, ptr %incdec.ptr164, align 1, !tbaa !5
  %52 = lshr i8 %51, 6
  %shr171 = zext i8 %52 to i32
  %or175 = or i32 %conv168, %shr171
  %53 = lshr i8 %51, 3
  %54 = and i8 %53, 7
  %incdec.ptr182 = getelementptr inbounds i8, ptr %c, i64 12
  %55 = and i8 %51, 7
  %56 = load i8, ptr %incdec.ptr182, align 1, !tbaa !5
  %57 = lshr i8 %56, 1
  %shr188 = zext i8 %57 to i32
  %incdec.ptr192 = getelementptr inbounds i8, ptr %c, i64 13
  %conv187.tr = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %conv187.tr, 1
  %conv196 = and i32 %58, 2
  %59 = load i8, ptr %incdec.ptr192, align 1, !tbaa !5
  %60 = lshr i8 %59, 7
  %shr199 = zext i8 %60 to i32
  %or203 = or i32 %conv196, %shr199
  %61 = lshr i8 %59, 5
  %62 = and i8 %61, 3
  %incdec.ptr210 = getelementptr inbounds i8, ptr %c, i64 14
  %conv198.tr = zext i8 %59 to i32
  %63 = shl nuw nsw i32 %conv198.tr, 1
  %conv214 = and i32 %63, 62
  %64 = load i8, ptr %incdec.ptr210, align 1, !tbaa !5
  %65 = lshr i8 %64, 7
  %shr217 = zext i8 %65 to i32
  %or221 = or i32 %conv214, %shr217
  %66 = lshr i8 %64, 4
  %67 = and i8 %66, 7
  %68 = lshr i8 %64, 1
  %69 = and i8 %68, 7
  %incdec.ptr233 = getelementptr inbounds i8, ptr %c, i64 15
  %conv216.tr = zext i8 %64 to i32
  %70 = shl nuw nsw i32 %conv216.tr, 2
  %conv237 = and i32 %70, 4
  %71 = load i8, ptr %incdec.ptr233, align 1, !tbaa !5
  %72 = lshr i8 %71, 6
  %shr240 = zext i8 %72 to i32
  %or244 = or i32 %conv237, %shr240
  %73 = lshr i8 %71, 3
  %74 = and i8 %73, 7
  %incdec.ptr251 = getelementptr inbounds i8, ptr %c, i64 16
  %75 = and i8 %71, 7
  %76 = load i8, ptr %incdec.ptr251, align 1, !tbaa !5
  %77 = lshr i8 %76, 5
  %shr257 = zext i8 %77 to i32
  %78 = lshr i8 %76, 2
  %79 = and i8 %78, 7
  %incdec.ptr266 = getelementptr inbounds i8, ptr %c, i64 17
  %conv256.tr = zext i8 %76 to i32
  %80 = shl nuw nsw i32 %conv256.tr, 1
  %conv270 = and i32 %80, 6
  %81 = load i8, ptr %incdec.ptr266, align 1, !tbaa !5
  %82 = lshr i8 %81, 7
  %shr273 = zext i8 %82 to i32
  %or277 = or i32 %conv270, %shr273
  %83 = lshr i8 %81, 4
  %84 = and i8 %83, 7
  %85 = lshr i8 %81, 1
  %86 = and i8 %85, 7
  %incdec.ptr289 = getelementptr inbounds i8, ptr %c, i64 18
  %conv272.tr = zext i8 %81 to i32
  %87 = shl nuw nsw i32 %conv272.tr, 2
  %conv293 = and i32 %87, 4
  %88 = load i8, ptr %incdec.ptr289, align 1, !tbaa !5
  %89 = lshr i8 %88, 6
  %shr296 = zext i8 %89 to i32
  %or300 = or i32 %conv293, %shr296
  %90 = lshr i8 %88, 3
  %91 = and i8 %90, 7
  %incdec.ptr307 = getelementptr inbounds i8, ptr %c, i64 19
  %92 = and i8 %88, 7
  %93 = load i8, ptr %incdec.ptr307, align 1, !tbaa !5
  %94 = lshr i8 %93, 1
  %shr313 = zext i8 %94 to i32
  %incdec.ptr317 = getelementptr inbounds i8, ptr %c, i64 20
  %conv312.tr = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %conv312.tr, 1
  %conv321 = and i32 %95, 2
  %96 = load i8, ptr %incdec.ptr317, align 1, !tbaa !5
  %97 = lshr i8 %96, 7
  %shr324 = zext i8 %97 to i32
  %or328 = or i32 %conv321, %shr324
  %98 = lshr i8 %96, 5
  %99 = and i8 %98, 3
  %incdec.ptr335 = getelementptr inbounds i8, ptr %c, i64 21
  %conv323.tr = zext i8 %96 to i32
  %100 = shl nuw nsw i32 %conv323.tr, 1
  %conv339 = and i32 %100, 62
  %101 = load i8, ptr %incdec.ptr335, align 1, !tbaa !5
  %102 = lshr i8 %101, 7
  %shr342 = zext i8 %102 to i32
  %or346 = or i32 %conv339, %shr342
  %103 = lshr i8 %101, 4
  %104 = and i8 %103, 7
  %105 = lshr i8 %101, 1
  %106 = and i8 %105, 7
  %incdec.ptr358 = getelementptr inbounds i8, ptr %c, i64 22
  %conv341.tr = zext i8 %101 to i32
  %107 = shl nuw nsw i32 %conv341.tr, 2
  %conv362 = and i32 %107, 4
  %108 = load i8, ptr %incdec.ptr358, align 1, !tbaa !5
  %109 = lshr i8 %108, 6
  %shr365 = zext i8 %109 to i32
  %or369 = or i32 %conv362, %shr365
  %110 = lshr i8 %108, 3
  %111 = and i8 %110, 7
  %incdec.ptr376 = getelementptr inbounds i8, ptr %c, i64 23
  %112 = and i8 %108, 7
  %113 = load i8, ptr %incdec.ptr376, align 1, !tbaa !5
  %114 = lshr i8 %113, 5
  %shr382 = zext i8 %114 to i32
  %115 = lshr i8 %113, 2
  %116 = and i8 %115, 7
  %incdec.ptr391 = getelementptr inbounds i8, ptr %c, i64 24
  %conv381.tr = zext i8 %113 to i32
  %117 = shl nuw nsw i32 %conv381.tr, 1
  %conv395 = and i32 %117, 6
  %118 = load i8, ptr %incdec.ptr391, align 1, !tbaa !5
  %119 = lshr i8 %118, 7
  %shr398 = zext i8 %119 to i32
  %or402 = or i32 %conv395, %shr398
  %120 = lshr i8 %118, 4
  %121 = and i8 %120, 7
  %122 = lshr i8 %118, 1
  %123 = and i8 %122, 7
  %incdec.ptr414 = getelementptr inbounds i8, ptr %c, i64 25
  %conv397.tr = zext i8 %118 to i32
  %124 = shl nuw nsw i32 %conv397.tr, 2
  %conv418 = and i32 %124, 4
  %125 = load i8, ptr %incdec.ptr414, align 1, !tbaa !5
  %126 = lshr i8 %125, 6
  %shr421 = zext i8 %126 to i32
  %or425 = or i32 %conv418, %shr421
  %127 = lshr i8 %125, 3
  %128 = and i8 %127, 7
  %incdec.ptr432 = getelementptr inbounds i8, ptr %c, i64 26
  %129 = and i8 %125, 7
  %130 = load i8, ptr %incdec.ptr432, align 1, !tbaa !5
  %131 = lshr i8 %130, 1
  %shr438 = zext i8 %131 to i32
  %incdec.ptr442 = getelementptr inbounds i8, ptr %c, i64 27
  %conv437.tr = zext i8 %130 to i32
  %132 = shl nuw nsw i32 %conv437.tr, 1
  %conv446 = and i32 %132, 2
  %133 = load i8, ptr %incdec.ptr442, align 1, !tbaa !5
  %134 = lshr i8 %133, 7
  %shr449 = zext i8 %134 to i32
  %or453 = or i32 %conv446, %shr449
  %135 = lshr i8 %133, 5
  %136 = and i8 %135, 3
  %incdec.ptr460 = getelementptr inbounds i8, ptr %c, i64 28
  %conv448.tr = zext i8 %133 to i32
  %137 = shl nuw nsw i32 %conv448.tr, 1
  %conv464 = and i32 %137, 62
  %138 = load i8, ptr %incdec.ptr460, align 1, !tbaa !5
  %139 = lshr i8 %138, 7
  %shr467 = zext i8 %139 to i32
  %or471 = or i32 %conv464, %shr467
  %140 = lshr i8 %138, 4
  %141 = and i8 %140, 7
  %142 = lshr i8 %138, 1
  %143 = and i8 %142, 7
  %incdec.ptr483 = getelementptr inbounds i8, ptr %c, i64 29
  %conv466.tr = zext i8 %138 to i32
  %144 = shl nuw nsw i32 %conv466.tr, 2
  %conv487 = and i32 %144, 4
  %145 = load i8, ptr %incdec.ptr483, align 1, !tbaa !5
  %146 = lshr i8 %145, 6
  %shr490 = zext i8 %146 to i32
  %or494 = or i32 %conv487, %shr490
  %147 = lshr i8 %145, 3
  %148 = and i8 %147, 7
  %incdec.ptr501 = getelementptr inbounds i8, ptr %c, i64 30
  %149 = and i8 %145, 7
  %150 = load i8, ptr %incdec.ptr501, align 1, !tbaa !5
  %151 = lshr i8 %150, 5
  %shr507 = zext i8 %151 to i32
  %152 = lshr i8 %150, 2
  %153 = and i8 %152, 7
  %incdec.ptr516 = getelementptr inbounds i8, ptr %c, i64 31
  %conv506.tr = zext i8 %150 to i32
  %154 = shl nuw nsw i32 %conv506.tr, 1
  %conv520 = and i32 %154, 6
  %155 = load i8, ptr %incdec.ptr516, align 1, !tbaa !5
  %156 = lshr i8 %155, 7
  %shr523 = zext i8 %156 to i32
  %or527 = or i32 %conv520, %shr523
  %157 = lshr i8 %155, 4
  %158 = and i8 %157, 7
  %159 = lshr i8 %155, 1
  %160 = and i8 %159, 7
  %incdec.ptr539 = getelementptr inbounds i8, ptr %c, i64 32
  %conv522.tr = zext i8 %155 to i32
  %161 = shl nuw nsw i32 %conv522.tr, 2
  %conv543 = and i32 %161, 4
  %162 = load i8, ptr %incdec.ptr539, align 1, !tbaa !5
  %163 = lshr i8 %162, 6
  %shr546 = zext i8 %163 to i32
  %or550 = or i32 %conv543, %shr546
  %164 = lshr i8 %162, 3
  %165 = and i8 %164, 7
  %166 = and i8 %162, 7
  %conv564 = zext i8 %5 to i32
  %conv570 = zext i8 %12 to i32
  %conv574 = zext i8 %17 to i32
  %conv576 = zext i8 %18 to i32
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str, i32 noundef %or, i32 noundef %conv564, i32 noundef %shr17, i32 noundef %or32, i32 noundef %conv570, i32 noundef %or50, i32 noundef %conv574, i32 noundef %conv576)
  %conv582 = zext i8 %25 to i32
  %call585 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.1, i32 noundef %shr63, i32 noundef %or78, i32 noundef %conv582, i32 noundef %or96)
  %conv587 = zext i8 %30 to i32
  %conv589 = zext i8 %32 to i32
  %conv593 = zext i8 %37 to i32
  %conv595 = zext i8 %38 to i32
  %conv599 = zext i8 %42 to i32
  %conv603 = zext i8 %47 to i32
  %conv605 = zext i8 %49 to i32
  %conv609 = zext i8 %54 to i32
  %conv611 = zext i8 %55 to i32
  %call612 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.2, i32 noundef %conv587, i32 noundef %conv589, i32 noundef %or119, i32 noundef %conv593, i32 noundef %conv595, i32 noundef %shr132, i32 noundef %conv599, i32 noundef %or152, i32 noundef %conv603, i32 noundef %conv605, i32 noundef %or175, i32 noundef %conv609, i32 noundef %conv611)
  %conv618 = zext i8 %62 to i32
  %call621 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.3, i32 noundef %shr188, i32 noundef %or203, i32 noundef %conv618, i32 noundef %or221)
  %conv623 = zext i8 %67 to i32
  %conv625 = zext i8 %69 to i32
  %conv629 = zext i8 %74 to i32
  %conv631 = zext i8 %75 to i32
  %conv635 = zext i8 %79 to i32
  %conv639 = zext i8 %84 to i32
  %conv641 = zext i8 %86 to i32
  %conv645 = zext i8 %91 to i32
  %conv647 = zext i8 %92 to i32
  %call648 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.2, i32 noundef %conv623, i32 noundef %conv625, i32 noundef %or244, i32 noundef %conv629, i32 noundef %conv631, i32 noundef %shr257, i32 noundef %conv635, i32 noundef %or277, i32 noundef %conv639, i32 noundef %conv641, i32 noundef %or300, i32 noundef %conv645, i32 noundef %conv647)
  %conv654 = zext i8 %99 to i32
  %call657 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.4, i32 noundef %shr313, i32 noundef %or328, i32 noundef %conv654, i32 noundef %or346)
  %conv659 = zext i8 %104 to i32
  %conv661 = zext i8 %106 to i32
  %conv665 = zext i8 %111 to i32
  %conv667 = zext i8 %112 to i32
  %conv671 = zext i8 %116 to i32
  %conv675 = zext i8 %121 to i32
  %conv677 = zext i8 %123 to i32
  %conv681 = zext i8 %128 to i32
  %conv683 = zext i8 %129 to i32
  %call684 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.2, i32 noundef %conv659, i32 noundef %conv661, i32 noundef %or369, i32 noundef %conv665, i32 noundef %conv667, i32 noundef %shr382, i32 noundef %conv671, i32 noundef %or402, i32 noundef %conv675, i32 noundef %conv677, i32 noundef %or425, i32 noundef %conv681, i32 noundef %conv683)
  %conv690 = zext i8 %136 to i32
  %call693 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.5, i32 noundef %shr438, i32 noundef %or453, i32 noundef %conv690, i32 noundef %or471)
  %conv695 = zext i8 %141 to i32
  %conv697 = zext i8 %143 to i32
  %conv701 = zext i8 %148 to i32
  %conv703 = zext i8 %149 to i32
  %conv707 = zext i8 %153 to i32
  %conv711 = zext i8 %158 to i32
  %conv713 = zext i8 %160 to i32
  %conv717 = zext i8 %165 to i32
  %conv719 = zext i8 %166 to i32
  %call720 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %f, ptr noundef nonnull @.str.2, i32 noundef %conv695, i32 noundef %conv697, i32 noundef %or494, i32 noundef %conv701, i32 noundef %conv703, i32 noundef %shr507, i32 noundef %conv707, i32 noundef %or527, i32 noundef %conv711, i32 noundef %conv713, i32 noundef %or550, i32 noundef %conv717, i32 noundef %conv719)
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
