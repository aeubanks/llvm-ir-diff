; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/kimwitu++/kimwl.cc'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/kimwitu++/kimwl.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%union.KC_YYSTYPE = type { ptr }
%struct.cmdline_options = type <{ %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.std::__cxx11::basic_string", i8, i8, i8, i8, [4 x i8], %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", i8, i8, i8, [5 x i8] }>
%struct.yy_buffer_state = type { ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@yyleng = dso_local local_unnamed_addr global i32 0, align 4
@yyin = dso_local local_unnamed_addr global ptr null, align 8
@yyout = dso_local local_unnamed_addr global ptr null, align 8
@yylineno = dso_local local_unnamed_addr global i32 1, align 4
@yy_flex_debug = dso_local local_unnamed_addr global i32 0, align 4
@yytext = dso_local global [8192 x i8] zeroinitializer, align 16
@yytext_ptr = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_18cincludeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZL7yy_init = internal unnamed_addr global i1 false, align 4
@_ZL12yy_state_buf = internal unnamed_addr global ptr null, align 8
@_ZL8yy_start = internal unnamed_addr global i32 0, align 4
@stdin = external local_unnamed_addr global ptr, align 8
@stdout = external local_unnamed_addr global ptr, align 8
@_ZL15yy_buffer_stack = internal unnamed_addr global ptr null, align 8
@_ZL19yy_buffer_stack_top = internal unnamed_addr global i64 0, align 8
@_ZL10yy_c_buf_p = internal unnamed_addr global ptr null, align 8
@_ZL12yy_hold_char = internal unnamed_addr global i8 0, align 1
@_ZL12yy_state_ptr = internal unnamed_addr global ptr null, align 8
@_ZL5yy_ec = internal unnamed_addr constant [256 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 3, i32 4, i32 4, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 5, i32 6, i32 1, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 1, i32 1, i32 25, i32 26, i32 27, i32 28, i32 29, i32 26, i32 26, i32 30, i32 26, i32 26, i32 26, i32 26, i32 31, i32 32, i32 33, i32 34, i32 26, i32 35, i32 36, i32 37, i32 38, i32 26, i32 26, i32 26, i32 39, i32 26, i32 40, i32 41, i32 42, i32 43, i32 44, i32 1, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 26, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 26, i32 60, i32 61, i32 62, i32 63, i32 64, i32 65, i32 66, i32 67, i32 26, i32 68, i32 69, i32 70, i32 71, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1], align 16
@_ZL6yy_chk = internal unnamed_addr constant [922 x i16] [i16 0, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 6, i16 28, i16 91, i16 91, i16 28, i16 6, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 9, i16 19, i16 19, i16 9, i16 9, i16 431, i16 84, i16 9, i16 9, i16 9, i16 20, i16 20, i16 9, i16 11, i16 71, i16 9, i16 11, i16 401, i16 9, i16 12, i16 84, i16 13, i16 12, i16 14, i16 30, i16 27, i16 32, i16 47, i16 13, i16 30, i16 14, i16 32, i16 47, i16 51, i16 401, i16 51, i16 61, i16 9, i16 9, i16 9, i16 10, i16 61, i16 347, i16 10, i16 10, i16 71, i16 426, i16 10, i16 10, i16 10, i16 425, i16 11, i16 10, i16 347, i16 87, i16 10, i16 19, i16 12, i16 10, i16 13, i16 19, i16 14, i16 76, i16 87, i16 19, i16 20, i16 19, i16 76, i16 423, i16 20, i16 80, i16 80, i16 80, i16 20, i16 27, i16 20, i16 27, i16 10, i16 10, i16 10, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 48, i16 48, i16 48, i16 48, i16 68, i16 73, i16 73, i16 73, i16 93, i16 93, i16 48, i16 48, i16 75, i16 48, i16 99, i16 48, i16 48, i16 162, i16 48, i16 74, i16 74, i16 74, i16 89, i16 48, i16 75, i16 81, i16 81, i16 81, i16 420, i16 89, i16 89, i16 144, i16 144, i16 155, i16 155, i16 155, i16 156, i16 156, i16 156, i16 68, i16 167, i16 167, i16 167, i16 370, i16 162, i16 208, i16 208, i16 162, i16 73, i16 412, i16 211, i16 162, i16 218, i16 419, i16 370, i16 418, i16 421, i16 218, i16 422, i16 430, i16 99, i16 413, i16 74, i16 417, i16 218, i16 218, i16 412, i16 421, i16 218, i16 422, i16 430, i16 415, i16 413, i16 75, i16 414, i16 75, i16 155, i16 211, i16 413, i16 156, i16 211, i16 411, i16 410, i16 409, i16 211, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 408, i16 424, i16 424, i16 424, i16 424, i16 424, i16 407, i16 404, i16 403, i16 402, i16 400, i16 399, i16 398, i16 397, i16 396, i16 395, i16 394, i16 393, i16 392, i16 391, i16 390, i16 424, i16 424, i16 424, i16 424, i16 389, i16 387, i16 386, i16 382, i16 381, i16 380, i16 379, i16 378, i16 377, i16 374, i16 373, i16 372, i16 371, i16 369, i16 368, i16 367, i16 361, i16 360, i16 358, i16 357, i16 356, i16 355, i16 354, i16 353, i16 424, i16 424, i16 424, i16 424, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 444, i16 444, i16 445, i16 445, i16 446, i16 352, i16 351, i16 350, i16 349, i16 348, i16 446, i16 446, i16 446, i16 447, i16 346, i16 345, i16 447, i16 447, i16 447, i16 447, i16 447, i16 447, i16 448, i16 342, i16 448, i16 448, i16 341, i16 448, i16 448, i16 448, i16 448, i16 449, i16 339, i16 337, i16 336, i16 335, i16 449, i16 333, i16 449, i16 450, i16 450, i16 451, i16 451, i16 452, i16 452, i16 452, i16 452, i16 452, i16 452, i16 452, i16 332, i16 331, i16 330, i16 329, i16 328, i16 327, i16 326, i16 325, i16 324, i16 323, i16 322, i16 321, i16 320, i16 319, i16 318, i16 317, i16 316, i16 315, i16 314, i16 313, i16 312, i16 311, i16 310, i16 309, i16 308, i16 306, i16 305, i16 304, i16 302, i16 301, i16 300, i16 299, i16 298, i16 297, i16 296, i16 295, i16 294, i16 293, i16 292, i16 290, i16 289, i16 288, i16 287, i16 286, i16 285, i16 284, i16 283, i16 282, i16 281, i16 280, i16 279, i16 274, i16 273, i16 272, i16 271, i16 270, i16 269, i16 268, i16 267, i16 266, i16 265, i16 263, i16 262, i16 261, i16 260, i16 259, i16 258, i16 257, i16 256, i16 255, i16 254, i16 253, i16 252, i16 251, i16 250, i16 249, i16 248, i16 247, i16 246, i16 245, i16 244, i16 243, i16 242, i16 241, i16 240, i16 239, i16 238, i16 237, i16 236, i16 235, i16 234, i16 233, i16 232, i16 231, i16 230, i16 229, i16 227, i16 226, i16 225, i16 223, i16 222, i16 221, i16 220, i16 219, i16 217, i16 216, i16 215, i16 214, i16 213, i16 212, i16 210, i16 207, i16 206, i16 205, i16 204, i16 203, i16 202, i16 201, i16 200, i16 199, i16 198, i16 197, i16 196, i16 195, i16 194, i16 193, i16 192, i16 191, i16 190, i16 189, i16 188, i16 187, i16 186, i16 185, i16 184, i16 183, i16 181, i16 180, i16 179, i16 178, i16 177, i16 176, i16 175, i16 174, i16 173, i16 171, i16 170, i16 169, i16 166, i16 159, i16 157, i16 143, i16 142, i16 141, i16 140, i16 139, i16 138, i16 137, i16 136, i16 135, i16 134, i16 133, i16 132, i16 131, i16 130, i16 129, i16 128, i16 127, i16 126, i16 125, i16 124, i16 123, i16 122, i16 121, i16 120, i16 119, i16 114, i16 112, i16 111, i16 110, i16 107, i16 106, i16 105, i16 104, i16 103, i16 101, i16 98, i16 97, i16 96, i16 95, i16 92, i16 90, i16 86, i16 85, i16 83, i16 82, i16 79, i16 78, i16 64, i16 57, i16 46, i16 45, i16 44, i16 43, i16 42, i16 41, i16 40, i16 39, i16 38, i16 37, i16 36, i16 34, i16 33, i16 31, i16 21, i16 5, i16 4, i16 2, i16 1, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437], align 16
@_ZL7yy_base = internal unnamed_addr constant [453 x i16] [i16 0, i16 846, i16 845, i16 0, i16 839, i16 843, i16 69, i16 77, i16 0, i16 146, i16 186, i16 159, i16 165, i16 167, i16 169, i16 228, i16 0, i16 299, i16 0, i16 148, i16 157, i16 845, i16 850, i16 850, i16 850, i16 850, i16 850, i16 155, i16 13, i16 850, i16 154, i16 827, i16 162, i16 824, i16 822, i16 0, i16 778, i16 782, i16 790, i16 772, i16 784, i16 777, i16 775, i16 785, i16 771, i16 765, i16 774, i16 123, i16 326, i16 850, i16 850, i16 114, i16 850, i16 850, i16 0, i16 0, i16 850, i16 811, i16 850, i16 850, i16 850, i16 172, i16 850, i16 850, i16 788, i16 850, i16 0, i16 850, i16 369, i16 0, i16 850, i16 153, i16 0, i16 374, i16 388, i16 376, i16 198, i16 0, i16 787, i16 777, i16 217, i16 394, i16 803, i16 802, i16 146, i16 812, i16 800, i16 189, i16 850, i16 377, i16 799, i16 52, i16 798, i16 356, i16 0, i16 778, i16 796, i16 769, i16 768, i16 362, i16 850, i16 814, i16 850, i16 757, i16 758, i16 764, i16 745, i16 792, i16 850, i16 850, i16 746, i16 745, i16 789, i16 850, i16 790, i16 850, i16 850, i16 850, i16 0, i16 744, i16 748, i16 754, i16 741, i16 741, i16 752, i16 742, i16 748, i16 753, i16 738, i16 735, i16 735, i16 739, i16 731, i16 747, i16 729, i16 728, i16 744, i16 739, i16 728, i16 722, i16 723, i16 720, i16 781, i16 780, i16 400, i16 0, i16 0, i16 0, i16 0, i16 850, i16 0, i16 850, i16 0, i16 850, i16 0, i16 402, i16 405, i16 731, i16 850, i16 761, i16 850, i16 850, i16 386, i16 850, i16 0, i16 850, i16 717, i16 409, i16 850, i16 765, i16 754, i16 753, i16 0, i16 720, i16 709, i16 771, i16 756, i16 726, i16 725, i16 708, i16 715, i16 714, i16 850, i16 708, i16 704, i16 719, i16 714, i16 700, i16 701, i16 696, i16 706, i16 696, i16 708, i16 703, i16 693, i16 709, i16 691, i16 691, i16 693, i16 692, i16 692, i16 692, i16 685, i16 693, i16 687, i16 691, i16 741, i16 740, i16 414, i16 850, i16 679, i16 419, i16 709, i16 706, i16 700, i16 688, i16 687, i16 695, i16 376, i16 674, i16 679, i16 670, i16 682, i16 681, i16 0, i16 667, i16 665, i16 667, i16 0, i16 681, i16 672, i16 663, i16 670, i16 674, i16 670, i16 657, i16 657, i16 658, i16 668, i16 656, i16 655, i16 663, i16 667, i16 659, i16 662, i16 650, i16 660, i16 659, i16 673, i16 669, i16 671, i16 644, i16 641, i16 660, i16 640, i16 655, i16 639, i16 649, i16 640, i16 634, i16 679, i16 627, i16 628, i16 627, i16 0, i16 636, i16 633, i16 627, i16 640, i16 625, i16 639, i16 636, i16 627, i16 638, i16 629, i16 850, i16 850, i16 850, i16 850, i16 618, i16 631, i16 621, i16 613, i16 632, i16 611, i16 615, i16 637, i16 638, i16 638, i16 621, i16 621, i16 850, i16 618, i16 607, i16 614, i16 601, i16 606, i16 648, i16 604, i16 603, i16 597, i16 596, i16 597, i16 0, i16 600, i16 608, i16 607, i16 0, i16 605, i16 605, i16 598, i16 597, i16 606, i16 590, i16 592, i16 584, i16 596, i16 582, i16 595, i16 605, i16 614, i16 607, i16 583, i16 600, i16 586, i16 586, i16 580, i16 576, i16 590, i16 575, i16 575, i16 583, i16 586, i16 573, i16 0, i16 556, i16 567, i16 554, i16 0, i16 565, i16 0, i16 558, i16 553, i16 850, i16 850, i16 547, i16 537, i16 189, i16 565, i16 560, i16 528, i16 545, i16 528, i16 460, i16 459, i16 467, i16 459, i16 460, i16 464, i16 850, i16 456, i16 455, i16 0, i16 0, i16 0, i16 0, i16 0, i16 465, i16 466, i16 452, i16 412, i16 493, i16 483, i16 473, i16 459, i16 850, i16 850, i16 462, i16 458, i16 443, i16 443, i16 450, i16 445, i16 850, i16 850, i16 850, i16 446, i16 451, i16 850, i16 469, i16 458, i16 448, i16 446, i16 433, i16 441, i16 440, i16 431, i16 425, i16 441, i16 440, i16 455, i16 164, i16 436, i16 427, i16 419, i16 850, i16 850, i16 418, i16 425, i16 393, i16 406, i16 424, i16 418, i16 430, i16 393, i16 393, i16 850, i16 385, i16 366, i16 363, i16 347, i16 425, i16 427, i16 199, i16 455, i16 138, i16 135, i16 850, i16 850, i16 0, i16 428, i16 136, i16 850, i16 850, i16 850, i16 850, i16 850, i16 850, i16 526, i16 535, i16 544, i16 553, i16 562, i16 571, i16 573, i16 575, i16 584, i16 593, i16 602, i16 611, i16 612, i16 614, i16 623], align 16
@_ZL6yy_def = internal unnamed_addr constant [453 x i16] [i16 0, i16 438, i16 438, i16 437, i16 3, i16 439, i16 439, i16 437, i16 7, i16 440, i16 440, i16 441, i16 441, i16 442, i16 442, i16 437, i16 15, i16 437, i16 17, i16 443, i16 443, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 445, i16 446, i16 437, i16 437, i16 437, i16 437, i16 437, i16 446, i16 437, i16 437, i16 437, i16 437, i16 447, i16 437, i16 437, i16 448, i16 437, i16 437, i16 449, i16 449, i16 437, i16 437, i16 437, i16 450, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 451, i16 437, i16 437, i16 451, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 445, i16 446, i16 446, i16 446, i16 437, i16 447, i16 437, i16 448, i16 437, i16 449, i16 449, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 451, i16 451, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 452, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 0, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437], align 16
@_ZL7yy_meta = internal unnamed_addr constant [72 x i32] [i32 0, i32 1, i32 1, i32 2, i32 1, i32 1, i32 3, i32 4, i32 1, i32 1, i32 5, i32 6, i32 6, i32 1, i32 1, i32 6, i32 1, i32 1, i32 7, i32 8, i32 1, i32 6, i32 1, i32 1, i32 1, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 6, i32 2, i32 6, i32 1, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 7, i32 1, i32 7, i32 1], align 16
@_ZL6yy_nxt = internal unnamed_addr constant [922 x i16] [i16 0, i16 22, i16 24, i16 25, i16 24, i16 22, i16 26, i16 27, i16 28, i16 22, i16 29, i16 22, i16 22, i16 22, i16 22, i16 22, i16 30, i16 31, i16 32, i16 33, i16 34, i16 22, i16 22, i16 22, i16 22, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 22, i16 22, i16 22, i16 22, i16 35, i16 36, i16 35, i16 37, i16 38, i16 39, i16 35, i16 35, i16 35, i16 35, i16 35, i16 40, i16 35, i16 35, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 35, i16 35, i16 35, i16 22, i16 22, i16 22, i16 22, i16 50, i16 110, i16 170, i16 168, i16 111, i16 51, i16 22, i16 52, i16 53, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 32, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 22, i16 22, i16 22, i16 22, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 22, i16 22, i16 22, i16 22, i16 56, i16 101, i16 102, i16 26, i16 57, i16 436, i16 168, i16 29, i16 58, i16 59, i16 101, i16 102, i16 60, i16 56, i16 153, i16 61, i16 67, i16 412, i16 62, i16 56, i16 168, i16 56, i16 67, i16 56, i16 112, i16 107, i16 115, i16 130, i16 70, i16 113, i16 70, i16 116, i16 131, i16 143, i16 413, i16 144, i16 147, i16 63, i16 64, i16 65, i16 56, i16 148, i16 370, i16 26, i16 57, i16 149, i16 435, i16 29, i16 58, i16 59, i16 434, i16 68, i16 60, i16 371, i16 168, i16 61, i16 103, i16 68, i16 62, i16 71, i16 104, i16 71, i16 162, i16 168, i16 105, i16 103, i16 106, i16 163, i16 432, i16 104, i16 167, i16 167, i16 167, i16 105, i16 108, i16 106, i16 109, i16 63, i16 64, i16 65, i16 72, i16 73, i16 74, i16 73, i16 72, i16 26, i16 75, i16 72, i16 72, i16 29, i16 72, i16 72, i16 72, i16 72, i16 72, i16 72, i16 72, i16 76, i16 72, i16 72, i16 72, i16 72, i16 72, i16 72, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 72, i16 78, i16 72, i16 72, i16 77, i16 79, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 22, i16 72, i16 22, i16 72, i16 22, i16 80, i16 81, i16 80, i16 82, i16 22, i16 22, i16 83, i16 84, i16 22, i16 85, i16 22, i16 86, i16 87, i16 88, i16 89, i16 22, i16 90, i16 22, i16 22, i16 22, i16 91, i16 92, i16 93, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 95, i16 22, i16 22, i16 96, i16 94, i16 94, i16 94, i16 94, i16 97, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 98, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 22, i16 99, i16 22, i16 88, i16 132, i16 133, i16 134, i16 135, i16 151, i16 155, i16 156, i16 155, i16 168, i16 171, i16 136, i16 137, i16 158, i16 138, i16 168, i16 139, i16 140, i16 211, i16 141, i16 156, i16 156, i16 156, i16 168, i16 142, i16 159, i16 167, i16 167, i16 167, i16 429, i16 168, i16 169, i16 208, i16 209, i16 155, i16 156, i16 155, i16 156, i16 156, i16 156, i16 149, i16 167, i16 167, i16 167, i16 370, i16 212, i16 208, i16 209, i16 213, i16 157, i16 412, i16 211, i16 214, i16 254, i16 428, i16 371, i16 427, i16 430, i16 255, i16 422, i16 430, i16 168, i16 422, i16 157, i16 426, i16 256, i16 257, i16 413, i16 431, i16 258, i16 423, i16 431, i16 425, i16 423, i16 160, i16 424, i16 161, i16 157, i16 212, i16 413, i16 157, i16 213, i16 421, i16 420, i16 419, i16 214, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 418, i16 433, i16 433, i16 433, i16 433, i16 433, i16 417, i16 416, i16 415, i16 414, i16 411, i16 410, i16 409, i16 408, i16 407, i16 406, i16 405, i16 404, i16 403, i16 402, i16 401, i16 433, i16 433, i16 433, i16 433, i16 400, i16 399, i16 398, i16 397, i16 396, i16 395, i16 394, i16 393, i16 392, i16 391, i16 390, i16 389, i16 388, i16 387, i16 386, i16 385, i16 384, i16 383, i16 382, i16 381, i16 380, i16 379, i16 378, i16 377, i16 433, i16 433, i16 433, i16 433, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 118, i16 118, i16 145, i16 145, i16 146, i16 376, i16 375, i16 374, i16 373, i16 372, i16 146, i16 146, i16 146, i16 150, i16 369, i16 368, i16 150, i16 150, i16 150, i16 150, i16 150, i16 150, i16 152, i16 367, i16 152, i16 152, i16 366, i16 152, i16 152, i16 152, i16 152, i16 154, i16 365, i16 364, i16 363, i16 362, i16 154, i16 361, i16 154, i16 164, i16 164, i16 172, i16 172, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 360, i16 359, i16 358, i16 357, i16 356, i16 355, i16 354, i16 353, i16 352, i16 351, i16 350, i16 349, i16 348, i16 347, i16 346, i16 333, i16 345, i16 332, i16 344, i16 343, i16 342, i16 341, i16 340, i16 339, i16 338, i16 337, i16 336, i16 335, i16 334, i16 333, i16 332, i16 331, i16 330, i16 329, i16 328, i16 327, i16 326, i16 325, i16 324, i16 323, i16 322, i16 321, i16 320, i16 319, i16 318, i16 317, i16 316, i16 315, i16 314, i16 313, i16 312, i16 311, i16 310, i16 309, i16 308, i16 307, i16 306, i16 305, i16 304, i16 303, i16 302, i16 301, i16 300, i16 299, i16 298, i16 297, i16 296, i16 295, i16 294, i16 293, i16 292, i16 291, i16 290, i16 289, i16 288, i16 287, i16 286, i16 285, i16 284, i16 283, i16 282, i16 281, i16 280, i16 279, i16 278, i16 277, i16 276, i16 275, i16 274, i16 273, i16 272, i16 271, i16 270, i16 269, i16 268, i16 267, i16 266, i16 265, i16 264, i16 263, i16 262, i16 261, i16 260, i16 259, i16 253, i16 252, i16 251, i16 250, i16 249, i16 248, i16 247, i16 207, i16 206, i16 246, i16 245, i16 244, i16 243, i16 242, i16 241, i16 240, i16 239, i16 238, i16 237, i16 236, i16 235, i16 234, i16 233, i16 232, i16 231, i16 230, i16 229, i16 228, i16 227, i16 226, i16 225, i16 224, i16 223, i16 222, i16 221, i16 220, i16 219, i16 218, i16 175, i16 217, i16 216, i16 168, i16 168, i16 168, i16 215, i16 159, i16 210, i16 207, i16 206, i16 205, i16 204, i16 203, i16 202, i16 201, i16 200, i16 199, i16 198, i16 197, i16 196, i16 195, i16 194, i16 193, i16 192, i16 191, i16 190, i16 189, i16 188, i16 187, i16 186, i16 185, i16 184, i16 183, i16 182, i16 112, i16 181, i16 180, i16 107, i16 179, i16 178, i16 177, i16 176, i16 175, i16 174, i16 173, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 166, i16 165, i16 149, i16 107, i16 129, i16 128, i16 127, i16 126, i16 125, i16 124, i16 123, i16 122, i16 121, i16 120, i16 119, i16 117, i16 112, i16 114, i16 437, i16 50, i16 48, i16 23, i16 23, i16 21, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437], align 16
@_ZL9yy_accept = internal unnamed_addr constant [439 x i16] [i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 8, i16 9, i16 12, i16 14, i16 17, i16 19, i16 21, i16 24, i16 26, i16 28, i16 30, i16 33, i16 35, i16 38, i16 41, i16 44, i16 47, i16 50, i16 53, i16 56, i16 59, i16 62, i16 65, i16 68, i16 71, i16 74, i16 76, i16 79, i16 81, i16 84, i16 87, i16 89, i16 92, i16 95, i16 97, i16 100, i16 103, i16 106, i16 109, i16 112, i16 115, i16 118, i16 121, i16 124, i16 127, i16 130, i16 133, i16 136, i16 139, i16 142, i16 145, i16 148, i16 150, i16 153, i16 156, i16 159, i16 162, i16 165, i16 168, i16 170, i16 173, i16 176, i16 179, i16 181, i16 184, i16 187, i16 190, i16 193, i16 196, i16 199, i16 202, i16 205, i16 208, i16 210, i16 213, i16 216, i16 219, i16 222, i16 224, i16 227, i16 229, i16 231, i16 233, i16 235, i16 237, i16 238, i16 239, i16 240, i16 240, i16 240, i16 241, i16 242, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 260, i16 261, i16 261, i16 262, i16 263, i16 265, i16 267, i16 268, i16 269, i16 270, i16 271, i16 272, i16 273, i16 274, i16 274, i16 274, i16 275, i16 276, i16 277, i16 278, i16 279, i16 280, i16 281, i16 282, i16 283, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 290, i16 291, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 293, i16 294, i16 295, i16 296, i16 297, i16 298, i16 299, i16 300, i16 301, i16 302, i16 303, i16 304, i16 305, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 307, i16 308, i16 308, i16 309, i16 309, i16 309, i16 309, i16 309, i16 309, i16 310, i16 311, i16 313, i16 313, i16 313, i16 313, i16 313, i16 313, i16 313, i16 315, i16 316, i16 317, i16 318, i16 320, i16 321, i16 322, i16 323, i16 324, i16 325, i16 326, i16 327, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 329, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 332, i16 333, i16 334, i16 335, i16 336, i16 337, i16 338, i16 339, i16 340, i16 341, i16 342, i16 343, i16 344, i16 345, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 347, i16 348, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 350, i16 352, i16 353, i16 354, i16 355, i16 357, i16 358, i16 359, i16 360, i16 361, i16 361, i16 361, i16 361, i16 362, i16 362, i16 363, i16 363, i16 363, i16 363, i16 363, i16 364, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 368, i16 369, i16 370, i16 371, i16 373, i16 374, i16 376, i16 377, i16 377, i16 378, i16 379, i16 379, i16 379, i16 379, i16 379, i16 379, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 381, i16 381, i16 381, i16 383, i16 385, i16 387, i16 389, i16 391, i16 391, i16 391, i16 391, i16 391, i16 391, i16 391, i16 391, i16 392, i16 393, i16 394, i16 394, i16 394, i16 394, i16 394, i16 394, i16 394, i16 395, i16 396, i16 397, i16 397, i16 397, i16 398, i16 398, i16 398, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 400, i16 400, i16 400, i16 401, i16 402, i16 402, i16 402, i16 402, i16 402, i16 402, i16 402, i16 402, i16 403, i16 403, i16 404, i16 404, i16 404, i16 404, i16 404, i16 404, i16 404, i16 404, i16 406, i16 406, i16 406, i16 407, i16 408, i16 409, i16 409, i16 409, i16 410, i16 411, i16 412, i16 413, i16 414, i16 414], align 16
@_ZL10yy_acclist = internal unnamed_addr constant [414 x i16] [i16 0, i16 42, i16 42, i16 82, i16 82, i16 94, i16 81, i16 93, i16 93, i16 1, i16 81, i16 93, i16 1, i16 93, i16 54, i16 81, i16 93, i16 81, i16 93, i16 81, i16 93, i16 55, i16 81, i16 93, i16 81, i16 93, i16 81, i16 93, i16 81, i16 93, i16 23, i16 81, i16 93, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 81, i16 93, i16 13, i16 81, i16 93, i16 13, i16 93, i16 13, i16 81, i16 93, i16 11, i16 81, i16 93, i16 12, i16 93, i16 10, i16 81, i16 93, i16 46, i16 81, i16 93, i16 51, i16 93, i16 50, i16 81, i16 93, i16 58, i16 81, i16 93, i16 59, i16 81, i16 93, i16 57, i16 81, i16 93, i16 46, i16 81, i16 93, i16 56, i16 81, i16 93, i16 60, i16 81, i16 93, i16 52, i16 81, i16 93, i16 61, i16 81, i16 93, i16 62, i16 81, i16 93, i16 63, i16 81, i16 93, i16 52, i16 81, i16 93, i16 67, i16 81, i16 93, i16 65, i16 81, i16 93, i16 52, i16 81, i16 93, i16 76, i16 81, i16 93, i16 76, i16 81, i16 93, i16 51, i16 93, i16 73, i16 81, i16 93, i16 77, i16 81, i16 93, i16 75, i16 81, i16 93, i16 70, i16 81, i16 93, i16 75, i16 81, i16 93, i16 42, i16 81, i16 93, i16 42, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 44, i16 81, i16 93, i16 81, i16 93, i16 43, i16 81, i16 93, i16 44, i16 81, i16 93, i16 44, i16 81, i16 93, i16 43, i16 81, i16 93, i16 92, i16 93, i16 82, i16 92, i16 93, i16 83, i16 93, i16 92, i16 93, i16 92, i16 93, i16 92, i16 93, i16 92, i16 93, i16 47, i16 48, i16 49, i16 23, i16 20, i16 17, i16 19, i16 41, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 9, i16 14, i16 10, i16 46, i16 16, i16 46, i16 18, i16 46, i16 53, i16 62, i16 64, i16 67, i16 66, i16 76, i16 76, i16 68, i16 73, i16 71, i16 72, i16 16, i16 18, i16 75, i16 69, i16 75, i16 42, i16 43, i16 43, i16 43, i16 43, i16 44, i16 44, i16 44, i16 82, i16 40, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 9, i16 14, i16 15, i16 75, i16 44, i16 43, i16 44, i16 26, i16 45, i16 45, i16 45, i16 45, i16 24, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 75, i16 44, i16 30, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 38, i16 39, i16 35, i16 36, i16 75, i16 44, i16 43, i16 45, i16 28, i16 45, i16 45, i16 45, i16 45, i16 25, i16 45, i16 45, i16 45, i16 45, i16 45, i16 4, i16 2, i16 75, i16 43, i16 44, i16 22, i16 45, i16 45, i16 45, i16 45, i16 29, i16 45, i16 45, i16 33, i16 45, i16 45, i16 37, i16 8, i16 75, i16 84, i16 34, i16 45, i16 21, i16 45, i16 27, i16 45, i16 32, i16 45, i16 31, i16 45, i16 75, i16 43, i16 85, i16 5, i16 3, i16 7, i16 78, i16 75, i16 75, i16 87, i16 86, i16 75, i16 88, i16 75, i16 16458, i16 91, i16 6, i16 16458, i16 80, i16 8266, i16 89, i16 90, i16 79], align 16
@_ZL26yy_looking_for_trail_begin = internal unnamed_addr global i32 0, align 4
@_ZL13yy_full_match = internal unnamed_addr global ptr null, align 8
@_ZL13yy_full_state = internal unnamed_addr global ptr null, align 8
@.str.1 = private unnamed_addr constant [32 x i8] c"token too large, exceeds YYLMAX\00", align 1
@yylval = external local_unnamed_addr global %union.KC_YYSTYPE, align 8
@pg_filename = external local_unnamed_addr global ptr, align 8
@pg_lineno = external local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [69 x i8] c"Opening '%{' (nested C++ includes; preceding closing '%}' not found)\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\\\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\\\\\00", align 1
@_ZN12_GLOBAL__N_119cinit_paren_nestingE = internal unnamed_addr global i32 0, align 4
@.str.5 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZN12_GLOBAL__N_119cinit_array_nestingE = internal unnamed_addr global i32 0, align 4
@.str.7 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\\\22\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"\\'\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"afterforeach\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"with\00", align 1
@g_options = external global %struct.cmdline_options, align 8
@.str.17 = private unnamed_addr constant [10 x i8] c"yystype.h\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"Name of yystype header is set to \00", align 1
@_ZL10yy_n_chars = internal unnamed_addr global i32 0, align 4
@.str.19 = private unnamed_addr constant [51 x i8] c"fatal flex scanner internal error--no action found\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"out of dynamic memory in yy_create_buffer()\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"out of dynamic memory in yy_scan_buffer()\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"out of dynamic memory in yy_scan_bytes()\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"bad buffer in yy_scan_bytes()\00", align 1
@_ZL21yy_rule_can_match_eol = internal unnamed_addr constant <{ [84 x i32], [10 x i32] }> <{ [84 x i32] [i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1], [10 x i32] zeroinitializer }>, align 16
@.str.25 = private unnamed_addr constant [56 x i8] c"fatal flex scanner internal error--end of buffer missed\00", align 1
@.str.26 = private unnamed_addr constant [72 x i8] c"input buffer overflow, can't enlarge buffer because scanner uses REJECT\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"input in flex scanner failed\00", align 1
@_ZL19yy_buffer_stack_max = internal unnamed_addr global i64 0, align 8
@stderr = external local_unnamed_addr global ptr, align 8
@.str.28 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"opening parenthesis '(' was not closed\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"opening bracket '[' was not closed\00", align 1
@pg_column = external local_unnamed_addr global i32, align 4
@pg_charpos = external local_unnamed_addr global i32, align 4
@.str.31 = private unnamed_addr constant [43 x i8] c"start of comment containing unexpected eof\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_kimwl.cc, ptr null }]

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #0 align 2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #1

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z5yylexv() local_unnamed_addr #2 personality ptr @__gxx_personality_v0 {
  %1 = load i1, ptr @_ZL7yy_init, align 4
  br i1 %1, label %63, label %2

2:                                                ; preds = %0
  store i1 true, ptr @_ZL7yy_init, align 4
  %3 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call noalias dereferenceable_or_null(16386) ptr @malloc(i64 noundef 16386) #29
  store ptr %6, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  br label %7

7:                                                ; preds = %5, %2
  %8 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  store i32 1, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %11

11:                                               ; preds = %10, %7
  %12 = load ptr, ptr @yyin, align 8, !tbaa !5
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = load ptr, ptr @stdin, align 8, !tbaa !5
  store ptr %15, ptr @yyin, align 8, !tbaa !5
  br label %16

16:                                               ; preds = %14, %11
  %17 = phi ptr [ %15, %14 ], [ %12, %11 ]
  %18 = load ptr, ptr @yyout, align 8, !tbaa !5
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = load ptr, ptr @stdout, align 8, !tbaa !5
  store ptr %21, ptr @yyout, align 8, !tbaa !5
  br label %22

22:                                               ; preds = %20, %16
  %23 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %24 = icmp eq ptr %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %27 = getelementptr inbounds ptr, ptr %23, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !5
  %29 = icmp eq ptr %28, null
  br i1 %29, label %32, label %51

30:                                               ; preds = %22
  %31 = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %31, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %31, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %45

32:                                               ; preds = %25
  %33 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %34 = add i64 %33, -1
  %35 = icmp ult i64 %26, %34
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = shl i64 %33, 32
  %38 = add i64 %37, 34359738368
  %39 = ashr exact i64 %38, 32
  %40 = lshr exact i64 %38, 29
  %41 = and i64 %40, 4294967295
  %42 = tail call ptr @realloc(ptr noundef nonnull %23, i64 noundef %41) #30
  store ptr %42, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %43 = getelementptr inbounds ptr, ptr %42, i64 %33
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %43, i8 0, i64 64, i1 false)
  store i64 %39, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %44 = load ptr, ptr @yyin, align 8, !tbaa !5
  br label %45

45:                                               ; preds = %30, %32, %36
  %46 = phi ptr [ %17, %30 ], [ %17, %32 ], [ %44, %36 ]
  %47 = tail call noundef ptr @_Z16yy_create_bufferP8_IO_FILEi(ptr noundef %46, i32 noundef 16384)
  %48 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %49 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %50 = getelementptr inbounds ptr, ptr %48, i64 %49
  store ptr %47, ptr %50, align 8, !tbaa !5
  br label %51

51:                                               ; preds = %45, %25
  %52 = phi ptr [ %47, %45 ], [ %28, %25 ]
  %53 = phi i64 [ %49, %45 ], [ %26, %25 ]
  %54 = phi ptr [ %48, %45 ], [ %23, %25 ]
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = getelementptr inbounds %struct.yy_buffer_state, ptr %52, i64 0, i32 4
  %57 = load i32, ptr %56, align 4, !tbaa !13
  store i32 %57, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %58 = getelementptr inbounds %struct.yy_buffer_state, ptr %52, i64 0, i32 2
  %59 = load ptr, ptr %58, align 8, !tbaa !15
  store ptr %59, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %59, ptr @yytext_ptr, align 8, !tbaa !5
  %60 = load ptr, ptr %55, align 8, !tbaa !5
  %61 = load ptr, ptr %60, align 8, !tbaa !16
  store ptr %61, ptr @yyin, align 8, !tbaa !5
  %62 = load i8, ptr %59, align 1, !tbaa !17
  store i8 %62, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %63

63:                                               ; preds = %51, %0
  br label %64

64:                                               ; preds = %1812, %63
  %65 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %66 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  store i8 %66, ptr %65, align 1, !tbaa !17
  %67 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %68 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %69 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %70 = getelementptr inbounds ptr, ptr %68, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !5
  %72 = getelementptr inbounds %struct.yy_buffer_state, ptr %71, i64 0, i32 7
  %73 = load i32, ptr %72, align 8, !tbaa !18
  %74 = add nsw i32 %73, %67
  %75 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %76 = getelementptr inbounds i32, ptr %75, i64 1
  store ptr %76, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %74, ptr %75, align 4, !tbaa !9
  br label %82

77:                                               ; preds = %2102, %2107, %2185
  %78 = phi ptr [ %2116, %2185 ], [ %2116, %2107 ], [ %2104, %2102 ]
  %79 = phi ptr [ %2112, %2185 ], [ %2112, %2107 ], [ %1995, %2102 ]
  %80 = phi i32 [ %2186, %2185 ], [ %2124, %2107 ], [ %2103, %2102 ]
  %81 = load ptr, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %82

82:                                               ; preds = %77, %64
  %83 = phi ptr [ %76, %64 ], [ %81, %77 ]
  %84 = phi ptr [ %65, %64 ], [ %78, %77 ]
  %85 = phi ptr [ %65, %64 ], [ %79, %77 ]
  %86 = phi i32 [ %74, %64 ], [ %80, %77 ]
  br label %87

87:                                               ; preds = %131, %82
  %88 = phi ptr [ %83, %82 ], [ %137, %131 ]
  %89 = phi ptr [ %84, %82 ], [ %138, %131 ]
  %90 = phi i32 [ %86, %82 ], [ %136, %131 ]
  %91 = load i8, ptr %89, align 1, !tbaa !17
  %92 = zext i8 %91 to i64
  %93 = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !9
  %95 = sext i32 %90 to i64
  %96 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %95
  %97 = load i16, ptr %96, align 2, !tbaa !19
  %98 = sext i16 %97 to i32
  %99 = and i32 %94, 255
  %100 = add nsw i32 %99, %98
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %101
  %103 = load i16, ptr %102, align 2, !tbaa !19
  %104 = sext i16 %103 to i32
  %105 = icmp eq i32 %90, %104
  br i1 %105, label %131, label %106

106:                                              ; preds = %87
  %107 = trunc i32 %94 to i8
  br label %108

108:                                              ; preds = %106, %119
  %109 = phi i64 [ %121, %119 ], [ %95, %106 ]
  %110 = phi i8 [ %120, %119 ], [ %107, %106 ]
  %111 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %109
  %112 = load i16, ptr %111, align 2, !tbaa !19
  %113 = icmp sgt i16 %112, 437
  br i1 %113, label %114, label %119

114:                                              ; preds = %108
  %115 = zext i8 %110 to i64
  %116 = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !9
  %118 = trunc i32 %117 to i8
  br label %119

119:                                              ; preds = %114, %108
  %120 = phi i8 [ %118, %114 ], [ %110, %108 ]
  %121 = sext i16 %112 to i64
  %122 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %121
  %123 = load i16, ptr %122, align 2, !tbaa !19
  %124 = sext i16 %123 to i32
  %125 = zext i8 %120 to i32
  %126 = add nsw i32 %124, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %127
  %129 = load i16, ptr %128, align 2, !tbaa !19
  %130 = icmp eq i16 %112, %129
  br i1 %130, label %131, label %108, !llvm.loop !21

131:                                              ; preds = %119, %87
  %132 = phi i32 [ %100, %87 ], [ %126, %119 ]
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %133
  %135 = load i16, ptr %134, align 2, !tbaa !19
  %136 = sext i16 %135 to i32
  %137 = getelementptr inbounds i32, ptr %88, i64 1
  store ptr %137, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %136, ptr %88, align 4, !tbaa !9
  %138 = getelementptr inbounds i8, ptr %89, i64 1
  %139 = icmp eq i16 %135, 437
  br i1 %139, label %144, label %87, !llvm.loop !23

140:                                              ; preds = %2098, %2187, %2267, %2092
  %141 = phi ptr [ %1999, %2092 ], [ %2196, %2267 ], [ %2196, %2187 ], [ %1999, %2098 ]
  %142 = phi ptr [ %1995, %2092 ], [ %2203, %2267 ], [ %2203, %2187 ], [ %1995, %2098 ]
  %143 = load ptr, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %144

144:                                              ; preds = %131, %140
  %145 = phi ptr [ %143, %140 ], [ %137, %131 ]
  %146 = phi ptr [ %141, %140 ], [ %138, %131 ]
  %147 = phi ptr [ %142, %140 ], [ %85, %131 ]
  %148 = getelementptr inbounds i32, ptr %145, i64 -1
  store ptr %148, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  %149 = load i32, ptr %148, align 4, !tbaa !9
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [439 x i16], ptr @_ZL9yy_accept, i64 0, i64 %150
  %152 = load i16, ptr %151, align 2, !tbaa !19
  %153 = sext i16 %152 to i32
  %154 = load i32, ptr @_ZL26yy_looking_for_trail_begin, align 4
  br label %155

155:                                              ; preds = %194, %144
  %156 = phi i32 [ %154, %144 ], [ %195, %194 ]
  %157 = phi ptr [ %148, %144 ], [ %162, %194 ]
  %158 = phi i32 [ %153, %144 ], [ %196, %194 ]
  %159 = phi ptr [ %146, %144 ], [ %164, %194 ]
  %160 = phi i32 [ %149, %144 ], [ %165, %194 ]
  br label %161

161:                                              ; preds = %197, %155
  %162 = phi ptr [ %157, %155 ], [ %199, %197 ]
  %163 = phi i32 [ %158, %155 ], [ %204, %197 ]
  %164 = phi ptr [ %159, %155 ], [ %198, %197 ]
  %165 = phi i32 [ %160, %155 ], [ %200, %197 ]
  %166 = icmp eq i32 %163, 0
  br i1 %166, label %197, label %167

167:                                              ; preds = %161
  %168 = add nsw i32 %165, 1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [439 x i16], ptr @_ZL9yy_accept, i64 0, i64 %169
  %171 = load i16, ptr %170, align 2, !tbaa !19
  %172 = sext i16 %171 to i32
  %173 = icmp slt i32 %163, %172
  br i1 %173, label %174, label %197

174:                                              ; preds = %167
  %175 = sext i32 %163 to i64
  %176 = getelementptr inbounds [414 x i16], ptr @_ZL10yy_acclist, i64 0, i64 %175
  %177 = load i16, ptr %176, align 2, !tbaa !19
  %178 = sext i16 %177 to i32
  %179 = and i32 %178, 16384
  %180 = icmp ne i32 %179, 0
  %181 = icmp ne i32 %156, 0
  %182 = select i1 %180, i1 true, i1 %181
  br i1 %182, label %183, label %187

183:                                              ; preds = %174
  %184 = icmp eq i32 %156, %178
  br i1 %184, label %185, label %194

185:                                              ; preds = %183
  store i32 0, ptr @_ZL26yy_looking_for_trail_begin, align 4, !tbaa !9
  %186 = and i16 %177, -16385
  br label %205

187:                                              ; preds = %174
  %188 = and i32 %178, 8192
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %187
  %191 = and i32 %178, -24577
  %192 = or i32 %191, 16384
  store i32 %192, ptr @_ZL26yy_looking_for_trail_begin, align 4, !tbaa !9
  store ptr %164, ptr @_ZL13yy_full_match, align 8, !tbaa !5
  store ptr %162, ptr @_ZL13yy_full_state, align 8, !tbaa !5
  br label %194

193:                                              ; preds = %187
  store ptr %164, ptr @_ZL13yy_full_match, align 8, !tbaa !5
  store ptr %162, ptr @_ZL13yy_full_state, align 8, !tbaa !5
  br label %205

194:                                              ; preds = %183, %190
  %195 = phi i32 [ %156, %183 ], [ %192, %190 ]
  %196 = add nsw i32 %163, 1
  br label %155

197:                                              ; preds = %167, %161
  %198 = getelementptr inbounds i8, ptr %164, i64 -1
  %199 = getelementptr inbounds i32, ptr %162, i64 -1
  store ptr %199, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  %200 = load i32, ptr %199, align 4, !tbaa !9
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [439 x i16], ptr @_ZL9yy_accept, i64 0, i64 %201
  %203 = load i16, ptr %202, align 2, !tbaa !19
  %204 = sext i16 %203 to i32
  br label %161, !llvm.loop !24

205:                                              ; preds = %193, %185
  %206 = phi i16 [ %177, %193 ], [ %186, %185 ]
  %207 = sext i16 %206 to i32
  store ptr %147, ptr @yytext_ptr, align 8, !tbaa !5
  %208 = ptrtoint ptr %164 to i64
  %209 = ptrtoint ptr %147 to i64
  %210 = sub i64 %208, %209
  %211 = trunc i64 %210 to i32
  store i32 %211, ptr @yyleng, align 4, !tbaa !9
  %212 = load i8, ptr %164, align 1, !tbaa !17
  store i8 %212, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  store i8 0, ptr %164, align 1, !tbaa !17
  %213 = load i32, ptr @yyleng, align 4, !tbaa !9
  %214 = icmp sgt i32 %213, 8191
  br i1 %214, label %215, label %218

215:                                              ; preds = %205
  %216 = load ptr, ptr @stderr, align 8, !tbaa !5
  %217 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %216, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.1) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

218:                                              ; preds = %205
  %219 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %220 = icmp sgt i32 %213, -1
  br i1 %220, label %221, label %297

221:                                              ; preds = %218
  %222 = ptrtoint ptr %219 to i64
  %223 = add nuw nsw i32 %213, 1
  %224 = zext i32 %223 to i64
  %225 = icmp ult i32 %213, 7
  %226 = sub i64 ptrtoint (ptr @yytext to i64), %222
  %227 = icmp ult i64 %226, 32
  %228 = select i1 %225, i1 true, i1 %227
  br i1 %228, label %260, label %229

229:                                              ; preds = %221
  %230 = icmp ult i32 %213, 31
  br i1 %230, label %248, label %231

231:                                              ; preds = %229
  %232 = and i64 %224, 4294967264
  br label %233

233:                                              ; preds = %233, %231
  %234 = phi i64 [ 0, %231 ], [ %241, %233 ]
  %235 = getelementptr inbounds i8, ptr %219, i64 %234
  %236 = load <16 x i8>, ptr %235, align 1, !tbaa !17
  %237 = getelementptr inbounds i8, ptr %235, i64 16
  %238 = load <16 x i8>, ptr %237, align 1, !tbaa !17
  %239 = getelementptr inbounds i8, ptr @yytext, i64 %234
  store <16 x i8> %236, ptr %239, align 16, !tbaa !17
  %240 = getelementptr inbounds i8, ptr %239, i64 16
  store <16 x i8> %238, ptr %240, align 16, !tbaa !17
  %241 = add nuw i64 %234, 32
  %242 = icmp eq i64 %241, %232
  br i1 %242, label %243, label %233, !llvm.loop !25

243:                                              ; preds = %233
  %244 = icmp eq i64 %232, %224
  br i1 %244, label %297, label %245

245:                                              ; preds = %243
  %246 = and i64 %224, 24
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %260, label %248

248:                                              ; preds = %229, %245
  %249 = phi i64 [ %232, %245 ], [ 0, %229 ]
  %250 = and i64 %224, 4294967288
  br label %251

251:                                              ; preds = %251, %248
  %252 = phi i64 [ %249, %248 ], [ %256, %251 ]
  %253 = getelementptr inbounds i8, ptr %219, i64 %252
  %254 = load <8 x i8>, ptr %253, align 1, !tbaa !17
  %255 = getelementptr inbounds i8, ptr @yytext, i64 %252
  store <8 x i8> %254, ptr %255, align 8, !tbaa !17
  %256 = add nuw i64 %252, 8
  %257 = icmp eq i64 %256, %250
  br i1 %257, label %258, label %251, !llvm.loop !28

258:                                              ; preds = %251
  %259 = icmp eq i64 %250, %224
  br i1 %259, label %297, label %260

260:                                              ; preds = %221, %245, %258
  %261 = phi i64 [ 0, %221 ], [ %232, %245 ], [ %250, %258 ]
  %262 = xor i64 %261, -1
  %263 = add nsw i64 %262, %224
  %264 = and i64 %224, 3
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %275, label %266

266:                                              ; preds = %260, %266
  %267 = phi i64 [ %272, %266 ], [ %261, %260 ]
  %268 = phi i64 [ %273, %266 ], [ 0, %260 ]
  %269 = getelementptr inbounds i8, ptr %219, i64 %267
  %270 = load i8, ptr %269, align 1, !tbaa !17
  %271 = getelementptr inbounds i8, ptr @yytext, i64 %267
  store i8 %270, ptr %271, align 1, !tbaa !17
  %272 = add nuw nsw i64 %267, 1
  %273 = add i64 %268, 1
  %274 = icmp eq i64 %273, %264
  br i1 %274, label %275, label %266, !llvm.loop !29

275:                                              ; preds = %266, %260
  %276 = phi i64 [ %261, %260 ], [ %272, %266 ]
  %277 = icmp ult i64 %263, 3
  br i1 %277, label %297, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %295, %278 ], [ %276, %275 ]
  %280 = getelementptr inbounds i8, ptr %219, i64 %279
  %281 = load i8, ptr %280, align 1, !tbaa !17
  %282 = getelementptr inbounds i8, ptr @yytext, i64 %279
  store i8 %281, ptr %282, align 1, !tbaa !17
  %283 = add nuw nsw i64 %279, 1
  %284 = getelementptr inbounds i8, ptr %219, i64 %283
  %285 = load i8, ptr %284, align 1, !tbaa !17
  %286 = getelementptr inbounds i8, ptr @yytext, i64 %283
  store i8 %285, ptr %286, align 1, !tbaa !17
  %287 = add nuw nsw i64 %279, 2
  %288 = getelementptr inbounds i8, ptr %219, i64 %287
  %289 = load i8, ptr %288, align 1, !tbaa !17
  %290 = getelementptr inbounds i8, ptr @yytext, i64 %287
  store i8 %289, ptr %290, align 1, !tbaa !17
  %291 = add nuw nsw i64 %279, 3
  %292 = getelementptr inbounds i8, ptr %219, i64 %291
  %293 = load i8, ptr %292, align 1, !tbaa !17
  %294 = getelementptr inbounds i8, ptr @yytext, i64 %291
  store i8 %293, ptr %294, align 1, !tbaa !17
  %295 = add nuw nsw i64 %279, 4
  %296 = icmp eq i64 %295, %224
  br i1 %296, label %297, label %278, !llvm.loop !31

297:                                              ; preds = %275, %278, %243, %258, %218
  store ptr %164, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %298 = icmp eq i16 %206, 94
  br i1 %298, label %345, label %299

299:                                              ; preds = %297
  %300 = sext i16 %206 to i64
  %301 = getelementptr inbounds [94 x i32], ptr @_ZL21yy_rule_can_match_eol, i64 0, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !9
  %303 = icmp ne i32 %302, 0
  %304 = icmp sgt i32 %213, 0
  %305 = select i1 %303, i1 %304, i1 false
  br i1 %305, label %306, label %345

306:                                              ; preds = %299
  %307 = load i32, ptr @yylineno, align 4
  %308 = zext i32 %213 to i64
  %309 = and i64 %308, 1
  %310 = icmp eq i32 %213, 1
  br i1 %310, label %335, label %311

311:                                              ; preds = %306
  %312 = and i64 %308, 4294967294
  br label %313

313:                                              ; preds = %330, %311
  %314 = phi i64 [ 0, %311 ], [ %332, %330 ]
  %315 = phi i32 [ %307, %311 ], [ %331, %330 ]
  %316 = phi i64 [ 0, %311 ], [ %333, %330 ]
  %317 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %314
  %318 = load i8, ptr %317, align 2, !tbaa !17
  %319 = icmp eq i8 %318, 10
  br i1 %319, label %320, label %322

320:                                              ; preds = %313
  %321 = add nsw i32 %315, 1
  store i32 %321, ptr @yylineno, align 4, !tbaa !9
  br label %322

322:                                              ; preds = %313, %320
  %323 = phi i32 [ %315, %313 ], [ %321, %320 ]
  %324 = or i64 %314, 1
  %325 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %324
  %326 = load i8, ptr %325, align 1, !tbaa !17
  %327 = icmp eq i8 %326, 10
  br i1 %327, label %328, label %330

328:                                              ; preds = %322
  %329 = add nsw i32 %323, 1
  store i32 %329, ptr @yylineno, align 4, !tbaa !9
  br label %330

330:                                              ; preds = %328, %322
  %331 = phi i32 [ %323, %322 ], [ %329, %328 ]
  %332 = add nuw nsw i64 %314, 2
  %333 = add i64 %316, 2
  %334 = icmp eq i64 %333, %312
  br i1 %334, label %335, label %313, !llvm.loop !32

335:                                              ; preds = %330, %306
  %336 = phi i64 [ 0, %306 ], [ %332, %330 ]
  %337 = phi i32 [ %307, %306 ], [ %331, %330 ]
  %338 = icmp eq i64 %309, 0
  br i1 %338, label %345, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %336
  %341 = load i8, ptr %340, align 1, !tbaa !17
  %342 = icmp eq i8 %341, 10
  br i1 %342, label %343, label %345

343:                                              ; preds = %339
  %344 = add nsw i32 %337, 1
  store i32 %344, ptr @yylineno, align 4, !tbaa !9
  br label %345

345:                                              ; preds = %335, %343, %339, %299, %297
  br label %346

346:                                              ; preds = %345, %2268
  %347 = phi ptr [ %2269, %2268 ], [ %219, %345 ]
  %348 = phi i32 [ %2273, %2268 ], [ %207, %345 ]
  switch i32 %348, label %2274 [
    i32 1, label %349
    i32 2, label %365
    i32 3, label %381
    i32 4, label %397
    i32 5, label %413
    i32 6, label %429
    i32 7, label %445
    i32 8, label %461
    i32 9, label %477
    i32 10, label %493
    i32 11, label %510
    i32 12, label %526
    i32 13, label %543
    i32 14, label %561
    i32 15, label %583
    i32 16, label %601
    i32 17, label %620
    i32 18, label %638
    i32 19, label %655
    i32 20, label %671
    i32 21, label %687
    i32 22, label %703
    i32 23, label %719
    i32 24, label %738
    i32 25, label %754
    i32 26, label %770
    i32 27, label %786
    i32 28, label %802
    i32 29, label %818
    i32 30, label %834
    i32 31, label %850
    i32 32, label %866
    i32 33, label %882
    i32 34, label %898
    i32 35, label %914
    i32 36, label %930
    i32 37, label %946
    i32 38, label %962
    i32 39, label %978
    i32 40, label %994
    i32 41, label %1010
    i32 42, label %1026
    i32 43, label %1042
    i32 44, label %1059
    i32 45, label %1076
    i32 46, label %1093
    i32 47, label %1110
    i32 48, label %1129
    i32 49, label %1145
    i32 50, label %1161
    i32 51, label %1178
    i32 52, label %1196
    i32 53, label %1213
    i32 54, label %1230
    i32 55, label %1248
    i32 56, label %1266
    i32 57, label %1284
    i32 58, label %1302
    i32 59, label %1323
    i32 60, label %1349
    i32 61, label %1370
    i32 62, label %1396
    i32 63, label %1413
    i32 64, label %1431
    i32 65, label %1448
    i32 66, label %1466
    i32 67, label %1483
    i32 68, label %1500
    i32 69, label %1517
    i32 70, label %1534
    i32 71, label %1551
    i32 72, label %1568
    i32 73, label %1585
    i32 74, label %1607
    i32 75, label %1623
    i32 76, label %1649
    i32 77, label %1666
    i32 78, label %1683
    i32 79, label %1700
    i32 80, label %1717
    i32 81, label %1734
    i32 82, label %1752
    i32 83, label %1768
    i32 84, label %1784
    i32 85, label %1815
    i32 86, label %1831
    i32 87, label %1847
    i32 88, label %1863
    i32 89, label %1879
    i32 90, label %1895
    i32 91, label %1911
    i32 92, label %1927
    i32 93, label %1945
    i32 95, label %2275
    i32 96, label %2275
    i32 97, label %2275
    i32 98, label %2275
    i32 99, label %2275
    i32 100, label %2275
    i32 101, label %2275
    i32 102, label %2275
    i32 103, label %2275
    i32 104, label %2275
    i32 94, label %1964
  ]

349:                                              ; preds = %346
  %350 = load i32, ptr @yyleng, align 4, !tbaa !9
  %351 = icmp sgt i32 %350, 0
  br i1 %351, label %352, label %364

352:                                              ; preds = %349
  %353 = add nsw i32 %350, -1
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %354
  %356 = load i8, ptr %355, align 1, !tbaa !17
  %357 = icmp eq i8 %356, 10
  %358 = zext i1 %357 to i32
  %359 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %360 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %361 = getelementptr inbounds ptr, ptr %359, i64 %360
  %362 = load ptr, ptr %361, align 8, !tbaa !5
  %363 = getelementptr inbounds %struct.yy_buffer_state, ptr %362, i64 0, i32 7
  store i32 %358, ptr %363, align 8, !tbaa !18
  br label %364

364:                                              ; preds = %352, %349
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %1812

365:                                              ; preds = %346
  %366 = load i32, ptr @yyleng, align 4, !tbaa !9
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %368, label %380

368:                                              ; preds = %365
  %369 = add nsw i32 %366, -1
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %370
  %372 = load i8, ptr %371, align 1, !tbaa !17
  %373 = icmp eq i8 %372, 10
  %374 = zext i1 %373 to i32
  %375 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %376 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %377 = getelementptr inbounds ptr, ptr %375, i64 %376
  %378 = load ptr, ptr %377, align 8, !tbaa !5
  %379 = getelementptr inbounds %struct.yy_buffer_state, ptr %378, i64 0, i32 7
  store i32 %374, ptr %379, align 8, !tbaa !18
  br label %380

380:                                              ; preds = %368, %365
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

381:                                              ; preds = %346
  %382 = load i32, ptr @yyleng, align 4, !tbaa !9
  %383 = icmp sgt i32 %382, 0
  br i1 %383, label %384, label %396

384:                                              ; preds = %381
  %385 = add nsw i32 %382, -1
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %386
  %388 = load i8, ptr %387, align 1, !tbaa !17
  %389 = icmp eq i8 %388, 10
  %390 = zext i1 %389 to i32
  %391 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %392 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %393 = getelementptr inbounds ptr, ptr %391, i64 %392
  %394 = load ptr, ptr %393, align 8, !tbaa !5
  %395 = getelementptr inbounds %struct.yy_buffer_state, ptr %394, i64 0, i32 7
  store i32 %390, ptr %395, align 8, !tbaa !18
  br label %396

396:                                              ; preds = %384, %381
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

397:                                              ; preds = %346
  %398 = load i32, ptr @yyleng, align 4, !tbaa !9
  %399 = icmp sgt i32 %398, 0
  br i1 %399, label %400, label %412

400:                                              ; preds = %397
  %401 = add nsw i32 %398, -1
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %402
  %404 = load i8, ptr %403, align 1, !tbaa !17
  %405 = icmp eq i8 %404, 10
  %406 = zext i1 %405 to i32
  %407 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %408 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %409 = getelementptr inbounds ptr, ptr %407, i64 %408
  %410 = load ptr, ptr %409, align 8, !tbaa !5
  %411 = getelementptr inbounds %struct.yy_buffer_state, ptr %410, i64 0, i32 7
  store i32 %406, ptr %411, align 8, !tbaa !18
  br label %412

412:                                              ; preds = %400, %397
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

413:                                              ; preds = %346
  %414 = load i32, ptr @yyleng, align 4, !tbaa !9
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %416, label %428

416:                                              ; preds = %413
  %417 = add nsw i32 %414, -1
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %418
  %420 = load i8, ptr %419, align 1, !tbaa !17
  %421 = icmp eq i8 %420, 10
  %422 = zext i1 %421 to i32
  %423 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %424 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %425 = getelementptr inbounds ptr, ptr %423, i64 %424
  %426 = load ptr, ptr %425, align 8, !tbaa !5
  %427 = getelementptr inbounds %struct.yy_buffer_state, ptr %426, i64 0, i32 7
  store i32 %422, ptr %427, align 8, !tbaa !18
  br label %428

428:                                              ; preds = %416, %413
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

429:                                              ; preds = %346
  %430 = load i32, ptr @yyleng, align 4, !tbaa !9
  %431 = icmp sgt i32 %430, 0
  br i1 %431, label %432, label %444

432:                                              ; preds = %429
  %433 = add nsw i32 %430, -1
  %434 = zext i32 %433 to i64
  %435 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %434
  %436 = load i8, ptr %435, align 1, !tbaa !17
  %437 = icmp eq i8 %436, 10
  %438 = zext i1 %437 to i32
  %439 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %440 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %441 = getelementptr inbounds ptr, ptr %439, i64 %440
  %442 = load ptr, ptr %441, align 8, !tbaa !5
  %443 = getelementptr inbounds %struct.yy_buffer_state, ptr %442, i64 0, i32 7
  store i32 %438, ptr %443, align 8, !tbaa !18
  br label %444

444:                                              ; preds = %432, %429
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

445:                                              ; preds = %346
  %446 = load i32, ptr @yyleng, align 4, !tbaa !9
  %447 = icmp sgt i32 %446, 0
  br i1 %447, label %448, label %460

448:                                              ; preds = %445
  %449 = add nsw i32 %446, -1
  %450 = zext i32 %449 to i64
  %451 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %450
  %452 = load i8, ptr %451, align 1, !tbaa !17
  %453 = icmp eq i8 %452, 10
  %454 = zext i1 %453 to i32
  %455 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %456 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %457 = getelementptr inbounds ptr, ptr %455, i64 %456
  %458 = load ptr, ptr %457, align 8, !tbaa !5
  %459 = getelementptr inbounds %struct.yy_buffer_state, ptr %458, i64 0, i32 7
  store i32 %454, ptr %459, align 8, !tbaa !18
  br label %460

460:                                              ; preds = %448, %445
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

461:                                              ; preds = %346
  %462 = load i32, ptr @yyleng, align 4, !tbaa !9
  %463 = icmp sgt i32 %462, 0
  br i1 %463, label %464, label %476

464:                                              ; preds = %461
  %465 = add nsw i32 %462, -1
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %466
  %468 = load i8, ptr %467, align 1, !tbaa !17
  %469 = icmp eq i8 %468, 10
  %470 = zext i1 %469 to i32
  %471 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %472 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %473 = getelementptr inbounds ptr, ptr %471, i64 %472
  %474 = load ptr, ptr %473, align 8, !tbaa !5
  %475 = getelementptr inbounds %struct.yy_buffer_state, ptr %474, i64 0, i32 7
  store i32 %470, ptr %475, align 8, !tbaa !18
  br label %476

476:                                              ; preds = %464, %461
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 19, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %1812

477:                                              ; preds = %346
  %478 = load i32, ptr @yyleng, align 4, !tbaa !9
  %479 = icmp sgt i32 %478, 0
  br i1 %479, label %480, label %492

480:                                              ; preds = %477
  %481 = add nsw i32 %478, -1
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %482
  %484 = load i8, ptr %483, align 1, !tbaa !17
  %485 = icmp eq i8 %484, 10
  %486 = zext i1 %485 to i32
  %487 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %488 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %489 = getelementptr inbounds ptr, ptr %487, i64 %488
  %490 = load ptr, ptr %489, align 8, !tbaa !5
  %491 = getelementptr inbounds %struct.yy_buffer_state, ptr %490, i64 0, i32 7
  store i32 %486, ptr %491, align 8, !tbaa !18
  br label %492

492:                                              ; preds = %480, %477
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 7, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %2275

493:                                              ; preds = %346
  %494 = load i32, ptr @yyleng, align 4, !tbaa !9
  %495 = icmp sgt i32 %494, 0
  br i1 %495, label %496, label %508

496:                                              ; preds = %493
  %497 = add nsw i32 %494, -1
  %498 = zext i32 %497 to i64
  %499 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %498
  %500 = load i8, ptr %499, align 1, !tbaa !17
  %501 = icmp eq i8 %500, 10
  %502 = zext i1 %501 to i32
  %503 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %504 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %505 = getelementptr inbounds ptr, ptr %503, i64 %504
  %506 = load ptr, ptr %505, align 8, !tbaa !5
  %507 = getelementptr inbounds %struct.yy_buffer_state, ptr %506, i64 0, i32 7
  store i32 %502, ptr %507, align 8, !tbaa !18
  br label %508

508:                                              ; preds = %496, %493
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %509 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %509, ptr @yylval, align 8, !tbaa !17
  br label %2275

510:                                              ; preds = %346
  %511 = load i32, ptr @yyleng, align 4, !tbaa !9
  %512 = icmp sgt i32 %511, 0
  br i1 %512, label %513, label %525

513:                                              ; preds = %510
  %514 = add nsw i32 %511, -1
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %515
  %517 = load i8, ptr %516, align 1, !tbaa !17
  %518 = icmp eq i8 %517, 10
  %519 = zext i1 %518 to i32
  %520 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %521 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %522 = getelementptr inbounds ptr, ptr %520, i64 %521
  %523 = load ptr, ptr %522, align 8, !tbaa !5
  %524 = getelementptr inbounds %struct.yy_buffer_state, ptr %523, i64 0, i32 7
  store i32 %519, ptr %524, align 8, !tbaa !18
  br label %525

525:                                              ; preds = %513, %510
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %1812

526:                                              ; preds = %346
  %527 = load i32, ptr @yyleng, align 4, !tbaa !9
  %528 = icmp sgt i32 %527, 0
  br i1 %528, label %529, label %541

529:                                              ; preds = %526
  %530 = add nsw i32 %527, -1
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %531
  %533 = load i8, ptr %532, align 1, !tbaa !17
  %534 = icmp eq i8 %533, 10
  %535 = zext i1 %534 to i32
  %536 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %537 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %538 = getelementptr inbounds ptr, ptr %536, i64 %537
  %539 = load ptr, ptr %538, align 8, !tbaa !5
  %540 = getelementptr inbounds %struct.yy_buffer_state, ptr %539, i64 0, i32 7
  store i32 %535, ptr %540, align 8, !tbaa !18
  br label %541

541:                                              ; preds = %529, %526
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %542 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, ptr noundef nonnull @.str)
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 noundef 1024)
  store i32 5, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %2275

543:                                              ; preds = %346
  %544 = load i32, ptr @yyleng, align 4, !tbaa !9
  %545 = icmp sgt i32 %544, 0
  br i1 %545, label %546, label %558

546:                                              ; preds = %543
  %547 = add nsw i32 %544, -1
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %548
  %550 = load i8, ptr %549, align 1, !tbaa !17
  %551 = icmp eq i8 %550, 10
  %552 = zext i1 %551 to i32
  %553 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %554 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %555 = getelementptr inbounds ptr, ptr %553, i64 %554
  %556 = load ptr, ptr %555, align 8, !tbaa !5
  %557 = getelementptr inbounds %struct.yy_buffer_state, ptr %556, i64 0, i32 7
  store i32 %552, ptr %557, align 8, !tbaa !18
  br label %558

558:                                              ; preds = %546, %543
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %559 = load i8, ptr @yytext, align 16, !tbaa !17
  %560 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i8 noundef signext %559)
  br label %1812

561:                                              ; preds = %346
  %562 = load i32, ptr @yyleng, align 4, !tbaa !9
  %563 = icmp sgt i32 %562, 0
  br i1 %563, label %564, label %576

564:                                              ; preds = %561
  %565 = add nsw i32 %562, -1
  %566 = zext i32 %565 to i64
  %567 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %566
  %568 = load i8, ptr %567, align 1, !tbaa !17
  %569 = icmp eq i8 %568, 10
  %570 = zext i1 %569 to i32
  %571 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %572 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %573 = getelementptr inbounds ptr, ptr %571, i64 %572
  %574 = load ptr, ptr %573, align 8, !tbaa !5
  %575 = getelementptr inbounds %struct.yy_buffer_state, ptr %574, i64 0, i32 7
  store i32 %570, ptr %575, align 8, !tbaa !18
  br label %576

576:                                              ; preds = %564, %561
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %577 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %578 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %579 = tail call noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef %577, i32 noundef %578)
  %580 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.2)
  %581 = tail call noundef ptr @_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %579, ptr noundef %580)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %581)
  %582 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, ptr noundef nonnull @yytext)
  br label %1812

583:                                              ; preds = %346
  %584 = load i32, ptr @yyleng, align 4, !tbaa !9
  %585 = icmp sgt i32 %584, 0
  br i1 %585, label %586, label %598

586:                                              ; preds = %583
  %587 = add nsw i32 %584, -1
  %588 = zext i32 %587 to i64
  %589 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %588
  %590 = load i8, ptr %589, align 1, !tbaa !17
  %591 = icmp eq i8 %590, 10
  %592 = zext i1 %591 to i32
  %593 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %594 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %595 = getelementptr inbounds ptr, ptr %593, i64 %594
  %596 = load ptr, ptr %595, align 8, !tbaa !5
  %597 = getelementptr inbounds %struct.yy_buffer_state, ptr %596, i64 0, i32 7
  store i32 %592, ptr %597, align 8, !tbaa !18
  br label %598

598:                                              ; preds = %586, %583
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  %599 = load ptr, ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, align 8, !tbaa !33
  %600 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef %599, i32 noundef -1)
  store ptr %600, ptr @yylval, align 8, !tbaa !17
  br label %2275

601:                                              ; preds = %346
  %602 = load i32, ptr @yyleng, align 4, !tbaa !9
  %603 = icmp sgt i32 %602, 0
  br i1 %603, label %604, label %616

604:                                              ; preds = %601
  %605 = add nsw i32 %602, -1
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %606
  %608 = load i8, ptr %607, align 1, !tbaa !17
  %609 = icmp eq i8 %608, 10
  %610 = zext i1 %609 to i32
  %611 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %612 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %613 = getelementptr inbounds ptr, ptr %611, i64 %612
  %614 = load ptr, ptr %613, align 8, !tbaa !5
  %615 = getelementptr inbounds %struct.yy_buffer_state, ptr %614, i64 0, i32 7
  store i32 %610, ptr %615, align 8, !tbaa !18
  br label %616

616:                                              ; preds = %604, %601
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %617 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %618 = tail call fastcc noundef i32 @_ZN12_GLOBAL__N_111eat_commentEPN2kc20impl_casestring__StrE(ptr noundef %617)
  %619 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %618)
  store ptr %619, ptr @yylval, align 8, !tbaa !17
  br label %2275

620:                                              ; preds = %346
  %621 = load i32, ptr @yyleng, align 4, !tbaa !9
  %622 = icmp sgt i32 %621, 0
  br i1 %622, label %623, label %635

623:                                              ; preds = %620
  %624 = add nsw i32 %621, -1
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %625
  %627 = load i8, ptr %626, align 1, !tbaa !17
  %628 = icmp eq i8 %627, 10
  %629 = zext i1 %628 to i32
  %630 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %631 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %632 = getelementptr inbounds ptr, ptr %630, i64 %631
  %633 = load ptr, ptr %632, align 8, !tbaa !5
  %634 = getelementptr inbounds %struct.yy_buffer_state, ptr %633, i64 0, i32 7
  store i32 %629, ptr %634, align 8, !tbaa !18
  br label %635

635:                                              ; preds = %623, %620
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %636 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %637 = tail call fastcc noundef i32 @_ZN12_GLOBAL__N_111eat_commentEPN2kc20impl_casestring__StrE(ptr noundef %636)
  br label %1812

638:                                              ; preds = %346
  %639 = load i32, ptr @yyleng, align 4, !tbaa !9
  %640 = icmp sgt i32 %639, 0
  br i1 %640, label %641, label %653

641:                                              ; preds = %638
  %642 = add nsw i32 %639, -1
  %643 = zext i32 %642 to i64
  %644 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %643
  %645 = load i8, ptr %644, align 1, !tbaa !17
  %646 = icmp eq i8 %645, 10
  %647 = zext i1 %646 to i32
  %648 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %649 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %650 = getelementptr inbounds ptr, ptr %648, i64 %649
  %651 = load ptr, ptr %650, align 8, !tbaa !5
  %652 = getelementptr inbounds %struct.yy_buffer_state, ptr %651, i64 0, i32 7
  store i32 %647, ptr %652, align 8, !tbaa !18
  br label %653

653:                                              ; preds = %641, %638
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  tail call fastcc void @_ZN12_GLOBAL__N_116eat_line_commentEv()
  %654 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef 1)
  store ptr %654, ptr @yylval, align 8, !tbaa !17
  br label %2275

655:                                              ; preds = %346
  %656 = load i32, ptr @yyleng, align 4, !tbaa !9
  %657 = icmp sgt i32 %656, 0
  br i1 %657, label %658, label %670

658:                                              ; preds = %655
  %659 = add nsw i32 %656, -1
  %660 = zext i32 %659 to i64
  %661 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %660
  %662 = load i8, ptr %661, align 1, !tbaa !17
  %663 = icmp eq i8 %662, 10
  %664 = zext i1 %663 to i32
  %665 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %666 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %667 = getelementptr inbounds ptr, ptr %665, i64 %666
  %668 = load ptr, ptr %667, align 8, !tbaa !5
  %669 = getelementptr inbounds %struct.yy_buffer_state, ptr %668, i64 0, i32 7
  store i32 %664, ptr %669, align 8, !tbaa !18
  br label %670

670:                                              ; preds = %658, %655
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  tail call fastcc void @_ZN12_GLOBAL__N_116eat_line_commentEv()
  br label %1812

671:                                              ; preds = %346
  %672 = load i32, ptr @yyleng, align 4, !tbaa !9
  %673 = icmp sgt i32 %672, 0
  br i1 %673, label %674, label %686

674:                                              ; preds = %671
  %675 = add nsw i32 %672, -1
  %676 = zext i32 %675 to i64
  %677 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %676
  %678 = load i8, ptr %677, align 1, !tbaa !17
  %679 = icmp eq i8 %678, 10
  %680 = zext i1 %679 to i32
  %681 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %682 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %683 = getelementptr inbounds ptr, ptr %681, i64 %682
  %684 = load ptr, ptr %683, align 8, !tbaa !5
  %685 = getelementptr inbounds %struct.yy_buffer_state, ptr %684, i64 0, i32 7
  store i32 %680, ptr %685, align 8, !tbaa !18
  br label %686

686:                                              ; preds = %674, %671
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

687:                                              ; preds = %346
  %688 = load i32, ptr @yyleng, align 4, !tbaa !9
  %689 = icmp sgt i32 %688, 0
  br i1 %689, label %690, label %702

690:                                              ; preds = %687
  %691 = add nsw i32 %688, -1
  %692 = zext i32 %691 to i64
  %693 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %692
  %694 = load i8, ptr %693, align 1, !tbaa !17
  %695 = icmp eq i8 %694, 10
  %696 = zext i1 %695 to i32
  %697 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %698 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %699 = getelementptr inbounds ptr, ptr %697, i64 %698
  %700 = load ptr, ptr %699, align 8, !tbaa !5
  %701 = getelementptr inbounds %struct.yy_buffer_state, ptr %700, i64 0, i32 7
  store i32 %696, ptr %701, align 8, !tbaa !18
  br label %702

702:                                              ; preds = %690, %687
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

703:                                              ; preds = %346
  %704 = load i32, ptr @yyleng, align 4, !tbaa !9
  %705 = icmp sgt i32 %704, 0
  br i1 %705, label %706, label %718

706:                                              ; preds = %703
  %707 = add nsw i32 %704, -1
  %708 = zext i32 %707 to i64
  %709 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %708
  %710 = load i8, ptr %709, align 1, !tbaa !17
  %711 = icmp eq i8 %710, 10
  %712 = zext i1 %711 to i32
  %713 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %714 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %715 = getelementptr inbounds ptr, ptr %713, i64 %714
  %716 = load ptr, ptr %715, align 8, !tbaa !5
  %717 = getelementptr inbounds %struct.yy_buffer_state, ptr %716, i64 0, i32 7
  store i32 %712, ptr %717, align 8, !tbaa !18
  br label %718

718:                                              ; preds = %706, %703
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

719:                                              ; preds = %346
  %720 = load i32, ptr @yyleng, align 4, !tbaa !9
  %721 = icmp sgt i32 %720, 0
  br i1 %721, label %722, label %734

722:                                              ; preds = %719
  %723 = add nsw i32 %720, -1
  %724 = zext i32 %723 to i64
  %725 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %724
  %726 = load i8, ptr %725, align 1, !tbaa !17
  %727 = icmp eq i8 %726, 10
  %728 = zext i1 %727 to i32
  %729 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %730 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %731 = getelementptr inbounds ptr, ptr %729, i64 %730
  %732 = load ptr, ptr %731, align 8, !tbaa !5
  %733 = getelementptr inbounds %struct.yy_buffer_state, ptr %732, i64 0, i32 7
  store i32 %728, ptr %733, align 8, !tbaa !18
  br label %734

734:                                              ; preds = %722, %719
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %735 = tail call i64 @strtol(ptr nocapture noundef nonnull @yytext, ptr noundef null, i32 noundef 10) #33
  %736 = trunc i64 %735 to i32
  %737 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %736)
  store ptr %737, ptr @yylval, align 8, !tbaa !17
  br label %2275

738:                                              ; preds = %346
  %739 = load i32, ptr @yyleng, align 4, !tbaa !9
  %740 = icmp sgt i32 %739, 0
  br i1 %740, label %741, label %753

741:                                              ; preds = %738
  %742 = add nsw i32 %739, -1
  %743 = zext i32 %742 to i64
  %744 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %743
  %745 = load i8, ptr %744, align 1, !tbaa !17
  %746 = icmp eq i8 %745, 10
  %747 = zext i1 %746 to i32
  %748 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %749 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %750 = getelementptr inbounds ptr, ptr %748, i64 %749
  %751 = load ptr, ptr %750, align 8, !tbaa !5
  %752 = getelementptr inbounds %struct.yy_buffer_state, ptr %751, i64 0, i32 7
  store i32 %747, ptr %752, align 8, !tbaa !18
  br label %753

753:                                              ; preds = %741, %738
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

754:                                              ; preds = %346
  %755 = load i32, ptr @yyleng, align 4, !tbaa !9
  %756 = icmp sgt i32 %755, 0
  br i1 %756, label %757, label %769

757:                                              ; preds = %754
  %758 = add nsw i32 %755, -1
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %759
  %761 = load i8, ptr %760, align 1, !tbaa !17
  %762 = icmp eq i8 %761, 10
  %763 = zext i1 %762 to i32
  %764 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %765 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %766 = getelementptr inbounds ptr, ptr %764, i64 %765
  %767 = load ptr, ptr %766, align 8, !tbaa !5
  %768 = getelementptr inbounds %struct.yy_buffer_state, ptr %767, i64 0, i32 7
  store i32 %763, ptr %768, align 8, !tbaa !18
  br label %769

769:                                              ; preds = %757, %754
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

770:                                              ; preds = %346
  %771 = load i32, ptr @yyleng, align 4, !tbaa !9
  %772 = icmp sgt i32 %771, 0
  br i1 %772, label %773, label %785

773:                                              ; preds = %770
  %774 = add nsw i32 %771, -1
  %775 = zext i32 %774 to i64
  %776 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %775
  %777 = load i8, ptr %776, align 1, !tbaa !17
  %778 = icmp eq i8 %777, 10
  %779 = zext i1 %778 to i32
  %780 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %781 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %782 = getelementptr inbounds ptr, ptr %780, i64 %781
  %783 = load ptr, ptr %782, align 8, !tbaa !5
  %784 = getelementptr inbounds %struct.yy_buffer_state, ptr %783, i64 0, i32 7
  store i32 %779, ptr %784, align 8, !tbaa !18
  br label %785

785:                                              ; preds = %773, %770
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

786:                                              ; preds = %346
  %787 = load i32, ptr @yyleng, align 4, !tbaa !9
  %788 = icmp sgt i32 %787, 0
  br i1 %788, label %789, label %801

789:                                              ; preds = %786
  %790 = add nsw i32 %787, -1
  %791 = zext i32 %790 to i64
  %792 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %791
  %793 = load i8, ptr %792, align 1, !tbaa !17
  %794 = icmp eq i8 %793, 10
  %795 = zext i1 %794 to i32
  %796 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %797 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %798 = getelementptr inbounds ptr, ptr %796, i64 %797
  %799 = load ptr, ptr %798, align 8, !tbaa !5
  %800 = getelementptr inbounds %struct.yy_buffer_state, ptr %799, i64 0, i32 7
  store i32 %795, ptr %800, align 8, !tbaa !18
  br label %801

801:                                              ; preds = %789, %786
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

802:                                              ; preds = %346
  %803 = load i32, ptr @yyleng, align 4, !tbaa !9
  %804 = icmp sgt i32 %803, 0
  br i1 %804, label %805, label %817

805:                                              ; preds = %802
  %806 = add nsw i32 %803, -1
  %807 = zext i32 %806 to i64
  %808 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %807
  %809 = load i8, ptr %808, align 1, !tbaa !17
  %810 = icmp eq i8 %809, 10
  %811 = zext i1 %810 to i32
  %812 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %813 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %814 = getelementptr inbounds ptr, ptr %812, i64 %813
  %815 = load ptr, ptr %814, align 8, !tbaa !5
  %816 = getelementptr inbounds %struct.yy_buffer_state, ptr %815, i64 0, i32 7
  store i32 %811, ptr %816, align 8, !tbaa !18
  br label %817

817:                                              ; preds = %805, %802
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

818:                                              ; preds = %346
  %819 = load i32, ptr @yyleng, align 4, !tbaa !9
  %820 = icmp sgt i32 %819, 0
  br i1 %820, label %821, label %833

821:                                              ; preds = %818
  %822 = add nsw i32 %819, -1
  %823 = zext i32 %822 to i64
  %824 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %823
  %825 = load i8, ptr %824, align 1, !tbaa !17
  %826 = icmp eq i8 %825, 10
  %827 = zext i1 %826 to i32
  %828 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %829 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %830 = getelementptr inbounds ptr, ptr %828, i64 %829
  %831 = load ptr, ptr %830, align 8, !tbaa !5
  %832 = getelementptr inbounds %struct.yy_buffer_state, ptr %831, i64 0, i32 7
  store i32 %827, ptr %832, align 8, !tbaa !18
  br label %833

833:                                              ; preds = %821, %818
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

834:                                              ; preds = %346
  %835 = load i32, ptr @yyleng, align 4, !tbaa !9
  %836 = icmp sgt i32 %835, 0
  br i1 %836, label %837, label %849

837:                                              ; preds = %834
  %838 = add nsw i32 %835, -1
  %839 = zext i32 %838 to i64
  %840 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %839
  %841 = load i8, ptr %840, align 1, !tbaa !17
  %842 = icmp eq i8 %841, 10
  %843 = zext i1 %842 to i32
  %844 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %845 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %846 = getelementptr inbounds ptr, ptr %844, i64 %845
  %847 = load ptr, ptr %846, align 8, !tbaa !5
  %848 = getelementptr inbounds %struct.yy_buffer_state, ptr %847, i64 0, i32 7
  store i32 %843, ptr %848, align 8, !tbaa !18
  br label %849

849:                                              ; preds = %837, %834
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

850:                                              ; preds = %346
  %851 = load i32, ptr @yyleng, align 4, !tbaa !9
  %852 = icmp sgt i32 %851, 0
  br i1 %852, label %853, label %865

853:                                              ; preds = %850
  %854 = add nsw i32 %851, -1
  %855 = zext i32 %854 to i64
  %856 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %855
  %857 = load i8, ptr %856, align 1, !tbaa !17
  %858 = icmp eq i8 %857, 10
  %859 = zext i1 %858 to i32
  %860 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %861 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %862 = getelementptr inbounds ptr, ptr %860, i64 %861
  %863 = load ptr, ptr %862, align 8, !tbaa !5
  %864 = getelementptr inbounds %struct.yy_buffer_state, ptr %863, i64 0, i32 7
  store i32 %859, ptr %864, align 8, !tbaa !18
  br label %865

865:                                              ; preds = %853, %850
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

866:                                              ; preds = %346
  %867 = load i32, ptr @yyleng, align 4, !tbaa !9
  %868 = icmp sgt i32 %867, 0
  br i1 %868, label %869, label %881

869:                                              ; preds = %866
  %870 = add nsw i32 %867, -1
  %871 = zext i32 %870 to i64
  %872 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %871
  %873 = load i8, ptr %872, align 1, !tbaa !17
  %874 = icmp eq i8 %873, 10
  %875 = zext i1 %874 to i32
  %876 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %877 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %878 = getelementptr inbounds ptr, ptr %876, i64 %877
  %879 = load ptr, ptr %878, align 8, !tbaa !5
  %880 = getelementptr inbounds %struct.yy_buffer_state, ptr %879, i64 0, i32 7
  store i32 %875, ptr %880, align 8, !tbaa !18
  br label %881

881:                                              ; preds = %869, %866
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

882:                                              ; preds = %346
  %883 = load i32, ptr @yyleng, align 4, !tbaa !9
  %884 = icmp sgt i32 %883, 0
  br i1 %884, label %885, label %897

885:                                              ; preds = %882
  %886 = add nsw i32 %883, -1
  %887 = zext i32 %886 to i64
  %888 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %887
  %889 = load i8, ptr %888, align 1, !tbaa !17
  %890 = icmp eq i8 %889, 10
  %891 = zext i1 %890 to i32
  %892 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %893 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %894 = getelementptr inbounds ptr, ptr %892, i64 %893
  %895 = load ptr, ptr %894, align 8, !tbaa !5
  %896 = getelementptr inbounds %struct.yy_buffer_state, ptr %895, i64 0, i32 7
  store i32 %891, ptr %896, align 8, !tbaa !18
  br label %897

897:                                              ; preds = %885, %882
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

898:                                              ; preds = %346
  %899 = load i32, ptr @yyleng, align 4, !tbaa !9
  %900 = icmp sgt i32 %899, 0
  br i1 %900, label %901, label %913

901:                                              ; preds = %898
  %902 = add nsw i32 %899, -1
  %903 = zext i32 %902 to i64
  %904 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %903
  %905 = load i8, ptr %904, align 1, !tbaa !17
  %906 = icmp eq i8 %905, 10
  %907 = zext i1 %906 to i32
  %908 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %909 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %910 = getelementptr inbounds ptr, ptr %908, i64 %909
  %911 = load ptr, ptr %910, align 8, !tbaa !5
  %912 = getelementptr inbounds %struct.yy_buffer_state, ptr %911, i64 0, i32 7
  store i32 %907, ptr %912, align 8, !tbaa !18
  br label %913

913:                                              ; preds = %901, %898
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 17, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %2275

914:                                              ; preds = %346
  %915 = load i32, ptr @yyleng, align 4, !tbaa !9
  %916 = icmp sgt i32 %915, 0
  br i1 %916, label %917, label %929

917:                                              ; preds = %914
  %918 = add nsw i32 %915, -1
  %919 = zext i32 %918 to i64
  %920 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %919
  %921 = load i8, ptr %920, align 1, !tbaa !17
  %922 = icmp eq i8 %921, 10
  %923 = zext i1 %922 to i32
  %924 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %925 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %926 = getelementptr inbounds ptr, ptr %924, i64 %925
  %927 = load ptr, ptr %926, align 8, !tbaa !5
  %928 = getelementptr inbounds %struct.yy_buffer_state, ptr %927, i64 0, i32 7
  store i32 %923, ptr %928, align 8, !tbaa !18
  br label %929

929:                                              ; preds = %917, %914
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

930:                                              ; preds = %346
  %931 = load i32, ptr @yyleng, align 4, !tbaa !9
  %932 = icmp sgt i32 %931, 0
  br i1 %932, label %933, label %945

933:                                              ; preds = %930
  %934 = add nsw i32 %931, -1
  %935 = zext i32 %934 to i64
  %936 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %935
  %937 = load i8, ptr %936, align 1, !tbaa !17
  %938 = icmp eq i8 %937, 10
  %939 = zext i1 %938 to i32
  %940 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %941 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %942 = getelementptr inbounds ptr, ptr %940, i64 %941
  %943 = load ptr, ptr %942, align 8, !tbaa !5
  %944 = getelementptr inbounds %struct.yy_buffer_state, ptr %943, i64 0, i32 7
  store i32 %939, ptr %944, align 8, !tbaa !18
  br label %945

945:                                              ; preds = %933, %930
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

946:                                              ; preds = %346
  %947 = load i32, ptr @yyleng, align 4, !tbaa !9
  %948 = icmp sgt i32 %947, 0
  br i1 %948, label %949, label %961

949:                                              ; preds = %946
  %950 = add nsw i32 %947, -1
  %951 = zext i32 %950 to i64
  %952 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %951
  %953 = load i8, ptr %952, align 1, !tbaa !17
  %954 = icmp eq i8 %953, 10
  %955 = zext i1 %954 to i32
  %956 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %957 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %958 = getelementptr inbounds ptr, ptr %956, i64 %957
  %959 = load ptr, ptr %958, align 8, !tbaa !5
  %960 = getelementptr inbounds %struct.yy_buffer_state, ptr %959, i64 0, i32 7
  store i32 %955, ptr %960, align 8, !tbaa !18
  br label %961

961:                                              ; preds = %949, %946
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

962:                                              ; preds = %346
  %963 = load i32, ptr @yyleng, align 4, !tbaa !9
  %964 = icmp sgt i32 %963, 0
  br i1 %964, label %965, label %977

965:                                              ; preds = %962
  %966 = add nsw i32 %963, -1
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %967
  %969 = load i8, ptr %968, align 1, !tbaa !17
  %970 = icmp eq i8 %969, 10
  %971 = zext i1 %970 to i32
  %972 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %973 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %974 = getelementptr inbounds ptr, ptr %972, i64 %973
  %975 = load ptr, ptr %974, align 8, !tbaa !5
  %976 = getelementptr inbounds %struct.yy_buffer_state, ptr %975, i64 0, i32 7
  store i32 %971, ptr %976, align 8, !tbaa !18
  br label %977

977:                                              ; preds = %965, %962
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

978:                                              ; preds = %346
  %979 = load i32, ptr @yyleng, align 4, !tbaa !9
  %980 = icmp sgt i32 %979, 0
  br i1 %980, label %981, label %993

981:                                              ; preds = %978
  %982 = add nsw i32 %979, -1
  %983 = zext i32 %982 to i64
  %984 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %983
  %985 = load i8, ptr %984, align 1, !tbaa !17
  %986 = icmp eq i8 %985, 10
  %987 = zext i1 %986 to i32
  %988 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %989 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %990 = getelementptr inbounds ptr, ptr %988, i64 %989
  %991 = load ptr, ptr %990, align 8, !tbaa !5
  %992 = getelementptr inbounds %struct.yy_buffer_state, ptr %991, i64 0, i32 7
  store i32 %987, ptr %992, align 8, !tbaa !18
  br label %993

993:                                              ; preds = %981, %978
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

994:                                              ; preds = %346
  %995 = load i32, ptr @yyleng, align 4, !tbaa !9
  %996 = icmp sgt i32 %995, 0
  br i1 %996, label %997, label %1009

997:                                              ; preds = %994
  %998 = add nsw i32 %995, -1
  %999 = zext i32 %998 to i64
  %1000 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %999
  %1001 = load i8, ptr %1000, align 1, !tbaa !17
  %1002 = icmp eq i8 %1001, 10
  %1003 = zext i1 %1002 to i32
  %1004 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1005 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1006 = getelementptr inbounds ptr, ptr %1004, i64 %1005
  %1007 = load ptr, ptr %1006, align 8, !tbaa !5
  %1008 = getelementptr inbounds %struct.yy_buffer_state, ptr %1007, i64 0, i32 7
  store i32 %1003, ptr %1008, align 8, !tbaa !18
  br label %1009

1009:                                             ; preds = %997, %994
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

1010:                                             ; preds = %346
  %1011 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1012 = icmp sgt i32 %1011, 0
  br i1 %1012, label %1013, label %1025

1013:                                             ; preds = %1010
  %1014 = add nsw i32 %1011, -1
  %1015 = zext i32 %1014 to i64
  %1016 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1015
  %1017 = load i8, ptr %1016, align 1, !tbaa !17
  %1018 = icmp eq i8 %1017, 10
  %1019 = zext i1 %1018 to i32
  %1020 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1021 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1022 = getelementptr inbounds ptr, ptr %1020, i64 %1021
  %1023 = load ptr, ptr %1022, align 8, !tbaa !5
  %1024 = getelementptr inbounds %struct.yy_buffer_state, ptr %1023, i64 0, i32 7
  store i32 %1019, ptr %1024, align 8, !tbaa !18
  br label %1025

1025:                                             ; preds = %1013, %1010
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

1026:                                             ; preds = %346
  %1027 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1029, label %1041

1029:                                             ; preds = %1026
  %1030 = add nsw i32 %1027, -1
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1031
  %1033 = load i8, ptr %1032, align 1, !tbaa !17
  %1034 = icmp eq i8 %1033, 10
  %1035 = zext i1 %1034 to i32
  %1036 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1037 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1038 = getelementptr inbounds ptr, ptr %1036, i64 %1037
  %1039 = load ptr, ptr %1038, align 8, !tbaa !5
  %1040 = getelementptr inbounds %struct.yy_buffer_state, ptr %1039, i64 0, i32 7
  store i32 %1035, ptr %1040, align 8, !tbaa !18
  br label %1041

1041:                                             ; preds = %1029, %1026
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %1812

1042:                                             ; preds = %346
  %1043 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1044 = icmp sgt i32 %1043, 0
  br i1 %1044, label %1045, label %1057

1045:                                             ; preds = %1042
  %1046 = add nsw i32 %1043, -1
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1047
  %1049 = load i8, ptr %1048, align 1, !tbaa !17
  %1050 = icmp eq i8 %1049, 10
  %1051 = zext i1 %1050 to i32
  %1052 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1053 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1054 = getelementptr inbounds ptr, ptr %1052, i64 %1053
  %1055 = load ptr, ptr %1054, align 8, !tbaa !5
  %1056 = getelementptr inbounds %struct.yy_buffer_state, ptr %1055, i64 0, i32 7
  store i32 %1051, ptr %1056, align 8, !tbaa !18
  br label %1057

1057:                                             ; preds = %1045, %1042
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  %1058 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1058, ptr @yylval, align 8, !tbaa !17
  br label %2275

1059:                                             ; preds = %346
  %1060 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1061 = icmp sgt i32 %1060, 0
  br i1 %1061, label %1062, label %1074

1062:                                             ; preds = %1059
  %1063 = add nsw i32 %1060, -1
  %1064 = zext i32 %1063 to i64
  %1065 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1064
  %1066 = load i8, ptr %1065, align 1, !tbaa !17
  %1067 = icmp eq i8 %1066, 10
  %1068 = zext i1 %1067 to i32
  %1069 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1070 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1071 = getelementptr inbounds ptr, ptr %1069, i64 %1070
  %1072 = load ptr, ptr %1071, align 8, !tbaa !5
  %1073 = getelementptr inbounds %struct.yy_buffer_state, ptr %1072, i64 0, i32 7
  store i32 %1068, ptr %1073, align 8, !tbaa !18
  br label %1074

1074:                                             ; preds = %1062, %1059
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  %1075 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1075, ptr @yylval, align 8, !tbaa !17
  br label %2275

1076:                                             ; preds = %346
  %1077 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1078 = icmp sgt i32 %1077, 0
  br i1 %1078, label %1079, label %1091

1079:                                             ; preds = %1076
  %1080 = add nsw i32 %1077, -1
  %1081 = zext i32 %1080 to i64
  %1082 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1081
  %1083 = load i8, ptr %1082, align 1, !tbaa !17
  %1084 = icmp eq i8 %1083, 10
  %1085 = zext i1 %1084 to i32
  %1086 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1087 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1088 = getelementptr inbounds ptr, ptr %1086, i64 %1087
  %1089 = load ptr, ptr %1088, align 8, !tbaa !5
  %1090 = getelementptr inbounds %struct.yy_buffer_state, ptr %1089, i64 0, i32 7
  store i32 %1085, ptr %1090, align 8, !tbaa !18
  br label %1091

1091:                                             ; preds = %1079, %1076
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1092 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1092, ptr @yylval, align 8, !tbaa !17
  br label %2275

1093:                                             ; preds = %346
  %1094 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1095 = icmp sgt i32 %1094, 0
  br i1 %1095, label %1096, label %1108

1096:                                             ; preds = %1093
  %1097 = add nsw i32 %1094, -1
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1098
  %1100 = load i8, ptr %1099, align 1, !tbaa !17
  %1101 = icmp eq i8 %1100, 10
  %1102 = zext i1 %1101 to i32
  %1103 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1104 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1105 = getelementptr inbounds ptr, ptr %1103, i64 %1104
  %1106 = load ptr, ptr %1105, align 8, !tbaa !5
  %1107 = getelementptr inbounds %struct.yy_buffer_state, ptr %1106, i64 0, i32 7
  store i32 %1102, ptr %1107, align 8, !tbaa !18
  br label %1108

1108:                                             ; preds = %1096, %1093
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1109 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1109, ptr @yylval, align 8, !tbaa !17
  br label %2275

1110:                                             ; preds = %346
  %1111 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1112 = icmp sgt i32 %1111, 0
  br i1 %1112, label %1113, label %1125

1113:                                             ; preds = %1110
  %1114 = add nsw i32 %1111, -1
  %1115 = zext i32 %1114 to i64
  %1116 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1115
  %1117 = load i8, ptr %1116, align 1, !tbaa !17
  %1118 = icmp eq i8 %1117, 10
  %1119 = zext i1 %1118 to i32
  %1120 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1121 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1122 = getelementptr inbounds ptr, ptr %1120, i64 %1121
  %1123 = load ptr, ptr %1122, align 8, !tbaa !5
  %1124 = getelementptr inbounds %struct.yy_buffer_state, ptr %1123, i64 0, i32 7
  store i32 %1119, ptr %1124, align 8, !tbaa !18
  br label %1125

1125:                                             ; preds = %1113, %1110
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1126 = tail call i64 @strtol(ptr nocapture noundef nonnull getelementptr inbounds ([8192 x i8], ptr @yytext, i64 0, i64 1), ptr noundef null, i32 noundef 10) #33
  %1127 = trunc i64 %1126 to i32
  %1128 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %1127)
  store ptr %1128, ptr @yylval, align 8, !tbaa !17
  br label %2275

1129:                                             ; preds = %346
  %1130 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1131 = icmp sgt i32 %1130, 0
  br i1 %1131, label %1132, label %1144

1132:                                             ; preds = %1129
  %1133 = add nsw i32 %1130, -1
  %1134 = zext i32 %1133 to i64
  %1135 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1134
  %1136 = load i8, ptr %1135, align 1, !tbaa !17
  %1137 = icmp eq i8 %1136, 10
  %1138 = zext i1 %1137 to i32
  %1139 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1140 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1141 = getelementptr inbounds ptr, ptr %1139, i64 %1140
  %1142 = load ptr, ptr %1141, align 8, !tbaa !5
  %1143 = getelementptr inbounds %struct.yy_buffer_state, ptr %1142, i64 0, i32 7
  store i32 %1138, ptr %1143, align 8, !tbaa !18
  br label %1144

1144:                                             ; preds = %1132, %1129
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

1145:                                             ; preds = %346
  %1146 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1147 = icmp sgt i32 %1146, 0
  br i1 %1147, label %1148, label %1160

1148:                                             ; preds = %1145
  %1149 = add nsw i32 %1146, -1
  %1150 = zext i32 %1149 to i64
  %1151 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1150
  %1152 = load i8, ptr %1151, align 1, !tbaa !17
  %1153 = icmp eq i8 %1152, 10
  %1154 = zext i1 %1153 to i32
  %1155 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1156 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1157 = getelementptr inbounds ptr, ptr %1155, i64 %1156
  %1158 = load ptr, ptr %1157, align 8, !tbaa !5
  %1159 = getelementptr inbounds %struct.yy_buffer_state, ptr %1158, i64 0, i32 7
  store i32 %1154, ptr %1159, align 8, !tbaa !18
  br label %1160

1160:                                             ; preds = %1148, %1145
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

1161:                                             ; preds = %346
  %1162 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1163 = icmp sgt i32 %1162, 0
  br i1 %1163, label %1164, label %1176

1164:                                             ; preds = %1161
  %1165 = add nsw i32 %1162, -1
  %1166 = zext i32 %1165 to i64
  %1167 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1166
  %1168 = load i8, ptr %1167, align 1, !tbaa !17
  %1169 = icmp eq i8 %1168, 10
  %1170 = zext i1 %1169 to i32
  %1171 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1172 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1173 = getelementptr inbounds ptr, ptr %1171, i64 %1172
  %1174 = load ptr, ptr %1173, align 8, !tbaa !5
  %1175 = getelementptr inbounds %struct.yy_buffer_state, ptr %1174, i64 0, i32 7
  store i32 %1170, ptr %1175, align 8, !tbaa !18
  br label %1176

1176:                                             ; preds = %1164, %1161
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1177 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1177, ptr @yylval, align 8, !tbaa !17
  br label %2275

1178:                                             ; preds = %346
  %1179 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1180 = icmp sgt i32 %1179, 0
  br i1 %1180, label %1181, label %1193

1181:                                             ; preds = %1178
  %1182 = add nsw i32 %1179, -1
  %1183 = zext i32 %1182 to i64
  %1184 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1183
  %1185 = load i8, ptr %1184, align 1, !tbaa !17
  %1186 = icmp eq i8 %1185, 10
  %1187 = zext i1 %1186 to i32
  %1188 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1189 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1190 = getelementptr inbounds ptr, ptr %1188, i64 %1189
  %1191 = load ptr, ptr %1190, align 8, !tbaa !5
  %1192 = getelementptr inbounds %struct.yy_buffer_state, ptr %1191, i64 0, i32 7
  store i32 %1187, ptr %1192, align 8, !tbaa !18
  br label %1193

1193:                                             ; preds = %1181, %1178
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1194 = load i8, ptr @yytext, align 16, !tbaa !17
  %1195 = sext i8 %1194 to i32
  br label %2275

1196:                                             ; preds = %346
  %1197 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1198 = icmp sgt i32 %1197, 0
  br i1 %1198, label %1199, label %1211

1199:                                             ; preds = %1196
  %1200 = add nsw i32 %1197, -1
  %1201 = zext i32 %1200 to i64
  %1202 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1201
  %1203 = load i8, ptr %1202, align 1, !tbaa !17
  %1204 = icmp eq i8 %1203, 10
  %1205 = zext i1 %1204 to i32
  %1206 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1207 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1208 = getelementptr inbounds ptr, ptr %1206, i64 %1207
  %1209 = load ptr, ptr %1208, align 8, !tbaa !5
  %1210 = getelementptr inbounds %struct.yy_buffer_state, ptr %1209, i64 0, i32 7
  store i32 %1205, ptr %1210, align 8, !tbaa !18
  br label %1211

1211:                                             ; preds = %1199, %1196
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1212 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.3, i32 noundef -1)
  store ptr %1212, ptr @yylval, align 8, !tbaa !17
  br label %2275

1213:                                             ; preds = %346
  %1214 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1215 = icmp sgt i32 %1214, 0
  br i1 %1215, label %1216, label %1228

1216:                                             ; preds = %1213
  %1217 = add nsw i32 %1214, -1
  %1218 = zext i32 %1217 to i64
  %1219 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1218
  %1220 = load i8, ptr %1219, align 1, !tbaa !17
  %1221 = icmp eq i8 %1220, 10
  %1222 = zext i1 %1221 to i32
  %1223 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1224 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1225 = getelementptr inbounds ptr, ptr %1223, i64 %1224
  %1226 = load ptr, ptr %1225, align 8, !tbaa !5
  %1227 = getelementptr inbounds %struct.yy_buffer_state, ptr %1226, i64 0, i32 7
  store i32 %1222, ptr %1227, align 8, !tbaa !18
  br label %1228

1228:                                             ; preds = %1216, %1213
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1229 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.4, i32 noundef -1)
  store ptr %1229, ptr @yylval, align 8, !tbaa !17
  br label %2275

1230:                                             ; preds = %346
  %1231 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1232 = icmp sgt i32 %1231, 0
  br i1 %1232, label %1233, label %1245

1233:                                             ; preds = %1230
  %1234 = add nsw i32 %1231, -1
  %1235 = zext i32 %1234 to i64
  %1236 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1235
  %1237 = load i8, ptr %1236, align 1, !tbaa !17
  %1238 = icmp eq i8 %1237, 10
  %1239 = zext i1 %1238 to i32
  %1240 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1241 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1242 = getelementptr inbounds ptr, ptr %1240, i64 %1241
  %1243 = load ptr, ptr %1242, align 8, !tbaa !5
  %1244 = getelementptr inbounds %struct.yy_buffer_state, ptr %1243, i64 0, i32 7
  store i32 %1239, ptr %1244, align 8, !tbaa !18
  br label %1245

1245:                                             ; preds = %1233, %1230
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 11, ptr @_ZL8yy_start, align 4, !tbaa !9
  %1246 = load i8, ptr @yytext, align 16, !tbaa !17
  %1247 = sext i8 %1246 to i32
  br label %2275

1248:                                             ; preds = %346
  %1249 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1250 = icmp sgt i32 %1249, 0
  br i1 %1250, label %1251, label %1263

1251:                                             ; preds = %1248
  %1252 = add nsw i32 %1249, -1
  %1253 = zext i32 %1252 to i64
  %1254 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1253
  %1255 = load i8, ptr %1254, align 1, !tbaa !17
  %1256 = icmp eq i8 %1255, 10
  %1257 = zext i1 %1256 to i32
  %1258 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1259 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1260 = getelementptr inbounds ptr, ptr %1258, i64 %1259
  %1261 = load ptr, ptr %1260, align 8, !tbaa !5
  %1262 = getelementptr inbounds %struct.yy_buffer_state, ptr %1261, i64 0, i32 7
  store i32 %1257, ptr %1262, align 8, !tbaa !18
  br label %1263

1263:                                             ; preds = %1251, %1248
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 13, ptr @_ZL8yy_start, align 4, !tbaa !9
  %1264 = load i8, ptr @yytext, align 16, !tbaa !17
  %1265 = sext i8 %1264 to i32
  br label %2275

1266:                                             ; preds = %346
  %1267 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1268 = icmp sgt i32 %1267, 0
  br i1 %1268, label %1269, label %1281

1269:                                             ; preds = %1266
  %1270 = add nsw i32 %1267, -1
  %1271 = zext i32 %1270 to i64
  %1272 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1271
  %1273 = load i8, ptr %1272, align 1, !tbaa !17
  %1274 = icmp eq i8 %1273, 10
  %1275 = zext i1 %1274 to i32
  %1276 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1277 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1278 = getelementptr inbounds ptr, ptr %1276, i64 %1277
  %1279 = load ptr, ptr %1278, align 8, !tbaa !5
  %1280 = getelementptr inbounds %struct.yy_buffer_state, ptr %1279, i64 0, i32 7
  store i32 %1275, ptr %1280, align 8, !tbaa !18
  br label %1281

1281:                                             ; preds = %1269, %1266
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  %1282 = load i8, ptr @yytext, align 16, !tbaa !17
  %1283 = sext i8 %1282 to i32
  br label %2275

1284:                                             ; preds = %346
  %1285 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1286 = icmp sgt i32 %1285, 0
  br i1 %1286, label %1287, label %1299

1287:                                             ; preds = %1284
  %1288 = add nsw i32 %1285, -1
  %1289 = zext i32 %1288 to i64
  %1290 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1289
  %1291 = load i8, ptr %1290, align 1, !tbaa !17
  %1292 = icmp eq i8 %1291, 10
  %1293 = zext i1 %1292 to i32
  %1294 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1295 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1296 = getelementptr inbounds ptr, ptr %1294, i64 %1295
  %1297 = load ptr, ptr %1296, align 8, !tbaa !5
  %1298 = getelementptr inbounds %struct.yy_buffer_state, ptr %1297, i64 0, i32 7
  store i32 %1293, ptr %1298, align 8, !tbaa !18
  br label %1299

1299:                                             ; preds = %1287, %1284
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1300 = load i8, ptr @yytext, align 16, !tbaa !17
  %1301 = sext i8 %1300 to i32
  br label %2275

1302:                                             ; preds = %346
  %1303 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1304 = icmp sgt i32 %1303, 0
  br i1 %1304, label %1305, label %1317

1305:                                             ; preds = %1302
  %1306 = add nsw i32 %1303, -1
  %1307 = zext i32 %1306 to i64
  %1308 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1307
  %1309 = load i8, ptr %1308, align 1, !tbaa !17
  %1310 = icmp eq i8 %1309, 10
  %1311 = zext i1 %1310 to i32
  %1312 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1313 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1314 = getelementptr inbounds ptr, ptr %1312, i64 %1313
  %1315 = load ptr, ptr %1314, align 8, !tbaa !5
  %1316 = getelementptr inbounds %struct.yy_buffer_state, ptr %1315, i64 0, i32 7
  store i32 %1311, ptr %1316, align 8, !tbaa !18
  br label %1317

1317:                                             ; preds = %1305, %1302
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1318 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %1319 = add nsw i32 %1318, 1
  store i32 %1319, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %1320 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.5, i32 noundef -1)
  store ptr %1320, ptr @yylval, align 8, !tbaa !17
  %1321 = load i8, ptr @yytext, align 16, !tbaa !17
  %1322 = sext i8 %1321 to i32
  br label %2275

1323:                                             ; preds = %346
  %1324 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1325 = icmp sgt i32 %1324, 0
  br i1 %1325, label %1326, label %1338

1326:                                             ; preds = %1323
  %1327 = add nsw i32 %1324, -1
  %1328 = zext i32 %1327 to i64
  %1329 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1328
  %1330 = load i8, ptr %1329, align 1, !tbaa !17
  %1331 = icmp eq i8 %1330, 10
  %1332 = zext i1 %1331 to i32
  %1333 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1334 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1335 = getelementptr inbounds ptr, ptr %1333, i64 %1334
  %1336 = load ptr, ptr %1335, align 8, !tbaa !5
  %1337 = getelementptr inbounds %struct.yy_buffer_state, ptr %1336, i64 0, i32 7
  store i32 %1332, ptr %1337, align 8, !tbaa !18
  br label %1338

1338:                                             ; preds = %1326, %1323
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1339 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %1340 = icmp eq i32 %1339, 0
  br i1 %1340, label %1341, label %1344

1341:                                             ; preds = %1338
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  %1342 = load i8, ptr @yytext, align 16, !tbaa !17
  %1343 = sext i8 %1342 to i32
  br label %2275

1344:                                             ; preds = %1338
  %1345 = add nsw i32 %1339, -1
  store i32 %1345, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %1346 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.6, i32 noundef -1)
  store ptr %1346, ptr @yylval, align 8, !tbaa !17
  %1347 = load i8, ptr @yytext, align 16, !tbaa !17
  %1348 = sext i8 %1347 to i32
  br label %2275

1349:                                             ; preds = %346
  %1350 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1351 = icmp sgt i32 %1350, 0
  br i1 %1351, label %1352, label %1364

1352:                                             ; preds = %1349
  %1353 = add nsw i32 %1350, -1
  %1354 = zext i32 %1353 to i64
  %1355 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1354
  %1356 = load i8, ptr %1355, align 1, !tbaa !17
  %1357 = icmp eq i8 %1356, 10
  %1358 = zext i1 %1357 to i32
  %1359 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1360 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1361 = getelementptr inbounds ptr, ptr %1359, i64 %1360
  %1362 = load ptr, ptr %1361, align 8, !tbaa !5
  %1363 = getelementptr inbounds %struct.yy_buffer_state, ptr %1362, i64 0, i32 7
  store i32 %1358, ptr %1363, align 8, !tbaa !18
  br label %1364

1364:                                             ; preds = %1352, %1349
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1365 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %1366 = add nsw i32 %1365, 1
  store i32 %1366, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %1367 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.7, i32 noundef -1)
  store ptr %1367, ptr @yylval, align 8, !tbaa !17
  %1368 = load i8, ptr @yytext, align 16, !tbaa !17
  %1369 = sext i8 %1368 to i32
  br label %2275

1370:                                             ; preds = %346
  %1371 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1372 = icmp sgt i32 %1371, 0
  br i1 %1372, label %1373, label %1385

1373:                                             ; preds = %1370
  %1374 = add nsw i32 %1371, -1
  %1375 = zext i32 %1374 to i64
  %1376 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1375
  %1377 = load i8, ptr %1376, align 1, !tbaa !17
  %1378 = icmp eq i8 %1377, 10
  %1379 = zext i1 %1378 to i32
  %1380 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1381 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1382 = getelementptr inbounds ptr, ptr %1380, i64 %1381
  %1383 = load ptr, ptr %1382, align 8, !tbaa !5
  %1384 = getelementptr inbounds %struct.yy_buffer_state, ptr %1383, i64 0, i32 7
  store i32 %1379, ptr %1384, align 8, !tbaa !18
  br label %1385

1385:                                             ; preds = %1373, %1370
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1386 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %1387 = icmp eq i32 %1386, 0
  br i1 %1387, label %1388, label %1391

1388:                                             ; preds = %1385
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  %1389 = load i8, ptr @yytext, align 16, !tbaa !17
  %1390 = sext i8 %1389 to i32
  br label %2275

1391:                                             ; preds = %1385
  %1392 = add nsw i32 %1386, -1
  store i32 %1392, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %1393 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.8, i32 noundef -1)
  store ptr %1393, ptr @yylval, align 8, !tbaa !17
  %1394 = load i8, ptr @yytext, align 16, !tbaa !17
  %1395 = sext i8 %1394 to i32
  br label %2275

1396:                                             ; preds = %346
  %1397 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1398 = icmp sgt i32 %1397, 0
  br i1 %1398, label %1399, label %1411

1399:                                             ; preds = %1396
  %1400 = add nsw i32 %1397, -1
  %1401 = zext i32 %1400 to i64
  %1402 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1401
  %1403 = load i8, ptr %1402, align 1, !tbaa !17
  %1404 = icmp eq i8 %1403, 10
  %1405 = zext i1 %1404 to i32
  %1406 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1407 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1408 = getelementptr inbounds ptr, ptr %1406, i64 %1407
  %1409 = load ptr, ptr %1408, align 8, !tbaa !5
  %1410 = getelementptr inbounds %struct.yy_buffer_state, ptr %1409, i64 0, i32 7
  store i32 %1405, ptr %1410, align 8, !tbaa !18
  br label %1411

1411:                                             ; preds = %1399, %1396
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1412 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1412, ptr @yylval, align 8, !tbaa !17
  br label %2275

1413:                                             ; preds = %346
  %1414 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1415 = icmp sgt i32 %1414, 0
  br i1 %1415, label %1416, label %1428

1416:                                             ; preds = %1413
  %1417 = add nsw i32 %1414, -1
  %1418 = zext i32 %1417 to i64
  %1419 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1418
  %1420 = load i8, ptr %1419, align 1, !tbaa !17
  %1421 = icmp eq i8 %1420, 10
  %1422 = zext i1 %1421 to i32
  %1423 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1424 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1425 = getelementptr inbounds ptr, ptr %1423, i64 %1424
  %1426 = load ptr, ptr %1425, align 8, !tbaa !5
  %1427 = getelementptr inbounds %struct.yy_buffer_state, ptr %1426, i64 0, i32 7
  store i32 %1422, ptr %1427, align 8, !tbaa !18
  br label %1428

1428:                                             ; preds = %1416, %1413
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 9, ptr @_ZL8yy_start, align 4, !tbaa !9
  %1429 = load i8, ptr @yytext, align 16, !tbaa !17
  %1430 = sext i8 %1429 to i32
  br label %2275

1431:                                             ; preds = %346
  %1432 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1433 = icmp sgt i32 %1432, 0
  br i1 %1433, label %1434, label %1446

1434:                                             ; preds = %1431
  %1435 = add nsw i32 %1432, -1
  %1436 = zext i32 %1435 to i64
  %1437 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1436
  %1438 = load i8, ptr %1437, align 1, !tbaa !17
  %1439 = icmp eq i8 %1438, 10
  %1440 = zext i1 %1439 to i32
  %1441 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1442 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1443 = getelementptr inbounds ptr, ptr %1441, i64 %1442
  %1444 = load ptr, ptr %1443, align 8, !tbaa !5
  %1445 = getelementptr inbounds %struct.yy_buffer_state, ptr %1444, i64 0, i32 7
  store i32 %1440, ptr %1445, align 8, !tbaa !18
  br label %1446

1446:                                             ; preds = %1434, %1431
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1447 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.9, i32 noundef -1)
  store ptr %1447, ptr @yylval, align 8, !tbaa !17
  br label %2275

1448:                                             ; preds = %346
  %1449 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1450 = icmp sgt i32 %1449, 0
  br i1 %1450, label %1451, label %1463

1451:                                             ; preds = %1448
  %1452 = add nsw i32 %1449, -1
  %1453 = zext i32 %1452 to i64
  %1454 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1453
  %1455 = load i8, ptr %1454, align 1, !tbaa !17
  %1456 = icmp eq i8 %1455, 10
  %1457 = zext i1 %1456 to i32
  %1458 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1459 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1460 = getelementptr inbounds ptr, ptr %1458, i64 %1459
  %1461 = load ptr, ptr %1460, align 8, !tbaa !5
  %1462 = getelementptr inbounds %struct.yy_buffer_state, ptr %1461, i64 0, i32 7
  store i32 %1457, ptr %1462, align 8, !tbaa !18
  br label %1463

1463:                                             ; preds = %1451, %1448
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 9, ptr @_ZL8yy_start, align 4, !tbaa !9
  %1464 = load i8, ptr @yytext, align 16, !tbaa !17
  %1465 = sext i8 %1464 to i32
  br label %2275

1466:                                             ; preds = %346
  %1467 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1468 = icmp sgt i32 %1467, 0
  br i1 %1468, label %1469, label %1481

1469:                                             ; preds = %1466
  %1470 = add nsw i32 %1467, -1
  %1471 = zext i32 %1470 to i64
  %1472 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1471
  %1473 = load i8, ptr %1472, align 1, !tbaa !17
  %1474 = icmp eq i8 %1473, 10
  %1475 = zext i1 %1474 to i32
  %1476 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1477 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1478 = getelementptr inbounds ptr, ptr %1476, i64 %1477
  %1479 = load ptr, ptr %1478, align 8, !tbaa !5
  %1480 = getelementptr inbounds %struct.yy_buffer_state, ptr %1479, i64 0, i32 7
  store i32 %1475, ptr %1480, align 8, !tbaa !18
  br label %1481

1481:                                             ; preds = %1469, %1466
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1482 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.10, i32 noundef -1)
  store ptr %1482, ptr @yylval, align 8, !tbaa !17
  br label %2275

1483:                                             ; preds = %346
  %1484 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1485 = icmp sgt i32 %1484, 0
  br i1 %1485, label %1486, label %1498

1486:                                             ; preds = %1483
  %1487 = add nsw i32 %1484, -1
  %1488 = zext i32 %1487 to i64
  %1489 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1488
  %1490 = load i8, ptr %1489, align 1, !tbaa !17
  %1491 = icmp eq i8 %1490, 10
  %1492 = zext i1 %1491 to i32
  %1493 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1494 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1495 = getelementptr inbounds ptr, ptr %1493, i64 %1494
  %1496 = load ptr, ptr %1495, align 8, !tbaa !5
  %1497 = getelementptr inbounds %struct.yy_buffer_state, ptr %1496, i64 0, i32 7
  store i32 %1492, ptr %1497, align 8, !tbaa !18
  br label %1498

1498:                                             ; preds = %1486, %1483
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1499 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1499, ptr @yylval, align 8, !tbaa !17
  br label %2275

1500:                                             ; preds = %346
  %1501 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1502 = icmp sgt i32 %1501, 0
  br i1 %1502, label %1503, label %1515

1503:                                             ; preds = %1500
  %1504 = add nsw i32 %1501, -1
  %1505 = zext i32 %1504 to i64
  %1506 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1505
  %1507 = load i8, ptr %1506, align 1, !tbaa !17
  %1508 = icmp eq i8 %1507, 10
  %1509 = zext i1 %1508 to i32
  %1510 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1511 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1512 = getelementptr inbounds ptr, ptr %1510, i64 %1511
  %1513 = load ptr, ptr %1512, align 8, !tbaa !5
  %1514 = getelementptr inbounds %struct.yy_buffer_state, ptr %1513, i64 0, i32 7
  store i32 %1509, ptr %1514, align 8, !tbaa !18
  br label %1515

1515:                                             ; preds = %1503, %1500
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1516 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.11, i32 noundef -1)
  store ptr %1516, ptr @yylval, align 8, !tbaa !17
  br label %2275

1517:                                             ; preds = %346
  %1518 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1519 = icmp sgt i32 %1518, 0
  br i1 %1519, label %1520, label %1532

1520:                                             ; preds = %1517
  %1521 = add nsw i32 %1518, -1
  %1522 = zext i32 %1521 to i64
  %1523 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1522
  %1524 = load i8, ptr %1523, align 1, !tbaa !17
  %1525 = icmp eq i8 %1524, 10
  %1526 = zext i1 %1525 to i32
  %1527 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1528 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1529 = getelementptr inbounds ptr, ptr %1527, i64 %1528
  %1530 = load ptr, ptr %1529, align 8, !tbaa !5
  %1531 = getelementptr inbounds %struct.yy_buffer_state, ptr %1530, i64 0, i32 7
  store i32 %1526, ptr %1531, align 8, !tbaa !18
  br label %1532

1532:                                             ; preds = %1520, %1517
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1533 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.4, i32 noundef -1)
  store ptr %1533, ptr @yylval, align 8, !tbaa !17
  br label %2275

1534:                                             ; preds = %346
  %1535 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1536 = icmp sgt i32 %1535, 0
  br i1 %1536, label %1537, label %1549

1537:                                             ; preds = %1534
  %1538 = add nsw i32 %1535, -1
  %1539 = zext i32 %1538 to i64
  %1540 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1539
  %1541 = load i8, ptr %1540, align 1, !tbaa !17
  %1542 = icmp eq i8 %1541, 10
  %1543 = zext i1 %1542 to i32
  %1544 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1545 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1546 = getelementptr inbounds ptr, ptr %1544, i64 %1545
  %1547 = load ptr, ptr %1546, align 8, !tbaa !5
  %1548 = getelementptr inbounds %struct.yy_buffer_state, ptr %1547, i64 0, i32 7
  store i32 %1543, ptr %1548, align 8, !tbaa !18
  br label %1549

1549:                                             ; preds = %1537, %1534
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1550 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.3, i32 noundef -1)
  store ptr %1550, ptr @yylval, align 8, !tbaa !17
  br label %2275

1551:                                             ; preds = %346
  %1552 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1553 = icmp sgt i32 %1552, 0
  br i1 %1553, label %1554, label %1566

1554:                                             ; preds = %1551
  %1555 = add nsw i32 %1552, -1
  %1556 = zext i32 %1555 to i64
  %1557 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1556
  %1558 = load i8, ptr %1557, align 1, !tbaa !17
  %1559 = icmp eq i8 %1558, 10
  %1560 = zext i1 %1559 to i32
  %1561 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1562 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1563 = getelementptr inbounds ptr, ptr %1561, i64 %1562
  %1564 = load ptr, ptr %1563, align 8, !tbaa !5
  %1565 = getelementptr inbounds %struct.yy_buffer_state, ptr %1564, i64 0, i32 7
  store i32 %1560, ptr %1565, align 8, !tbaa !18
  br label %1566

1566:                                             ; preds = %1554, %1551
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1567 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.12, i32 noundef -1)
  store ptr %1567, ptr @yylval, align 8, !tbaa !17
  br label %2275

1568:                                             ; preds = %346
  %1569 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1570 = icmp sgt i32 %1569, 0
  br i1 %1570, label %1571, label %1583

1571:                                             ; preds = %1568
  %1572 = add nsw i32 %1569, -1
  %1573 = zext i32 %1572 to i64
  %1574 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1573
  %1575 = load i8, ptr %1574, align 1, !tbaa !17
  %1576 = icmp eq i8 %1575, 10
  %1577 = zext i1 %1576 to i32
  %1578 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1579 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1580 = getelementptr inbounds ptr, ptr %1578, i64 %1579
  %1581 = load ptr, ptr %1580, align 8, !tbaa !5
  %1582 = getelementptr inbounds %struct.yy_buffer_state, ptr %1581, i64 0, i32 7
  store i32 %1577, ptr %1582, align 8, !tbaa !18
  br label %1583

1583:                                             ; preds = %1571, %1568
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1584 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.13, i32 noundef -1)
  store ptr %1584, ptr @yylval, align 8, !tbaa !17
  br label %2275

1585:                                             ; preds = %346
  %1586 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1587 = icmp sgt i32 %1586, 0
  br i1 %1587, label %1588, label %1600

1588:                                             ; preds = %1585
  %1589 = add nsw i32 %1586, -1
  %1590 = zext i32 %1589 to i64
  %1591 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1590
  %1592 = load i8, ptr %1591, align 1, !tbaa !17
  %1593 = icmp eq i8 %1592, 10
  %1594 = zext i1 %1593 to i32
  %1595 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1596 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1597 = getelementptr inbounds ptr, ptr %1595, i64 %1596
  %1598 = load ptr, ptr %1597, align 8, !tbaa !5
  %1599 = getelementptr inbounds %struct.yy_buffer_state, ptr %1598, i64 0, i32 7
  store i32 %1594, ptr %1599, align 8, !tbaa !18
  br label %1600

1600:                                             ; preds = %1588, %1585
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1601 = load i16, ptr @yytext, align 16
  %1602 = icmp eq i16 %1601, 36
  br i1 %1602, label %2275, label %1603

1603:                                             ; preds = %1600
  %1604 = tail call i64 @strtol(ptr nocapture noundef nonnull getelementptr inbounds ([8192 x i8], ptr @yytext, i64 0, i64 1), ptr noundef null, i32 noundef 10) #33
  %1605 = trunc i64 %1604 to i32
  %1606 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %1605)
  store ptr %1606, ptr @yylval, align 8, !tbaa !17
  br label %2275

1607:                                             ; preds = %346
  %1608 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1609 = icmp sgt i32 %1608, 0
  br i1 %1609, label %1610, label %1622

1610:                                             ; preds = %1607
  %1611 = add nsw i32 %1608, -1
  %1612 = zext i32 %1611 to i64
  %1613 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1612
  %1614 = load i8, ptr %1613, align 1, !tbaa !17
  %1615 = icmp eq i8 %1614, 10
  %1616 = zext i1 %1615 to i32
  %1617 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1618 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1619 = getelementptr inbounds ptr, ptr %1617, i64 %1618
  %1620 = load ptr, ptr %1619, align 8, !tbaa !5
  %1621 = getelementptr inbounds %struct.yy_buffer_state, ptr %1620, i64 0, i32 7
  store i32 %1616, ptr %1621, align 8, !tbaa !18
  br label %1622

1622:                                             ; preds = %1610, %1607
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %2275

1623:                                             ; preds = %346
  %1624 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1625 = icmp sgt i32 %1624, 0
  br i1 %1625, label %1626, label %1638

1626:                                             ; preds = %1623
  %1627 = add nsw i32 %1624, -1
  %1628 = zext i32 %1627 to i64
  %1629 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1628
  %1630 = load i8, ptr %1629, align 1, !tbaa !17
  %1631 = icmp eq i8 %1630, 10
  %1632 = zext i1 %1631 to i32
  %1633 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1634 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1635 = getelementptr inbounds ptr, ptr %1633, i64 %1634
  %1636 = load ptr, ptr %1635, align 8, !tbaa !5
  %1637 = getelementptr inbounds %struct.yy_buffer_state, ptr %1636, i64 0, i32 7
  store i32 %1632, ptr %1637, align 8, !tbaa !18
  br label %1638

1638:                                             ; preds = %1626, %1623
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1639 = load i64, ptr @yytext, align 16
  %1640 = icmp eq i64 %1639, 29382667542884198
  br i1 %1640, label %2275, label %1641

1641:                                             ; preds = %1638
  %1642 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(13) @yytext, ptr noundef nonnull dereferenceable(13) @.str.15, i64 13)
  %1643 = icmp eq i32 %1642, 0
  br i1 %1643, label %2275, label %1644

1644:                                             ; preds = %1641
  %1645 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(5) @yytext, ptr noundef nonnull dereferenceable(5) @.str.16, i64 5)
  %1646 = icmp eq i32 %1645, 0
  br i1 %1646, label %2275, label %1647

1647:                                             ; preds = %1644
  %1648 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1648, ptr @yylval, align 8, !tbaa !17
  br label %2275

1649:                                             ; preds = %346
  %1650 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1651 = icmp sgt i32 %1650, 0
  br i1 %1651, label %1652, label %1664

1652:                                             ; preds = %1649
  %1653 = add nsw i32 %1650, -1
  %1654 = zext i32 %1653 to i64
  %1655 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1654
  %1656 = load i8, ptr %1655, align 1, !tbaa !17
  %1657 = icmp eq i8 %1656, 10
  %1658 = zext i1 %1657 to i32
  %1659 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1660 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1661 = getelementptr inbounds ptr, ptr %1659, i64 %1660
  %1662 = load ptr, ptr %1661, align 8, !tbaa !5
  %1663 = getelementptr inbounds %struct.yy_buffer_state, ptr %1662, i64 0, i32 7
  store i32 %1658, ptr %1663, align 8, !tbaa !18
  br label %1664

1664:                                             ; preds = %1652, %1649
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1665 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1665, ptr @yylval, align 8, !tbaa !17
  br label %2275

1666:                                             ; preds = %346
  %1667 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1668 = icmp sgt i32 %1667, 0
  br i1 %1668, label %1669, label %1681

1669:                                             ; preds = %1666
  %1670 = add nsw i32 %1667, -1
  %1671 = zext i32 %1670 to i64
  %1672 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1671
  %1673 = load i8, ptr %1672, align 1, !tbaa !17
  %1674 = icmp eq i8 %1673, 10
  %1675 = zext i1 %1674 to i32
  %1676 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1677 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1678 = getelementptr inbounds ptr, ptr %1676, i64 %1677
  %1679 = load ptr, ptr %1678, align 8, !tbaa !5
  %1680 = getelementptr inbounds %struct.yy_buffer_state, ptr %1679, i64 0, i32 7
  store i32 %1675, ptr %1680, align 8, !tbaa !18
  br label %1681

1681:                                             ; preds = %1669, %1666
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1682 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1682, ptr @yylval, align 8, !tbaa !17
  br label %2275

1683:                                             ; preds = %346
  %1684 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1685 = icmp sgt i32 %1684, 0
  br i1 %1685, label %1686, label %1698

1686:                                             ; preds = %1683
  %1687 = add nsw i32 %1684, -1
  %1688 = zext i32 %1687 to i64
  %1689 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1688
  %1690 = load i8, ptr %1689, align 1, !tbaa !17
  %1691 = icmp eq i8 %1690, 10
  %1692 = zext i1 %1691 to i32
  %1693 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1694 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1695 = getelementptr inbounds ptr, ptr %1693, i64 %1694
  %1696 = load ptr, ptr %1695, align 8, !tbaa !5
  %1697 = getelementptr inbounds %struct.yy_buffer_state, ptr %1696, i64 0, i32 7
  store i32 %1692, ptr %1697, align 8, !tbaa !18
  br label %1698

1698:                                             ; preds = %1686, %1683
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1699 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1699, ptr @yylval, align 8, !tbaa !17
  br label %2275

1700:                                             ; preds = %346
  %1701 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1702 = icmp sgt i32 %1701, 0
  br i1 %1702, label %1703, label %1715

1703:                                             ; preds = %1700
  %1704 = add nsw i32 %1701, -1
  %1705 = zext i32 %1704 to i64
  %1706 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1705
  %1707 = load i8, ptr %1706, align 1, !tbaa !17
  %1708 = icmp eq i8 %1707, 10
  %1709 = zext i1 %1708 to i32
  %1710 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1711 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1712 = getelementptr inbounds ptr, ptr %1710, i64 %1711
  %1713 = load ptr, ptr %1712, align 8, !tbaa !5
  %1714 = getelementptr inbounds %struct.yy_buffer_state, ptr %1713, i64 0, i32 7
  store i32 %1709, ptr %1714, align 8, !tbaa !18
  br label %1715

1715:                                             ; preds = %1703, %1700
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1716 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1716, ptr @yylval, align 8, !tbaa !17
  br label %2275

1717:                                             ; preds = %346
  %1718 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1719 = icmp sgt i32 %1718, 0
  br i1 %1719, label %1720, label %1732

1720:                                             ; preds = %1717
  %1721 = add nsw i32 %1718, -1
  %1722 = zext i32 %1721 to i64
  %1723 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1722
  %1724 = load i8, ptr %1723, align 1, !tbaa !17
  %1725 = icmp eq i8 %1724, 10
  %1726 = zext i1 %1725 to i32
  %1727 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1728 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1729 = getelementptr inbounds ptr, ptr %1727, i64 %1728
  %1730 = load ptr, ptr %1729, align 8, !tbaa !5
  %1731 = getelementptr inbounds %struct.yy_buffer_state, ptr %1730, i64 0, i32 7
  store i32 %1726, ptr %1731, align 8, !tbaa !18
  br label %1732

1732:                                             ; preds = %1720, %1717
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1733 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %1733, ptr @yylval, align 8, !tbaa !17
  br label %2275

1734:                                             ; preds = %346
  %1735 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1736 = icmp sgt i32 %1735, 0
  br i1 %1736, label %1737, label %1749

1737:                                             ; preds = %1734
  %1738 = add nsw i32 %1735, -1
  %1739 = zext i32 %1738 to i64
  %1740 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1739
  %1741 = load i8, ptr %1740, align 1, !tbaa !17
  %1742 = icmp eq i8 %1741, 10
  %1743 = zext i1 %1742 to i32
  %1744 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1745 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1746 = getelementptr inbounds ptr, ptr %1744, i64 %1745
  %1747 = load ptr, ptr %1746, align 8, !tbaa !5
  %1748 = getelementptr inbounds %struct.yy_buffer_state, ptr %1747, i64 0, i32 7
  store i32 %1743, ptr %1748, align 8, !tbaa !18
  br label %1749

1749:                                             ; preds = %1737, %1734
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1750 = load i8, ptr @yytext, align 16, !tbaa !17
  %1751 = sext i8 %1750 to i32
  br label %2275

1752:                                             ; preds = %346
  %1753 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1754 = icmp sgt i32 %1753, 0
  br i1 %1754, label %1755, label %1767

1755:                                             ; preds = %1752
  %1756 = add nsw i32 %1753, -1
  %1757 = zext i32 %1756 to i64
  %1758 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1757
  %1759 = load i8, ptr %1758, align 1, !tbaa !17
  %1760 = icmp eq i8 %1759, 10
  %1761 = zext i1 %1760 to i32
  %1762 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1763 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1764 = getelementptr inbounds ptr, ptr %1762, i64 %1763
  %1765 = load ptr, ptr %1764, align 8, !tbaa !5
  %1766 = getelementptr inbounds %struct.yy_buffer_state, ptr %1765, i64 0, i32 7
  store i32 %1761, ptr %1766, align 8, !tbaa !18
  br label %1767

1767:                                             ; preds = %1755, %1752
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %1812

1768:                                             ; preds = %346
  %1769 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1770 = icmp sgt i32 %1769, 0
  br i1 %1770, label %1771, label %1783

1771:                                             ; preds = %1768
  %1772 = add nsw i32 %1769, -1
  %1773 = zext i32 %1772 to i64
  %1774 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1773
  %1775 = load i8, ptr %1774, align 1, !tbaa !17
  %1776 = icmp eq i8 %1775, 10
  %1777 = zext i1 %1776 to i32
  %1778 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1779 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1780 = getelementptr inbounds ptr, ptr %1778, i64 %1779
  %1781 = load ptr, ptr %1780, align 8, !tbaa !5
  %1782 = getelementptr inbounds %struct.yy_buffer_state, ptr %1781, i64 0, i32 7
  store i32 %1777, ptr %1782, align 8, !tbaa !18
  br label %1783

1783:                                             ; preds = %1771, %1768
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %1812

1784:                                             ; preds = %346
  %1785 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1786 = icmp sgt i32 %1785, 0
  br i1 %1786, label %1787, label %1799

1787:                                             ; preds = %1784
  %1788 = add nsw i32 %1785, -1
  %1789 = zext i32 %1788 to i64
  %1790 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1789
  %1791 = load i8, ptr %1790, align 1, !tbaa !17
  %1792 = icmp eq i8 %1791, 10
  %1793 = zext i1 %1792 to i32
  %1794 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1795 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1796 = getelementptr inbounds ptr, ptr %1794, i64 %1795
  %1797 = load ptr, ptr %1796, align 8, !tbaa !5
  %1798 = getelementptr inbounds %struct.yy_buffer_state, ptr %1797, i64 0, i32 7
  store i32 %1793, ptr %1798, align 8, !tbaa !18
  br label %1799

1799:                                             ; preds = %1787, %1784
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1800 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), ptr noundef nonnull @.str) #33
  %1801 = icmp eq i32 %1800, 0
  br i1 %1801, label %1813, label %1802

1802:                                             ; preds = %1799
  %1803 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), ptr noundef nonnull @.str.17) #33
  %1804 = icmp eq i32 %1803, 0
  br i1 %1804, label %1813, label %1805

1805:                                             ; preds = %1802
  %1806 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %1807 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %1808 = tail call noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef %1806, i32 noundef %1807)
  %1809 = load ptr, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), align 8, !tbaa !33
  %1810 = tail call noundef ptr @_ZN2kc9Problem2SEPKcS1_(ptr noundef nonnull @.str.18, ptr noundef %1809)
  %1811 = tail call noundef ptr @_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %1808, ptr noundef %1810)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %1811)
  br label %1812

1812:                                             ; preds = %2105, %1805, %1813, %1960, %1926, %1910, %1894, %1878, %1862, %1846, %1830, %1783, %1767, %1041, %670, %635, %576, %558, %525, %476, %364
  br label %64, !llvm.loop !36

1813:                                             ; preds = %1802, %1799
  %1814 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), ptr noundef nonnull @.str.17)
  br label %1812

1815:                                             ; preds = %346
  %1816 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1817 = icmp sgt i32 %1816, 0
  br i1 %1817, label %1818, label %1830

1818:                                             ; preds = %1815
  %1819 = add nsw i32 %1816, -1
  %1820 = zext i32 %1819 to i64
  %1821 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1820
  %1822 = load i8, ptr %1821, align 1, !tbaa !17
  %1823 = icmp eq i8 %1822, 10
  %1824 = zext i1 %1823 to i32
  %1825 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1826 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1827 = getelementptr inbounds ptr, ptr %1825, i64 %1826
  %1828 = load ptr, ptr %1827, align 8, !tbaa !5
  %1829 = getelementptr inbounds %struct.yy_buffer_state, ptr %1828, i64 0, i32 7
  store i32 %1824, ptr %1829, align 8, !tbaa !18
  br label %1830

1830:                                             ; preds = %1818, %1815
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 4), align 2, !tbaa !37
  br label %1812

1831:                                             ; preds = %346
  %1832 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1833 = icmp sgt i32 %1832, 0
  br i1 %1833, label %1834, label %1846

1834:                                             ; preds = %1831
  %1835 = add nsw i32 %1832, -1
  %1836 = zext i32 %1835 to i64
  %1837 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1836
  %1838 = load i8, ptr %1837, align 1, !tbaa !17
  %1839 = icmp eq i8 %1838, 10
  %1840 = zext i1 %1839 to i32
  %1841 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1842 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1843 = getelementptr inbounds ptr, ptr %1841, i64 %1842
  %1844 = load ptr, ptr %1843, align 8, !tbaa !5
  %1845 = getelementptr inbounds %struct.yy_buffer_state, ptr %1844, i64 0, i32 7
  store i32 %1840, ptr %1845, align 8, !tbaa !18
  br label %1846

1846:                                             ; preds = %1834, %1831
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 5), align 1, !tbaa !40
  br label %1812

1847:                                             ; preds = %346
  %1848 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1849 = icmp sgt i32 %1848, 0
  br i1 %1849, label %1850, label %1862

1850:                                             ; preds = %1847
  %1851 = add nsw i32 %1848, -1
  %1852 = zext i32 %1851 to i64
  %1853 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1852
  %1854 = load i8, ptr %1853, align 1, !tbaa !17
  %1855 = icmp eq i8 %1854, 10
  %1856 = zext i1 %1855 to i32
  %1857 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1858 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1859 = getelementptr inbounds ptr, ptr %1857, i64 %1858
  %1860 = load ptr, ptr %1859, align 8, !tbaa !5
  %1861 = getelementptr inbounds %struct.yy_buffer_state, ptr %1860, i64 0, i32 7
  store i32 %1856, ptr %1861, align 8, !tbaa !18
  br label %1862

1862:                                             ; preds = %1850, %1847
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 6), align 4, !tbaa !41
  br label %1812

1863:                                             ; preds = %346
  %1864 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1865 = icmp sgt i32 %1864, 0
  br i1 %1865, label %1866, label %1878

1866:                                             ; preds = %1863
  %1867 = add nsw i32 %1864, -1
  %1868 = zext i32 %1867 to i64
  %1869 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1868
  %1870 = load i8, ptr %1869, align 1, !tbaa !17
  %1871 = icmp eq i8 %1870, 10
  %1872 = zext i1 %1871 to i32
  %1873 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1874 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1875 = getelementptr inbounds ptr, ptr %1873, i64 %1874
  %1876 = load ptr, ptr %1875, align 8, !tbaa !5
  %1877 = getelementptr inbounds %struct.yy_buffer_state, ptr %1876, i64 0, i32 7
  store i32 %1872, ptr %1877, align 8, !tbaa !18
  br label %1878

1878:                                             ; preds = %1866, %1863
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 7), align 1, !tbaa !42
  br label %1812

1879:                                             ; preds = %346
  %1880 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1881 = icmp sgt i32 %1880, 0
  br i1 %1881, label %1882, label %1894

1882:                                             ; preds = %1879
  %1883 = add nsw i32 %1880, -1
  %1884 = zext i32 %1883 to i64
  %1885 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1884
  %1886 = load i8, ptr %1885, align 1, !tbaa !17
  %1887 = icmp eq i8 %1886, 10
  %1888 = zext i1 %1887 to i32
  %1889 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1890 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1891 = getelementptr inbounds ptr, ptr %1889, i64 %1890
  %1892 = load ptr, ptr %1891, align 8, !tbaa !5
  %1893 = getelementptr inbounds %struct.yy_buffer_state, ptr %1892, i64 0, i32 7
  store i32 %1888, ptr %1893, align 8, !tbaa !18
  br label %1894

1894:                                             ; preds = %1882, %1879
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 8), align 2, !tbaa !43
  br label %1812

1895:                                             ; preds = %346
  %1896 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1897 = icmp sgt i32 %1896, 0
  br i1 %1897, label %1898, label %1910

1898:                                             ; preds = %1895
  %1899 = add nsw i32 %1896, -1
  %1900 = zext i32 %1899 to i64
  %1901 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1900
  %1902 = load i8, ptr %1901, align 1, !tbaa !17
  %1903 = icmp eq i8 %1902, 10
  %1904 = zext i1 %1903 to i32
  %1905 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1906 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1907 = getelementptr inbounds ptr, ptr %1905, i64 %1906
  %1908 = load ptr, ptr %1907, align 8, !tbaa !5
  %1909 = getelementptr inbounds %struct.yy_buffer_state, ptr %1908, i64 0, i32 7
  store i32 %1904, ptr %1909, align 8, !tbaa !18
  br label %1910

1910:                                             ; preds = %1898, %1895
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 10), align 8, !tbaa !44
  br label %1812

1911:                                             ; preds = %346
  %1912 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1913 = icmp sgt i32 %1912, 0
  br i1 %1913, label %1914, label %1926

1914:                                             ; preds = %1911
  %1915 = add nsw i32 %1912, -1
  %1916 = zext i32 %1915 to i64
  %1917 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1916
  %1918 = load i8, ptr %1917, align 1, !tbaa !17
  %1919 = icmp eq i8 %1918, 10
  %1920 = zext i1 %1919 to i32
  %1921 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1922 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1923 = getelementptr inbounds ptr, ptr %1921, i64 %1922
  %1924 = load ptr, ptr %1923, align 8, !tbaa !5
  %1925 = getelementptr inbounds %struct.yy_buffer_state, ptr %1924, i64 0, i32 7
  store i32 %1920, ptr %1925, align 8, !tbaa !18
  br label %1926

1926:                                             ; preds = %1914, %1911
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 10), align 8, !tbaa !44
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 11), align 1, !tbaa !45
  br label %1812

1927:                                             ; preds = %346
  %1928 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1929 = icmp sgt i32 %1928, 0
  br i1 %1929, label %1930, label %1942

1930:                                             ; preds = %1927
  %1931 = add nsw i32 %1928, -1
  %1932 = zext i32 %1931 to i64
  %1933 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1932
  %1934 = load i8, ptr %1933, align 1, !tbaa !17
  %1935 = icmp eq i8 %1934, 10
  %1936 = zext i1 %1935 to i32
  %1937 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1938 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1939 = getelementptr inbounds ptr, ptr %1937, i64 %1938
  %1940 = load ptr, ptr %1939, align 8, !tbaa !5
  %1941 = getelementptr inbounds %struct.yy_buffer_state, ptr %1940, i64 0, i32 7
  store i32 %1936, ptr %1941, align 8, !tbaa !18
  br label %1942

1942:                                             ; preds = %1930, %1927
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %1943 = load i8, ptr @yytext, align 16, !tbaa !17
  %1944 = sext i8 %1943 to i32
  br label %2275

1945:                                             ; preds = %346
  %1946 = load i32, ptr @yyleng, align 4, !tbaa !9
  %1947 = icmp sgt i32 %1946, 0
  br i1 %1947, label %1948, label %1960

1948:                                             ; preds = %1945
  %1949 = add nsw i32 %1946, -1
  %1950 = zext i32 %1949 to i64
  %1951 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %1950
  %1952 = load i8, ptr %1951, align 1, !tbaa !17
  %1953 = icmp eq i8 %1952, 10
  %1954 = zext i1 %1953 to i32
  %1955 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1956 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1957 = getelementptr inbounds ptr, ptr %1955, i64 %1956
  %1958 = load ptr, ptr %1957, align 8, !tbaa !5
  %1959 = getelementptr inbounds %struct.yy_buffer_state, ptr %1958, i64 0, i32 7
  store i32 %1954, ptr %1959, align 8, !tbaa !18
  br label %1960

1960:                                             ; preds = %1948, %1945
  %1961 = sext i32 %1946 to i64
  %1962 = load ptr, ptr @yyout, align 8, !tbaa !5
  %1963 = tail call i64 @fwrite(ptr noundef nonnull @yytext, i64 noundef %1961, i64 noundef 1, ptr noundef %1962)
  br label %1812

1964:                                             ; preds = %346
  %1965 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  store i8 %1965, ptr %164, align 1, !tbaa !17
  %1966 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1967 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %1968 = getelementptr inbounds ptr, ptr %1966, i64 %1967
  %1969 = load ptr, ptr %1968, align 8, !tbaa !5
  %1970 = getelementptr inbounds %struct.yy_buffer_state, ptr %1969, i64 0, i32 11
  %1971 = load i32, ptr %1970, align 8, !tbaa !46
  %1972 = icmp eq i32 %1971, 0
  br i1 %1972, label %1975, label %1973

1973:                                             ; preds = %1964
  %1974 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  br label %1981

1975:                                             ; preds = %1964
  %1976 = getelementptr inbounds %struct.yy_buffer_state, ptr %1969, i64 0, i32 4
  %1977 = load i32, ptr %1976, align 4, !tbaa !13
  store i32 %1977, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %1978 = load ptr, ptr @yyin, align 8, !tbaa !5
  store ptr %1978, ptr %1969, align 8, !tbaa !16
  %1979 = load ptr, ptr %1968, align 8, !tbaa !5
  %1980 = getelementptr inbounds %struct.yy_buffer_state, ptr %1979, i64 0, i32 11
  store i32 1, ptr %1980, align 8, !tbaa !46
  br label %1981

1981:                                             ; preds = %1973, %1975
  %1982 = phi i32 [ %1977, %1975 ], [ %1974, %1973 ]
  %1983 = phi ptr [ %1979, %1975 ], [ %1969, %1973 ]
  %1984 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %1985 = getelementptr inbounds %struct.yy_buffer_state, ptr %1983, i64 0, i32 1
  %1986 = load ptr, ptr %1985, align 8, !tbaa !47
  %1987 = sext i32 %1982 to i64
  %1988 = getelementptr inbounds i8, ptr %1986, i64 %1987
  %1989 = icmp ugt ptr %1984, %1988
  br i1 %1989, label %2105, label %1990

1990:                                             ; preds = %1981
  %1991 = ptrtoint ptr %164 to i64
  %1992 = ptrtoint ptr %347 to i64
  %1993 = sub i64 %1991, %1992
  %1994 = trunc i64 %1993 to i32
  %1995 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %1996 = shl i64 %1993, 32
  %1997 = add i64 %1996, -4294967296
  %1998 = ashr exact i64 %1997, 32
  %1999 = getelementptr inbounds i8, ptr %1995, i64 %1998
  store ptr %1999, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %2000 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %2001 = getelementptr inbounds %struct.yy_buffer_state, ptr %1983, i64 0, i32 7
  %2002 = load i32, ptr %2001, align 8, !tbaa !18
  %2003 = add nsw i32 %2002, %2000
  %2004 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %2004, i64 1
  store ptr %2005, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %2003, ptr %2004, align 4, !tbaa !9
  %2006 = icmp sgt i32 %1994, 1
  br i1 %2006, label %2007, label %2066

2007:                                             ; preds = %1990, %2055
  %2008 = phi ptr [ %2062, %2055 ], [ %1995, %1990 ]
  %2009 = phi i32 [ %2060, %2055 ], [ %2003, %1990 ]
  %2010 = phi ptr [ %2061, %2055 ], [ %2005, %1990 ]
  %2011 = load i8, ptr %2008, align 1, !tbaa !17
  %2012 = icmp eq i8 %2011, 0
  br i1 %2012, label %2017, label %2013

2013:                                             ; preds = %2007
  %2014 = zext i8 %2011 to i64
  %2015 = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %2014
  %2016 = load i32, ptr %2015, align 4, !tbaa !9
  br label %2017

2017:                                             ; preds = %2013, %2007
  %2018 = phi i32 [ %2016, %2013 ], [ 1, %2007 ]
  %2019 = sext i32 %2009 to i64
  %2020 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2019
  %2021 = load i16, ptr %2020, align 2, !tbaa !19
  %2022 = sext i16 %2021 to i32
  %2023 = and i32 %2018, 255
  %2024 = add nsw i32 %2023, %2022
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2025
  %2027 = load i16, ptr %2026, align 2, !tbaa !19
  %2028 = sext i16 %2027 to i32
  %2029 = icmp eq i32 %2009, %2028
  br i1 %2029, label %2055, label %2030

2030:                                             ; preds = %2017
  %2031 = trunc i32 %2018 to i8
  br label %2032

2032:                                             ; preds = %2043, %2030
  %2033 = phi i64 [ %2045, %2043 ], [ %2019, %2030 ]
  %2034 = phi i8 [ %2044, %2043 ], [ %2031, %2030 ]
  %2035 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %2033
  %2036 = load i16, ptr %2035, align 2, !tbaa !19
  %2037 = icmp sgt i16 %2036, 437
  br i1 %2037, label %2038, label %2043

2038:                                             ; preds = %2032
  %2039 = zext i8 %2034 to i64
  %2040 = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %2039
  %2041 = load i32, ptr %2040, align 4, !tbaa !9
  %2042 = trunc i32 %2041 to i8
  br label %2043

2043:                                             ; preds = %2038, %2032
  %2044 = phi i8 [ %2042, %2038 ], [ %2034, %2032 ]
  %2045 = sext i16 %2036 to i64
  %2046 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2045
  %2047 = load i16, ptr %2046, align 2, !tbaa !19
  %2048 = sext i16 %2047 to i32
  %2049 = zext i8 %2044 to i32
  %2050 = add nsw i32 %2048, %2049
  %2051 = sext i32 %2050 to i64
  %2052 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2051
  %2053 = load i16, ptr %2052, align 2, !tbaa !19
  %2054 = icmp eq i16 %2036, %2053
  br i1 %2054, label %2055, label %2032, !llvm.loop !48

2055:                                             ; preds = %2043, %2017
  %2056 = phi i32 [ %2024, %2017 ], [ %2050, %2043 ]
  %2057 = zext i32 %2056 to i64
  %2058 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %2057
  %2059 = load i16, ptr %2058, align 2, !tbaa !19
  %2060 = sext i16 %2059 to i32
  %2061 = getelementptr inbounds i32, ptr %2010, i64 1
  store i32 %2060, ptr %2010, align 4, !tbaa !9
  %2062 = getelementptr inbounds i8, ptr %2008, i64 1
  %2063 = icmp eq ptr %2062, %1999
  br i1 %2063, label %2064, label %2007, !llvm.loop !49

2064:                                             ; preds = %2055
  %2065 = sext i16 %2059 to i32
  store ptr %2061, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %2066

2066:                                             ; preds = %1990, %2064
  %2067 = phi ptr [ %2061, %2064 ], [ %2005, %1990 ]
  %2068 = phi i32 [ %2065, %2064 ], [ %2003, %1990 ]
  %2069 = sext i32 %2068 to i64
  %2070 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2069
  %2071 = load i16, ptr %2070, align 2, !tbaa !19
  %2072 = sext i16 %2071 to i32
  %2073 = add nsw i32 %2072, 1
  %2074 = sext i32 %2073 to i64
  %2075 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2074
  %2076 = load i16, ptr %2075, align 2, !tbaa !19
  %2077 = sext i16 %2076 to i32
  %2078 = icmp eq i32 %2068, %2077
  br i1 %2078, label %2092, label %2079

2079:                                             ; preds = %2066, %2079
  %2080 = phi i64 [ %2083, %2079 ], [ %2069, %2066 ]
  %2081 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %2080
  %2082 = load i16, ptr %2081, align 2, !tbaa !19
  %2083 = sext i16 %2082 to i64
  %2084 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2083
  %2085 = load i16, ptr %2084, align 2, !tbaa !19
  %2086 = sext i16 %2085 to i32
  %2087 = add nsw i32 %2086, 1
  %2088 = sext i32 %2087 to i64
  %2089 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2088
  %2090 = load i16, ptr %2089, align 2, !tbaa !19
  %2091 = icmp eq i16 %2082, %2090
  br i1 %2091, label %2092, label %2079, !llvm.loop !50

2092:                                             ; preds = %2079, %2066
  %2093 = phi i32 [ %2073, %2066 ], [ %2087, %2079 ]
  %2094 = zext i32 %2093 to i64
  %2095 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %2094
  %2096 = load i16, ptr %2095, align 2, !tbaa !19
  %2097 = icmp eq i16 %2096, 437
  br i1 %2097, label %140, label %2098

2098:                                             ; preds = %2092
  %2099 = sext i16 %2096 to i32
  %2100 = getelementptr inbounds i32, ptr %2067, i64 1
  store ptr %2100, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %2099, ptr %2067, align 4, !tbaa !9
  %2101 = icmp eq i32 %2093, 0
  br i1 %2101, label %140, label %2102

2102:                                             ; preds = %2098
  %2103 = sext i16 %2096 to i32
  %2104 = getelementptr inbounds i8, ptr %1999, i64 1
  store ptr %2104, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  br label %77

2105:                                             ; preds = %1981
  %2106 = tail call fastcc noundef i32 @_ZL18yy_get_next_bufferv(), !range !51
  switch i32 %2106, label %1812 [
    i32 1, label %2268
    i32 0, label %2107
    i32 2, label %2187
  ], !llvm.loop !36

2107:                                             ; preds = %2105
  %2108 = ptrtoint ptr %164 to i64
  %2109 = ptrtoint ptr %347 to i64
  %2110 = sub i64 %2108, %2109
  %2111 = trunc i64 %2110 to i32
  %2112 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %2113 = shl i64 %2110, 32
  %2114 = add i64 %2113, -4294967296
  %2115 = ashr exact i64 %2114, 32
  %2116 = getelementptr inbounds i8, ptr %2112, i64 %2115
  store ptr %2116, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %2117 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %2118 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %2119 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %2120 = getelementptr inbounds ptr, ptr %2118, i64 %2119
  %2121 = load ptr, ptr %2120, align 8, !tbaa !5
  %2122 = getelementptr inbounds %struct.yy_buffer_state, ptr %2121, i64 0, i32 7
  %2123 = load i32, ptr %2122, align 8, !tbaa !18
  %2124 = add nsw i32 %2123, %2117
  %2125 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %2125, i64 1
  store ptr %2126, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %2124, ptr %2125, align 4, !tbaa !9
  %2127 = icmp sgt i32 %2111, 1
  br i1 %2127, label %2128, label %77

2128:                                             ; preds = %2107, %2176
  %2129 = phi ptr [ %2183, %2176 ], [ %2112, %2107 ]
  %2130 = phi i32 [ %2181, %2176 ], [ %2124, %2107 ]
  %2131 = phi ptr [ %2182, %2176 ], [ %2126, %2107 ]
  %2132 = load i8, ptr %2129, align 1, !tbaa !17
  %2133 = icmp eq i8 %2132, 0
  br i1 %2133, label %2138, label %2134

2134:                                             ; preds = %2128
  %2135 = zext i8 %2132 to i64
  %2136 = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %2135
  %2137 = load i32, ptr %2136, align 4, !tbaa !9
  br label %2138

2138:                                             ; preds = %2134, %2128
  %2139 = phi i32 [ %2137, %2134 ], [ 1, %2128 ]
  %2140 = sext i32 %2130 to i64
  %2141 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2140
  %2142 = load i16, ptr %2141, align 2, !tbaa !19
  %2143 = sext i16 %2142 to i32
  %2144 = and i32 %2139, 255
  %2145 = add nsw i32 %2144, %2143
  %2146 = sext i32 %2145 to i64
  %2147 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2146
  %2148 = load i16, ptr %2147, align 2, !tbaa !19
  %2149 = sext i16 %2148 to i32
  %2150 = icmp eq i32 %2130, %2149
  br i1 %2150, label %2176, label %2151

2151:                                             ; preds = %2138
  %2152 = trunc i32 %2139 to i8
  br label %2153

2153:                                             ; preds = %2164, %2151
  %2154 = phi i64 [ %2166, %2164 ], [ %2140, %2151 ]
  %2155 = phi i8 [ %2165, %2164 ], [ %2152, %2151 ]
  %2156 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %2154
  %2157 = load i16, ptr %2156, align 2, !tbaa !19
  %2158 = icmp sgt i16 %2157, 437
  br i1 %2158, label %2159, label %2164

2159:                                             ; preds = %2153
  %2160 = zext i8 %2155 to i64
  %2161 = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %2160
  %2162 = load i32, ptr %2161, align 4, !tbaa !9
  %2163 = trunc i32 %2162 to i8
  br label %2164

2164:                                             ; preds = %2159, %2153
  %2165 = phi i8 [ %2163, %2159 ], [ %2155, %2153 ]
  %2166 = sext i16 %2157 to i64
  %2167 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2166
  %2168 = load i16, ptr %2167, align 2, !tbaa !19
  %2169 = sext i16 %2168 to i32
  %2170 = zext i8 %2165 to i32
  %2171 = add nsw i32 %2169, %2170
  %2172 = sext i32 %2171 to i64
  %2173 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2172
  %2174 = load i16, ptr %2173, align 2, !tbaa !19
  %2175 = icmp eq i16 %2157, %2174
  br i1 %2175, label %2176, label %2153, !llvm.loop !48

2176:                                             ; preds = %2164, %2138
  %2177 = phi i32 [ %2145, %2138 ], [ %2171, %2164 ]
  %2178 = zext i32 %2177 to i64
  %2179 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %2178
  %2180 = load i16, ptr %2179, align 2, !tbaa !19
  %2181 = sext i16 %2180 to i32
  %2182 = getelementptr inbounds i32, ptr %2131, i64 1
  store i32 %2181, ptr %2131, align 4, !tbaa !9
  %2183 = getelementptr inbounds i8, ptr %2129, i64 1
  %2184 = icmp eq ptr %2183, %2116
  br i1 %2184, label %2185, label %2128, !llvm.loop !49

2185:                                             ; preds = %2176
  %2186 = sext i16 %2180 to i32
  store ptr %2182, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %77

2187:                                             ; preds = %2105
  %2188 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %2189 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %2190 = getelementptr inbounds ptr, ptr %2188, i64 %2189
  %2191 = load ptr, ptr %2190, align 8, !tbaa !5
  %2192 = getelementptr inbounds %struct.yy_buffer_state, ptr %2191, i64 0, i32 1
  %2193 = load ptr, ptr %2192, align 8, !tbaa !47
  %2194 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds i8, ptr %2193, i64 %2195
  store ptr %2196, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %2197 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %2198 = getelementptr inbounds %struct.yy_buffer_state, ptr %2191, i64 0, i32 7
  %2199 = load i32, ptr %2198, align 8, !tbaa !18
  %2200 = add nsw i32 %2199, %2197
  %2201 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %2202 = getelementptr inbounds i32, ptr %2201, i64 1
  store ptr %2202, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %2200, ptr %2201, align 4, !tbaa !9
  %2203 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %2204 = icmp ult ptr %2203, %2196
  br i1 %2204, label %2205, label %140

2205:                                             ; preds = %2187
  %2206 = ptrtoint ptr %2196 to i64
  %2207 = ptrtoint ptr %2203 to i64
  %2208 = sub i64 %2206, %2207
  %2209 = getelementptr i8, ptr %2203, i64 %2208
  br label %2210

2210:                                             ; preds = %2258, %2205
  %2211 = phi ptr [ %2265, %2258 ], [ %2203, %2205 ]
  %2212 = phi i32 [ %2263, %2258 ], [ %2200, %2205 ]
  %2213 = phi ptr [ %2264, %2258 ], [ %2202, %2205 ]
  %2214 = load i8, ptr %2211, align 1, !tbaa !17
  %2215 = icmp eq i8 %2214, 0
  br i1 %2215, label %2220, label %2216

2216:                                             ; preds = %2210
  %2217 = zext i8 %2214 to i64
  %2218 = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %2217
  %2219 = load i32, ptr %2218, align 4, !tbaa !9
  br label %2220

2220:                                             ; preds = %2216, %2210
  %2221 = phi i32 [ %2219, %2216 ], [ 1, %2210 ]
  %2222 = sext i32 %2212 to i64
  %2223 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2222
  %2224 = load i16, ptr %2223, align 2, !tbaa !19
  %2225 = sext i16 %2224 to i32
  %2226 = and i32 %2221, 255
  %2227 = add nsw i32 %2226, %2225
  %2228 = sext i32 %2227 to i64
  %2229 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2228
  %2230 = load i16, ptr %2229, align 2, !tbaa !19
  %2231 = sext i16 %2230 to i32
  %2232 = icmp eq i32 %2212, %2231
  br i1 %2232, label %2258, label %2233

2233:                                             ; preds = %2220
  %2234 = trunc i32 %2221 to i8
  br label %2235

2235:                                             ; preds = %2246, %2233
  %2236 = phi i64 [ %2248, %2246 ], [ %2222, %2233 ]
  %2237 = phi i8 [ %2247, %2246 ], [ %2234, %2233 ]
  %2238 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %2236
  %2239 = load i16, ptr %2238, align 2, !tbaa !19
  %2240 = icmp sgt i16 %2239, 437
  br i1 %2240, label %2241, label %2246

2241:                                             ; preds = %2235
  %2242 = zext i8 %2237 to i64
  %2243 = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %2242
  %2244 = load i32, ptr %2243, align 4, !tbaa !9
  %2245 = trunc i32 %2244 to i8
  br label %2246

2246:                                             ; preds = %2241, %2235
  %2247 = phi i8 [ %2245, %2241 ], [ %2237, %2235 ]
  %2248 = sext i16 %2239 to i64
  %2249 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %2248
  %2250 = load i16, ptr %2249, align 2, !tbaa !19
  %2251 = sext i16 %2250 to i32
  %2252 = zext i8 %2247 to i32
  %2253 = add nsw i32 %2251, %2252
  %2254 = sext i32 %2253 to i64
  %2255 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %2254
  %2256 = load i16, ptr %2255, align 2, !tbaa !19
  %2257 = icmp eq i16 %2239, %2256
  br i1 %2257, label %2258, label %2235, !llvm.loop !48

2258:                                             ; preds = %2246, %2220
  %2259 = phi i32 [ %2227, %2220 ], [ %2253, %2246 ]
  %2260 = zext i32 %2259 to i64
  %2261 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %2260
  %2262 = load i16, ptr %2261, align 2, !tbaa !19
  %2263 = sext i16 %2262 to i32
  %2264 = getelementptr inbounds i32, ptr %2213, i64 1
  store i32 %2263, ptr %2213, align 4, !tbaa !9
  %2265 = getelementptr inbounds i8, ptr %2211, i64 1
  %2266 = icmp eq ptr %2265, %2209
  br i1 %2266, label %2267, label %2210, !llvm.loop !49

2267:                                             ; preds = %2258
  store ptr %2264, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %140

2268:                                             ; preds = %2105
  %2269 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  store ptr %2269, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %2270 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %2271 = add nsw i32 %2270, -1
  %2272 = sdiv i32 %2271, 2
  %2273 = add nuw nsw i32 %2272, 95
  br label %346

2274:                                             ; preds = %346
  tail call fastcc void @_ZL14yy_fatal_errorPKc(ptr noundef nonnull @.str.19)
  unreachable

2275:                                             ; preds = %346, %346, %346, %346, %346, %346, %346, %346, %346, %346, %1600, %1644, %1641, %1638, %1942, %1749, %1732, %1715, %1698, %1681, %1664, %1647, %1622, %1603, %1583, %1566, %1549, %1532, %1515, %1498, %1481, %1463, %1446, %1428, %1411, %1391, %1388, %1364, %1344, %1341, %1317, %1299, %1281, %1263, %1245, %1228, %1211, %1193, %1176, %1160, %1144, %1125, %1108, %1091, %1074, %1057, %1025, %1009, %993, %977, %961, %945, %929, %913, %897, %881, %865, %849, %833, %817, %801, %785, %769, %753, %734, %718, %702, %686, %653, %616, %598, %541, %508, %492, %460, %444, %428, %412, %396, %380
  %2276 = phi i32 [ %1944, %1942 ], [ %1751, %1749 ], [ 262, %1732 ], [ 262, %1715 ], [ 262, %1698 ], [ 262, %1681 ], [ 262, %1664 ], [ 262, %1647 ], [ 274, %1622 ], [ 264, %1603 ], [ 262, %1583 ], [ 262, %1566 ], [ 262, %1549 ], [ 262, %1532 ], [ 262, %1515 ], [ 263, %1498 ], [ 263, %1481 ], [ %1465, %1463 ], [ 263, %1446 ], [ %1430, %1428 ], [ 263, %1411 ], [ %1390, %1388 ], [ %1395, %1391 ], [ %1369, %1364 ], [ %1343, %1341 ], [ %1348, %1344 ], [ %1322, %1317 ], [ %1301, %1299 ], [ %1283, %1281 ], [ %1265, %1263 ], [ %1247, %1245 ], [ 263, %1228 ], [ 263, %1211 ], [ %1195, %1193 ], [ 263, %1176 ], [ 277, %1160 ], [ 276, %1144 ], [ 264, %1125 ], [ 263, %1108 ], [ 258, %1091 ], [ 258, %1074 ], [ 259, %1057 ], [ 293, %1025 ], [ 292, %1009 ], [ 299, %993 ], [ 298, %977 ], [ 297, %961 ], [ 296, %945 ], [ 295, %929 ], [ 294, %913 ], [ 291, %897 ], [ 290, %881 ], [ 289, %865 ], [ 288, %849 ], [ 287, %833 ], [ 286, %817 ], [ 285, %801 ], [ 284, %785 ], [ 271, %769 ], [ 268, %753 ], [ 260, %734 ], [ 275, %718 ], [ 270, %702 ], [ 269, %686 ], [ 261, %653 ], [ 261, %616 ], [ 265, %598 ], [ 267, %541 ], [ 258, %508 ], [ 266, %492 ], [ 283, %460 ], [ 282, %444 ], [ 279, %428 ], [ 278, %412 ], [ 281, %396 ], [ 280, %380 ], [ 273, %1638 ], [ 274, %1641 ], [ 272, %1644 ], [ 36, %1600 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ], [ 0, %346 ]
  ret i32 %2276
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable
define dso_local noalias noundef ptr @_Z7yyallocj(i32 noundef %0) local_unnamed_addr #3 {
  %2 = zext i32 %0 to i64
  %3 = tail call noalias ptr @malloc(i64 noundef %2) #29
  ret ptr %3
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z16yy_create_bufferP8_IO_FILEi(ptr noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = tail call noalias dereferenceable_or_null(64) ptr @malloc(i64 noundef 64) #29
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = load ptr, ptr @stderr, align 8, !tbaa !5
  %7 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.20) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 3
  store i32 %1, ptr %9, align 8, !tbaa !52
  %10 = add i32 %1, 2
  %11 = zext i32 %10 to i64
  %12 = tail call noalias ptr @malloc(i64 noundef %11) #29
  %13 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 1
  store ptr %12, ptr %13, align 8, !tbaa !47
  %14 = icmp eq ptr %12, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = load ptr, ptr @stderr, align 8, !tbaa !5
  %17 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.20) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 5
  store i32 1, ptr %19, align 8, !tbaa !53
  %20 = tail call ptr @__errno_location() #34
  %21 = load i32, ptr %20, align 4, !tbaa !9
  %22 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 4
  store i32 0, ptr %22, align 4, !tbaa !13
  store i8 0, ptr %12, align 1, !tbaa !17
  %23 = getelementptr inbounds i8, ptr %12, i64 1
  store i8 0, ptr %23, align 1, !tbaa !17
  %24 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 2
  store ptr %12, ptr %24, align 8, !tbaa !15
  %25 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 7
  store i32 1, ptr %25, align 8, !tbaa !18
  %26 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 11
  store i32 0, ptr %26, align 8, !tbaa !46
  %27 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %18
  %30 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %31 = getelementptr inbounds ptr, ptr %27, i64 %30
  %32 = load ptr, ptr %31, align 8, !tbaa !5
  %33 = icmp eq ptr %32, %3
  br i1 %33, label %36, label %40

34:                                               ; preds = %18
  store ptr %0, ptr %3, align 8, !tbaa !16
  %35 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 10
  store i32 1, ptr %35, align 4, !tbaa !54
  br label %43

36:                                               ; preds = %29
  store i32 0, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  store ptr %12, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %12, ptr @yytext_ptr, align 8, !tbaa !5
  %37 = load ptr, ptr %31, align 8, !tbaa !5
  %38 = load ptr, ptr %37, align 8, !tbaa !16
  store ptr %38, ptr @yyin, align 8, !tbaa !5
  %39 = load i8, ptr %12, align 1, !tbaa !17
  store i8 %39, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %40

40:                                               ; preds = %29, %36
  store ptr %0, ptr %3, align 8
  %41 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 10
  store i32 1, ptr %41, align 4
  %42 = load ptr, ptr %31, align 8, !tbaa !5
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi ptr [ %42, %40 ], [ null, %34 ]
  %45 = icmp eq ptr %44, %3
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 8
  store i32 1, ptr %47, align 4, !tbaa !55
  %48 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 9
  store i32 0, ptr %48, align 8, !tbaa !56
  br label %49

49:                                               ; preds = %43, %46
  %50 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 6
  store i32 0, ptr %50, align 4, !tbaa !57
  store i32 %21, ptr %20, align 4, !tbaa !9
  ret ptr %3
}

; Function Attrs: mustprogress noreturn nounwind uwtable
define internal fastcc void @_ZL14yy_fatal_errorPKc(ptr noundef %0) unnamed_addr #5 {
  %2 = load ptr, ptr @stderr, align 8, !tbaa !5
  %3 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef nonnull @.str.28, ptr noundef %0) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal fastcc void @_ZN12_GLOBAL__N_15countEb() unnamed_addr #6 {
  %1 = load i32, ptr @pg_column, align 4, !tbaa !9
  %2 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %3 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  br label %4

4:                                                ; preds = %23, %0
  %5 = phi i32 [ %3, %0 ], [ %25, %23 ]
  %6 = phi i32 [ %2, %0 ], [ %24, %23 ]
  %7 = phi i32 [ %1, %0 ], [ %26, %23 ]
  %8 = phi ptr [ @yytext, %0 ], [ %27, %23 ]
  %9 = load i8, ptr %8, align 1, !tbaa !17
  switch i8 %9, label %20 [
    i8 0, label %28
    i8 10, label %10
    i8 9, label %13
  ]

10:                                               ; preds = %4
  store i32 0, ptr @pg_column, align 4, !tbaa !9
  %11 = add nsw i32 %5, 1
  store i32 %11, ptr @pg_lineno, align 4, !tbaa !9
  %12 = add nsw i32 %6, 1
  br label %23

13:                                               ; preds = %4
  %14 = srem i32 %7, 8
  %15 = add i32 %7, 8
  %16 = sub i32 %15, %14
  store i32 %16, ptr @pg_column, align 4, !tbaa !9
  %17 = srem i32 %6, 8
  %18 = add i32 %6, 8
  %19 = sub i32 %18, %17
  br label %23

20:                                               ; preds = %4
  %21 = add nsw i32 %7, 1
  store i32 %21, ptr @pg_column, align 4, !tbaa !9
  %22 = add nsw i32 %6, 1
  br label %23

23:                                               ; preds = %10, %20, %13
  %24 = phi i32 [ %12, %10 ], [ %22, %20 ], [ %19, %13 ]
  %25 = phi i32 [ %11, %10 ], [ %5, %20 ], [ %5, %13 ]
  %26 = phi i32 [ 0, %10 ], [ %21, %20 ], [ %16, %13 ]
  store i32 %24, ptr @pg_charpos, align 4, !tbaa !9
  %27 = getelementptr inbounds i8, ptr %8, i64 1
  br label %4, !llvm.loop !58

28:                                               ; preds = %4
  ret void
}

declare noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) local_unnamed_addr #2 align 2

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(ptr noundef nonnull align 8 dereferenceable(32), i8 noundef signext) local_unnamed_addr #2 align 2

declare void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef, ptr noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef, i32 noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) local_unnamed_addr #2 align 2

declare noundef ptr @_ZN2kc9mkintegerEi(i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @_ZN12_GLOBAL__N_111eat_commentEPN2kc20impl_casestring__StrE(ptr noundef %0) unnamed_addr #2 {
  %2 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  br label %3

3:                                                ; preds = %43, %1
  %4 = phi i32 [ 1, %1 ], [ %44, %43 ]
  %5 = phi i32 [ 32, %1 ], [ %6, %43 ]
  %6 = tail call fastcc noundef i32 @_ZL7yyinputv(), !range !59
  %7 = shl i32 %6, 24
  switch i32 %7, label %26 [
    i32 167772160, label %8
    i32 150994944, label %13
    i32 0, label %22
  ]

8:                                                ; preds = %3
  %9 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %10 = add nsw i32 %9, 1
  store i32 %10, ptr @pg_lineno, align 4, !tbaa !9
  store i32 0, ptr @pg_column, align 4, !tbaa !9
  %11 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %12 = add nsw i32 %11, 1
  store i32 %12, ptr @pg_charpos, align 4, !tbaa !9
  br label %43

13:                                               ; preds = %3
  %14 = load i32, ptr @pg_column, align 4, !tbaa !9
  %15 = srem i32 %14, 8
  %16 = add i32 %14, 8
  %17 = sub i32 %16, %15
  store i32 %17, ptr @pg_column, align 4, !tbaa !9
  %18 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %19 = srem i32 %18, 8
  %20 = add i32 %18, 8
  %21 = sub i32 %20, %19
  store i32 %21, ptr @pg_charpos, align 4, !tbaa !9
  br label %43

22:                                               ; preds = %3
  %23 = tail call noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef %0, i32 noundef %2)
  %24 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.31)
  %25 = tail call noundef ptr @_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %23, ptr noundef %24)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %25)
  br label %43

26:                                               ; preds = %3
  %27 = load i32, ptr @pg_column, align 4, !tbaa !9
  %28 = add nsw i32 %27, 1
  store i32 %28, ptr @pg_column, align 4, !tbaa !9
  %29 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %30 = add nsw i32 %29, 1
  store i32 %30, ptr @pg_charpos, align 4, !tbaa !9
  %31 = shl i32 %5, 24
  %32 = icmp eq i32 %31, 788529152
  %33 = icmp eq i32 %7, 704643072
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = add nuw nsw i32 %4, 1
  br label %43

37:                                               ; preds = %26
  %38 = icmp eq i32 %31, 704643072
  %39 = icmp eq i32 %7, 788529152
  %40 = and i1 %38, %39
  %41 = sext i1 %40 to i32
  %42 = add nsw i32 %4, %41
  br label %43

43:                                               ; preds = %37, %13, %22, %8, %35
  %44 = phi i32 [ %36, %35 ], [ %4, %8 ], [ %4, %22 ], [ %4, %13 ], [ %42, %37 ]
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %3, !llvm.loop !60

46:                                               ; preds = %43
  %47 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %48 = sub nsw i32 %47, %2
  ret i32 %48
}

; Function Attrs: mustprogress nounwind uwtable
define internal fastcc void @_ZN12_GLOBAL__N_116eat_line_commentEv() unnamed_addr #4 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = tail call fastcc noundef i32 @_ZL7yyinputv(), !range !59
  %3 = icmp eq i32 %2, 10
  br i1 %3, label %4, label %1, !llvm.loop !61

4:                                                ; preds = %1
  %5 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %6 = add nsw i32 %5, 1
  store i32 %6, ptr @pg_lineno, align 4, !tbaa !9
  store i32 0, ptr @pg_column, align 4, !tbaa !9
  %7 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %8 = add nsw i32 %7, 1
  store i32 %8, ptr @pg_charpos, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv() unnamed_addr #2 {
  %1 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = tail call noundef ptr @_ZN2kc13PosNoFileLineEv()
  %5 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.29)
  %6 = tail call noundef ptr @_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %4, ptr noundef %5)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %6)
  br label %7

7:                                                ; preds = %3, %0
  %8 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = tail call noundef ptr @_ZN2kc13PosNoFileLineEv()
  %12 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.30)
  %13 = tail call noundef ptr @_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %11, ptr noundef %12)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %13)
  br label %14

14:                                               ; preds = %10, %7
  store i32 0, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  store i32 0, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  ret void
}

declare noundef ptr @_ZN2kc9Problem2SEPKcS1_(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nounwind uwtable
define internal fastcc noundef i32 @_ZL18yy_get_next_bufferv() unnamed_addr #4 {
  %1 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %2 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %3 = getelementptr inbounds ptr, ptr %1, i64 %2
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.yy_buffer_state, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !47
  %7 = ptrtoint ptr %6 to i64
  %8 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %9 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %10 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %11 = add nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, ptr %6, i64 %12
  %14 = icmp ugt ptr %9, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %0
  %16 = load ptr, ptr @stderr, align 8, !tbaa !5
  %17 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.25) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

18:                                               ; preds = %0
  %19 = getelementptr inbounds %struct.yy_buffer_state, ptr %4, i64 0, i32 10
  %20 = load i32, ptr %19, align 4, !tbaa !54
  %21 = icmp eq i32 %20, 0
  %22 = ptrtoint ptr %9 to i64
  %23 = ptrtoint ptr %8 to i64
  %24 = sub i64 %22, %23
  br i1 %21, label %25, label %28

25:                                               ; preds = %18
  %26 = icmp eq i64 %24, 1
  %27 = select i1 %26, i32 1, i32 2
  br label %253

28:                                               ; preds = %18
  %29 = trunc i64 %24 to i32
  %30 = add i32 %29, -1
  %31 = icmp sgt i32 %29, 1
  br i1 %31, label %32, label %93

32:                                               ; preds = %28
  %33 = add i64 %22, 4294967294
  %34 = sub i64 %33, %23
  %35 = and i64 %34, 4294967295
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp ult i64 %35, 7
  %38 = sub i64 %7, %23
  %39 = icmp ult i64 %38, 32
  %40 = select i1 %37, i1 true, i1 %39
  br i1 %40, label %78, label %41

41:                                               ; preds = %32
  %42 = icmp ult i64 %35, 31
  br i1 %42, label %63, label %43

43:                                               ; preds = %41
  %44 = and i64 %36, -32
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %53, %45 ]
  %47 = getelementptr i8, ptr %8, i64 %46
  %48 = getelementptr i8, ptr %6, i64 %46
  %49 = load <16 x i8>, ptr %47, align 1, !tbaa !17
  %50 = getelementptr i8, ptr %47, i64 16
  %51 = load <16 x i8>, ptr %50, align 1, !tbaa !17
  store <16 x i8> %49, ptr %48, align 1, !tbaa !17
  %52 = getelementptr i8, ptr %48, i64 16
  store <16 x i8> %51, ptr %52, align 1, !tbaa !17
  %53 = add nuw i64 %46, 32
  %54 = icmp eq i64 %53, %44
  br i1 %54, label %55, label %45, !llvm.loop !62

55:                                               ; preds = %45
  %56 = icmp eq i64 %36, %44
  br i1 %56, label %91, label %57

57:                                               ; preds = %55
  %58 = getelementptr i8, ptr %6, i64 %44
  %59 = getelementptr i8, ptr %8, i64 %44
  %60 = trunc i64 %44 to i32
  %61 = and i64 %36, 24
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %41, %57
  %64 = phi i64 [ %44, %57 ], [ 0, %41 ]
  %65 = and i64 %36, -8
  %66 = trunc i64 %65 to i32
  %67 = getelementptr i8, ptr %8, i64 %65
  %68 = getelementptr i8, ptr %6, i64 %65
  br label %69

69:                                               ; preds = %69, %63
  %70 = phi i64 [ %64, %63 ], [ %74, %69 ]
  %71 = getelementptr i8, ptr %8, i64 %70
  %72 = getelementptr i8, ptr %6, i64 %70
  %73 = load <8 x i8>, ptr %71, align 1, !tbaa !17
  store <8 x i8> %73, ptr %72, align 1, !tbaa !17
  %74 = add nuw i64 %70, 8
  %75 = icmp eq i64 %74, %65
  br i1 %75, label %76, label %69, !llvm.loop !63

76:                                               ; preds = %69
  %77 = icmp eq i64 %36, %65
  br i1 %77, label %91, label %78

78:                                               ; preds = %32, %57, %76
  %79 = phi i32 [ 0, %32 ], [ %60, %57 ], [ %66, %76 ]
  %80 = phi ptr [ %8, %32 ], [ %59, %57 ], [ %67, %76 ]
  %81 = phi ptr [ %6, %32 ], [ %58, %57 ], [ %68, %76 ]
  br label %82

82:                                               ; preds = %78, %82
  %83 = phi i32 [ %89, %82 ], [ %79, %78 ]
  %84 = phi ptr [ %86, %82 ], [ %80, %78 ]
  %85 = phi ptr [ %88, %82 ], [ %81, %78 ]
  %86 = getelementptr inbounds i8, ptr %84, i64 1
  %87 = load i8, ptr %84, align 1, !tbaa !17
  %88 = getelementptr inbounds i8, ptr %85, i64 1
  store i8 %87, ptr %85, align 1, !tbaa !17
  %89 = add nuw nsw i32 %83, 1
  %90 = icmp eq i32 %89, %30
  br i1 %90, label %91, label %82, !llvm.loop !64

91:                                               ; preds = %82, %76, %55
  %92 = load ptr, ptr %3, align 8, !tbaa !5
  br label %93

93:                                               ; preds = %91, %28
  %94 = phi ptr [ %92, %91 ], [ %4, %28 ]
  %95 = getelementptr inbounds %struct.yy_buffer_state, ptr %94, i64 0, i32 11
  %96 = load i32, ptr %95, align 8, !tbaa !46
  %97 = icmp eq i32 %96, 2
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  store i32 0, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  br label %213

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.yy_buffer_state, ptr %94, i64 0, i32 3
  %101 = load i32, ptr %100, align 8, !tbaa !52
  %102 = icmp eq i32 %101, %29
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = load ptr, ptr @stderr, align 8, !tbaa !5
  %105 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %104, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.26) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

106:                                              ; preds = %99
  %107 = sub i32 %101, %29
  %108 = tail call i32 @llvm.umin.i32(i32 %107, i32 8192)
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %struct.yy_buffer_state, ptr %94, i64 0, i32 6
  %111 = load i32, ptr %110, align 4, !tbaa !57
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %158, label %113

113:                                              ; preds = %106
  %114 = icmp eq i32 %108, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %113
  store i32 0, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %116 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %117 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %118 = getelementptr inbounds ptr, ptr %116, i64 %117
  %119 = load ptr, ptr %118, align 8, !tbaa !5
  br label %213

120:                                              ; preds = %113
  %121 = sext i32 %30 to i64
  br label %122

122:                                              ; preds = %120, %126
  %123 = phi i64 [ 0, %120 ], [ %136, %126 ]
  %124 = load ptr, ptr @yyin, align 8, !tbaa !5
  %125 = tail call i32 @getc(ptr noundef %124)
  switch i32 %125, label %126 [
    i32 -1, label %138
    i32 10, label %138
  ]

126:                                              ; preds = %122
  %127 = trunc i32 %125 to i8
  %128 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %129 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %130 = getelementptr inbounds ptr, ptr %128, i64 %129
  %131 = load ptr, ptr %130, align 8, !tbaa !5
  %132 = getelementptr inbounds %struct.yy_buffer_state, ptr %131, i64 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !47
  %134 = getelementptr inbounds i8, ptr %133, i64 %121
  %135 = getelementptr inbounds i8, ptr %134, i64 %123
  store i8 %127, ptr %135, align 1, !tbaa !17
  %136 = add nuw nsw i64 %123, 1
  %137 = icmp eq i64 %136, %109
  br i1 %137, label %138, label %122, !llvm.loop !65

138:                                              ; preds = %126, %122, %122
  %139 = phi i64 [ %109, %126 ], [ %123, %122 ], [ %123, %122 ]
  switch i32 %125, label %204 [
    i32 10, label %140
    i32 -1, label %151
  ]

140:                                              ; preds = %138
  %141 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %142 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %143 = getelementptr inbounds ptr, ptr %141, i64 %142
  %144 = load ptr, ptr %143, align 8, !tbaa !5
  %145 = getelementptr inbounds %struct.yy_buffer_state, ptr %144, i64 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !47
  %147 = sext i32 %30 to i64
  %148 = getelementptr inbounds i8, ptr %146, i64 %147
  %149 = add nuw i64 %139, 1
  %150 = getelementptr inbounds i8, ptr %148, i64 %139
  store i8 10, ptr %150, align 1, !tbaa !17
  br label %204

151:                                              ; preds = %138
  %152 = load ptr, ptr @yyin, align 8, !tbaa !5
  %153 = tail call i32 @ferror(ptr noundef %152) #33
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %204, label %155

155:                                              ; preds = %151
  %156 = load ptr, ptr @stderr, align 8, !tbaa !5
  %157 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %156, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.27) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

158:                                              ; preds = %106
  %159 = tail call ptr @__errno_location() #34
  store i32 0, ptr %159, align 4, !tbaa !9
  %160 = sext i32 %30 to i64
  %161 = getelementptr inbounds %struct.yy_buffer_state, ptr %94, i64 0, i32 1
  %162 = load ptr, ptr %161, align 8, !tbaa !47
  %163 = getelementptr inbounds i8, ptr %162, i64 %160
  %164 = load ptr, ptr @yyin, align 8, !tbaa !5
  %165 = tail call i64 @fread(ptr noundef %163, i64 noundef 1, i64 noundef %109, ptr noundef %164)
  %166 = trunc i64 %165 to i32
  store i32 %166, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %197

168:                                              ; preds = %158, %183
  %169 = load ptr, ptr @yyin, align 8, !tbaa !5
  %170 = tail call i32 @ferror(ptr noundef %169) #33
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %177

172:                                              ; preds = %168
  %173 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %174 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %175 = getelementptr inbounds ptr, ptr %173, i64 %174
  %176 = load ptr, ptr %175, align 8, !tbaa !5
  br label %213

177:                                              ; preds = %168
  %178 = load i32, ptr %159, align 4, !tbaa !9
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = load ptr, ptr @stderr, align 8, !tbaa !5
  %182 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %181, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.27) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

183:                                              ; preds = %177
  store i32 0, ptr %159, align 4, !tbaa !9
  tail call void @clearerr(ptr noundef %169) #33
  %184 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %185 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %186 = getelementptr inbounds ptr, ptr %184, i64 %185
  %187 = load ptr, ptr %186, align 8, !tbaa !5
  %188 = getelementptr inbounds %struct.yy_buffer_state, ptr %187, i64 0, i32 1
  %189 = load ptr, ptr %188, align 8, !tbaa !47
  %190 = getelementptr inbounds i8, ptr %189, i64 %160
  %191 = load ptr, ptr @yyin, align 8, !tbaa !5
  %192 = tail call i64 @fread(ptr noundef %190, i64 noundef 1, i64 noundef %109, ptr noundef %191)
  %193 = trunc i64 %192 to i32
  store i32 %193, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %168, label %195, !llvm.loop !66

195:                                              ; preds = %183
  %196 = trunc i64 %192 to i32
  br label %197

197:                                              ; preds = %195, %158
  %198 = phi i32 [ %166, %158 ], [ %196, %195 ]
  %199 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %200 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %201 = getelementptr inbounds ptr, ptr %199, i64 %200
  %202 = load ptr, ptr %201, align 8, !tbaa !5
  %203 = getelementptr inbounds %struct.yy_buffer_state, ptr %202, i64 0, i32 4
  store i32 %198, ptr %203, align 4, !tbaa !13
  br label %232

204:                                              ; preds = %151, %140, %138
  %205 = phi i64 [ %149, %140 ], [ %139, %151 ], [ %139, %138 ]
  %206 = trunc i64 %205 to i32
  store i32 %206, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %207 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %208 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %209 = getelementptr inbounds ptr, ptr %207, i64 %208
  %210 = load ptr, ptr %209, align 8, !tbaa !5
  %211 = getelementptr inbounds %struct.yy_buffer_state, ptr %210, i64 0, i32 4
  store i32 %206, ptr %211, align 4, !tbaa !13
  %212 = icmp eq i32 %206, 0
  br i1 %212, label %218, label %232

213:                                              ; preds = %98, %172, %115
  %214 = phi ptr [ %119, %115 ], [ %176, %172 ], [ %94, %98 ]
  %215 = phi i64 [ %117, %115 ], [ %174, %172 ], [ %2, %98 ]
  %216 = phi ptr [ %116, %115 ], [ %173, %172 ], [ %1, %98 ]
  %217 = getelementptr inbounds %struct.yy_buffer_state, ptr %214, i64 0, i32 4
  store i32 0, ptr %217, align 4, !tbaa !13
  br label %218

218:                                              ; preds = %213, %204
  %219 = phi ptr [ %210, %204 ], [ %214, %213 ]
  %220 = phi i64 [ %208, %204 ], [ %215, %213 ]
  %221 = phi ptr [ %207, %204 ], [ %216, %213 ]
  %222 = icmp eq i32 %30, 0
  br i1 %222, label %223, label %230

223:                                              ; preds = %218
  %224 = load ptr, ptr @yyin, align 8, !tbaa !5
  tail call void @_Z9yyrestartP8_IO_FILE(ptr noundef %224)
  %225 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %226 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %227 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %228 = getelementptr inbounds ptr, ptr %226, i64 %227
  %229 = load ptr, ptr %228, align 8, !tbaa !5
  br label %232

230:                                              ; preds = %218
  %231 = getelementptr inbounds %struct.yy_buffer_state, ptr %219, i64 0, i32 11
  store i32 2, ptr %231, align 8, !tbaa !46
  br label %232

232:                                              ; preds = %197, %204, %223, %230
  %233 = phi ptr [ %229, %223 ], [ %219, %230 ], [ %210, %204 ], [ %202, %197 ]
  %234 = phi i64 [ %227, %223 ], [ %220, %230 ], [ %208, %204 ], [ %200, %197 ]
  %235 = phi ptr [ %226, %223 ], [ %221, %230 ], [ %207, %204 ], [ %199, %197 ]
  %236 = phi i32 [ %225, %223 ], [ 0, %230 ], [ %206, %204 ], [ %198, %197 ]
  %237 = phi i32 [ 1, %223 ], [ 2, %230 ], [ 0, %204 ], [ 0, %197 ]
  %238 = add nsw i32 %236, %30
  store i32 %238, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %239 = getelementptr inbounds ptr, ptr %235, i64 %234
  %240 = getelementptr inbounds %struct.yy_buffer_state, ptr %233, i64 0, i32 1
  %241 = load ptr, ptr %240, align 8, !tbaa !47
  %242 = sext i32 %238 to i64
  %243 = getelementptr inbounds i8, ptr %241, i64 %242
  store i8 0, ptr %243, align 1, !tbaa !17
  %244 = load ptr, ptr %239, align 8, !tbaa !5
  %245 = getelementptr inbounds %struct.yy_buffer_state, ptr %244, i64 0, i32 1
  %246 = load ptr, ptr %245, align 8, !tbaa !47
  %247 = add i32 %236, %29
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, ptr %246, i64 %248
  store i8 0, ptr %249, align 1, !tbaa !17
  %250 = load ptr, ptr %239, align 8, !tbaa !5
  %251 = getelementptr inbounds %struct.yy_buffer_state, ptr %250, i64 0, i32 1
  %252 = load ptr, ptr %251, align 8, !tbaa !47
  store ptr %252, ptr @yytext_ptr, align 8, !tbaa !5
  br label %253

253:                                              ; preds = %25, %232
  %254 = phi i32 [ %237, %232 ], [ %27, %25 ]
  ret i32 %254
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local void @_Z9yyrestartP8_IO_FILE(ptr noundef %0) local_unnamed_addr #4 {
  %2 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %29

9:                                                ; preds = %1
  %10 = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %10, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %10, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %23

11:                                               ; preds = %4
  %12 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %13 = add i64 %12, -1
  %14 = icmp ult i64 %5, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = shl i64 %12, 32
  %17 = add i64 %16, 34359738368
  %18 = ashr exact i64 %17, 32
  %19 = lshr exact i64 %17, 29
  %20 = and i64 %19, 4294967295
  %21 = tail call ptr @realloc(ptr noundef nonnull %2, i64 noundef %20) #30
  store ptr %21, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %22 = getelementptr inbounds ptr, ptr %21, i64 %12
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %22, i8 0, i64 64, i1 false)
  store i64 %18, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  br label %23

23:                                               ; preds = %15, %11, %9
  %24 = load ptr, ptr @yyin, align 8, !tbaa !5
  %25 = tail call noundef ptr @_Z16yy_create_bufferP8_IO_FILEi(ptr noundef %24, i32 noundef 16384)
  %26 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %27 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %28 = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %25, ptr %28, align 8, !tbaa !5
  br label %29

29:                                               ; preds = %4, %23
  %30 = phi ptr [ %25, %23 ], [ %7, %4 ]
  %31 = phi i64 [ %27, %23 ], [ %5, %4 ]
  %32 = phi ptr [ %26, %23 ], [ %2, %4 ]
  %33 = getelementptr inbounds ptr, ptr %32, i64 %31
  %34 = tail call ptr @__errno_location() #34
  %35 = load i32, ptr %34, align 4, !tbaa !9
  %36 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 4
  store i32 0, ptr %36, align 4, !tbaa !13
  %37 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !47
  store i8 0, ptr %38, align 1, !tbaa !17
  %39 = load ptr, ptr %37, align 8, !tbaa !47
  %40 = getelementptr inbounds i8, ptr %39, i64 1
  store i8 0, ptr %40, align 1, !tbaa !17
  %41 = load ptr, ptr %37, align 8, !tbaa !47
  %42 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 2
  store ptr %41, ptr %42, align 8, !tbaa !15
  %43 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 7
  store i32 1, ptr %43, align 8, !tbaa !18
  %44 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 11
  store i32 0, ptr %44, align 8, !tbaa !46
  %45 = load ptr, ptr %33, align 8, !tbaa !5
  %46 = icmp eq ptr %45, %30
  br i1 %46, label %47, label %56

47:                                               ; preds = %29
  %48 = load ptr, ptr %33, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.yy_buffer_state, ptr %48, i64 0, i32 4
  %50 = load i32, ptr %49, align 4, !tbaa !13
  store i32 %50, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %51 = getelementptr inbounds %struct.yy_buffer_state, ptr %48, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !15
  store ptr %52, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %52, ptr @yytext_ptr, align 8, !tbaa !5
  %53 = load ptr, ptr %33, align 8, !tbaa !5
  %54 = load ptr, ptr %53, align 8, !tbaa !16
  store ptr %54, ptr @yyin, align 8, !tbaa !5
  %55 = load i8, ptr %52, align 1, !tbaa !17
  store i8 %55, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %56

56:                                               ; preds = %29, %47
  store ptr %0, ptr %30, align 8, !tbaa !16
  %57 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 10
  store i32 1, ptr %57, align 4, !tbaa !54
  %58 = load ptr, ptr %33, align 8, !tbaa !5
  %59 = icmp eq ptr %58, %30
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 8
  store i32 1, ptr %61, align 4, !tbaa !55
  %62 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 9
  store i32 0, ptr %62, align 8, !tbaa !56
  br label %63

63:                                               ; preds = %56, %60
  %64 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 6
  store i32 0, ptr %64, align 4, !tbaa !57
  store i32 %35, ptr %34, align 4, !tbaa !9
  %65 = load ptr, ptr %33, align 8, !tbaa !5
  %66 = getelementptr inbounds %struct.yy_buffer_state, ptr %65, i64 0, i32 4
  %67 = load i32, ptr %66, align 4, !tbaa !13
  store i32 %67, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %68 = getelementptr inbounds %struct.yy_buffer_state, ptr %65, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !15
  store ptr %69, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %69, ptr @yytext_ptr, align 8, !tbaa !5
  %70 = load ptr, ptr %33, align 8, !tbaa !5
  %71 = load ptr, ptr %70, align 8, !tbaa !16
  store ptr %71, ptr @yyin, align 8, !tbaa !5
  %72 = load i8, ptr %69, align 1, !tbaa !17
  store i8 %72, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z19yy_switch_to_bufferP15yy_buffer_state(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %5, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %5, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %19

6:                                                ; preds = %1
  %7 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %8 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %19, label %11

11:                                               ; preds = %6
  %12 = shl i64 %8, 32
  %13 = add i64 %12, 34359738368
  %14 = ashr exact i64 %13, 32
  %15 = lshr exact i64 %13, 29
  %16 = and i64 %15, 4294967295
  %17 = tail call ptr @realloc(ptr noundef nonnull %2, i64 noundef %16) #30
  store ptr %17, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %18 = getelementptr inbounds ptr, ptr %17, i64 %8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %18, i8 0, i64 64, i1 false)
  store i64 %14, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  br label %19

19:                                               ; preds = %4, %11, %6
  %20 = phi i64 [ %7, %11 ], [ 0, %4 ], [ %7, %6 ]
  %21 = phi ptr [ %17, %11 ], [ %5, %4 ], [ %2, %6 ]
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8, !tbaa !5
  %24 = icmp eq ptr %23, %0
  br i1 %24, label %46, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds ptr, ptr %21, i64 %20
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %31 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store i8 %30, ptr %31, align 1, !tbaa !17
  %32 = load ptr, ptr %26, align 8, !tbaa !5
  %33 = getelementptr inbounds %struct.yy_buffer_state, ptr %32, i64 0, i32 2
  store ptr %31, ptr %33, align 8, !tbaa !15
  %34 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %35 = load ptr, ptr %26, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.yy_buffer_state, ptr %35, i64 0, i32 4
  store i32 %34, ptr %36, align 4, !tbaa !13
  br label %37

37:                                               ; preds = %29, %25
  %38 = getelementptr inbounds ptr, ptr %21, i64 %20
  store ptr %0, ptr %38, align 8, !tbaa !5
  %39 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 4
  %40 = load i32, ptr %39, align 4, !tbaa !13
  store i32 %40, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %41 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !15
  store ptr %42, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %42, ptr @yytext_ptr, align 8, !tbaa !5
  %43 = load ptr, ptr %38, align 8, !tbaa !5
  %44 = load ptr, ptr %43, align 8, !tbaa !16
  store ptr %44, ptr @yyin, align 8, !tbaa !5
  %45 = load i8, ptr %42, align 1, !tbaa !17
  store i8 %45, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %46

46:                                               ; preds = %19, %37
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z16yy_delete_bufferP15yy_buffer_state(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %8 = getelementptr inbounds ptr, ptr %4, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  br label %10

10:                                               ; preds = %3, %6
  %11 = phi ptr [ %9, %6 ], [ null, %3 ]
  %12 = icmp eq ptr %11, %0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %15 = getelementptr inbounds ptr, ptr %4, i64 %14
  store ptr null, ptr %15, align 8, !tbaa !5
  br label %16

16:                                               ; preds = %13, %10
  %17 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 5
  %18 = load i32, ptr %17, align 8, !tbaa !53
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !47
  tail call void @free(ptr noundef %22) #33
  br label %23

23:                                               ; preds = %20, %16
  tail call void @free(ptr noundef nonnull %0) #33
  br label %24

24:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @_Z6yyfreePv(ptr nocapture noundef %0) local_unnamed_addr #10 {
  tail call void @free(ptr noundef %0) #33
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_Z15yy_flush_bufferP15yy_buffer_state(ptr noundef %0) local_unnamed_addr #11 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 4
  store i32 0, ptr %4, align 4, !tbaa !13
  %5 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !47
  store i8 0, ptr %6, align 1, !tbaa !17
  %7 = load ptr, ptr %5, align 8, !tbaa !47
  %8 = getelementptr inbounds i8, ptr %7, i64 1
  store i8 0, ptr %8, align 1, !tbaa !17
  %9 = load ptr, ptr %5, align 8, !tbaa !47
  %10 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !15
  %11 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 7
  store i32 1, ptr %11, align 8, !tbaa !18
  %12 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 11
  store i32 0, ptr %12, align 8, !tbaa !46
  %13 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %14 = icmp eq ptr %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %17 = getelementptr inbounds ptr, ptr %13, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %3, %15
  %20 = phi ptr [ %18, %15 ], [ null, %3 ]
  %21 = icmp eq ptr %20, %0
  br i1 %21, label %22, label %33

22:                                               ; preds = %19
  %23 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %24 = getelementptr inbounds ptr, ptr %13, i64 %23
  %25 = load ptr, ptr %24, align 8, !tbaa !5
  %26 = getelementptr inbounds %struct.yy_buffer_state, ptr %25, i64 0, i32 4
  %27 = load i32, ptr %26, align 4, !tbaa !13
  store i32 %27, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %28 = getelementptr inbounds %struct.yy_buffer_state, ptr %25, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !15
  store ptr %29, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %29, ptr @yytext_ptr, align 8, !tbaa !5
  %30 = load ptr, ptr %24, align 8, !tbaa !5
  %31 = load ptr, ptr %30, align 8, !tbaa !16
  store ptr %31, ptr @yyin, align 8, !tbaa !5
  %32 = load i8, ptr %29, align 1, !tbaa !17
  store i8 %32, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %33

33:                                               ; preds = %1, %22, %19
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z19yypush_buffer_stateP15yy_buffer_state(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %46, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %7, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %7, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %21

8:                                                ; preds = %3
  %9 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %10 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %11 = add i64 %10, -1
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %8
  %14 = shl i64 %10, 32
  %15 = add i64 %14, 34359738368
  %16 = ashr exact i64 %15, 32
  %17 = lshr exact i64 %15, 29
  %18 = and i64 %17, 4294967295
  %19 = tail call ptr @realloc(ptr noundef nonnull %4, i64 noundef %18) #30
  store ptr %19, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %20 = getelementptr inbounds ptr, ptr %19, i64 %10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %20, i8 0, i64 64, i1 false)
  store i64 %16, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  br label %21

21:                                               ; preds = %8, %13, %6
  %22 = phi i64 [ %9, %13 ], [ 0, %6 ], [ %9, %8 ]
  %23 = phi ptr [ %19, %13 ], [ %7, %6 ], [ %4, %8 ]
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8, !tbaa !5
  %26 = icmp eq ptr %25, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %21
  %28 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %29 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store i8 %28, ptr %29, align 1, !tbaa !17
  %30 = load ptr, ptr %24, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.yy_buffer_state, ptr %30, i64 0, i32 2
  store ptr %29, ptr %31, align 8, !tbaa !15
  %32 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %33 = load ptr, ptr %24, align 8, !tbaa !5
  %34 = getelementptr inbounds %struct.yy_buffer_state, ptr %33, i64 0, i32 4
  store i32 %32, ptr %34, align 4, !tbaa !13
  %35 = add i64 %22, 1
  store i64 %35, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %36

36:                                               ; preds = %21, %27
  %37 = phi i64 [ %35, %27 ], [ %22, %21 ]
  %38 = getelementptr inbounds ptr, ptr %23, i64 %37
  store ptr %0, ptr %38, align 8, !tbaa !5
  %39 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 4
  %40 = load i32, ptr %39, align 4, !tbaa !13
  store i32 %40, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %41 = getelementptr inbounds %struct.yy_buffer_state, ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !15
  store ptr %42, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %42, ptr @yytext_ptr, align 8, !tbaa !5
  %43 = load ptr, ptr %38, align 8, !tbaa !5
  %44 = load ptr, ptr %43, align 8, !tbaa !16
  store ptr %44, ptr @yyin, align 8, !tbaa !5
  %45 = load i8, ptr %42, align 1, !tbaa !17
  store i8 %45, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %46

46:                                               ; preds = %1, %36
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z18yypop_buffer_statev() local_unnamed_addr #9 {
  %1 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %2 = icmp eq ptr %1, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %0
  %4 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %5 = getelementptr inbounds ptr, ptr %1, i64 %4
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = icmp eq ptr %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %3
  store ptr null, ptr %5, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.yy_buffer_state, ptr %6, i64 0, i32 5
  %10 = load i32, ptr %9, align 8, !tbaa !53
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.yy_buffer_state, ptr %6, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !47
  tail call void @free(ptr noundef %14) #33
  br label %15

15:                                               ; preds = %8, %12
  tail call void @free(ptr noundef nonnull %6) #33
  store ptr null, ptr %5, align 8, !tbaa !5
  %16 = icmp eq i64 %4, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = add i64 %4, -1
  store i64 %18, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %19 = getelementptr inbounds ptr, ptr %1, i64 %18
  %20 = load ptr, ptr %19, align 8, !tbaa !5
  %21 = icmp eq ptr %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds ptr, ptr %1, i64 %18
  %24 = getelementptr inbounds %struct.yy_buffer_state, ptr %20, i64 0, i32 4
  %25 = load i32, ptr %24, align 4, !tbaa !13
  store i32 %25, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %26 = getelementptr inbounds %struct.yy_buffer_state, ptr %20, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !15
  store ptr %27, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %27, ptr @yytext_ptr, align 8, !tbaa !5
  %28 = load ptr, ptr %23, align 8, !tbaa !5
  %29 = load ptr, ptr %28, align 8, !tbaa !16
  store ptr %29, ptr @yyin, align 8, !tbaa !5
  %30 = load i8, ptr %27, align 1, !tbaa !17
  store i8 %30, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %31

31:                                               ; preds = %15, %0, %3, %22, %17
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z14yy_scan_bufferPcj(ptr noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = add i32 %1, -2
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds i8, ptr %0, i64 %6
  %8 = load i8, ptr %7, align 1, !tbaa !17
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %4
  %11 = add i32 %1, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, ptr %0, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !17
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %10
  %17 = tail call noalias dereferenceable_or_null(64) ptr @malloc(i64 noundef 64) #29
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = load ptr, ptr @stderr, align 8, !tbaa !5
  %21 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.21) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 3
  store i32 %5, ptr %23, align 8, !tbaa !52
  %24 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 1
  store ptr %0, ptr %24, align 8, !tbaa !47
  %25 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 2
  store ptr %0, ptr %25, align 8, !tbaa !15
  %26 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 5
  store i32 0, ptr %26, align 8, !tbaa !53
  store ptr null, ptr %17, align 8, !tbaa !16
  %27 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 4
  store i32 %5, ptr %27, align 4, !tbaa !13
  %28 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 6
  store i32 0, ptr %28, align 4, !tbaa !57
  %29 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 7
  store i32 1, ptr %29, align 8, !tbaa !18
  %30 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 10
  store i32 0, ptr %30, align 4, !tbaa !54
  %31 = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 11
  store i32 0, ptr %31, align 8, !tbaa !46
  tail call void @_Z19yy_switch_to_bufferP15yy_buffer_state(ptr noundef nonnull %17)
  br label %32

32:                                               ; preds = %2, %4, %10, %22
  %33 = phi ptr [ %17, %22 ], [ null, %10 ], [ null, %4 ], [ null, %2 ]
  ret ptr %33
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z14yy_scan_stringPKc(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #35
  %3 = trunc i64 %2 to i32
  %4 = tail call noundef ptr @_Z13yy_scan_bytesPKci(ptr noundef %0, i32 noundef %3)
  ret ptr %4
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z13yy_scan_bytesPKci(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = add nsw i32 %1, 2
  %4 = zext i32 %3 to i64
  %5 = tail call noalias ptr @malloc(i64 noundef %4) #29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = icmp sgt i32 %1, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %7
  %10 = zext i32 %1 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %5, ptr align 1 %0, i64 %10, i1 false), !tbaa !17
  %11 = add nuw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, ptr %5, i64 %12
  store i8 0, ptr %13, align 1, !tbaa !17
  %14 = zext i32 %1 to i64
  %15 = getelementptr inbounds i8, ptr %5, i64 %14
  store i8 0, ptr %15, align 1, !tbaa !17
  br label %26

16:                                               ; preds = %2
  %17 = load ptr, ptr @stderr, align 8, !tbaa !5
  %18 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %17, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.22) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

19:                                               ; preds = %7
  %20 = add nsw i32 %1, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, ptr %5, i64 %21
  store i8 0, ptr %22, align 1, !tbaa !17
  %23 = sext i32 %1 to i64
  %24 = getelementptr inbounds i8, ptr %5, i64 %23
  store i8 0, ptr %24, align 1, !tbaa !17
  %25 = icmp ugt i32 %1, -3
  br i1 %25, label %53, label %26

26:                                               ; preds = %9, %19
  %27 = phi i32 [ %11, %9 ], [ %20, %19 ]
  %28 = zext i32 %1 to i64
  %29 = getelementptr inbounds i8, ptr %5, i64 %28
  %30 = load i8, ptr %29, align 1, !tbaa !17
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %53

32:                                               ; preds = %26
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds i8, ptr %5, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !17
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %32
  %38 = tail call noalias dereferenceable_or_null(64) ptr @malloc(i64 noundef 64) #29
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load ptr, ptr @stderr, align 8, !tbaa !5
  %42 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.21) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 3
  store i32 %1, ptr %44, align 8, !tbaa !52
  %45 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 1
  store ptr %5, ptr %45, align 8, !tbaa !47
  %46 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 2
  store ptr %5, ptr %46, align 8, !tbaa !15
  %47 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 5
  store i32 0, ptr %47, align 8, !tbaa !53
  store ptr null, ptr %38, align 8, !tbaa !16
  %48 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 4
  store i32 %1, ptr %48, align 4, !tbaa !13
  %49 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 6
  store i32 0, ptr %49, align 4, !tbaa !57
  %50 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 7
  store i32 1, ptr %50, align 8, !tbaa !18
  %51 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 10
  store i32 0, ptr %51, align 4, !tbaa !54
  %52 = getelementptr inbounds %struct.yy_buffer_state, ptr %38, i64 0, i32 11
  store i32 0, ptr %52, align 8, !tbaa !46
  tail call void @_Z19yy_switch_to_bufferP15yy_buffer_state(ptr noundef nonnull %38)
  store i32 1, ptr %47, align 8, !tbaa !53
  ret ptr %38

53:                                               ; preds = %32, %26, %19
  %54 = load ptr, ptr @stderr, align 8, !tbaa !5
  %55 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %54, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.23) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z12yyget_linenov() local_unnamed_addr #13 {
  %1 = load i32, ptr @yylineno, align 4, !tbaa !9
  ret i32 %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef ptr @_Z8yyget_inv() local_unnamed_addr #13 {
  %1 = load ptr, ptr @yyin, align 8, !tbaa !5
  ret ptr %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef ptr @_Z9yyget_outv() local_unnamed_addr #13 {
  %1 = load ptr, ptr @yyout, align 8, !tbaa !5
  ret ptr %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z10yyget_lengv() local_unnamed_addr #13 {
  %1 = load i32, ptr @yyleng, align 4, !tbaa !9
  ret i32 %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @_Z10yyget_textv() local_unnamed_addr #14 {
  ret ptr @yytext
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z12yyset_linenoi(i32 noundef %0) local_unnamed_addr #15 {
  store i32 %0, ptr @yylineno, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z8yyset_inP8_IO_FILE(ptr noundef %0) local_unnamed_addr #15 {
  store ptr %0, ptr @yyin, align 8, !tbaa !5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z9yyset_outP8_IO_FILE(ptr noundef %0) local_unnamed_addr #15 {
  store ptr %0, ptr @yyout, align 8, !tbaa !5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z11yyget_debugv() local_unnamed_addr #13 {
  %1 = load i32, ptr @yy_flex_debug, align 4, !tbaa !9
  ret i32 %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z11yyset_debugi(i32 noundef %0) local_unnamed_addr #15 {
  store i32 %0, ptr @yy_flex_debug, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef i32 @_Z13yylex_destroyv() local_unnamed_addr #4 {
  %1 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %2 = icmp eq ptr %1, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %0
  %4 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %5 = getelementptr inbounds ptr, ptr %1, i64 %4
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = icmp eq ptr %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds ptr, ptr %1, i64 %4
  store ptr null, ptr %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.yy_buffer_state, ptr %6, i64 0, i32 5
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.yy_buffer_state, ptr %6, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !47
  tail call void @free(ptr noundef %15) #33
  %16 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %17 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %18

18:                                               ; preds = %8, %13
  %19 = phi i64 [ %17, %13 ], [ %4, %8 ]
  %20 = phi ptr [ %16, %13 ], [ %1, %8 ]
  tail call void @free(ptr noundef nonnull %6) #33
  %21 = getelementptr inbounds ptr, ptr %20, i64 %19
  store ptr null, ptr %21, align 8, !tbaa !5
  br label %22

22:                                               ; preds = %3, %18, %0
  %23 = phi ptr [ null, %0 ], [ %20, %18 ], [ %1, %3 ]
  tail call void @free(ptr noundef %23) #33
  store ptr null, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %24 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  tail call void @free(ptr noundef %24) #33
  ret i32 0
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local noalias noundef ptr @_Z9yyreallocPvj(ptr nocapture noundef %0, i32 noundef %1) local_unnamed_addr #10 {
  %3 = zext i32 %1 to i64
  %4 = tail call ptr @realloc(ptr noundef %0, i64 noundef %3) #30
  ret ptr %4
}

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9do_NORMALv() local_unnamed_addr #2 {
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z8do_CEXPRv() local_unnamed_addr #15 {
  store i32 9, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z10do_CEXPRDQv() local_unnamed_addr #15 {
  store i32 11, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z10do_CEXPRSQv() local_unnamed_addr #15 {
  store i32 13, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z4do_Cv() local_unnamed_addr #15 {
  store i32 15, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nofree nounwind memory(read)
declare noundef i32 @ferror(ptr nocapture noundef) local_unnamed_addr #20

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__errno_location() local_unnamed_addr #21

; Function Attrs: nofree nounwind
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @clearerr(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #22

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #23

declare noundef ptr @_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef, ptr noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc13PosNoFileLineEv() local_unnamed_addr #7

; Function Attrs: mustprogress nounwind uwtable
define internal fastcc noundef i32 @_ZL7yyinputv() unnamed_addr #4 {
  %1 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %2 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store i8 %1, ptr %2, align 1, !tbaa !17
  %3 = icmp eq i8 %1, 0
  br i1 %3, label %4, label %35

4:                                                ; preds = %0
  %5 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %6 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %7 = getelementptr inbounds ptr, ptr %5, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.yy_buffer_state, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !47
  %11 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, ptr %10, i64 %12
  %14 = icmp ult ptr %2, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %4
  store i8 0, ptr %2, align 1, !tbaa !17
  br label %35

16:                                               ; preds = %4
  %17 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %18 = getelementptr inbounds i8, ptr %2, i64 1
  store ptr %18, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %19 = tail call fastcc noundef i32 @_ZL18yy_get_next_bufferv(), !range !51
  switch i32 %19, label %20 [
    i32 2, label %22
    i32 1, label %51
    i32 0, label %24
  ]

20:                                               ; preds = %16
  %21 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  br label %32

22:                                               ; preds = %16
  %23 = load ptr, ptr @yyin, align 8, !tbaa !5
  tail call void @_Z9yyrestartP8_IO_FILE(ptr noundef %23)
  br label %51

24:                                               ; preds = %16
  %25 = ptrtoint ptr %2 to i64
  %26 = ptrtoint ptr %17 to i64
  %27 = sub i64 %25, %26
  %28 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %29 = shl i64 %27, 32
  %30 = ashr exact i64 %29, 32
  %31 = getelementptr inbounds i8, ptr %28, i64 %30
  br label %32

32:                                               ; preds = %24, %20
  %33 = phi ptr [ %31, %24 ], [ %21, %20 ]
  %34 = load i8, ptr %33, align 1, !tbaa !17
  br label %35

35:                                               ; preds = %32, %15, %0
  %36 = phi i8 [ %34, %32 ], [ 0, %15 ], [ %1, %0 ]
  %37 = phi ptr [ %33, %32 ], [ %2, %15 ], [ %2, %0 ]
  %38 = zext i8 %36 to i32
  store i8 0, ptr %37, align 1, !tbaa !17
  %39 = getelementptr inbounds i8, ptr %37, i64 1
  store ptr %39, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %40 = load i8, ptr %39, align 1, !tbaa !17
  store i8 %40, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %41 = icmp eq i8 %36, 10
  %42 = zext i1 %41 to i32
  %43 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %44 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %45 = getelementptr inbounds ptr, ptr %43, i64 %44
  %46 = load ptr, ptr %45, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.yy_buffer_state, ptr %46, i64 0, i32 7
  store i32 %42, ptr %47, align 8, !tbaa !18
  br i1 %41, label %48, label %51

48:                                               ; preds = %35
  %49 = load i32, ptr @yylineno, align 4, !tbaa !9
  %50 = add nsw i32 %49, 1
  store i32 %50, ptr @yylineno, align 4, !tbaa !9
  br label %51

51:                                               ; preds = %35, %48, %16, %22
  %52 = phi i32 [ -1, %22 ], [ -1, %16 ], [ 10, %48 ], [ %38, %35 ]
  ret i32 %52
}

declare noundef ptr @_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #24

; Function Attrs: nounwind
declare noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) local_unnamed_addr #25

; Function Attrs: nofree nounwind uwtable
define internal void @_GLOBAL__sub_I_kimwl.cc() #26 section ".text.startup" personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 0, i32 2), ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, align 8, !tbaa !67
  store i64 0, ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 0, i32 1), align 8, !tbaa !68
  store i8 0, ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 0, i32 2), align 8, !tbaa !17
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, ptr nonnull @_ZN12_GLOBAL__N_18cincludeB5cxx11E, ptr nonnull @__dso_handle) #33
  ret void
}

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #27

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #28

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind }
attributes #2 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress noreturn nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nounwind willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nofree nounwind memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree nosync nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #23 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #25 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nofree nounwind willreturn memory(argmem: read) }
attributes #28 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #29 = { nounwind allocsize(0) }
attributes #30 = { nounwind allocsize(1) }
attributes #31 = { cold }
attributes #32 = { noreturn nounwind }
attributes #33 = { nounwind }
attributes #34 = { nounwind willreturn memory(none) }
attributes #35 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !7, i64 0}
!11 = !{!12, !12, i64 0}
!12 = !{!"long", !7, i64 0}
!13 = !{!14, !10, i64 28}
!14 = !{!"_ZTS15yy_buffer_state", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !10, i64 48, !10, i64 52, !10, i64 56}
!15 = !{!14, !6, i64 16}
!16 = !{!14, !6, i64 0}
!17 = !{!7, !7, i64 0}
!18 = !{!14, !10, i64 40}
!19 = !{!20, !20, i64 0}
!20 = !{!"short", !7, i64 0}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.mustprogress"}
!23 = distinct !{!23, !22}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !22, !26, !27}
!26 = !{!"llvm.loop.isvectorized", i32 1}
!27 = !{!"llvm.loop.unroll.runtime.disable"}
!28 = distinct !{!28, !22, !26, !27}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.disable"}
!31 = distinct !{!31, !22, !26}
!32 = distinct !{!32, !22}
!33 = !{!34, !6, i64 0}
!34 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !35, i64 0, !12, i64 8, !7, i64 16}
!35 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!36 = distinct !{!36, !22}
!37 = !{!38, !39, i64 66}
!38 = !{!"_ZTS15cmdline_options", !34, i64 0, !34, i64 32, !39, i64 64, !39, i64 65, !39, i64 66, !39, i64 67, !39, i64 68, !39, i64 69, !39, i64 70, !39, i64 71, !39, i64 72, !39, i64 73, !7, i64 74, !34, i64 80, !39, i64 112, !39, i64 113, !39, i64 114, !39, i64 115, !34, i64 120, !34, i64 152, !34, i64 184, !34, i64 216, !34, i64 248, !34, i64 280, !34, i64 312, !39, i64 344, !39, i64 345, !39, i64 346}
!39 = !{!"bool", !7, i64 0}
!40 = !{!38, !39, i64 67}
!41 = !{!38, !39, i64 68}
!42 = !{!38, !39, i64 69}
!43 = !{!38, !39, i64 70}
!44 = !{!38, !39, i64 72}
!45 = !{!38, !39, i64 73}
!46 = !{!14, !10, i64 56}
!47 = !{!14, !6, i64 8}
!48 = distinct !{!48, !22}
!49 = distinct !{!49, !22}
!50 = distinct !{!50, !22}
!51 = !{i32 0, i32 3}
!52 = !{!14, !10, i64 24}
!53 = !{!14, !10, i64 32}
!54 = !{!14, !10, i64 52}
!55 = !{!14, !10, i64 44}
!56 = !{!14, !10, i64 48}
!57 = !{!14, !10, i64 36}
!58 = distinct !{!58, !22}
!59 = !{i32 -1, i32 256}
!60 = distinct !{!60, !22}
!61 = distinct !{!61, !22}
!62 = distinct !{!62, !22, !26, !27}
!63 = distinct !{!63, !22, !26, !27}
!64 = distinct !{!64, !22, !26}
!65 = distinct !{!65, !22}
!66 = distinct !{!66, !22}
!67 = !{!35, !6, i64 0}
!68 = !{!34, !12, i64 8}
