; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/kimwitu++/kimwl.cc'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/kimwitu++/kimwl.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%union.KC_YYSTYPE = type { ptr }
%struct.cmdline_options = type <{ %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.std::__cxx11::basic_string", i8, i8, i8, i8, [4 x i8], %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", i8, i8, i8, [5 x i8] }>
%struct.yy_buffer_state = type { ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@yyleng = dso_local local_unnamed_addr global i32 0, align 4
@yyin = dso_local local_unnamed_addr global ptr null, align 8
@yyout = dso_local local_unnamed_addr global ptr null, align 8
@yylineno = dso_local local_unnamed_addr global i32 1, align 4
@yy_flex_debug = dso_local local_unnamed_addr global i32 0, align 4
@yytext = dso_local global [8192 x i8] zeroinitializer, align 16
@yytext_ptr = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_18cincludeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZL7yy_init = internal unnamed_addr global i1 false, align 4
@_ZL12yy_state_buf = internal unnamed_addr global ptr null, align 8
@_ZL8yy_start = internal unnamed_addr global i32 0, align 4
@stdin = external local_unnamed_addr global ptr, align 8
@stdout = external local_unnamed_addr global ptr, align 8
@_ZL15yy_buffer_stack = internal unnamed_addr global ptr null, align 8
@_ZL19yy_buffer_stack_top = internal unnamed_addr global i64 0, align 8
@_ZL10yy_c_buf_p = internal unnamed_addr global ptr null, align 8
@_ZL12yy_hold_char = internal unnamed_addr global i8 0, align 1
@_ZL12yy_state_ptr = internal unnamed_addr global ptr null, align 8
@_ZL5yy_ec = internal unnamed_addr constant [256 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 3, i32 4, i32 4, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 5, i32 6, i32 1, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 1, i32 1, i32 25, i32 26, i32 27, i32 28, i32 29, i32 26, i32 26, i32 30, i32 26, i32 26, i32 26, i32 26, i32 31, i32 32, i32 33, i32 34, i32 26, i32 35, i32 36, i32 37, i32 38, i32 26, i32 26, i32 26, i32 39, i32 26, i32 40, i32 41, i32 42, i32 43, i32 44, i32 1, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 26, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 26, i32 60, i32 61, i32 62, i32 63, i32 64, i32 65, i32 66, i32 67, i32 26, i32 68, i32 69, i32 70, i32 71, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1], align 16
@_ZL6yy_chk = internal unnamed_addr constant [922 x i16] [i16 0, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 6, i16 28, i16 91, i16 91, i16 28, i16 6, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 9, i16 19, i16 19, i16 9, i16 9, i16 431, i16 84, i16 9, i16 9, i16 9, i16 20, i16 20, i16 9, i16 11, i16 71, i16 9, i16 11, i16 401, i16 9, i16 12, i16 84, i16 13, i16 12, i16 14, i16 30, i16 27, i16 32, i16 47, i16 13, i16 30, i16 14, i16 32, i16 47, i16 51, i16 401, i16 51, i16 61, i16 9, i16 9, i16 9, i16 10, i16 61, i16 347, i16 10, i16 10, i16 71, i16 426, i16 10, i16 10, i16 10, i16 425, i16 11, i16 10, i16 347, i16 87, i16 10, i16 19, i16 12, i16 10, i16 13, i16 19, i16 14, i16 76, i16 87, i16 19, i16 20, i16 19, i16 76, i16 423, i16 20, i16 80, i16 80, i16 80, i16 20, i16 27, i16 20, i16 27, i16 10, i16 10, i16 10, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 17, i16 48, i16 48, i16 48, i16 48, i16 68, i16 73, i16 73, i16 73, i16 93, i16 93, i16 48, i16 48, i16 75, i16 48, i16 99, i16 48, i16 48, i16 162, i16 48, i16 74, i16 74, i16 74, i16 89, i16 48, i16 75, i16 81, i16 81, i16 81, i16 420, i16 89, i16 89, i16 144, i16 144, i16 155, i16 155, i16 155, i16 156, i16 156, i16 156, i16 68, i16 167, i16 167, i16 167, i16 370, i16 162, i16 208, i16 208, i16 162, i16 73, i16 412, i16 211, i16 162, i16 218, i16 419, i16 370, i16 418, i16 421, i16 218, i16 422, i16 430, i16 99, i16 413, i16 74, i16 417, i16 218, i16 218, i16 412, i16 421, i16 218, i16 422, i16 430, i16 415, i16 413, i16 75, i16 414, i16 75, i16 155, i16 211, i16 413, i16 156, i16 211, i16 411, i16 410, i16 409, i16 211, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 424, i16 408, i16 424, i16 424, i16 424, i16 424, i16 424, i16 407, i16 404, i16 403, i16 402, i16 400, i16 399, i16 398, i16 397, i16 396, i16 395, i16 394, i16 393, i16 392, i16 391, i16 390, i16 424, i16 424, i16 424, i16 424, i16 389, i16 387, i16 386, i16 382, i16 381, i16 380, i16 379, i16 378, i16 377, i16 374, i16 373, i16 372, i16 371, i16 369, i16 368, i16 367, i16 361, i16 360, i16 358, i16 357, i16 356, i16 355, i16 354, i16 353, i16 424, i16 424, i16 424, i16 424, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 438, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 439, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 440, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 441, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 442, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 443, i16 444, i16 444, i16 445, i16 445, i16 446, i16 352, i16 351, i16 350, i16 349, i16 348, i16 446, i16 446, i16 446, i16 447, i16 346, i16 345, i16 447, i16 447, i16 447, i16 447, i16 447, i16 447, i16 448, i16 342, i16 448, i16 448, i16 341, i16 448, i16 448, i16 448, i16 448, i16 449, i16 339, i16 337, i16 336, i16 335, i16 449, i16 333, i16 449, i16 450, i16 450, i16 451, i16 451, i16 452, i16 452, i16 452, i16 452, i16 452, i16 452, i16 452, i16 332, i16 331, i16 330, i16 329, i16 328, i16 327, i16 326, i16 325, i16 324, i16 323, i16 322, i16 321, i16 320, i16 319, i16 318, i16 317, i16 316, i16 315, i16 314, i16 313, i16 312, i16 311, i16 310, i16 309, i16 308, i16 306, i16 305, i16 304, i16 302, i16 301, i16 300, i16 299, i16 298, i16 297, i16 296, i16 295, i16 294, i16 293, i16 292, i16 290, i16 289, i16 288, i16 287, i16 286, i16 285, i16 284, i16 283, i16 282, i16 281, i16 280, i16 279, i16 274, i16 273, i16 272, i16 271, i16 270, i16 269, i16 268, i16 267, i16 266, i16 265, i16 263, i16 262, i16 261, i16 260, i16 259, i16 258, i16 257, i16 256, i16 255, i16 254, i16 253, i16 252, i16 251, i16 250, i16 249, i16 248, i16 247, i16 246, i16 245, i16 244, i16 243, i16 242, i16 241, i16 240, i16 239, i16 238, i16 237, i16 236, i16 235, i16 234, i16 233, i16 232, i16 231, i16 230, i16 229, i16 227, i16 226, i16 225, i16 223, i16 222, i16 221, i16 220, i16 219, i16 217, i16 216, i16 215, i16 214, i16 213, i16 212, i16 210, i16 207, i16 206, i16 205, i16 204, i16 203, i16 202, i16 201, i16 200, i16 199, i16 198, i16 197, i16 196, i16 195, i16 194, i16 193, i16 192, i16 191, i16 190, i16 189, i16 188, i16 187, i16 186, i16 185, i16 184, i16 183, i16 181, i16 180, i16 179, i16 178, i16 177, i16 176, i16 175, i16 174, i16 173, i16 171, i16 170, i16 169, i16 166, i16 159, i16 157, i16 143, i16 142, i16 141, i16 140, i16 139, i16 138, i16 137, i16 136, i16 135, i16 134, i16 133, i16 132, i16 131, i16 130, i16 129, i16 128, i16 127, i16 126, i16 125, i16 124, i16 123, i16 122, i16 121, i16 120, i16 119, i16 114, i16 112, i16 111, i16 110, i16 107, i16 106, i16 105, i16 104, i16 103, i16 101, i16 98, i16 97, i16 96, i16 95, i16 92, i16 90, i16 86, i16 85, i16 83, i16 82, i16 79, i16 78, i16 64, i16 57, i16 46, i16 45, i16 44, i16 43, i16 42, i16 41, i16 40, i16 39, i16 38, i16 37, i16 36, i16 34, i16 33, i16 31, i16 21, i16 5, i16 4, i16 2, i16 1, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437], align 16
@_ZL7yy_base = internal unnamed_addr constant [453 x i16] [i16 0, i16 846, i16 845, i16 0, i16 839, i16 843, i16 69, i16 77, i16 0, i16 146, i16 186, i16 159, i16 165, i16 167, i16 169, i16 228, i16 0, i16 299, i16 0, i16 148, i16 157, i16 845, i16 850, i16 850, i16 850, i16 850, i16 850, i16 155, i16 13, i16 850, i16 154, i16 827, i16 162, i16 824, i16 822, i16 0, i16 778, i16 782, i16 790, i16 772, i16 784, i16 777, i16 775, i16 785, i16 771, i16 765, i16 774, i16 123, i16 326, i16 850, i16 850, i16 114, i16 850, i16 850, i16 0, i16 0, i16 850, i16 811, i16 850, i16 850, i16 850, i16 172, i16 850, i16 850, i16 788, i16 850, i16 0, i16 850, i16 369, i16 0, i16 850, i16 153, i16 0, i16 374, i16 388, i16 376, i16 198, i16 0, i16 787, i16 777, i16 217, i16 394, i16 803, i16 802, i16 146, i16 812, i16 800, i16 189, i16 850, i16 377, i16 799, i16 52, i16 798, i16 356, i16 0, i16 778, i16 796, i16 769, i16 768, i16 362, i16 850, i16 814, i16 850, i16 757, i16 758, i16 764, i16 745, i16 792, i16 850, i16 850, i16 746, i16 745, i16 789, i16 850, i16 790, i16 850, i16 850, i16 850, i16 0, i16 744, i16 748, i16 754, i16 741, i16 741, i16 752, i16 742, i16 748, i16 753, i16 738, i16 735, i16 735, i16 739, i16 731, i16 747, i16 729, i16 728, i16 744, i16 739, i16 728, i16 722, i16 723, i16 720, i16 781, i16 780, i16 400, i16 0, i16 0, i16 0, i16 0, i16 850, i16 0, i16 850, i16 0, i16 850, i16 0, i16 402, i16 405, i16 731, i16 850, i16 761, i16 850, i16 850, i16 386, i16 850, i16 0, i16 850, i16 717, i16 409, i16 850, i16 765, i16 754, i16 753, i16 0, i16 720, i16 709, i16 771, i16 756, i16 726, i16 725, i16 708, i16 715, i16 714, i16 850, i16 708, i16 704, i16 719, i16 714, i16 700, i16 701, i16 696, i16 706, i16 696, i16 708, i16 703, i16 693, i16 709, i16 691, i16 691, i16 693, i16 692, i16 692, i16 692, i16 685, i16 693, i16 687, i16 691, i16 741, i16 740, i16 414, i16 850, i16 679, i16 419, i16 709, i16 706, i16 700, i16 688, i16 687, i16 695, i16 376, i16 674, i16 679, i16 670, i16 682, i16 681, i16 0, i16 667, i16 665, i16 667, i16 0, i16 681, i16 672, i16 663, i16 670, i16 674, i16 670, i16 657, i16 657, i16 658, i16 668, i16 656, i16 655, i16 663, i16 667, i16 659, i16 662, i16 650, i16 660, i16 659, i16 673, i16 669, i16 671, i16 644, i16 641, i16 660, i16 640, i16 655, i16 639, i16 649, i16 640, i16 634, i16 679, i16 627, i16 628, i16 627, i16 0, i16 636, i16 633, i16 627, i16 640, i16 625, i16 639, i16 636, i16 627, i16 638, i16 629, i16 850, i16 850, i16 850, i16 850, i16 618, i16 631, i16 621, i16 613, i16 632, i16 611, i16 615, i16 637, i16 638, i16 638, i16 621, i16 621, i16 850, i16 618, i16 607, i16 614, i16 601, i16 606, i16 648, i16 604, i16 603, i16 597, i16 596, i16 597, i16 0, i16 600, i16 608, i16 607, i16 0, i16 605, i16 605, i16 598, i16 597, i16 606, i16 590, i16 592, i16 584, i16 596, i16 582, i16 595, i16 605, i16 614, i16 607, i16 583, i16 600, i16 586, i16 586, i16 580, i16 576, i16 590, i16 575, i16 575, i16 583, i16 586, i16 573, i16 0, i16 556, i16 567, i16 554, i16 0, i16 565, i16 0, i16 558, i16 553, i16 850, i16 850, i16 547, i16 537, i16 189, i16 565, i16 560, i16 528, i16 545, i16 528, i16 460, i16 459, i16 467, i16 459, i16 460, i16 464, i16 850, i16 456, i16 455, i16 0, i16 0, i16 0, i16 0, i16 0, i16 465, i16 466, i16 452, i16 412, i16 493, i16 483, i16 473, i16 459, i16 850, i16 850, i16 462, i16 458, i16 443, i16 443, i16 450, i16 445, i16 850, i16 850, i16 850, i16 446, i16 451, i16 850, i16 469, i16 458, i16 448, i16 446, i16 433, i16 441, i16 440, i16 431, i16 425, i16 441, i16 440, i16 455, i16 164, i16 436, i16 427, i16 419, i16 850, i16 850, i16 418, i16 425, i16 393, i16 406, i16 424, i16 418, i16 430, i16 393, i16 393, i16 850, i16 385, i16 366, i16 363, i16 347, i16 425, i16 427, i16 199, i16 455, i16 138, i16 135, i16 850, i16 850, i16 0, i16 428, i16 136, i16 850, i16 850, i16 850, i16 850, i16 850, i16 850, i16 526, i16 535, i16 544, i16 553, i16 562, i16 571, i16 573, i16 575, i16 584, i16 593, i16 602, i16 611, i16 612, i16 614, i16 623], align 16
@_ZL6yy_def = internal unnamed_addr constant [453 x i16] [i16 0, i16 438, i16 438, i16 437, i16 3, i16 439, i16 439, i16 437, i16 7, i16 440, i16 440, i16 441, i16 441, i16 442, i16 442, i16 437, i16 15, i16 437, i16 17, i16 443, i16 443, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 445, i16 446, i16 437, i16 437, i16 437, i16 437, i16 437, i16 446, i16 437, i16 437, i16 437, i16 437, i16 447, i16 437, i16 437, i16 448, i16 437, i16 437, i16 449, i16 449, i16 437, i16 437, i16 437, i16 450, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 451, i16 437, i16 437, i16 451, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 445, i16 446, i16 446, i16 446, i16 437, i16 447, i16 437, i16 448, i16 437, i16 449, i16 449, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 451, i16 451, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 451, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 444, i16 444, i16 444, i16 444, i16 444, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 450, i16 437, i16 437, i16 437, i16 437, i16 452, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 0, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437], align 16
@_ZL7yy_meta = internal unnamed_addr constant [72 x i32] [i32 0, i32 1, i32 1, i32 2, i32 1, i32 1, i32 3, i32 4, i32 1, i32 1, i32 5, i32 6, i32 6, i32 1, i32 1, i32 6, i32 1, i32 1, i32 7, i32 8, i32 1, i32 6, i32 1, i32 1, i32 1, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 6, i32 2, i32 6, i32 1, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 7, i32 1, i32 7, i32 1], align 16
@_ZL6yy_nxt = internal unnamed_addr constant [922 x i16] [i16 0, i16 22, i16 24, i16 25, i16 24, i16 22, i16 26, i16 27, i16 28, i16 22, i16 29, i16 22, i16 22, i16 22, i16 22, i16 22, i16 30, i16 31, i16 32, i16 33, i16 34, i16 22, i16 22, i16 22, i16 22, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 35, i16 22, i16 22, i16 22, i16 22, i16 35, i16 36, i16 35, i16 37, i16 38, i16 39, i16 35, i16 35, i16 35, i16 35, i16 35, i16 40, i16 35, i16 35, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 35, i16 35, i16 35, i16 22, i16 22, i16 22, i16 22, i16 50, i16 110, i16 170, i16 168, i16 111, i16 51, i16 22, i16 52, i16 53, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 32, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 22, i16 22, i16 22, i16 22, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 54, i16 22, i16 22, i16 22, i16 22, i16 56, i16 101, i16 102, i16 26, i16 57, i16 436, i16 168, i16 29, i16 58, i16 59, i16 101, i16 102, i16 60, i16 56, i16 153, i16 61, i16 67, i16 412, i16 62, i16 56, i16 168, i16 56, i16 67, i16 56, i16 112, i16 107, i16 115, i16 130, i16 70, i16 113, i16 70, i16 116, i16 131, i16 143, i16 413, i16 144, i16 147, i16 63, i16 64, i16 65, i16 56, i16 148, i16 370, i16 26, i16 57, i16 149, i16 435, i16 29, i16 58, i16 59, i16 434, i16 68, i16 60, i16 371, i16 168, i16 61, i16 103, i16 68, i16 62, i16 71, i16 104, i16 71, i16 162, i16 168, i16 105, i16 103, i16 106, i16 163, i16 432, i16 104, i16 167, i16 167, i16 167, i16 105, i16 108, i16 106, i16 109, i16 63, i16 64, i16 65, i16 72, i16 73, i16 74, i16 73, i16 72, i16 26, i16 75, i16 72, i16 72, i16 29, i16 72, i16 72, i16 72, i16 72, i16 72, i16 72, i16 72, i16 76, i16 72, i16 72, i16 72, i16 72, i16 72, i16 72, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 72, i16 78, i16 72, i16 72, i16 77, i16 79, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 77, i16 22, i16 72, i16 22, i16 72, i16 22, i16 80, i16 81, i16 80, i16 82, i16 22, i16 22, i16 83, i16 84, i16 22, i16 85, i16 22, i16 86, i16 87, i16 88, i16 89, i16 22, i16 90, i16 22, i16 22, i16 22, i16 91, i16 92, i16 93, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 95, i16 22, i16 22, i16 96, i16 94, i16 94, i16 94, i16 94, i16 97, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 98, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 94, i16 22, i16 99, i16 22, i16 88, i16 132, i16 133, i16 134, i16 135, i16 151, i16 155, i16 156, i16 155, i16 168, i16 171, i16 136, i16 137, i16 158, i16 138, i16 168, i16 139, i16 140, i16 211, i16 141, i16 156, i16 156, i16 156, i16 168, i16 142, i16 159, i16 167, i16 167, i16 167, i16 429, i16 168, i16 169, i16 208, i16 209, i16 155, i16 156, i16 155, i16 156, i16 156, i16 156, i16 149, i16 167, i16 167, i16 167, i16 370, i16 212, i16 208, i16 209, i16 213, i16 157, i16 412, i16 211, i16 214, i16 254, i16 428, i16 371, i16 427, i16 430, i16 255, i16 422, i16 430, i16 168, i16 422, i16 157, i16 426, i16 256, i16 257, i16 413, i16 431, i16 258, i16 423, i16 431, i16 425, i16 423, i16 160, i16 424, i16 161, i16 157, i16 212, i16 413, i16 157, i16 213, i16 421, i16 420, i16 419, i16 214, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 418, i16 433, i16 433, i16 433, i16 433, i16 433, i16 417, i16 416, i16 415, i16 414, i16 411, i16 410, i16 409, i16 408, i16 407, i16 406, i16 405, i16 404, i16 403, i16 402, i16 401, i16 433, i16 433, i16 433, i16 433, i16 400, i16 399, i16 398, i16 397, i16 396, i16 395, i16 394, i16 393, i16 392, i16 391, i16 390, i16 389, i16 388, i16 387, i16 386, i16 385, i16 384, i16 383, i16 382, i16 381, i16 380, i16 379, i16 378, i16 377, i16 433, i16 433, i16 433, i16 433, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 49, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 55, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 66, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 69, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 100, i16 118, i16 118, i16 145, i16 145, i16 146, i16 376, i16 375, i16 374, i16 373, i16 372, i16 146, i16 146, i16 146, i16 150, i16 369, i16 368, i16 150, i16 150, i16 150, i16 150, i16 150, i16 150, i16 152, i16 367, i16 152, i16 152, i16 366, i16 152, i16 152, i16 152, i16 152, i16 154, i16 365, i16 364, i16 363, i16 362, i16 154, i16 361, i16 154, i16 164, i16 164, i16 172, i16 172, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 433, i16 360, i16 359, i16 358, i16 357, i16 356, i16 355, i16 354, i16 353, i16 352, i16 351, i16 350, i16 349, i16 348, i16 347, i16 346, i16 333, i16 345, i16 332, i16 344, i16 343, i16 342, i16 341, i16 340, i16 339, i16 338, i16 337, i16 336, i16 335, i16 334, i16 333, i16 332, i16 331, i16 330, i16 329, i16 328, i16 327, i16 326, i16 325, i16 324, i16 323, i16 322, i16 321, i16 320, i16 319, i16 318, i16 317, i16 316, i16 315, i16 314, i16 313, i16 312, i16 311, i16 310, i16 309, i16 308, i16 307, i16 306, i16 305, i16 304, i16 303, i16 302, i16 301, i16 300, i16 299, i16 298, i16 297, i16 296, i16 295, i16 294, i16 293, i16 292, i16 291, i16 290, i16 289, i16 288, i16 287, i16 286, i16 285, i16 284, i16 283, i16 282, i16 281, i16 280, i16 279, i16 278, i16 277, i16 276, i16 275, i16 274, i16 273, i16 272, i16 271, i16 270, i16 269, i16 268, i16 267, i16 266, i16 265, i16 264, i16 263, i16 262, i16 261, i16 260, i16 259, i16 253, i16 252, i16 251, i16 250, i16 249, i16 248, i16 247, i16 207, i16 206, i16 246, i16 245, i16 244, i16 243, i16 242, i16 241, i16 240, i16 239, i16 238, i16 237, i16 236, i16 235, i16 234, i16 233, i16 232, i16 231, i16 230, i16 229, i16 228, i16 227, i16 226, i16 225, i16 224, i16 223, i16 222, i16 221, i16 220, i16 219, i16 218, i16 175, i16 217, i16 216, i16 168, i16 168, i16 168, i16 215, i16 159, i16 210, i16 207, i16 206, i16 205, i16 204, i16 203, i16 202, i16 201, i16 200, i16 199, i16 198, i16 197, i16 196, i16 195, i16 194, i16 193, i16 192, i16 191, i16 190, i16 189, i16 188, i16 187, i16 186, i16 185, i16 184, i16 183, i16 182, i16 112, i16 181, i16 180, i16 107, i16 179, i16 178, i16 177, i16 176, i16 175, i16 174, i16 173, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 166, i16 165, i16 149, i16 107, i16 129, i16 128, i16 127, i16 126, i16 125, i16 124, i16 123, i16 122, i16 121, i16 120, i16 119, i16 117, i16 112, i16 114, i16 437, i16 50, i16 48, i16 23, i16 23, i16 21, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437, i16 437], align 16
@_ZL9yy_accept = internal unnamed_addr constant [439 x i16] [i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 8, i16 9, i16 12, i16 14, i16 17, i16 19, i16 21, i16 24, i16 26, i16 28, i16 30, i16 33, i16 35, i16 38, i16 41, i16 44, i16 47, i16 50, i16 53, i16 56, i16 59, i16 62, i16 65, i16 68, i16 71, i16 74, i16 76, i16 79, i16 81, i16 84, i16 87, i16 89, i16 92, i16 95, i16 97, i16 100, i16 103, i16 106, i16 109, i16 112, i16 115, i16 118, i16 121, i16 124, i16 127, i16 130, i16 133, i16 136, i16 139, i16 142, i16 145, i16 148, i16 150, i16 153, i16 156, i16 159, i16 162, i16 165, i16 168, i16 170, i16 173, i16 176, i16 179, i16 181, i16 184, i16 187, i16 190, i16 193, i16 196, i16 199, i16 202, i16 205, i16 208, i16 210, i16 213, i16 216, i16 219, i16 222, i16 224, i16 227, i16 229, i16 231, i16 233, i16 235, i16 237, i16 238, i16 239, i16 240, i16 240, i16 240, i16 241, i16 242, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 259, i16 260, i16 261, i16 261, i16 262, i16 263, i16 265, i16 267, i16 268, i16 269, i16 270, i16 271, i16 272, i16 273, i16 274, i16 274, i16 274, i16 275, i16 276, i16 277, i16 278, i16 279, i16 280, i16 281, i16 282, i16 283, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 290, i16 291, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 293, i16 294, i16 295, i16 296, i16 297, i16 298, i16 299, i16 300, i16 301, i16 302, i16 303, i16 304, i16 305, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 306, i16 307, i16 308, i16 308, i16 309, i16 309, i16 309, i16 309, i16 309, i16 309, i16 310, i16 311, i16 313, i16 313, i16 313, i16 313, i16 313, i16 313, i16 313, i16 315, i16 316, i16 317, i16 318, i16 320, i16 321, i16 322, i16 323, i16 324, i16 325, i16 326, i16 327, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 328, i16 329, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 330, i16 332, i16 333, i16 334, i16 335, i16 336, i16 337, i16 338, i16 339, i16 340, i16 341, i16 342, i16 343, i16 344, i16 345, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 346, i16 347, i16 348, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 349, i16 350, i16 352, i16 353, i16 354, i16 355, i16 357, i16 358, i16 359, i16 360, i16 361, i16 361, i16 361, i16 361, i16 362, i16 362, i16 363, i16 363, i16 363, i16 363, i16 363, i16 364, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 366, i16 368, i16 369, i16 370, i16 371, i16 373, i16 374, i16 376, i16 377, i16 377, i16 378, i16 379, i16 379, i16 379, i16 379, i16 379, i16 379, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 380, i16 381, i16 381, i16 381, i16 383, i16 385, i16 387, i16 389, i16 391, i16 391, i16 391, i16 391, i16 391, i16 391, i16 391, i16 391, i16 392, i16 393, i16 394, i16 394, i16 394, i16 394, i16 394, i16 394, i16 394, i16 395, i16 396, i16 397, i16 397, i16 397, i16 398, i16 398, i16 398, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 399, i16 400, i16 400, i16 400, i16 401, i16 402, i16 402, i16 402, i16 402, i16 402, i16 402, i16 402, i16 402, i16 403, i16 403, i16 404, i16 404, i16 404, i16 404, i16 404, i16 404, i16 404, i16 404, i16 406, i16 406, i16 406, i16 407, i16 408, i16 409, i16 409, i16 409, i16 410, i16 411, i16 412, i16 413, i16 414, i16 414], align 16
@_ZL10yy_acclist = internal unnamed_addr constant [414 x i16] [i16 0, i16 42, i16 42, i16 82, i16 82, i16 94, i16 81, i16 93, i16 93, i16 1, i16 81, i16 93, i16 1, i16 93, i16 54, i16 81, i16 93, i16 81, i16 93, i16 81, i16 93, i16 55, i16 81, i16 93, i16 81, i16 93, i16 81, i16 93, i16 81, i16 93, i16 23, i16 81, i16 93, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 45, i16 81, i16 93, i16 81, i16 93, i16 13, i16 81, i16 93, i16 13, i16 93, i16 13, i16 81, i16 93, i16 11, i16 81, i16 93, i16 12, i16 93, i16 10, i16 81, i16 93, i16 46, i16 81, i16 93, i16 51, i16 93, i16 50, i16 81, i16 93, i16 58, i16 81, i16 93, i16 59, i16 81, i16 93, i16 57, i16 81, i16 93, i16 46, i16 81, i16 93, i16 56, i16 81, i16 93, i16 60, i16 81, i16 93, i16 52, i16 81, i16 93, i16 61, i16 81, i16 93, i16 62, i16 81, i16 93, i16 63, i16 81, i16 93, i16 52, i16 81, i16 93, i16 67, i16 81, i16 93, i16 65, i16 81, i16 93, i16 52, i16 81, i16 93, i16 76, i16 81, i16 93, i16 76, i16 81, i16 93, i16 51, i16 93, i16 73, i16 81, i16 93, i16 77, i16 81, i16 93, i16 75, i16 81, i16 93, i16 70, i16 81, i16 93, i16 75, i16 81, i16 93, i16 42, i16 81, i16 93, i16 42, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 43, i16 81, i16 93, i16 44, i16 81, i16 93, i16 81, i16 93, i16 43, i16 81, i16 93, i16 44, i16 81, i16 93, i16 44, i16 81, i16 93, i16 43, i16 81, i16 93, i16 92, i16 93, i16 82, i16 92, i16 93, i16 83, i16 93, i16 92, i16 93, i16 92, i16 93, i16 92, i16 93, i16 92, i16 93, i16 47, i16 48, i16 49, i16 23, i16 20, i16 17, i16 19, i16 41, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 9, i16 14, i16 10, i16 46, i16 16, i16 46, i16 18, i16 46, i16 53, i16 62, i16 64, i16 67, i16 66, i16 76, i16 76, i16 68, i16 73, i16 71, i16 72, i16 16, i16 18, i16 75, i16 69, i16 75, i16 42, i16 43, i16 43, i16 43, i16 43, i16 44, i16 44, i16 44, i16 82, i16 40, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 9, i16 14, i16 15, i16 75, i16 44, i16 43, i16 44, i16 26, i16 45, i16 45, i16 45, i16 45, i16 24, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 75, i16 44, i16 30, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 45, i16 38, i16 39, i16 35, i16 36, i16 75, i16 44, i16 43, i16 45, i16 28, i16 45, i16 45, i16 45, i16 45, i16 25, i16 45, i16 45, i16 45, i16 45, i16 45, i16 4, i16 2, i16 75, i16 43, i16 44, i16 22, i16 45, i16 45, i16 45, i16 45, i16 29, i16 45, i16 45, i16 33, i16 45, i16 45, i16 37, i16 8, i16 75, i16 84, i16 34, i16 45, i16 21, i16 45, i16 27, i16 45, i16 32, i16 45, i16 31, i16 45, i16 75, i16 43, i16 85, i16 5, i16 3, i16 7, i16 78, i16 75, i16 75, i16 87, i16 86, i16 75, i16 88, i16 75, i16 16458, i16 91, i16 6, i16 16458, i16 80, i16 8266, i16 89, i16 90, i16 79], align 16
@_ZL26yy_looking_for_trail_begin = internal unnamed_addr global i32 0, align 4
@_ZL13yy_full_match = internal unnamed_addr global ptr null, align 8
@_ZL13yy_full_state = internal unnamed_addr global ptr null, align 8
@.str.1 = private unnamed_addr constant [32 x i8] c"token too large, exceeds YYLMAX\00", align 1
@yylval = external local_unnamed_addr global %union.KC_YYSTYPE, align 8
@pg_filename = external local_unnamed_addr global ptr, align 8
@pg_lineno = external local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [69 x i8] c"Opening '%{' (nested C++ includes; preceding closing '%}' not found)\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\\\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\\\\\00", align 1
@_ZN12_GLOBAL__N_119cinit_paren_nestingE = internal unnamed_addr global i32 0, align 4
@.str.5 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZN12_GLOBAL__N_119cinit_array_nestingE = internal unnamed_addr global i32 0, align 4
@.str.7 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\\\22\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"\\'\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"afterforeach\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"with\00", align 1
@g_options = external global %struct.cmdline_options, align 8
@.str.17 = private unnamed_addr constant [10 x i8] c"yystype.h\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"Name of yystype header is set to \00", align 1
@_ZL10yy_n_chars = internal unnamed_addr global i32 0, align 4
@.str.19 = private unnamed_addr constant [51 x i8] c"fatal flex scanner internal error--no action found\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"out of dynamic memory in yy_create_buffer()\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"out of dynamic memory in yy_scan_buffer()\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"out of dynamic memory in yy_scan_bytes()\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"bad buffer in yy_scan_bytes()\00", align 1
@_ZL21yy_rule_can_match_eol = internal unnamed_addr constant <{ [84 x i32], [10 x i32] }> <{ [84 x i32] [i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1], [10 x i32] zeroinitializer }>, align 16
@.str.25 = private unnamed_addr constant [56 x i8] c"fatal flex scanner internal error--end of buffer missed\00", align 1
@.str.26 = private unnamed_addr constant [72 x i8] c"input buffer overflow, can't enlarge buffer because scanner uses REJECT\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"input in flex scanner failed\00", align 1
@_ZL19yy_buffer_stack_max = internal unnamed_addr global i64 0, align 8
@stderr = external local_unnamed_addr global ptr, align 8
@.str.28 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"opening parenthesis '(' was not closed\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"opening bracket '[' was not closed\00", align 1
@pg_column = external local_unnamed_addr global i32, align 4
@pg_charpos = external local_unnamed_addr global i32, align 4
@.str.31 = private unnamed_addr constant [43 x i8] c"start of comment containing unexpected eof\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_kimwl.cc, ptr null }]

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #0 align 2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #1

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z5yylexv() local_unnamed_addr #2 personality ptr @__gxx_personality_v0 {
entry:
  %.b = load i1, ptr @_ZL7yy_init, align 4
  br i1 %.b, label %while.cond.preheader, label %if.then

if.then:                                          ; preds = %entry
  store i1 true, ptr @_ZL7yy_init, align 4
  %0 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %tobool1.not = icmp eq ptr %0, null
  br i1 %tobool1.not, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %call.i = tail call noalias dereferenceable_or_null(16386) ptr @malloc(i64 noundef 16386) #29
  store ptr %call.i, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %1 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  store i32 1, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %2 = load ptr, ptr @yyin, align 8, !tbaa !5
  %tobool6.not = icmp eq ptr %2, null
  br i1 %tobool6.not, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  %3 = load ptr, ptr @stdin, align 8, !tbaa !5
  store ptr %3, ptr @yyin, align 8, !tbaa !5
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5
  %4 = phi ptr [ %3, %if.then7 ], [ %2, %if.end5 ]
  %5 = load ptr, ptr @yyout, align 8, !tbaa !5
  %tobool9.not = icmp eq ptr %5, null
  br i1 %tobool9.not, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  %6 = load ptr, ptr @stdout, align 8, !tbaa !5
  store ptr %6, ptr @yyout, align 8, !tbaa !5
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8
  %7 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool12.not = icmp eq ptr %7, null
  br i1 %tobool12.not, label %if.then.i, label %cond.end

cond.end:                                         ; preds = %if.end11
  %8 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds ptr, ptr %7, i64 %8
  %9 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %tobool13.not = icmp eq ptr %9, null
  br i1 %tobool13.not, label %if.end.i, label %if.end17

if.then.i:                                        ; preds = %if.end11
  %call.i.i = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %call.i.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %call.i.i, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %_ZL21yyensure_buffer_stackv.exit

if.end.i:                                         ; preds = %cond.end
  %10 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %sub.i = add i64 %10, -1
  %cmp.not.i = icmp ult i64 %8, %sub.i
  br i1 %cmp.not.i, label %_ZL21yyensure_buffer_stackv.exit, label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i
  %conv7.i = shl i64 %10, 32
  %sext.i = add i64 %conv7.i, 34359738368
  %conv8.i = ashr exact i64 %sext.i, 32
  %11 = lshr exact i64 %sext.i, 29
  %conv.i.i = and i64 %11, 4294967295
  %call.i21.i = tail call ptr @realloc(ptr noundef nonnull %7, i64 noundef %conv.i.i) #30
  store ptr %call.i21.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %add.ptr.i = getelementptr inbounds ptr, ptr %call.i21.i, i64 %10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %add.ptr.i, i8 0, i64 64, i1 false)
  store i64 %conv8.i, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %.pre = load ptr, ptr @yyin, align 8, !tbaa !5
  br label %_ZL21yyensure_buffer_stackv.exit

_ZL21yyensure_buffer_stackv.exit:                 ; preds = %if.then.i, %if.end.i, %if.then5.i
  %12 = phi ptr [ %4, %if.then.i ], [ %4, %if.end.i ], [ %.pre, %if.then5.i ]
  %call15 = tail call noundef ptr @_Z16yy_create_bufferP8_IO_FILEi(ptr noundef %12, i32 noundef 16384)
  %13 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %14 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx16 = getelementptr inbounds ptr, ptr %13, i64 %14
  store ptr %call15, ptr %arrayidx16, align 8, !tbaa !5
  br label %if.end17

if.end17:                                         ; preds = %_ZL21yyensure_buffer_stackv.exit, %cond.end
  %15 = phi ptr [ %call15, %_ZL21yyensure_buffer_stackv.exit ], [ %9, %cond.end ]
  %16 = phi i64 [ %14, %_ZL21yyensure_buffer_stackv.exit ], [ %8, %cond.end ]
  %17 = phi ptr [ %13, %_ZL21yyensure_buffer_stackv.exit ], [ %7, %cond.end ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %17, i64 %16
  %yy_n_chars.i = getelementptr inbounds %struct.yy_buffer_state, ptr %15, i64 0, i32 4
  %18 = load i32, ptr %yy_n_chars.i, align 4, !tbaa !13
  store i32 %18, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %yy_buf_pos.i = getelementptr inbounds %struct.yy_buffer_state, ptr %15, i64 0, i32 2
  %19 = load ptr, ptr %yy_buf_pos.i, align 8, !tbaa !15
  store ptr %19, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %19, ptr @yytext_ptr, align 8, !tbaa !5
  %20 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  store ptr %21, ptr @yyin, align 8, !tbaa !5
  %22 = load i8, ptr %19, align 1, !tbaa !17
  store i8 %22, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end17, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.preheader
  %23 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %24 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  store i8 %24, ptr %23, align 1, !tbaa !17
  %25 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %26 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %27 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx19 = getelementptr inbounds ptr, ptr %26, i64 %27
  %28 = load ptr, ptr %arrayidx19, align 8, !tbaa !5
  %yy_at_bol = getelementptr inbounds %struct.yy_buffer_state, ptr %28, i64 0, i32 7
  %29 = load i32, ptr %yy_at_bol, align 8, !tbaa !18
  %add = add nsw i32 %29, %25
  %30 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %incdec.ptr = getelementptr inbounds i32, ptr %30, i64 1
  store ptr %incdec.ptr, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %add, ptr %30, align 4, !tbaa !9
  br label %yy_match

yy_match.loopexit:                                ; preds = %if.then1352, %sw.bb1362, %for.cond.for.end_crit_edge.i1596
  %yy_cp.7.ph1734 = phi ptr [ %add.ptr1364, %for.cond.for.end_crit_edge.i1596 ], [ %add.ptr1364, %sw.bb1362 ], [ %incdec.ptr1353, %if.then1352 ]
  %yy_bp.3.ph1735 = phi ptr [ %604, %for.cond.for.end_crit_edge.i1596 ], [ %604, %sw.bb1362 ], [ %584, %if.then1352 ]
  %yy_current_state.7.ph = phi i32 [ %conv27.i1591, %for.cond.for.end_crit_edge.i1596 ], [ %add.i1543, %sw.bb1362 ], [ %conv20.i, %if.then1352 ]
  %_ZL12yy_state_ptr.promoted.pre = load ptr, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %yy_match

yy_match:                                         ; preds = %yy_match.loopexit, %while.cond
  %_ZL12yy_state_ptr.promoted = phi ptr [ %incdec.ptr, %while.cond ], [ %_ZL12yy_state_ptr.promoted.pre, %yy_match.loopexit ]
  %yy_cp.0 = phi ptr [ %23, %while.cond ], [ %yy_cp.7.ph1734, %yy_match.loopexit ]
  %yy_bp.0 = phi ptr [ %23, %while.cond ], [ %yy_bp.3.ph1735, %yy_match.loopexit ]
  %yy_current_state.0 = phi i32 [ %add, %while.cond ], [ %yy_current_state.7.ph, %yy_match.loopexit ]
  br label %do.body

do.body:                                          ; preds = %while.end, %yy_match
  %incdec.ptr501695 = phi ptr [ %_ZL12yy_state_ptr.promoted, %yy_match ], [ %incdec.ptr50, %while.end ]
  %yy_cp.1 = phi ptr [ %yy_cp.0, %yy_match ], [ %incdec.ptr51, %while.end ]
  %yy_current_state.1 = phi i32 [ %yy_current_state.0, %yy_match ], [ %conv49, %while.end ]
  %31 = load i8, ptr %yy_cp.1, align 1, !tbaa !17
  %idxprom = zext i8 %31 to i64
  %arrayidx20 = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %idxprom
  %32 = load i32, ptr %arrayidx20, align 4, !tbaa !9
  %idxprom231684 = sext i32 %yy_current_state.1 to i64
  %arrayidx241685 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom231684
  %33 = load i16, ptr %arrayidx241685, align 2, !tbaa !19
  %conv251686 = sext i16 %33 to i32
  %conv261687 = and i32 %32, 255
  %add271688 = add nsw i32 %conv261687, %conv251686
  %idxprom281689 = sext i32 %add271688 to i64
  %arrayidx291690 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom281689
  %34 = load i16, ptr %arrayidx291690, align 2, !tbaa !19
  %conv301691 = sext i16 %34 to i32
  %cmp.not1692 = icmp eq i32 %yy_current_state.1, %conv301691
  br i1 %cmp.not1692, label %while.end, label %while.body31.preheader

while.body31.preheader:                           ; preds = %do.body
  %conv21 = trunc i32 %32 to i8
  br label %while.body31

while.body31:                                     ; preds = %while.body31.preheader, %if.end41
  %idxprom231694 = phi i64 [ %idxprom23, %if.end41 ], [ %idxprom231684, %while.body31.preheader ]
  %yy_c.01693 = phi i8 [ %yy_c.1, %if.end41 ], [ %conv21, %while.body31.preheader ]
  %arrayidx33 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %idxprom231694
  %35 = load i16, ptr %arrayidx33, align 2, !tbaa !19
  %cmp35 = icmp sgt i16 %35, 437
  br i1 %cmp35, label %if.then36, label %if.end41

if.then36:                                        ; preds = %while.body31
  %idxprom38 = zext i8 %yy_c.01693 to i64
  %arrayidx39 = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %idxprom38
  %36 = load i32, ptr %arrayidx39, align 4, !tbaa !9
  %conv40 = trunc i32 %36 to i8
  br label %if.end41

if.end41:                                         ; preds = %if.then36, %while.body31
  %yy_c.1 = phi i8 [ %conv40, %if.then36 ], [ %yy_c.01693, %while.body31 ]
  %idxprom23 = sext i16 %35 to i64
  %arrayidx24 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom23
  %37 = load i16, ptr %arrayidx24, align 2, !tbaa !19
  %conv25 = sext i16 %37 to i32
  %conv26 = zext i8 %yy_c.1 to i32
  %add27 = add nsw i32 %conv25, %conv26
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom28
  %38 = load i16, ptr %arrayidx29, align 2, !tbaa !19
  %cmp.not = icmp eq i16 %35, %38
  br i1 %cmp.not, label %while.end, label %while.body31, !llvm.loop !21

while.end:                                        ; preds = %if.end41, %do.body
  %add27.lcssa = phi i32 [ %add271688, %do.body ], [ %add27, %if.end41 ]
  %idxprom47 = zext i32 %add27.lcssa to i64
  %arrayidx48 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %idxprom47
  %39 = load i16, ptr %arrayidx48, align 2, !tbaa !19
  %conv49 = sext i16 %39 to i32
  %incdec.ptr50 = getelementptr inbounds i32, ptr %incdec.ptr501695, i64 1
  store ptr %incdec.ptr50, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %conv49, ptr %incdec.ptr501695, align 4, !tbaa !9
  %incdec.ptr51 = getelementptr inbounds i8, ptr %yy_cp.1, i64 1
  %cmp52.not = icmp eq i16 %39, 437
  br i1 %cmp52.not, label %yy_find_action, label %do.body, !llvm.loop !23

yy_find_action.loopexit:                          ; preds = %_ZL16yy_try_NUL_transi.exit, %sw.bb1367, %for.cond.for.end_crit_edge.i1654, %while.end.i1538
  %yy_cp.7.ph = phi ptr [ %add.ptr, %while.end.i1538 ], [ %arrayidx1371, %for.cond.for.end_crit_edge.i1654 ], [ %arrayidx1371, %sw.bb1367 ], [ %add.ptr, %_ZL16yy_try_NUL_transi.exit ]
  %yy_bp.3.ph = phi ptr [ %584, %while.end.i1538 ], [ %628, %for.cond.for.end_crit_edge.i1654 ], [ %628, %sw.bb1367 ], [ %584, %_ZL16yy_try_NUL_transi.exit ]
  %.pre1724 = load ptr, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %yy_find_action

yy_find_action:                                   ; preds = %while.end, %yy_find_action.loopexit
  %40 = phi ptr [ %.pre1724, %yy_find_action.loopexit ], [ %incdec.ptr50, %while.end ]
  %yy_cp.2 = phi ptr [ %yy_cp.7.ph, %yy_find_action.loopexit ], [ %incdec.ptr51, %while.end ]
  %yy_bp.1 = phi ptr [ %yy_bp.3.ph, %yy_find_action.loopexit ], [ %yy_bp.0, %while.end ]
  %incdec.ptr53 = getelementptr inbounds i32, ptr %40, i64 -1
  store ptr %incdec.ptr53, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  %41 = load i32, ptr %incdec.ptr53, align 4, !tbaa !9
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [439 x i16], ptr @_ZL9yy_accept, i64 0, i64 %idxprom54
  %42 = load i16, ptr %arrayidx55, align 2, !tbaa !19
  %conv56 = sext i16 %42 to i32
  %_ZL26yy_looking_for_trail_begin.promoted = load i32, ptr @_ZL26yy_looking_for_trail_begin, align 4
  br label %find_rule

find_rule:                                        ; preds = %if.end80, %yy_find_action
  %43 = phi i32 [ %_ZL26yy_looking_for_trail_begin.promoted, %yy_find_action ], [ %47, %if.end80 ]
  %_ZL12yy_state_ptr.promoted16971701 = phi ptr [ %incdec.ptr53, %yy_find_action ], [ %44, %if.end80 ]
  %storemerge = phi i32 [ %conv56, %yy_find_action ], [ %inc, %if.end80 ]
  %yy_cp.3 = phi ptr [ %yy_cp.2, %yy_find_action ], [ %yy_cp.4, %if.end80 ]
  %yy_current_state.3 = phi i32 [ %41, %yy_find_action ], [ %yy_current_state.4, %if.end80 ]
  br label %for.cond

for.cond:                                         ; preds = %if.end81, %find_rule
  %44 = phi ptr [ %_ZL12yy_state_ptr.promoted16971701, %find_rule ], [ %incdec.ptr83, %if.end81 ]
  %storemerge1657 = phi i32 [ %storemerge, %find_rule ], [ %conv86, %if.end81 ]
  %yy_cp.4 = phi ptr [ %yy_cp.3, %find_rule ], [ %incdec.ptr82, %if.end81 ]
  %yy_current_state.4 = phi i32 [ %yy_current_state.3, %find_rule ], [ %48, %if.end81 ]
  %tobool57.not = icmp eq i32 %storemerge1657, 0
  br i1 %tobool57.not, label %if.end81, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.cond
  %add58 = add nsw i32 %yy_current_state.4, 1
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds [439 x i16], ptr @_ZL9yy_accept, i64 0, i64 %idxprom59
  %45 = load i16, ptr %arrayidx60, align 2, !tbaa !19
  %conv61 = sext i16 %45 to i32
  %cmp62 = icmp slt i32 %storemerge1657, %conv61
  br i1 %cmp62, label %if.then63, label %if.end81

if.then63:                                        ; preds = %land.lhs.true
  %idxprom64 = sext i32 %storemerge1657 to i64
  %arrayidx65 = getelementptr inbounds [414 x i16], ptr @_ZL10yy_acclist, i64 0, i64 %idxprom64
  %46 = load i16, ptr %arrayidx65, align 2, !tbaa !19
  %conv66 = sext i16 %46 to i32
  %and = and i32 %conv66, 16384
  %tobool67 = icmp ne i32 %and, 0
  %tobool68 = icmp ne i32 %43, 0
  %or.cond = select i1 %tobool67, i1 true, i1 %tobool68
  br i1 %or.cond, label %if.then69, label %if.else

if.then69:                                        ; preds = %if.then63
  %cmp70 = icmp eq i32 %43, %conv66
  br i1 %cmp70, label %if.then71, label %if.end80

if.then71:                                        ; preds = %if.then69
  store i32 0, ptr @_ZL26yy_looking_for_trail_begin, align 4, !tbaa !9
  %and72 = and i32 %43, -16385
  br label %for.end

if.else:                                          ; preds = %if.then63
  %and74 = and i32 %conv66, 8192
  %tobool75.not = icmp eq i32 %and74, 0
  br i1 %tobool75.not, label %if.else78, label %if.then76

if.then76:                                        ; preds = %if.else
  %and77 = and i32 %conv66, -24577
  %or = or i32 %and77, 16384
  store i32 %or, ptr @_ZL26yy_looking_for_trail_begin, align 4, !tbaa !9
  store ptr %yy_cp.4, ptr @_ZL13yy_full_match, align 8, !tbaa !5
  store ptr %44, ptr @_ZL13yy_full_state, align 8, !tbaa !5
  br label %if.end80

if.else78:                                        ; preds = %if.else
  store ptr %yy_cp.4, ptr @_ZL13yy_full_match, align 8, !tbaa !5
  store ptr %44, ptr @_ZL13yy_full_state, align 8, !tbaa !5
  br label %for.end

if.end80:                                         ; preds = %if.then69, %if.then76
  %47 = phi i32 [ %43, %if.then69 ], [ %or, %if.then76 ]
  %inc = add nsw i32 %storemerge1657, 1
  br label %find_rule

if.end81:                                         ; preds = %land.lhs.true, %for.cond
  %incdec.ptr82 = getelementptr inbounds i8, ptr %yy_cp.4, i64 -1
  %incdec.ptr83 = getelementptr inbounds i32, ptr %44, i64 -1
  store ptr %incdec.ptr83, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  %48 = load i32, ptr %incdec.ptr83, align 4, !tbaa !9
  %idxprom84 = sext i32 %48 to i64
  %arrayidx85 = getelementptr inbounds [439 x i16], ptr @_ZL9yy_accept, i64 0, i64 %idxprom84
  %49 = load i16, ptr %arrayidx85, align 2, !tbaa !19
  %conv86 = sext i16 %49 to i32
  br label %for.cond, !llvm.loop !24

for.end:                                          ; preds = %if.else78, %if.then71
  %yy_act.0 = phi i32 [ %and72, %if.then71 ], [ %conv66, %if.else78 ]
  store ptr %yy_bp.1, ptr @yytext_ptr, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint ptr %yy_cp.4 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %yy_bp.1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv87 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv87, ptr @yyleng, align 4, !tbaa !9
  %50 = load i8, ptr %yy_cp.4, align 1, !tbaa !17
  store i8 %50, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  store i8 0, ptr %yy_cp.4, align 1, !tbaa !17
  %51 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp89 = icmp sgt i32 %51, 8191
  br i1 %cmp89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %for.end
  %52 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i1515 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %52, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.1) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.end91:                                         ; preds = %for.end
  %53 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %cmp1.i = icmp sgt i32 %51, -1
  br i1 %cmp1.i, label %iter.check, label %_ZL15yy_flex_strncpyPcPKci.exit

iter.check:                                       ; preds = %if.end91
  %54 = ptrtoint ptr %53 to i64
  %add94 = add nuw nsw i32 %51, 1
  %wide.trip.count.i = zext i32 %add94 to i64
  %min.iters.check = icmp ult i32 %51, 7
  %55 = sub i64 ptrtoint (ptr @yytext to i64), %54
  %diff.check = icmp ult i64 %55, 32
  %or.cond1994 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond1994, label %for.body.i.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check1986 = icmp ult i32 %51, 31
  br i1 %min.iters.check1986, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %wide.trip.count.i, 4294967264
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %56 = getelementptr inbounds i8, ptr %53, i64 %index
  %wide.load = load <16 x i8>, ptr %56, align 1, !tbaa !17
  %57 = getelementptr inbounds i8, ptr %56, i64 16
  %wide.load1987 = load <16 x i8>, ptr %57, align 1, !tbaa !17
  %58 = getelementptr inbounds i8, ptr @yytext, i64 %index
  store <16 x i8> %wide.load, ptr %58, align 16, !tbaa !17
  %59 = getelementptr inbounds i8, ptr %58, i64 16
  store <16 x i8> %wide.load1987, ptr %59, align 16, !tbaa !17
  %index.next = add nuw i64 %index, 32
  %60 = icmp eq i64 %index.next, %n.vec
  br i1 %60, label %middle.block, label %vector.body, !llvm.loop !25

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i
  br i1 %cmp.n, label %_ZL15yy_flex_strncpyPcPKci.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %n.vec.remaining = and i64 %wide.trip.count.i, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %for.body.i.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec1989 = and i64 %wide.trip.count.i, 4294967288
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index1991 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next1993, %vec.epilog.vector.body ]
  %61 = getelementptr inbounds i8, ptr %53, i64 %index1991
  %wide.load1992 = load <8 x i8>, ptr %61, align 1, !tbaa !17
  %62 = getelementptr inbounds i8, ptr @yytext, i64 %index1991
  store <8 x i8> %wide.load1992, ptr %62, align 8, !tbaa !17
  %index.next1993 = add nuw i64 %index1991, 8
  %63 = icmp eq i64 %index.next1993, %n.vec1989
  br i1 %63, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !28

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n1990 = icmp eq i64 %n.vec1989, %wide.trip.count.i
  br i1 %cmp.n1990, label %_ZL15yy_flex_strncpyPcPKci.exit, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %indvars.iv.i.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec1989, %vec.epilog.middle.block ]
  %64 = xor i64 %indvars.iv.i.ph, -1
  %65 = add nsw i64 %64, %wide.trip.count.i
  %xtraiter = and i64 %wide.trip.count.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.prol.loopexit, label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.preheader, %for.body.i.prol
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body.i.prol ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.prol ], [ 0, %for.body.i.preheader ]
  %arrayidx.i1516.prol = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.i.prol
  %66 = load i8, ptr %arrayidx.i1516.prol, align 1, !tbaa !17
  %arrayidx2.i.prol = getelementptr inbounds i8, ptr @yytext, i64 %indvars.iv.i.prol
  store i8 %66, ptr %arrayidx2.i.prol, align 1, !tbaa !17
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.prol.loopexit, label %for.body.i.prol, !llvm.loop !29

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol, %for.body.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body.i.preheader ], [ %indvars.iv.next.i.prol, %for.body.i.prol ]
  %67 = icmp ult i64 %65, 3
  br i1 %67, label %_ZL15yy_flex_strncpyPcPKci.exit, label %for.body.i

for.body.i:                                       ; preds = %for.body.i.prol.loopexit, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i ], [ %indvars.iv.i.unr, %for.body.i.prol.loopexit ]
  %arrayidx.i1516 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.i
  %68 = load i8, ptr %arrayidx.i1516, align 1, !tbaa !17
  %arrayidx2.i = getelementptr inbounds i8, ptr @yytext, i64 %indvars.iv.i
  store i8 %68, ptr %arrayidx2.i, align 1, !tbaa !17
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.i1516.1 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.next.i
  %69 = load i8, ptr %arrayidx.i1516.1, align 1, !tbaa !17
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr @yytext, i64 %indvars.iv.next.i
  store i8 %69, ptr %arrayidx2.i.1, align 1, !tbaa !17
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.i1516.2 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.next.i.1
  %70 = load i8, ptr %arrayidx.i1516.2, align 1, !tbaa !17
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr @yytext, i64 %indvars.iv.next.i.1
  store i8 %70, ptr %arrayidx2.i.2, align 1, !tbaa !17
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.i1516.3 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.next.i.2
  %71 = load i8, ptr %arrayidx.i1516.3, align 1, !tbaa !17
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr @yytext, i64 %indvars.iv.next.i.2
  store i8 %71, ptr %arrayidx2.i.3, align 1, !tbaa !17
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, %wide.trip.count.i
  br i1 %exitcond.not.i.3, label %_ZL15yy_flex_strncpyPcPKci.exit, label %for.body.i, !llvm.loop !31

_ZL15yy_flex_strncpyPcPKci.exit:                  ; preds = %for.body.i.prol.loopexit, %for.body.i, %middle.block, %vec.epilog.middle.block, %if.end91
  store ptr %yy_cp.4, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %cmp96.not = icmp eq i32 %yy_act.0, 94
  br i1 %cmp96.not, label %do_action.preheader, label %land.lhs.true97

land.lhs.true97:                                  ; preds = %_ZL15yy_flex_strncpyPcPKci.exit
  %idxprom98 = sext i32 %yy_act.0 to i64
  %arrayidx99 = getelementptr inbounds [94 x i32], ptr @_ZL21yy_rule_can_match_eol, i64 0, i64 %idxprom98
  %72 = load i32, ptr %arrayidx99, align 4, !tbaa !9
  %tobool100.not = icmp ne i32 %72, 0
  %cmp1031705 = icmp sgt i32 %51, 0
  %or.cond1708 = and i1 %tobool100.not, %cmp1031705
  br i1 %or.cond1708, label %for.body.preheader, label %do_action.preheader

for.body.preheader:                               ; preds = %land.lhs.true97
  %yylineno.promoted = load i32, ptr @yylineno, align 4
  %wide.trip.count = zext i32 %51 to i64
  %xtraiter2204 = and i64 %wide.trip.count, 1
  %73 = icmp eq i32 %51, 1
  br i1 %73, label %do_action.preheader.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %inc10917041706 = phi i32 [ %yylineno.promoted, %for.body.preheader.new ], [ %inc1091703.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %arrayidx105 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %indvars.iv
  %74 = load i8, ptr %arrayidx105, align 2, !tbaa !17
  %cmp107 = icmp eq i8 %74, 10
  br i1 %cmp107, label %if.then108, label %for.inc

if.then108:                                       ; preds = %for.body
  %inc109 = add nsw i32 %inc10917041706, 1
  store i32 %inc109, ptr @yylineno, align 4, !tbaa !9
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then108
  %inc1091703 = phi i32 [ %inc10917041706, %for.body ], [ %inc109, %if.then108 ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx105.1 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %indvars.iv.next
  %75 = load i8, ptr %arrayidx105.1, align 1, !tbaa !17
  %cmp107.1 = icmp eq i8 %75, 10
  br i1 %cmp107.1, label %if.then108.1, label %for.inc.1

if.then108.1:                                     ; preds = %for.inc
  %inc109.1 = add nsw i32 %inc1091703, 1
  store i32 %inc109.1, ptr @yylineno, align 4, !tbaa !9
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then108.1, %for.inc
  %inc1091703.1 = phi i32 [ %inc1091703, %for.inc ], [ %inc109.1, %if.then108.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %do_action.preheader.loopexit.unr-lcssa, label %for.body, !llvm.loop !32

do_action.preheader.loopexit.unr-lcssa:           ; preds = %for.inc.1, %for.body.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %inc10917041706.unr = phi i32 [ %yylineno.promoted, %for.body.preheader ], [ %inc1091703.1, %for.inc.1 ]
  %lcmp.mod2205.not = icmp eq i64 %xtraiter2204, 0
  br i1 %lcmp.mod2205.not, label %do_action.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %do_action.preheader.loopexit.unr-lcssa
  %arrayidx105.epil = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %indvars.iv.unr
  %76 = load i8, ptr %arrayidx105.epil, align 1, !tbaa !17
  %cmp107.epil = icmp eq i8 %76, 10
  br i1 %cmp107.epil, label %if.then108.epil, label %do_action.preheader

if.then108.epil:                                  ; preds = %for.body.epil
  %inc109.epil = add nsw i32 %inc10917041706.unr, 1
  store i32 %inc109.epil, ptr @yylineno, align 4, !tbaa !9
  br label %do_action.preheader

do_action.preheader:                              ; preds = %do_action.preheader.loopexit.unr-lcssa, %if.then108.epil, %for.body.epil, %land.lhs.true97, %_ZL15yy_flex_strncpyPcPKci.exit
  br label %do_action

do_action:                                        ; preds = %do_action.preheader, %cleanup1375
  %77 = phi ptr [ %641, %cleanup1375 ], [ %53, %do_action.preheader ]
  %yy_act.1 = phi i32 [ %add1361, %cleanup1375 ], [ %yy_act.0, %do_action.preheader ]
  switch i32 %yy_act.1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb124
    i32 3, label %sw.bb136
    i32 4, label %sw.bb148
    i32 5, label %sw.bb160
    i32 6, label %sw.bb172
    i32 7, label %sw.bb184
    i32 8, label %sw.bb196
    i32 9, label %sw.bb208
    i32 10, label %sw.bb220
    i32 11, label %sw.bb233
    i32 12, label %sw.bb245
    i32 13, label %sw.bb258
    i32 14, label %sw.bb271
    i32 15, label %sw.bb287
    i32 16, label %sw.bb301
    i32 17, label %sw.bb315
    i32 18, label %sw.bb328
    i32 19, label %sw.bb341
    i32 20, label %sw.bb353
    i32 21, label %sw.bb365
    i32 22, label %sw.bb377
    i32 23, label %sw.bb389
    i32 24, label %sw.bb403
    i32 25, label %sw.bb415
    i32 26, label %sw.bb427
    i32 27, label %sw.bb439
    i32 28, label %sw.bb451
    i32 29, label %sw.bb463
    i32 30, label %sw.bb475
    i32 31, label %sw.bb487
    i32 32, label %sw.bb499
    i32 33, label %sw.bb511
    i32 34, label %sw.bb523
    i32 35, label %sw.bb535
    i32 36, label %sw.bb547
    i32 37, label %sw.bb559
    i32 38, label %sw.bb571
    i32 39, label %sw.bb583
    i32 40, label %sw.bb595
    i32 41, label %sw.bb607
    i32 42, label %sw.bb619
    i32 43, label %sw.bb631
    i32 44, label %sw.bb644
    i32 45, label %sw.bb657
    i32 46, label %sw.bb670
    i32 47, label %sw.bb683
    i32 48, label %sw.bb697
    i32 49, label %sw.bb709
    i32 50, label %sw.bb721
    i32 51, label %sw.bb734
    i32 52, label %sw.bb747
    i32 53, label %sw.bb760
    i32 54, label %sw.bb773
    i32 55, label %sw.bb786
    i32 56, label %sw.bb799
    i32 57, label %sw.bb812
    i32 58, label %sw.bb825
    i32 59, label %sw.bb840
    i32 60, label %sw.bb858
    i32 61, label %sw.bb873
    i32 62, label %sw.bb892
    i32 63, label %sw.bb905
    i32 64, label %sw.bb918
    i32 65, label %sw.bb931
    i32 66, label %sw.bb944
    i32 67, label %sw.bb957
    i32 68, label %sw.bb970
    i32 69, label %sw.bb983
    i32 70, label %sw.bb996
    i32 71, label %sw.bb1009
    i32 72, label %sw.bb1022
    i32 73, label %sw.bb1035
    i32 74, label %sw.bb1054
    i32 75, label %sw.bb1066
    i32 76, label %sw.bb1091
    i32 77, label %sw.bb1104
    i32 78, label %sw.bb1117
    i32 79, label %sw.bb1130
    i32 80, label %sw.bb1143
    i32 81, label %sw.bb1156
    i32 82, label %sw.bb1169
    i32 83, label %sw.bb1181
    i32 84, label %sw.bb1193
    i32 85, label %sw.bb1216
    i32 86, label %sw.bb1228
    i32 87, label %sw.bb1240
    i32 88, label %sw.bb1252
    i32 89, label %sw.bb1264
    i32 90, label %sw.bb1276
    i32 91, label %sw.bb1288
    i32 92, label %sw.bb1300
    i32 93, label %sw.bb1313
    i32 95, label %cleanup1377
    i32 96, label %cleanup1377
    i32 97, label %cleanup1377
    i32 98, label %cleanup1377
    i32 99, label %cleanup1377
    i32 100, label %cleanup1377
    i32 101, label %cleanup1377
    i32 102, label %cleanup1377
    i32 103, label %cleanup1377
    i32 104, label %cleanup1377
    i32 94, label %sw.bb1328
  ]

sw.bb:                                            ; preds = %do_action
  %78 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp114 = icmp sgt i32 %78, 0
  br i1 %cmp114, label %if.then115, label %if.end123

if.then115:                                       ; preds = %sw.bb
  %sub = add nsw i32 %78, -1
  %idxprom116 = zext i32 %sub to i64
  %arrayidx117 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom116
  %79 = load i8, ptr %arrayidx117, align 1, !tbaa !17
  %cmp119 = icmp eq i8 %79, 10
  %conv120 = zext i1 %cmp119 to i32
  %80 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %81 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx121 = getelementptr inbounds ptr, ptr %80, i64 %81
  %82 = load ptr, ptr %arrayidx121, align 8, !tbaa !5
  %yy_at_bol122 = getelementptr inbounds %struct.yy_buffer_state, ptr %82, i64 0, i32 7
  store i32 %conv120, ptr %yy_at_bol122, align 8, !tbaa !18
  br label %if.end123

if.end123:                                        ; preds = %if.then115, %sw.bb
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %while.cond.backedge

sw.bb124:                                         ; preds = %do_action
  %83 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp125 = icmp sgt i32 %83, 0
  br i1 %cmp125, label %if.then126, label %if.end135

if.then126:                                       ; preds = %sw.bb124
  %sub127 = add nsw i32 %83, -1
  %idxprom128 = zext i32 %sub127 to i64
  %arrayidx129 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom128
  %84 = load i8, ptr %arrayidx129, align 1, !tbaa !17
  %cmp131 = icmp eq i8 %84, 10
  %conv132 = zext i1 %cmp131 to i32
  %85 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %86 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx133 = getelementptr inbounds ptr, ptr %85, i64 %86
  %87 = load ptr, ptr %arrayidx133, align 8, !tbaa !5
  %yy_at_bol134 = getelementptr inbounds %struct.yy_buffer_state, ptr %87, i64 0, i32 7
  store i32 %conv132, ptr %yy_at_bol134, align 8, !tbaa !18
  br label %if.end135

if.end135:                                        ; preds = %if.then126, %sw.bb124
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb136:                                         ; preds = %do_action
  %88 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp137 = icmp sgt i32 %88, 0
  br i1 %cmp137, label %if.then138, label %if.end147

if.then138:                                       ; preds = %sw.bb136
  %sub139 = add nsw i32 %88, -1
  %idxprom140 = zext i32 %sub139 to i64
  %arrayidx141 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom140
  %89 = load i8, ptr %arrayidx141, align 1, !tbaa !17
  %cmp143 = icmp eq i8 %89, 10
  %conv144 = zext i1 %cmp143 to i32
  %90 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %91 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx145 = getelementptr inbounds ptr, ptr %90, i64 %91
  %92 = load ptr, ptr %arrayidx145, align 8, !tbaa !5
  %yy_at_bol146 = getelementptr inbounds %struct.yy_buffer_state, ptr %92, i64 0, i32 7
  store i32 %conv144, ptr %yy_at_bol146, align 8, !tbaa !18
  br label %if.end147

if.end147:                                        ; preds = %if.then138, %sw.bb136
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb148:                                         ; preds = %do_action
  %93 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp149 = icmp sgt i32 %93, 0
  br i1 %cmp149, label %if.then150, label %if.end159

if.then150:                                       ; preds = %sw.bb148
  %sub151 = add nsw i32 %93, -1
  %idxprom152 = zext i32 %sub151 to i64
  %arrayidx153 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom152
  %94 = load i8, ptr %arrayidx153, align 1, !tbaa !17
  %cmp155 = icmp eq i8 %94, 10
  %conv156 = zext i1 %cmp155 to i32
  %95 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %96 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx157 = getelementptr inbounds ptr, ptr %95, i64 %96
  %97 = load ptr, ptr %arrayidx157, align 8, !tbaa !5
  %yy_at_bol158 = getelementptr inbounds %struct.yy_buffer_state, ptr %97, i64 0, i32 7
  store i32 %conv156, ptr %yy_at_bol158, align 8, !tbaa !18
  br label %if.end159

if.end159:                                        ; preds = %if.then150, %sw.bb148
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb160:                                         ; preds = %do_action
  %98 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp161 = icmp sgt i32 %98, 0
  br i1 %cmp161, label %if.then162, label %if.end171

if.then162:                                       ; preds = %sw.bb160
  %sub163 = add nsw i32 %98, -1
  %idxprom164 = zext i32 %sub163 to i64
  %arrayidx165 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom164
  %99 = load i8, ptr %arrayidx165, align 1, !tbaa !17
  %cmp167 = icmp eq i8 %99, 10
  %conv168 = zext i1 %cmp167 to i32
  %100 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %101 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx169 = getelementptr inbounds ptr, ptr %100, i64 %101
  %102 = load ptr, ptr %arrayidx169, align 8, !tbaa !5
  %yy_at_bol170 = getelementptr inbounds %struct.yy_buffer_state, ptr %102, i64 0, i32 7
  store i32 %conv168, ptr %yy_at_bol170, align 8, !tbaa !18
  br label %if.end171

if.end171:                                        ; preds = %if.then162, %sw.bb160
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb172:                                         ; preds = %do_action
  %103 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp173 = icmp sgt i32 %103, 0
  br i1 %cmp173, label %if.then174, label %if.end183

if.then174:                                       ; preds = %sw.bb172
  %sub175 = add nsw i32 %103, -1
  %idxprom176 = zext i32 %sub175 to i64
  %arrayidx177 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom176
  %104 = load i8, ptr %arrayidx177, align 1, !tbaa !17
  %cmp179 = icmp eq i8 %104, 10
  %conv180 = zext i1 %cmp179 to i32
  %105 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %106 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx181 = getelementptr inbounds ptr, ptr %105, i64 %106
  %107 = load ptr, ptr %arrayidx181, align 8, !tbaa !5
  %yy_at_bol182 = getelementptr inbounds %struct.yy_buffer_state, ptr %107, i64 0, i32 7
  store i32 %conv180, ptr %yy_at_bol182, align 8, !tbaa !18
  br label %if.end183

if.end183:                                        ; preds = %if.then174, %sw.bb172
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb184:                                         ; preds = %do_action
  %108 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp185 = icmp sgt i32 %108, 0
  br i1 %cmp185, label %if.then186, label %if.end195

if.then186:                                       ; preds = %sw.bb184
  %sub187 = add nsw i32 %108, -1
  %idxprom188 = zext i32 %sub187 to i64
  %arrayidx189 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom188
  %109 = load i8, ptr %arrayidx189, align 1, !tbaa !17
  %cmp191 = icmp eq i8 %109, 10
  %conv192 = zext i1 %cmp191 to i32
  %110 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %111 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx193 = getelementptr inbounds ptr, ptr %110, i64 %111
  %112 = load ptr, ptr %arrayidx193, align 8, !tbaa !5
  %yy_at_bol194 = getelementptr inbounds %struct.yy_buffer_state, ptr %112, i64 0, i32 7
  store i32 %conv192, ptr %yy_at_bol194, align 8, !tbaa !18
  br label %if.end195

if.end195:                                        ; preds = %if.then186, %sw.bb184
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb196:                                         ; preds = %do_action
  %113 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp197 = icmp sgt i32 %113, 0
  br i1 %cmp197, label %if.then198, label %if.end207

if.then198:                                       ; preds = %sw.bb196
  %sub199 = add nsw i32 %113, -1
  %idxprom200 = zext i32 %sub199 to i64
  %arrayidx201 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom200
  %114 = load i8, ptr %arrayidx201, align 1, !tbaa !17
  %cmp203 = icmp eq i8 %114, 10
  %conv204 = zext i1 %cmp203 to i32
  %115 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %116 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx205 = getelementptr inbounds ptr, ptr %115, i64 %116
  %117 = load ptr, ptr %arrayidx205, align 8, !tbaa !5
  %yy_at_bol206 = getelementptr inbounds %struct.yy_buffer_state, ptr %117, i64 0, i32 7
  store i32 %conv204, ptr %yy_at_bol206, align 8, !tbaa !18
  br label %if.end207

if.end207:                                        ; preds = %if.then198, %sw.bb196
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 19, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %while.cond.backedge

sw.bb208:                                         ; preds = %do_action
  %118 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp209 = icmp sgt i32 %118, 0
  br i1 %cmp209, label %if.then210, label %if.end219

if.then210:                                       ; preds = %sw.bb208
  %sub211 = add nsw i32 %118, -1
  %idxprom212 = zext i32 %sub211 to i64
  %arrayidx213 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom212
  %119 = load i8, ptr %arrayidx213, align 1, !tbaa !17
  %cmp215 = icmp eq i8 %119, 10
  %conv216 = zext i1 %cmp215 to i32
  %120 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %121 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx217 = getelementptr inbounds ptr, ptr %120, i64 %121
  %122 = load ptr, ptr %arrayidx217, align 8, !tbaa !5
  %yy_at_bol218 = getelementptr inbounds %struct.yy_buffer_state, ptr %122, i64 0, i32 7
  store i32 %conv216, ptr %yy_at_bol218, align 8, !tbaa !18
  br label %if.end219

if.end219:                                        ; preds = %if.then210, %sw.bb208
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 7, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %cleanup1377

sw.bb220:                                         ; preds = %do_action
  %123 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp221 = icmp sgt i32 %123, 0
  br i1 %cmp221, label %if.then222, label %if.end231

if.then222:                                       ; preds = %sw.bb220
  %sub223 = add nsw i32 %123, -1
  %idxprom224 = zext i32 %sub223 to i64
  %arrayidx225 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom224
  %124 = load i8, ptr %arrayidx225, align 1, !tbaa !17
  %cmp227 = icmp eq i8 %124, 10
  %conv228 = zext i1 %cmp227 to i32
  %125 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %126 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx229 = getelementptr inbounds ptr, ptr %125, i64 %126
  %127 = load ptr, ptr %arrayidx229, align 8, !tbaa !5
  %yy_at_bol230 = getelementptr inbounds %struct.yy_buffer_state, ptr %127, i64 0, i32 7
  store i32 %conv228, ptr %yy_at_bol230, align 8, !tbaa !18
  br label %if.end231

if.end231:                                        ; preds = %if.then222, %sw.bb220
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call232 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call232, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb233:                                         ; preds = %do_action
  %128 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp234 = icmp sgt i32 %128, 0
  br i1 %cmp234, label %if.then235, label %if.end244

if.then235:                                       ; preds = %sw.bb233
  %sub236 = add nsw i32 %128, -1
  %idxprom237 = zext i32 %sub236 to i64
  %arrayidx238 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom237
  %129 = load i8, ptr %arrayidx238, align 1, !tbaa !17
  %cmp240 = icmp eq i8 %129, 10
  %conv241 = zext i1 %cmp240 to i32
  %130 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %131 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx242 = getelementptr inbounds ptr, ptr %130, i64 %131
  %132 = load ptr, ptr %arrayidx242, align 8, !tbaa !5
  %yy_at_bol243 = getelementptr inbounds %struct.yy_buffer_state, ptr %132, i64 0, i32 7
  store i32 %conv241, ptr %yy_at_bol243, align 8, !tbaa !18
  br label %if.end244

if.end244:                                        ; preds = %if.then235, %sw.bb233
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %while.cond.backedge

sw.bb245:                                         ; preds = %do_action
  %133 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp246 = icmp sgt i32 %133, 0
  br i1 %cmp246, label %if.then247, label %if.end256

if.then247:                                       ; preds = %sw.bb245
  %sub248 = add nsw i32 %133, -1
  %idxprom249 = zext i32 %sub248 to i64
  %arrayidx250 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom249
  %134 = load i8, ptr %arrayidx250, align 1, !tbaa !17
  %cmp252 = icmp eq i8 %134, 10
  %conv253 = zext i1 %cmp252 to i32
  %135 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %136 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx254 = getelementptr inbounds ptr, ptr %135, i64 %136
  %137 = load ptr, ptr %arrayidx254, align 8, !tbaa !5
  %yy_at_bol255 = getelementptr inbounds %struct.yy_buffer_state, ptr %137, i64 0, i32 7
  store i32 %conv253, ptr %yy_at_bol255, align 8, !tbaa !18
  br label %if.end256

if.end256:                                        ; preds = %if.then247, %sw.bb245
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call257 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, ptr noundef nonnull @.str)
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 noundef 1024)
  store i32 5, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %cleanup1377

sw.bb258:                                         ; preds = %do_action
  %138 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp259 = icmp sgt i32 %138, 0
  br i1 %cmp259, label %if.then260, label %if.end269

if.then260:                                       ; preds = %sw.bb258
  %sub261 = add nsw i32 %138, -1
  %idxprom262 = zext i32 %sub261 to i64
  %arrayidx263 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom262
  %139 = load i8, ptr %arrayidx263, align 1, !tbaa !17
  %cmp265 = icmp eq i8 %139, 10
  %conv266 = zext i1 %cmp265 to i32
  %140 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %141 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx267 = getelementptr inbounds ptr, ptr %140, i64 %141
  %142 = load ptr, ptr %arrayidx267, align 8, !tbaa !5
  %yy_at_bol268 = getelementptr inbounds %struct.yy_buffer_state, ptr %142, i64 0, i32 7
  store i32 %conv266, ptr %yy_at_bol268, align 8, !tbaa !18
  br label %if.end269

if.end269:                                        ; preds = %if.then260, %sw.bb258
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %143 = load i8, ptr @yytext, align 16, !tbaa !17
  %call270 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i8 noundef signext %143)
  br label %while.cond.backedge

sw.bb271:                                         ; preds = %do_action
  %144 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp272 = icmp sgt i32 %144, 0
  br i1 %cmp272, label %if.then273, label %if.end282

if.then273:                                       ; preds = %sw.bb271
  %sub274 = add nsw i32 %144, -1
  %idxprom275 = zext i32 %sub274 to i64
  %arrayidx276 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom275
  %145 = load i8, ptr %arrayidx276, align 1, !tbaa !17
  %cmp278 = icmp eq i8 %145, 10
  %conv279 = zext i1 %cmp278 to i32
  %146 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %147 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx280 = getelementptr inbounds ptr, ptr %146, i64 %147
  %148 = load ptr, ptr %arrayidx280, align 8, !tbaa !5
  %yy_at_bol281 = getelementptr inbounds %struct.yy_buffer_state, ptr %148, i64 0, i32 7
  store i32 %conv279, ptr %yy_at_bol281, align 8, !tbaa !18
  br label %if.end282

if.end282:                                        ; preds = %if.then273, %sw.bb271
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %149 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %150 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %call283 = tail call noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef %149, i32 noundef %150)
  %call284 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.2)
  %call285 = tail call noundef ptr @_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %call283, ptr noundef %call284)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %call285)
  %call286 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(ptr noundef nonnull align 8 dereferenceable(32) @_ZN12_GLOBAL__N_18cincludeB5cxx11E, ptr noundef nonnull @yytext)
  br label %while.cond.backedge

sw.bb287:                                         ; preds = %do_action
  %151 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp288 = icmp sgt i32 %151, 0
  br i1 %cmp288, label %if.then289, label %if.end298

if.then289:                                       ; preds = %sw.bb287
  %sub290 = add nsw i32 %151, -1
  %idxprom291 = zext i32 %sub290 to i64
  %arrayidx292 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom291
  %152 = load i8, ptr %arrayidx292, align 1, !tbaa !17
  %cmp294 = icmp eq i8 %152, 10
  %conv295 = zext i1 %cmp294 to i32
  %153 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %154 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx296 = getelementptr inbounds ptr, ptr %153, i64 %154
  %155 = load ptr, ptr %arrayidx296, align 8, !tbaa !5
  %yy_at_bol297 = getelementptr inbounds %struct.yy_buffer_state, ptr %155, i64 0, i32 7
  store i32 %conv295, ptr %yy_at_bol297, align 8, !tbaa !18
  br label %if.end298

if.end298:                                        ; preds = %if.then289, %sw.bb287
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  %156 = load ptr, ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, align 8, !tbaa !33
  %call300 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef %156, i32 noundef -1)
  store ptr %call300, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb301:                                         ; preds = %do_action
  %157 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp302 = icmp sgt i32 %157, 0
  br i1 %cmp302, label %if.then303, label %if.end312

if.then303:                                       ; preds = %sw.bb301
  %sub304 = add nsw i32 %157, -1
  %idxprom305 = zext i32 %sub304 to i64
  %arrayidx306 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom305
  %158 = load i8, ptr %arrayidx306, align 1, !tbaa !17
  %cmp308 = icmp eq i8 %158, 10
  %conv309 = zext i1 %cmp308 to i32
  %159 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %160 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx310 = getelementptr inbounds ptr, ptr %159, i64 %160
  %161 = load ptr, ptr %arrayidx310, align 8, !tbaa !5
  %yy_at_bol311 = getelementptr inbounds %struct.yy_buffer_state, ptr %161, i64 0, i32 7
  store i32 %conv309, ptr %yy_at_bol311, align 8, !tbaa !18
  br label %if.end312

if.end312:                                        ; preds = %if.then303, %sw.bb301
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %162 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %call313 = tail call fastcc noundef i32 @_ZN12_GLOBAL__N_111eat_commentEPN2kc20impl_casestring__StrE(ptr noundef %162)
  %call314 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %call313)
  store ptr %call314, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb315:                                         ; preds = %do_action
  %163 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp316 = icmp sgt i32 %163, 0
  br i1 %cmp316, label %if.then317, label %if.end326

if.then317:                                       ; preds = %sw.bb315
  %sub318 = add nsw i32 %163, -1
  %idxprom319 = zext i32 %sub318 to i64
  %arrayidx320 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom319
  %164 = load i8, ptr %arrayidx320, align 1, !tbaa !17
  %cmp322 = icmp eq i8 %164, 10
  %conv323 = zext i1 %cmp322 to i32
  %165 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %166 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx324 = getelementptr inbounds ptr, ptr %165, i64 %166
  %167 = load ptr, ptr %arrayidx324, align 8, !tbaa !5
  %yy_at_bol325 = getelementptr inbounds %struct.yy_buffer_state, ptr %167, i64 0, i32 7
  store i32 %conv323, ptr %yy_at_bol325, align 8, !tbaa !18
  br label %if.end326

if.end326:                                        ; preds = %if.then317, %sw.bb315
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %168 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %call327 = tail call fastcc noundef i32 @_ZN12_GLOBAL__N_111eat_commentEPN2kc20impl_casestring__StrE(ptr noundef %168)
  br label %while.cond.backedge

sw.bb328:                                         ; preds = %do_action
  %169 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp329 = icmp sgt i32 %169, 0
  br i1 %cmp329, label %if.then330, label %if.end339

if.then330:                                       ; preds = %sw.bb328
  %sub331 = add nsw i32 %169, -1
  %idxprom332 = zext i32 %sub331 to i64
  %arrayidx333 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom332
  %170 = load i8, ptr %arrayidx333, align 1, !tbaa !17
  %cmp335 = icmp eq i8 %170, 10
  %conv336 = zext i1 %cmp335 to i32
  %171 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %172 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx337 = getelementptr inbounds ptr, ptr %171, i64 %172
  %173 = load ptr, ptr %arrayidx337, align 8, !tbaa !5
  %yy_at_bol338 = getelementptr inbounds %struct.yy_buffer_state, ptr %173, i64 0, i32 7
  store i32 %conv336, ptr %yy_at_bol338, align 8, !tbaa !18
  br label %if.end339

if.end339:                                        ; preds = %if.then330, %sw.bb328
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  tail call fastcc void @_ZN12_GLOBAL__N_116eat_line_commentEv()
  %call340 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef 1)
  store ptr %call340, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb341:                                         ; preds = %do_action
  %174 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp342 = icmp sgt i32 %174, 0
  br i1 %cmp342, label %if.then343, label %if.end352

if.then343:                                       ; preds = %sw.bb341
  %sub344 = add nsw i32 %174, -1
  %idxprom345 = zext i32 %sub344 to i64
  %arrayidx346 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom345
  %175 = load i8, ptr %arrayidx346, align 1, !tbaa !17
  %cmp348 = icmp eq i8 %175, 10
  %conv349 = zext i1 %cmp348 to i32
  %176 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %177 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx350 = getelementptr inbounds ptr, ptr %176, i64 %177
  %178 = load ptr, ptr %arrayidx350, align 8, !tbaa !5
  %yy_at_bol351 = getelementptr inbounds %struct.yy_buffer_state, ptr %178, i64 0, i32 7
  store i32 %conv349, ptr %yy_at_bol351, align 8, !tbaa !18
  br label %if.end352

if.end352:                                        ; preds = %if.then343, %sw.bb341
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  tail call fastcc void @_ZN12_GLOBAL__N_116eat_line_commentEv()
  br label %while.cond.backedge

sw.bb353:                                         ; preds = %do_action
  %179 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp354 = icmp sgt i32 %179, 0
  br i1 %cmp354, label %if.then355, label %if.end364

if.then355:                                       ; preds = %sw.bb353
  %sub356 = add nsw i32 %179, -1
  %idxprom357 = zext i32 %sub356 to i64
  %arrayidx358 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom357
  %180 = load i8, ptr %arrayidx358, align 1, !tbaa !17
  %cmp360 = icmp eq i8 %180, 10
  %conv361 = zext i1 %cmp360 to i32
  %181 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %182 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx362 = getelementptr inbounds ptr, ptr %181, i64 %182
  %183 = load ptr, ptr %arrayidx362, align 8, !tbaa !5
  %yy_at_bol363 = getelementptr inbounds %struct.yy_buffer_state, ptr %183, i64 0, i32 7
  store i32 %conv361, ptr %yy_at_bol363, align 8, !tbaa !18
  br label %if.end364

if.end364:                                        ; preds = %if.then355, %sw.bb353
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb365:                                         ; preds = %do_action
  %184 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp366 = icmp sgt i32 %184, 0
  br i1 %cmp366, label %if.then367, label %if.end376

if.then367:                                       ; preds = %sw.bb365
  %sub368 = add nsw i32 %184, -1
  %idxprom369 = zext i32 %sub368 to i64
  %arrayidx370 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom369
  %185 = load i8, ptr %arrayidx370, align 1, !tbaa !17
  %cmp372 = icmp eq i8 %185, 10
  %conv373 = zext i1 %cmp372 to i32
  %186 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %187 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx374 = getelementptr inbounds ptr, ptr %186, i64 %187
  %188 = load ptr, ptr %arrayidx374, align 8, !tbaa !5
  %yy_at_bol375 = getelementptr inbounds %struct.yy_buffer_state, ptr %188, i64 0, i32 7
  store i32 %conv373, ptr %yy_at_bol375, align 8, !tbaa !18
  br label %if.end376

if.end376:                                        ; preds = %if.then367, %sw.bb365
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb377:                                         ; preds = %do_action
  %189 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp378 = icmp sgt i32 %189, 0
  br i1 %cmp378, label %if.then379, label %if.end388

if.then379:                                       ; preds = %sw.bb377
  %sub380 = add nsw i32 %189, -1
  %idxprom381 = zext i32 %sub380 to i64
  %arrayidx382 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom381
  %190 = load i8, ptr %arrayidx382, align 1, !tbaa !17
  %cmp384 = icmp eq i8 %190, 10
  %conv385 = zext i1 %cmp384 to i32
  %191 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %192 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx386 = getelementptr inbounds ptr, ptr %191, i64 %192
  %193 = load ptr, ptr %arrayidx386, align 8, !tbaa !5
  %yy_at_bol387 = getelementptr inbounds %struct.yy_buffer_state, ptr %193, i64 0, i32 7
  store i32 %conv385, ptr %yy_at_bol387, align 8, !tbaa !18
  br label %if.end388

if.end388:                                        ; preds = %if.then379, %sw.bb377
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb389:                                         ; preds = %do_action
  %194 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp390 = icmp sgt i32 %194, 0
  br i1 %cmp390, label %if.then391, label %if.end400

if.then391:                                       ; preds = %sw.bb389
  %sub392 = add nsw i32 %194, -1
  %idxprom393 = zext i32 %sub392 to i64
  %arrayidx394 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom393
  %195 = load i8, ptr %arrayidx394, align 1, !tbaa !17
  %cmp396 = icmp eq i8 %195, 10
  %conv397 = zext i1 %cmp396 to i32
  %196 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %197 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx398 = getelementptr inbounds ptr, ptr %196, i64 %197
  %198 = load ptr, ptr %arrayidx398, align 8, !tbaa !5
  %yy_at_bol399 = getelementptr inbounds %struct.yy_buffer_state, ptr %198, i64 0, i32 7
  store i32 %conv397, ptr %yy_at_bol399, align 8, !tbaa !18
  br label %if.end400

if.end400:                                        ; preds = %if.then391, %sw.bb389
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call.i1517 = tail call i64 @strtol(ptr nocapture noundef nonnull @yytext, ptr noundef null, i32 noundef 10) #33
  %conv.i = trunc i64 %call.i1517 to i32
  %call402 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %conv.i)
  store ptr %call402, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb403:                                         ; preds = %do_action
  %199 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp404 = icmp sgt i32 %199, 0
  br i1 %cmp404, label %if.then405, label %if.end414

if.then405:                                       ; preds = %sw.bb403
  %sub406 = add nsw i32 %199, -1
  %idxprom407 = zext i32 %sub406 to i64
  %arrayidx408 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom407
  %200 = load i8, ptr %arrayidx408, align 1, !tbaa !17
  %cmp410 = icmp eq i8 %200, 10
  %conv411 = zext i1 %cmp410 to i32
  %201 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %202 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx412 = getelementptr inbounds ptr, ptr %201, i64 %202
  %203 = load ptr, ptr %arrayidx412, align 8, !tbaa !5
  %yy_at_bol413 = getelementptr inbounds %struct.yy_buffer_state, ptr %203, i64 0, i32 7
  store i32 %conv411, ptr %yy_at_bol413, align 8, !tbaa !18
  br label %if.end414

if.end414:                                        ; preds = %if.then405, %sw.bb403
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb415:                                         ; preds = %do_action
  %204 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp416 = icmp sgt i32 %204, 0
  br i1 %cmp416, label %if.then417, label %if.end426

if.then417:                                       ; preds = %sw.bb415
  %sub418 = add nsw i32 %204, -1
  %idxprom419 = zext i32 %sub418 to i64
  %arrayidx420 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom419
  %205 = load i8, ptr %arrayidx420, align 1, !tbaa !17
  %cmp422 = icmp eq i8 %205, 10
  %conv423 = zext i1 %cmp422 to i32
  %206 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %207 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx424 = getelementptr inbounds ptr, ptr %206, i64 %207
  %208 = load ptr, ptr %arrayidx424, align 8, !tbaa !5
  %yy_at_bol425 = getelementptr inbounds %struct.yy_buffer_state, ptr %208, i64 0, i32 7
  store i32 %conv423, ptr %yy_at_bol425, align 8, !tbaa !18
  br label %if.end426

if.end426:                                        ; preds = %if.then417, %sw.bb415
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb427:                                         ; preds = %do_action
  %209 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp428 = icmp sgt i32 %209, 0
  br i1 %cmp428, label %if.then429, label %if.end438

if.then429:                                       ; preds = %sw.bb427
  %sub430 = add nsw i32 %209, -1
  %idxprom431 = zext i32 %sub430 to i64
  %arrayidx432 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom431
  %210 = load i8, ptr %arrayidx432, align 1, !tbaa !17
  %cmp434 = icmp eq i8 %210, 10
  %conv435 = zext i1 %cmp434 to i32
  %211 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %212 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx436 = getelementptr inbounds ptr, ptr %211, i64 %212
  %213 = load ptr, ptr %arrayidx436, align 8, !tbaa !5
  %yy_at_bol437 = getelementptr inbounds %struct.yy_buffer_state, ptr %213, i64 0, i32 7
  store i32 %conv435, ptr %yy_at_bol437, align 8, !tbaa !18
  br label %if.end438

if.end438:                                        ; preds = %if.then429, %sw.bb427
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb439:                                         ; preds = %do_action
  %214 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp440 = icmp sgt i32 %214, 0
  br i1 %cmp440, label %if.then441, label %if.end450

if.then441:                                       ; preds = %sw.bb439
  %sub442 = add nsw i32 %214, -1
  %idxprom443 = zext i32 %sub442 to i64
  %arrayidx444 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom443
  %215 = load i8, ptr %arrayidx444, align 1, !tbaa !17
  %cmp446 = icmp eq i8 %215, 10
  %conv447 = zext i1 %cmp446 to i32
  %216 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %217 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx448 = getelementptr inbounds ptr, ptr %216, i64 %217
  %218 = load ptr, ptr %arrayidx448, align 8, !tbaa !5
  %yy_at_bol449 = getelementptr inbounds %struct.yy_buffer_state, ptr %218, i64 0, i32 7
  store i32 %conv447, ptr %yy_at_bol449, align 8, !tbaa !18
  br label %if.end450

if.end450:                                        ; preds = %if.then441, %sw.bb439
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb451:                                         ; preds = %do_action
  %219 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp452 = icmp sgt i32 %219, 0
  br i1 %cmp452, label %if.then453, label %if.end462

if.then453:                                       ; preds = %sw.bb451
  %sub454 = add nsw i32 %219, -1
  %idxprom455 = zext i32 %sub454 to i64
  %arrayidx456 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom455
  %220 = load i8, ptr %arrayidx456, align 1, !tbaa !17
  %cmp458 = icmp eq i8 %220, 10
  %conv459 = zext i1 %cmp458 to i32
  %221 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %222 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx460 = getelementptr inbounds ptr, ptr %221, i64 %222
  %223 = load ptr, ptr %arrayidx460, align 8, !tbaa !5
  %yy_at_bol461 = getelementptr inbounds %struct.yy_buffer_state, ptr %223, i64 0, i32 7
  store i32 %conv459, ptr %yy_at_bol461, align 8, !tbaa !18
  br label %if.end462

if.end462:                                        ; preds = %if.then453, %sw.bb451
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb463:                                         ; preds = %do_action
  %224 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp464 = icmp sgt i32 %224, 0
  br i1 %cmp464, label %if.then465, label %if.end474

if.then465:                                       ; preds = %sw.bb463
  %sub466 = add nsw i32 %224, -1
  %idxprom467 = zext i32 %sub466 to i64
  %arrayidx468 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom467
  %225 = load i8, ptr %arrayidx468, align 1, !tbaa !17
  %cmp470 = icmp eq i8 %225, 10
  %conv471 = zext i1 %cmp470 to i32
  %226 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %227 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx472 = getelementptr inbounds ptr, ptr %226, i64 %227
  %228 = load ptr, ptr %arrayidx472, align 8, !tbaa !5
  %yy_at_bol473 = getelementptr inbounds %struct.yy_buffer_state, ptr %228, i64 0, i32 7
  store i32 %conv471, ptr %yy_at_bol473, align 8, !tbaa !18
  br label %if.end474

if.end474:                                        ; preds = %if.then465, %sw.bb463
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb475:                                         ; preds = %do_action
  %229 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp476 = icmp sgt i32 %229, 0
  br i1 %cmp476, label %if.then477, label %if.end486

if.then477:                                       ; preds = %sw.bb475
  %sub478 = add nsw i32 %229, -1
  %idxprom479 = zext i32 %sub478 to i64
  %arrayidx480 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom479
  %230 = load i8, ptr %arrayidx480, align 1, !tbaa !17
  %cmp482 = icmp eq i8 %230, 10
  %conv483 = zext i1 %cmp482 to i32
  %231 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %232 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx484 = getelementptr inbounds ptr, ptr %231, i64 %232
  %233 = load ptr, ptr %arrayidx484, align 8, !tbaa !5
  %yy_at_bol485 = getelementptr inbounds %struct.yy_buffer_state, ptr %233, i64 0, i32 7
  store i32 %conv483, ptr %yy_at_bol485, align 8, !tbaa !18
  br label %if.end486

if.end486:                                        ; preds = %if.then477, %sw.bb475
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb487:                                         ; preds = %do_action
  %234 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp488 = icmp sgt i32 %234, 0
  br i1 %cmp488, label %if.then489, label %if.end498

if.then489:                                       ; preds = %sw.bb487
  %sub490 = add nsw i32 %234, -1
  %idxprom491 = zext i32 %sub490 to i64
  %arrayidx492 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom491
  %235 = load i8, ptr %arrayidx492, align 1, !tbaa !17
  %cmp494 = icmp eq i8 %235, 10
  %conv495 = zext i1 %cmp494 to i32
  %236 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %237 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx496 = getelementptr inbounds ptr, ptr %236, i64 %237
  %238 = load ptr, ptr %arrayidx496, align 8, !tbaa !5
  %yy_at_bol497 = getelementptr inbounds %struct.yy_buffer_state, ptr %238, i64 0, i32 7
  store i32 %conv495, ptr %yy_at_bol497, align 8, !tbaa !18
  br label %if.end498

if.end498:                                        ; preds = %if.then489, %sw.bb487
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb499:                                         ; preds = %do_action
  %239 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp500 = icmp sgt i32 %239, 0
  br i1 %cmp500, label %if.then501, label %if.end510

if.then501:                                       ; preds = %sw.bb499
  %sub502 = add nsw i32 %239, -1
  %idxprom503 = zext i32 %sub502 to i64
  %arrayidx504 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom503
  %240 = load i8, ptr %arrayidx504, align 1, !tbaa !17
  %cmp506 = icmp eq i8 %240, 10
  %conv507 = zext i1 %cmp506 to i32
  %241 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %242 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx508 = getelementptr inbounds ptr, ptr %241, i64 %242
  %243 = load ptr, ptr %arrayidx508, align 8, !tbaa !5
  %yy_at_bol509 = getelementptr inbounds %struct.yy_buffer_state, ptr %243, i64 0, i32 7
  store i32 %conv507, ptr %yy_at_bol509, align 8, !tbaa !18
  br label %if.end510

if.end510:                                        ; preds = %if.then501, %sw.bb499
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb511:                                         ; preds = %do_action
  %244 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp512 = icmp sgt i32 %244, 0
  br i1 %cmp512, label %if.then513, label %if.end522

if.then513:                                       ; preds = %sw.bb511
  %sub514 = add nsw i32 %244, -1
  %idxprom515 = zext i32 %sub514 to i64
  %arrayidx516 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom515
  %245 = load i8, ptr %arrayidx516, align 1, !tbaa !17
  %cmp518 = icmp eq i8 %245, 10
  %conv519 = zext i1 %cmp518 to i32
  %246 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %247 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx520 = getelementptr inbounds ptr, ptr %246, i64 %247
  %248 = load ptr, ptr %arrayidx520, align 8, !tbaa !5
  %yy_at_bol521 = getelementptr inbounds %struct.yy_buffer_state, ptr %248, i64 0, i32 7
  store i32 %conv519, ptr %yy_at_bol521, align 8, !tbaa !18
  br label %if.end522

if.end522:                                        ; preds = %if.then513, %sw.bb511
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb523:                                         ; preds = %do_action
  %249 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp524 = icmp sgt i32 %249, 0
  br i1 %cmp524, label %if.then525, label %if.end534

if.then525:                                       ; preds = %sw.bb523
  %sub526 = add nsw i32 %249, -1
  %idxprom527 = zext i32 %sub526 to i64
  %arrayidx528 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom527
  %250 = load i8, ptr %arrayidx528, align 1, !tbaa !17
  %cmp530 = icmp eq i8 %250, 10
  %conv531 = zext i1 %cmp530 to i32
  %251 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %252 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx532 = getelementptr inbounds ptr, ptr %251, i64 %252
  %253 = load ptr, ptr %arrayidx532, align 8, !tbaa !5
  %yy_at_bol533 = getelementptr inbounds %struct.yy_buffer_state, ptr %253, i64 0, i32 7
  store i32 %conv531, ptr %yy_at_bol533, align 8, !tbaa !18
  br label %if.end534

if.end534:                                        ; preds = %if.then525, %sw.bb523
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 17, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %cleanup1377

sw.bb535:                                         ; preds = %do_action
  %254 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp536 = icmp sgt i32 %254, 0
  br i1 %cmp536, label %if.then537, label %if.end546

if.then537:                                       ; preds = %sw.bb535
  %sub538 = add nsw i32 %254, -1
  %idxprom539 = zext i32 %sub538 to i64
  %arrayidx540 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom539
  %255 = load i8, ptr %arrayidx540, align 1, !tbaa !17
  %cmp542 = icmp eq i8 %255, 10
  %conv543 = zext i1 %cmp542 to i32
  %256 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %257 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx544 = getelementptr inbounds ptr, ptr %256, i64 %257
  %258 = load ptr, ptr %arrayidx544, align 8, !tbaa !5
  %yy_at_bol545 = getelementptr inbounds %struct.yy_buffer_state, ptr %258, i64 0, i32 7
  store i32 %conv543, ptr %yy_at_bol545, align 8, !tbaa !18
  br label %if.end546

if.end546:                                        ; preds = %if.then537, %sw.bb535
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb547:                                         ; preds = %do_action
  %259 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp548 = icmp sgt i32 %259, 0
  br i1 %cmp548, label %if.then549, label %if.end558

if.then549:                                       ; preds = %sw.bb547
  %sub550 = add nsw i32 %259, -1
  %idxprom551 = zext i32 %sub550 to i64
  %arrayidx552 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom551
  %260 = load i8, ptr %arrayidx552, align 1, !tbaa !17
  %cmp554 = icmp eq i8 %260, 10
  %conv555 = zext i1 %cmp554 to i32
  %261 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %262 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx556 = getelementptr inbounds ptr, ptr %261, i64 %262
  %263 = load ptr, ptr %arrayidx556, align 8, !tbaa !5
  %yy_at_bol557 = getelementptr inbounds %struct.yy_buffer_state, ptr %263, i64 0, i32 7
  store i32 %conv555, ptr %yy_at_bol557, align 8, !tbaa !18
  br label %if.end558

if.end558:                                        ; preds = %if.then549, %sw.bb547
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb559:                                         ; preds = %do_action
  %264 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp560 = icmp sgt i32 %264, 0
  br i1 %cmp560, label %if.then561, label %if.end570

if.then561:                                       ; preds = %sw.bb559
  %sub562 = add nsw i32 %264, -1
  %idxprom563 = zext i32 %sub562 to i64
  %arrayidx564 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom563
  %265 = load i8, ptr %arrayidx564, align 1, !tbaa !17
  %cmp566 = icmp eq i8 %265, 10
  %conv567 = zext i1 %cmp566 to i32
  %266 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %267 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx568 = getelementptr inbounds ptr, ptr %266, i64 %267
  %268 = load ptr, ptr %arrayidx568, align 8, !tbaa !5
  %yy_at_bol569 = getelementptr inbounds %struct.yy_buffer_state, ptr %268, i64 0, i32 7
  store i32 %conv567, ptr %yy_at_bol569, align 8, !tbaa !18
  br label %if.end570

if.end570:                                        ; preds = %if.then561, %sw.bb559
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb571:                                         ; preds = %do_action
  %269 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp572 = icmp sgt i32 %269, 0
  br i1 %cmp572, label %if.then573, label %if.end582

if.then573:                                       ; preds = %sw.bb571
  %sub574 = add nsw i32 %269, -1
  %idxprom575 = zext i32 %sub574 to i64
  %arrayidx576 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom575
  %270 = load i8, ptr %arrayidx576, align 1, !tbaa !17
  %cmp578 = icmp eq i8 %270, 10
  %conv579 = zext i1 %cmp578 to i32
  %271 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %272 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx580 = getelementptr inbounds ptr, ptr %271, i64 %272
  %273 = load ptr, ptr %arrayidx580, align 8, !tbaa !5
  %yy_at_bol581 = getelementptr inbounds %struct.yy_buffer_state, ptr %273, i64 0, i32 7
  store i32 %conv579, ptr %yy_at_bol581, align 8, !tbaa !18
  br label %if.end582

if.end582:                                        ; preds = %if.then573, %sw.bb571
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb583:                                         ; preds = %do_action
  %274 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp584 = icmp sgt i32 %274, 0
  br i1 %cmp584, label %if.then585, label %if.end594

if.then585:                                       ; preds = %sw.bb583
  %sub586 = add nsw i32 %274, -1
  %idxprom587 = zext i32 %sub586 to i64
  %arrayidx588 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom587
  %275 = load i8, ptr %arrayidx588, align 1, !tbaa !17
  %cmp590 = icmp eq i8 %275, 10
  %conv591 = zext i1 %cmp590 to i32
  %276 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %277 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx592 = getelementptr inbounds ptr, ptr %276, i64 %277
  %278 = load ptr, ptr %arrayidx592, align 8, !tbaa !5
  %yy_at_bol593 = getelementptr inbounds %struct.yy_buffer_state, ptr %278, i64 0, i32 7
  store i32 %conv591, ptr %yy_at_bol593, align 8, !tbaa !18
  br label %if.end594

if.end594:                                        ; preds = %if.then585, %sw.bb583
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb595:                                         ; preds = %do_action
  %279 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp596 = icmp sgt i32 %279, 0
  br i1 %cmp596, label %if.then597, label %if.end606

if.then597:                                       ; preds = %sw.bb595
  %sub598 = add nsw i32 %279, -1
  %idxprom599 = zext i32 %sub598 to i64
  %arrayidx600 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom599
  %280 = load i8, ptr %arrayidx600, align 1, !tbaa !17
  %cmp602 = icmp eq i8 %280, 10
  %conv603 = zext i1 %cmp602 to i32
  %281 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %282 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx604 = getelementptr inbounds ptr, ptr %281, i64 %282
  %283 = load ptr, ptr %arrayidx604, align 8, !tbaa !5
  %yy_at_bol605 = getelementptr inbounds %struct.yy_buffer_state, ptr %283, i64 0, i32 7
  store i32 %conv603, ptr %yy_at_bol605, align 8, !tbaa !18
  br label %if.end606

if.end606:                                        ; preds = %if.then597, %sw.bb595
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb607:                                         ; preds = %do_action
  %284 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp608 = icmp sgt i32 %284, 0
  br i1 %cmp608, label %if.then609, label %if.end618

if.then609:                                       ; preds = %sw.bb607
  %sub610 = add nsw i32 %284, -1
  %idxprom611 = zext i32 %sub610 to i64
  %arrayidx612 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom611
  %285 = load i8, ptr %arrayidx612, align 1, !tbaa !17
  %cmp614 = icmp eq i8 %285, 10
  %conv615 = zext i1 %cmp614 to i32
  %286 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %287 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx616 = getelementptr inbounds ptr, ptr %286, i64 %287
  %288 = load ptr, ptr %arrayidx616, align 8, !tbaa !5
  %yy_at_bol617 = getelementptr inbounds %struct.yy_buffer_state, ptr %288, i64 0, i32 7
  store i32 %conv615, ptr %yy_at_bol617, align 8, !tbaa !18
  br label %if.end618

if.end618:                                        ; preds = %if.then609, %sw.bb607
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb619:                                         ; preds = %do_action
  %289 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp620 = icmp sgt i32 %289, 0
  br i1 %cmp620, label %if.then621, label %if.end630

if.then621:                                       ; preds = %sw.bb619
  %sub622 = add nsw i32 %289, -1
  %idxprom623 = zext i32 %sub622 to i64
  %arrayidx624 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom623
  %290 = load i8, ptr %arrayidx624, align 1, !tbaa !17
  %cmp626 = icmp eq i8 %290, 10
  %conv627 = zext i1 %cmp626 to i32
  %291 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %292 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx628 = getelementptr inbounds ptr, ptr %291, i64 %292
  %293 = load ptr, ptr %arrayidx628, align 8, !tbaa !5
  %yy_at_bol629 = getelementptr inbounds %struct.yy_buffer_state, ptr %293, i64 0, i32 7
  store i32 %conv627, ptr %yy_at_bol629, align 8, !tbaa !18
  br label %if.end630

if.end630:                                        ; preds = %if.then621, %sw.bb619
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %while.cond.backedge

sw.bb631:                                         ; preds = %do_action
  %294 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp632 = icmp sgt i32 %294, 0
  br i1 %cmp632, label %if.then633, label %if.end642

if.then633:                                       ; preds = %sw.bb631
  %sub634 = add nsw i32 %294, -1
  %idxprom635 = zext i32 %sub634 to i64
  %arrayidx636 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom635
  %295 = load i8, ptr %arrayidx636, align 1, !tbaa !17
  %cmp638 = icmp eq i8 %295, 10
  %conv639 = zext i1 %cmp638 to i32
  %296 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %297 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx640 = getelementptr inbounds ptr, ptr %296, i64 %297
  %298 = load ptr, ptr %arrayidx640, align 8, !tbaa !5
  %yy_at_bol641 = getelementptr inbounds %struct.yy_buffer_state, ptr %298, i64 0, i32 7
  store i32 %conv639, ptr %yy_at_bol641, align 8, !tbaa !18
  br label %if.end642

if.end642:                                        ; preds = %if.then633, %sw.bb631
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  %call643 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call643, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb644:                                         ; preds = %do_action
  %299 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp645 = icmp sgt i32 %299, 0
  br i1 %cmp645, label %if.then646, label %if.end655

if.then646:                                       ; preds = %sw.bb644
  %sub647 = add nsw i32 %299, -1
  %idxprom648 = zext i32 %sub647 to i64
  %arrayidx649 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom648
  %300 = load i8, ptr %arrayidx649, align 1, !tbaa !17
  %cmp651 = icmp eq i8 %300, 10
  %conv652 = zext i1 %cmp651 to i32
  %301 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %302 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx653 = getelementptr inbounds ptr, ptr %301, i64 %302
  %303 = load ptr, ptr %arrayidx653, align 8, !tbaa !5
  %yy_at_bol654 = getelementptr inbounds %struct.yy_buffer_state, ptr %303, i64 0, i32 7
  store i32 %conv652, ptr %yy_at_bol654, align 8, !tbaa !18
  br label %if.end655

if.end655:                                        ; preds = %if.then646, %sw.bb644
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  %call656 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call656, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb657:                                         ; preds = %do_action
  %304 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp658 = icmp sgt i32 %304, 0
  br i1 %cmp658, label %if.then659, label %if.end668

if.then659:                                       ; preds = %sw.bb657
  %sub660 = add nsw i32 %304, -1
  %idxprom661 = zext i32 %sub660 to i64
  %arrayidx662 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom661
  %305 = load i8, ptr %arrayidx662, align 1, !tbaa !17
  %cmp664 = icmp eq i8 %305, 10
  %conv665 = zext i1 %cmp664 to i32
  %306 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %307 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx666 = getelementptr inbounds ptr, ptr %306, i64 %307
  %308 = load ptr, ptr %arrayidx666, align 8, !tbaa !5
  %yy_at_bol667 = getelementptr inbounds %struct.yy_buffer_state, ptr %308, i64 0, i32 7
  store i32 %conv665, ptr %yy_at_bol667, align 8, !tbaa !18
  br label %if.end668

if.end668:                                        ; preds = %if.then659, %sw.bb657
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call669 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call669, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb670:                                         ; preds = %do_action
  %309 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp671 = icmp sgt i32 %309, 0
  br i1 %cmp671, label %if.then672, label %if.end681

if.then672:                                       ; preds = %sw.bb670
  %sub673 = add nsw i32 %309, -1
  %idxprom674 = zext i32 %sub673 to i64
  %arrayidx675 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom674
  %310 = load i8, ptr %arrayidx675, align 1, !tbaa !17
  %cmp677 = icmp eq i8 %310, 10
  %conv678 = zext i1 %cmp677 to i32
  %311 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %312 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx679 = getelementptr inbounds ptr, ptr %311, i64 %312
  %313 = load ptr, ptr %arrayidx679, align 8, !tbaa !5
  %yy_at_bol680 = getelementptr inbounds %struct.yy_buffer_state, ptr %313, i64 0, i32 7
  store i32 %conv678, ptr %yy_at_bol680, align 8, !tbaa !18
  br label %if.end681

if.end681:                                        ; preds = %if.then672, %sw.bb670
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call682 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call682, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb683:                                         ; preds = %do_action
  %314 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp684 = icmp sgt i32 %314, 0
  br i1 %cmp684, label %if.then685, label %if.end694

if.then685:                                       ; preds = %sw.bb683
  %sub686 = add nsw i32 %314, -1
  %idxprom687 = zext i32 %sub686 to i64
  %arrayidx688 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom687
  %315 = load i8, ptr %arrayidx688, align 1, !tbaa !17
  %cmp690 = icmp eq i8 %315, 10
  %conv691 = zext i1 %cmp690 to i32
  %316 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %317 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx692 = getelementptr inbounds ptr, ptr %316, i64 %317
  %318 = load ptr, ptr %arrayidx692, align 8, !tbaa !5
  %yy_at_bol693 = getelementptr inbounds %struct.yy_buffer_state, ptr %318, i64 0, i32 7
  store i32 %conv691, ptr %yy_at_bol693, align 8, !tbaa !18
  br label %if.end694

if.end694:                                        ; preds = %if.then685, %sw.bb683
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call.i1518 = tail call i64 @strtol(ptr nocapture noundef nonnull getelementptr inbounds ([8192 x i8], ptr @yytext, i64 0, i64 1), ptr noundef null, i32 noundef 10) #33
  %conv.i1519 = trunc i64 %call.i1518 to i32
  %call696 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %conv.i1519)
  store ptr %call696, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb697:                                         ; preds = %do_action
  %319 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp698 = icmp sgt i32 %319, 0
  br i1 %cmp698, label %if.then699, label %if.end708

if.then699:                                       ; preds = %sw.bb697
  %sub700 = add nsw i32 %319, -1
  %idxprom701 = zext i32 %sub700 to i64
  %arrayidx702 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom701
  %320 = load i8, ptr %arrayidx702, align 1, !tbaa !17
  %cmp704 = icmp eq i8 %320, 10
  %conv705 = zext i1 %cmp704 to i32
  %321 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %322 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx706 = getelementptr inbounds ptr, ptr %321, i64 %322
  %323 = load ptr, ptr %arrayidx706, align 8, !tbaa !5
  %yy_at_bol707 = getelementptr inbounds %struct.yy_buffer_state, ptr %323, i64 0, i32 7
  store i32 %conv705, ptr %yy_at_bol707, align 8, !tbaa !18
  br label %if.end708

if.end708:                                        ; preds = %if.then699, %sw.bb697
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb709:                                         ; preds = %do_action
  %324 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp710 = icmp sgt i32 %324, 0
  br i1 %cmp710, label %if.then711, label %if.end720

if.then711:                                       ; preds = %sw.bb709
  %sub712 = add nsw i32 %324, -1
  %idxprom713 = zext i32 %sub712 to i64
  %arrayidx714 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom713
  %325 = load i8, ptr %arrayidx714, align 1, !tbaa !17
  %cmp716 = icmp eq i8 %325, 10
  %conv717 = zext i1 %cmp716 to i32
  %326 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %327 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx718 = getelementptr inbounds ptr, ptr %326, i64 %327
  %328 = load ptr, ptr %arrayidx718, align 8, !tbaa !5
  %yy_at_bol719 = getelementptr inbounds %struct.yy_buffer_state, ptr %328, i64 0, i32 7
  store i32 %conv717, ptr %yy_at_bol719, align 8, !tbaa !18
  br label %if.end720

if.end720:                                        ; preds = %if.then711, %sw.bb709
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb721:                                         ; preds = %do_action
  %329 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp722 = icmp sgt i32 %329, 0
  br i1 %cmp722, label %if.then723, label %if.end732

if.then723:                                       ; preds = %sw.bb721
  %sub724 = add nsw i32 %329, -1
  %idxprom725 = zext i32 %sub724 to i64
  %arrayidx726 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom725
  %330 = load i8, ptr %arrayidx726, align 1, !tbaa !17
  %cmp728 = icmp eq i8 %330, 10
  %conv729 = zext i1 %cmp728 to i32
  %331 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %332 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx730 = getelementptr inbounds ptr, ptr %331, i64 %332
  %333 = load ptr, ptr %arrayidx730, align 8, !tbaa !5
  %yy_at_bol731 = getelementptr inbounds %struct.yy_buffer_state, ptr %333, i64 0, i32 7
  store i32 %conv729, ptr %yy_at_bol731, align 8, !tbaa !18
  br label %if.end732

if.end732:                                        ; preds = %if.then723, %sw.bb721
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call733 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call733, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb734:                                         ; preds = %do_action
  %334 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp735 = icmp sgt i32 %334, 0
  br i1 %cmp735, label %if.then736, label %if.end745

if.then736:                                       ; preds = %sw.bb734
  %sub737 = add nsw i32 %334, -1
  %idxprom738 = zext i32 %sub737 to i64
  %arrayidx739 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom738
  %335 = load i8, ptr %arrayidx739, align 1, !tbaa !17
  %cmp741 = icmp eq i8 %335, 10
  %conv742 = zext i1 %cmp741 to i32
  %336 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %337 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx743 = getelementptr inbounds ptr, ptr %336, i64 %337
  %338 = load ptr, ptr %arrayidx743, align 8, !tbaa !5
  %yy_at_bol744 = getelementptr inbounds %struct.yy_buffer_state, ptr %338, i64 0, i32 7
  store i32 %conv742, ptr %yy_at_bol744, align 8, !tbaa !18
  br label %if.end745

if.end745:                                        ; preds = %if.then736, %sw.bb734
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %339 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv746 = sext i8 %339 to i32
  br label %cleanup1377

sw.bb747:                                         ; preds = %do_action
  %340 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp748 = icmp sgt i32 %340, 0
  br i1 %cmp748, label %if.then749, label %if.end758

if.then749:                                       ; preds = %sw.bb747
  %sub750 = add nsw i32 %340, -1
  %idxprom751 = zext i32 %sub750 to i64
  %arrayidx752 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom751
  %341 = load i8, ptr %arrayidx752, align 1, !tbaa !17
  %cmp754 = icmp eq i8 %341, 10
  %conv755 = zext i1 %cmp754 to i32
  %342 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %343 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx756 = getelementptr inbounds ptr, ptr %342, i64 %343
  %344 = load ptr, ptr %arrayidx756, align 8, !tbaa !5
  %yy_at_bol757 = getelementptr inbounds %struct.yy_buffer_state, ptr %344, i64 0, i32 7
  store i32 %conv755, ptr %yy_at_bol757, align 8, !tbaa !18
  br label %if.end758

if.end758:                                        ; preds = %if.then749, %sw.bb747
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call759 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.3, i32 noundef -1)
  store ptr %call759, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb760:                                         ; preds = %do_action
  %345 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp761 = icmp sgt i32 %345, 0
  br i1 %cmp761, label %if.then762, label %if.end771

if.then762:                                       ; preds = %sw.bb760
  %sub763 = add nsw i32 %345, -1
  %idxprom764 = zext i32 %sub763 to i64
  %arrayidx765 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom764
  %346 = load i8, ptr %arrayidx765, align 1, !tbaa !17
  %cmp767 = icmp eq i8 %346, 10
  %conv768 = zext i1 %cmp767 to i32
  %347 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %348 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx769 = getelementptr inbounds ptr, ptr %347, i64 %348
  %349 = load ptr, ptr %arrayidx769, align 8, !tbaa !5
  %yy_at_bol770 = getelementptr inbounds %struct.yy_buffer_state, ptr %349, i64 0, i32 7
  store i32 %conv768, ptr %yy_at_bol770, align 8, !tbaa !18
  br label %if.end771

if.end771:                                        ; preds = %if.then762, %sw.bb760
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call772 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.4, i32 noundef -1)
  store ptr %call772, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb773:                                         ; preds = %do_action
  %350 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp774 = icmp sgt i32 %350, 0
  br i1 %cmp774, label %if.then775, label %if.end784

if.then775:                                       ; preds = %sw.bb773
  %sub776 = add nsw i32 %350, -1
  %idxprom777 = zext i32 %sub776 to i64
  %arrayidx778 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom777
  %351 = load i8, ptr %arrayidx778, align 1, !tbaa !17
  %cmp780 = icmp eq i8 %351, 10
  %conv781 = zext i1 %cmp780 to i32
  %352 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %353 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx782 = getelementptr inbounds ptr, ptr %352, i64 %353
  %354 = load ptr, ptr %arrayidx782, align 8, !tbaa !5
  %yy_at_bol783 = getelementptr inbounds %struct.yy_buffer_state, ptr %354, i64 0, i32 7
  store i32 %conv781, ptr %yy_at_bol783, align 8, !tbaa !18
  br label %if.end784

if.end784:                                        ; preds = %if.then775, %sw.bb773
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 11, ptr @_ZL8yy_start, align 4, !tbaa !9
  %355 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv785 = sext i8 %355 to i32
  br label %cleanup1377

sw.bb786:                                         ; preds = %do_action
  %356 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp787 = icmp sgt i32 %356, 0
  br i1 %cmp787, label %if.then788, label %if.end797

if.then788:                                       ; preds = %sw.bb786
  %sub789 = add nsw i32 %356, -1
  %idxprom790 = zext i32 %sub789 to i64
  %arrayidx791 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom790
  %357 = load i8, ptr %arrayidx791, align 1, !tbaa !17
  %cmp793 = icmp eq i8 %357, 10
  %conv794 = zext i1 %cmp793 to i32
  %358 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %359 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx795 = getelementptr inbounds ptr, ptr %358, i64 %359
  %360 = load ptr, ptr %arrayidx795, align 8, !tbaa !5
  %yy_at_bol796 = getelementptr inbounds %struct.yy_buffer_state, ptr %360, i64 0, i32 7
  store i32 %conv794, ptr %yy_at_bol796, align 8, !tbaa !18
  br label %if.end797

if.end797:                                        ; preds = %if.then788, %sw.bb786
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 13, ptr @_ZL8yy_start, align 4, !tbaa !9
  %361 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv798 = sext i8 %361 to i32
  br label %cleanup1377

sw.bb799:                                         ; preds = %do_action
  %362 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp800 = icmp sgt i32 %362, 0
  br i1 %cmp800, label %if.then801, label %if.end810

if.then801:                                       ; preds = %sw.bb799
  %sub802 = add nsw i32 %362, -1
  %idxprom803 = zext i32 %sub802 to i64
  %arrayidx804 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom803
  %363 = load i8, ptr %arrayidx804, align 1, !tbaa !17
  %cmp806 = icmp eq i8 %363, 10
  %conv807 = zext i1 %cmp806 to i32
  %364 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %365 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx808 = getelementptr inbounds ptr, ptr %364, i64 %365
  %366 = load ptr, ptr %arrayidx808, align 8, !tbaa !5
  %yy_at_bol809 = getelementptr inbounds %struct.yy_buffer_state, ptr %366, i64 0, i32 7
  store i32 %conv807, ptr %yy_at_bol809, align 8, !tbaa !18
  br label %if.end810

if.end810:                                        ; preds = %if.then801, %sw.bb799
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  %367 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv811 = sext i8 %367 to i32
  br label %cleanup1377

sw.bb812:                                         ; preds = %do_action
  %368 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp813 = icmp sgt i32 %368, 0
  br i1 %cmp813, label %if.then814, label %if.end823

if.then814:                                       ; preds = %sw.bb812
  %sub815 = add nsw i32 %368, -1
  %idxprom816 = zext i32 %sub815 to i64
  %arrayidx817 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom816
  %369 = load i8, ptr %arrayidx817, align 1, !tbaa !17
  %cmp819 = icmp eq i8 %369, 10
  %conv820 = zext i1 %cmp819 to i32
  %370 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %371 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx821 = getelementptr inbounds ptr, ptr %370, i64 %371
  %372 = load ptr, ptr %arrayidx821, align 8, !tbaa !5
  %yy_at_bol822 = getelementptr inbounds %struct.yy_buffer_state, ptr %372, i64 0, i32 7
  store i32 %conv820, ptr %yy_at_bol822, align 8, !tbaa !18
  br label %if.end823

if.end823:                                        ; preds = %if.then814, %sw.bb812
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %373 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv824 = sext i8 %373 to i32
  br label %cleanup1377

sw.bb825:                                         ; preds = %do_action
  %374 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp826 = icmp sgt i32 %374, 0
  br i1 %cmp826, label %if.then827, label %if.end836

if.then827:                                       ; preds = %sw.bb825
  %sub828 = add nsw i32 %374, -1
  %idxprom829 = zext i32 %sub828 to i64
  %arrayidx830 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom829
  %375 = load i8, ptr %arrayidx830, align 1, !tbaa !17
  %cmp832 = icmp eq i8 %375, 10
  %conv833 = zext i1 %cmp832 to i32
  %376 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %377 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx834 = getelementptr inbounds ptr, ptr %376, i64 %377
  %378 = load ptr, ptr %arrayidx834, align 8, !tbaa !5
  %yy_at_bol835 = getelementptr inbounds %struct.yy_buffer_state, ptr %378, i64 0, i32 7
  store i32 %conv833, ptr %yy_at_bol835, align 8, !tbaa !18
  br label %if.end836

if.end836:                                        ; preds = %if.then827, %sw.bb825
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %379 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %inc837 = add nsw i32 %379, 1
  store i32 %inc837, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %call838 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.5, i32 noundef -1)
  store ptr %call838, ptr @yylval, align 8, !tbaa !17
  %380 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv839 = sext i8 %380 to i32
  br label %cleanup1377

sw.bb840:                                         ; preds = %do_action
  %381 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp841 = icmp sgt i32 %381, 0
  br i1 %cmp841, label %if.then842, label %if.end851

if.then842:                                       ; preds = %sw.bb840
  %sub843 = add nsw i32 %381, -1
  %idxprom844 = zext i32 %sub843 to i64
  %arrayidx845 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom844
  %382 = load i8, ptr %arrayidx845, align 1, !tbaa !17
  %cmp847 = icmp eq i8 %382, 10
  %conv848 = zext i1 %cmp847 to i32
  %383 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %384 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx849 = getelementptr inbounds ptr, ptr %383, i64 %384
  %385 = load ptr, ptr %arrayidx849, align 8, !tbaa !5
  %yy_at_bol850 = getelementptr inbounds %struct.yy_buffer_state, ptr %385, i64 0, i32 7
  store i32 %conv848, ptr %yy_at_bol850, align 8, !tbaa !18
  br label %if.end851

if.end851:                                        ; preds = %if.then842, %sw.bb840
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %386 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %cmp852 = icmp eq i32 %386, 0
  br i1 %cmp852, label %if.then853, label %if.else855

if.then853:                                       ; preds = %if.end851
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  %387 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv854 = sext i8 %387 to i32
  br label %cleanup1377

if.else855:                                       ; preds = %if.end851
  %dec = add nsw i32 %386, -1
  store i32 %dec, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %call856 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.6, i32 noundef -1)
  store ptr %call856, ptr @yylval, align 8, !tbaa !17
  %388 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv857 = sext i8 %388 to i32
  br label %cleanup1377

sw.bb858:                                         ; preds = %do_action
  %389 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp859 = icmp sgt i32 %389, 0
  br i1 %cmp859, label %if.then860, label %if.end869

if.then860:                                       ; preds = %sw.bb858
  %sub861 = add nsw i32 %389, -1
  %idxprom862 = zext i32 %sub861 to i64
  %arrayidx863 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom862
  %390 = load i8, ptr %arrayidx863, align 1, !tbaa !17
  %cmp865 = icmp eq i8 %390, 10
  %conv866 = zext i1 %cmp865 to i32
  %391 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %392 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx867 = getelementptr inbounds ptr, ptr %391, i64 %392
  %393 = load ptr, ptr %arrayidx867, align 8, !tbaa !5
  %yy_at_bol868 = getelementptr inbounds %struct.yy_buffer_state, ptr %393, i64 0, i32 7
  store i32 %conv866, ptr %yy_at_bol868, align 8, !tbaa !18
  br label %if.end869

if.end869:                                        ; preds = %if.then860, %sw.bb858
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %394 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %inc870 = add nsw i32 %394, 1
  store i32 %inc870, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %call871 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.7, i32 noundef -1)
  store ptr %call871, ptr @yylval, align 8, !tbaa !17
  %395 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv872 = sext i8 %395 to i32
  br label %cleanup1377

sw.bb873:                                         ; preds = %do_action
  %396 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp874 = icmp sgt i32 %396, 0
  br i1 %cmp874, label %if.then875, label %if.end884

if.then875:                                       ; preds = %sw.bb873
  %sub876 = add nsw i32 %396, -1
  %idxprom877 = zext i32 %sub876 to i64
  %arrayidx878 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom877
  %397 = load i8, ptr %arrayidx878, align 1, !tbaa !17
  %cmp880 = icmp eq i8 %397, 10
  %conv881 = zext i1 %cmp880 to i32
  %398 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %399 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx882 = getelementptr inbounds ptr, ptr %398, i64 %399
  %400 = load ptr, ptr %arrayidx882, align 8, !tbaa !5
  %yy_at_bol883 = getelementptr inbounds %struct.yy_buffer_state, ptr %400, i64 0, i32 7
  store i32 %conv881, ptr %yy_at_bol883, align 8, !tbaa !18
  br label %if.end884

if.end884:                                        ; preds = %if.then875, %sw.bb873
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %401 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %cmp885 = icmp eq i32 %401, 0
  br i1 %cmp885, label %if.then886, label %if.else888

if.then886:                                       ; preds = %if.end884
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  %402 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv887 = sext i8 %402 to i32
  br label %cleanup1377

if.else888:                                       ; preds = %if.end884
  %dec889 = add nsw i32 %401, -1
  store i32 %dec889, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %call890 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.8, i32 noundef -1)
  store ptr %call890, ptr @yylval, align 8, !tbaa !17
  %403 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv891 = sext i8 %403 to i32
  br label %cleanup1377

sw.bb892:                                         ; preds = %do_action
  %404 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp893 = icmp sgt i32 %404, 0
  br i1 %cmp893, label %if.then894, label %if.end903

if.then894:                                       ; preds = %sw.bb892
  %sub895 = add nsw i32 %404, -1
  %idxprom896 = zext i32 %sub895 to i64
  %arrayidx897 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom896
  %405 = load i8, ptr %arrayidx897, align 1, !tbaa !17
  %cmp899 = icmp eq i8 %405, 10
  %conv900 = zext i1 %cmp899 to i32
  %406 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %407 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx901 = getelementptr inbounds ptr, ptr %406, i64 %407
  %408 = load ptr, ptr %arrayidx901, align 8, !tbaa !5
  %yy_at_bol902 = getelementptr inbounds %struct.yy_buffer_state, ptr %408, i64 0, i32 7
  store i32 %conv900, ptr %yy_at_bol902, align 8, !tbaa !18
  br label %if.end903

if.end903:                                        ; preds = %if.then894, %sw.bb892
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call904 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call904, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb905:                                         ; preds = %do_action
  %409 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp906 = icmp sgt i32 %409, 0
  br i1 %cmp906, label %if.then907, label %if.end916

if.then907:                                       ; preds = %sw.bb905
  %sub908 = add nsw i32 %409, -1
  %idxprom909 = zext i32 %sub908 to i64
  %arrayidx910 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom909
  %410 = load i8, ptr %arrayidx910, align 1, !tbaa !17
  %cmp912 = icmp eq i8 %410, 10
  %conv913 = zext i1 %cmp912 to i32
  %411 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %412 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx914 = getelementptr inbounds ptr, ptr %411, i64 %412
  %413 = load ptr, ptr %arrayidx914, align 8, !tbaa !5
  %yy_at_bol915 = getelementptr inbounds %struct.yy_buffer_state, ptr %413, i64 0, i32 7
  store i32 %conv913, ptr %yy_at_bol915, align 8, !tbaa !18
  br label %if.end916

if.end916:                                        ; preds = %if.then907, %sw.bb905
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 9, ptr @_ZL8yy_start, align 4, !tbaa !9
  %414 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv917 = sext i8 %414 to i32
  br label %cleanup1377

sw.bb918:                                         ; preds = %do_action
  %415 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp919 = icmp sgt i32 %415, 0
  br i1 %cmp919, label %if.then920, label %if.end929

if.then920:                                       ; preds = %sw.bb918
  %sub921 = add nsw i32 %415, -1
  %idxprom922 = zext i32 %sub921 to i64
  %arrayidx923 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom922
  %416 = load i8, ptr %arrayidx923, align 1, !tbaa !17
  %cmp925 = icmp eq i8 %416, 10
  %conv926 = zext i1 %cmp925 to i32
  %417 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %418 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx927 = getelementptr inbounds ptr, ptr %417, i64 %418
  %419 = load ptr, ptr %arrayidx927, align 8, !tbaa !5
  %yy_at_bol928 = getelementptr inbounds %struct.yy_buffer_state, ptr %419, i64 0, i32 7
  store i32 %conv926, ptr %yy_at_bol928, align 8, !tbaa !18
  br label %if.end929

if.end929:                                        ; preds = %if.then920, %sw.bb918
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call930 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.9, i32 noundef -1)
  store ptr %call930, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb931:                                         ; preds = %do_action
  %420 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp932 = icmp sgt i32 %420, 0
  br i1 %cmp932, label %if.then933, label %if.end942

if.then933:                                       ; preds = %sw.bb931
  %sub934 = add nsw i32 %420, -1
  %idxprom935 = zext i32 %sub934 to i64
  %arrayidx936 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom935
  %421 = load i8, ptr %arrayidx936, align 1, !tbaa !17
  %cmp938 = icmp eq i8 %421, 10
  %conv939 = zext i1 %cmp938 to i32
  %422 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %423 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx940 = getelementptr inbounds ptr, ptr %422, i64 %423
  %424 = load ptr, ptr %arrayidx940, align 8, !tbaa !5
  %yy_at_bol941 = getelementptr inbounds %struct.yy_buffer_state, ptr %424, i64 0, i32 7
  store i32 %conv939, ptr %yy_at_bol941, align 8, !tbaa !18
  br label %if.end942

if.end942:                                        ; preds = %if.then933, %sw.bb931
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 9, ptr @_ZL8yy_start, align 4, !tbaa !9
  %425 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv943 = sext i8 %425 to i32
  br label %cleanup1377

sw.bb944:                                         ; preds = %do_action
  %426 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp945 = icmp sgt i32 %426, 0
  br i1 %cmp945, label %if.then946, label %if.end955

if.then946:                                       ; preds = %sw.bb944
  %sub947 = add nsw i32 %426, -1
  %idxprom948 = zext i32 %sub947 to i64
  %arrayidx949 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom948
  %427 = load i8, ptr %arrayidx949, align 1, !tbaa !17
  %cmp951 = icmp eq i8 %427, 10
  %conv952 = zext i1 %cmp951 to i32
  %428 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %429 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx953 = getelementptr inbounds ptr, ptr %428, i64 %429
  %430 = load ptr, ptr %arrayidx953, align 8, !tbaa !5
  %yy_at_bol954 = getelementptr inbounds %struct.yy_buffer_state, ptr %430, i64 0, i32 7
  store i32 %conv952, ptr %yy_at_bol954, align 8, !tbaa !18
  br label %if.end955

if.end955:                                        ; preds = %if.then946, %sw.bb944
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call956 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.10, i32 noundef -1)
  store ptr %call956, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb957:                                         ; preds = %do_action
  %431 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp958 = icmp sgt i32 %431, 0
  br i1 %cmp958, label %if.then959, label %if.end968

if.then959:                                       ; preds = %sw.bb957
  %sub960 = add nsw i32 %431, -1
  %idxprom961 = zext i32 %sub960 to i64
  %arrayidx962 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom961
  %432 = load i8, ptr %arrayidx962, align 1, !tbaa !17
  %cmp964 = icmp eq i8 %432, 10
  %conv965 = zext i1 %cmp964 to i32
  %433 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %434 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx966 = getelementptr inbounds ptr, ptr %433, i64 %434
  %435 = load ptr, ptr %arrayidx966, align 8, !tbaa !5
  %yy_at_bol967 = getelementptr inbounds %struct.yy_buffer_state, ptr %435, i64 0, i32 7
  store i32 %conv965, ptr %yy_at_bol967, align 8, !tbaa !18
  br label %if.end968

if.end968:                                        ; preds = %if.then959, %sw.bb957
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call969 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call969, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb970:                                         ; preds = %do_action
  %436 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp971 = icmp sgt i32 %436, 0
  br i1 %cmp971, label %if.then972, label %if.end981

if.then972:                                       ; preds = %sw.bb970
  %sub973 = add nsw i32 %436, -1
  %idxprom974 = zext i32 %sub973 to i64
  %arrayidx975 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom974
  %437 = load i8, ptr %arrayidx975, align 1, !tbaa !17
  %cmp977 = icmp eq i8 %437, 10
  %conv978 = zext i1 %cmp977 to i32
  %438 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %439 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx979 = getelementptr inbounds ptr, ptr %438, i64 %439
  %440 = load ptr, ptr %arrayidx979, align 8, !tbaa !5
  %yy_at_bol980 = getelementptr inbounds %struct.yy_buffer_state, ptr %440, i64 0, i32 7
  store i32 %conv978, ptr %yy_at_bol980, align 8, !tbaa !18
  br label %if.end981

if.end981:                                        ; preds = %if.then972, %sw.bb970
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call982 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.11, i32 noundef -1)
  store ptr %call982, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb983:                                         ; preds = %do_action
  %441 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp984 = icmp sgt i32 %441, 0
  br i1 %cmp984, label %if.then985, label %if.end994

if.then985:                                       ; preds = %sw.bb983
  %sub986 = add nsw i32 %441, -1
  %idxprom987 = zext i32 %sub986 to i64
  %arrayidx988 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom987
  %442 = load i8, ptr %arrayidx988, align 1, !tbaa !17
  %cmp990 = icmp eq i8 %442, 10
  %conv991 = zext i1 %cmp990 to i32
  %443 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %444 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx992 = getelementptr inbounds ptr, ptr %443, i64 %444
  %445 = load ptr, ptr %arrayidx992, align 8, !tbaa !5
  %yy_at_bol993 = getelementptr inbounds %struct.yy_buffer_state, ptr %445, i64 0, i32 7
  store i32 %conv991, ptr %yy_at_bol993, align 8, !tbaa !18
  br label %if.end994

if.end994:                                        ; preds = %if.then985, %sw.bb983
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call995 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.4, i32 noundef -1)
  store ptr %call995, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb996:                                         ; preds = %do_action
  %446 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp997 = icmp sgt i32 %446, 0
  br i1 %cmp997, label %if.then998, label %if.end1007

if.then998:                                       ; preds = %sw.bb996
  %sub999 = add nsw i32 %446, -1
  %idxprom1000 = zext i32 %sub999 to i64
  %arrayidx1001 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1000
  %447 = load i8, ptr %arrayidx1001, align 1, !tbaa !17
  %cmp1003 = icmp eq i8 %447, 10
  %conv1004 = zext i1 %cmp1003 to i32
  %448 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %449 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1005 = getelementptr inbounds ptr, ptr %448, i64 %449
  %450 = load ptr, ptr %arrayidx1005, align 8, !tbaa !5
  %yy_at_bol1006 = getelementptr inbounds %struct.yy_buffer_state, ptr %450, i64 0, i32 7
  store i32 %conv1004, ptr %yy_at_bol1006, align 8, !tbaa !18
  br label %if.end1007

if.end1007:                                       ; preds = %if.then998, %sw.bb996
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1008 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.3, i32 noundef -1)
  store ptr %call1008, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1009:                                        ; preds = %do_action
  %451 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1010 = icmp sgt i32 %451, 0
  br i1 %cmp1010, label %if.then1011, label %if.end1020

if.then1011:                                      ; preds = %sw.bb1009
  %sub1012 = add nsw i32 %451, -1
  %idxprom1013 = zext i32 %sub1012 to i64
  %arrayidx1014 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1013
  %452 = load i8, ptr %arrayidx1014, align 1, !tbaa !17
  %cmp1016 = icmp eq i8 %452, 10
  %conv1017 = zext i1 %cmp1016 to i32
  %453 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %454 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1018 = getelementptr inbounds ptr, ptr %453, i64 %454
  %455 = load ptr, ptr %arrayidx1018, align 8, !tbaa !5
  %yy_at_bol1019 = getelementptr inbounds %struct.yy_buffer_state, ptr %455, i64 0, i32 7
  store i32 %conv1017, ptr %yy_at_bol1019, align 8, !tbaa !18
  br label %if.end1020

if.end1020:                                       ; preds = %if.then1011, %sw.bb1009
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1021 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.12, i32 noundef -1)
  store ptr %call1021, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1022:                                        ; preds = %do_action
  %456 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1023 = icmp sgt i32 %456, 0
  br i1 %cmp1023, label %if.then1024, label %if.end1033

if.then1024:                                      ; preds = %sw.bb1022
  %sub1025 = add nsw i32 %456, -1
  %idxprom1026 = zext i32 %sub1025 to i64
  %arrayidx1027 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1026
  %457 = load i8, ptr %arrayidx1027, align 1, !tbaa !17
  %cmp1029 = icmp eq i8 %457, 10
  %conv1030 = zext i1 %cmp1029 to i32
  %458 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %459 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1031 = getelementptr inbounds ptr, ptr %458, i64 %459
  %460 = load ptr, ptr %arrayidx1031, align 8, !tbaa !5
  %yy_at_bol1032 = getelementptr inbounds %struct.yy_buffer_state, ptr %460, i64 0, i32 7
  store i32 %conv1030, ptr %yy_at_bol1032, align 8, !tbaa !18
  br label %if.end1033

if.end1033:                                       ; preds = %if.then1024, %sw.bb1022
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1034 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @.str.13, i32 noundef -1)
  store ptr %call1034, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1035:                                        ; preds = %do_action
  %461 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1036 = icmp sgt i32 %461, 0
  br i1 %cmp1036, label %if.then1037, label %if.end1046

if.then1037:                                      ; preds = %sw.bb1035
  %sub1038 = add nsw i32 %461, -1
  %idxprom1039 = zext i32 %sub1038 to i64
  %arrayidx1040 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1039
  %462 = load i8, ptr %arrayidx1040, align 1, !tbaa !17
  %cmp1042 = icmp eq i8 %462, 10
  %conv1043 = zext i1 %cmp1042 to i32
  %463 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %464 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1044 = getelementptr inbounds ptr, ptr %463, i64 %464
  %465 = load ptr, ptr %arrayidx1044, align 8, !tbaa !5
  %yy_at_bol1045 = getelementptr inbounds %struct.yy_buffer_state, ptr %465, i64 0, i32 7
  store i32 %conv1043, ptr %yy_at_bol1045, align 8, !tbaa !18
  br label %if.end1046

if.end1046:                                       ; preds = %if.then1037, %sw.bb1035
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %lhsv1660 = load i16, ptr @yytext, align 16
  %.not1662 = icmp eq i16 %lhsv1660, 36
  br i1 %.not1662, label %cleanup1377, label %if.end1051

if.end1051:                                       ; preds = %if.end1046
  %call.i1520 = tail call i64 @strtol(ptr nocapture noundef nonnull getelementptr inbounds ([8192 x i8], ptr @yytext, i64 0, i64 1), ptr noundef null, i32 noundef 10) #33
  %conv.i1521 = trunc i64 %call.i1520 to i32
  %call1053 = tail call noundef ptr @_ZN2kc9mkintegerEi(i32 noundef %conv.i1521)
  store ptr %call1053, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1054:                                        ; preds = %do_action
  %466 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1055 = icmp sgt i32 %466, 0
  br i1 %cmp1055, label %if.then1056, label %if.end1065

if.then1056:                                      ; preds = %sw.bb1054
  %sub1057 = add nsw i32 %466, -1
  %idxprom1058 = zext i32 %sub1057 to i64
  %arrayidx1059 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1058
  %467 = load i8, ptr %arrayidx1059, align 1, !tbaa !17
  %cmp1061 = icmp eq i8 %467, 10
  %conv1062 = zext i1 %cmp1061 to i32
  %468 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %469 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1063 = getelementptr inbounds ptr, ptr %468, i64 %469
  %470 = load ptr, ptr %arrayidx1063, align 8, !tbaa !5
  %yy_at_bol1064 = getelementptr inbounds %struct.yy_buffer_state, ptr %470, i64 0, i32 7
  store i32 %conv1062, ptr %yy_at_bol1064, align 8, !tbaa !18
  br label %if.end1065

if.end1065:                                       ; preds = %if.then1056, %sw.bb1054
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %cleanup1377

sw.bb1066:                                        ; preds = %do_action
  %471 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1067 = icmp sgt i32 %471, 0
  br i1 %cmp1067, label %if.then1068, label %if.end1077

if.then1068:                                      ; preds = %sw.bb1066
  %sub1069 = add nsw i32 %471, -1
  %idxprom1070 = zext i32 %sub1069 to i64
  %arrayidx1071 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1070
  %472 = load i8, ptr %arrayidx1071, align 1, !tbaa !17
  %cmp1073 = icmp eq i8 %472, 10
  %conv1074 = zext i1 %cmp1073 to i32
  %473 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %474 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1075 = getelementptr inbounds ptr, ptr %473, i64 %474
  %475 = load ptr, ptr %arrayidx1075, align 8, !tbaa !5
  %yy_at_bol1076 = getelementptr inbounds %struct.yy_buffer_state, ptr %475, i64 0, i32 7
  store i32 %conv1074, ptr %yy_at_bol1076, align 8, !tbaa !18
  br label %if.end1077

if.end1077:                                       ; preds = %if.then1068, %sw.bb1066
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %lhsv = load i64, ptr @yytext, align 16
  %.not = icmp eq i64 %lhsv, 29382667542884198
  br i1 %.not, label %cleanup1377, label %if.else1081

if.else1081:                                      ; preds = %if.end1077
  %bcmp = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(13) @yytext, ptr noundef nonnull dereferenceable(13) @.str.15, i64 13)
  %cmp1083 = icmp eq i32 %bcmp, 0
  br i1 %cmp1083, label %cleanup1377, label %if.else1085

if.else1085:                                      ; preds = %if.else1081
  %bcmp1659 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(5) @yytext, ptr noundef nonnull dereferenceable(5) @.str.16, i64 5)
  %cmp1087 = icmp eq i32 %bcmp1659, 0
  br i1 %cmp1087, label %cleanup1377, label %if.else1089

if.else1089:                                      ; preds = %if.else1085
  %call1090 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call1090, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1091:                                        ; preds = %do_action
  %476 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1092 = icmp sgt i32 %476, 0
  br i1 %cmp1092, label %if.then1093, label %if.end1102

if.then1093:                                      ; preds = %sw.bb1091
  %sub1094 = add nsw i32 %476, -1
  %idxprom1095 = zext i32 %sub1094 to i64
  %arrayidx1096 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1095
  %477 = load i8, ptr %arrayidx1096, align 1, !tbaa !17
  %cmp1098 = icmp eq i8 %477, 10
  %conv1099 = zext i1 %cmp1098 to i32
  %478 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %479 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1100 = getelementptr inbounds ptr, ptr %478, i64 %479
  %480 = load ptr, ptr %arrayidx1100, align 8, !tbaa !5
  %yy_at_bol1101 = getelementptr inbounds %struct.yy_buffer_state, ptr %480, i64 0, i32 7
  store i32 %conv1099, ptr %yy_at_bol1101, align 8, !tbaa !18
  br label %if.end1102

if.end1102:                                       ; preds = %if.then1093, %sw.bb1091
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1103 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call1103, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1104:                                        ; preds = %do_action
  %481 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1105 = icmp sgt i32 %481, 0
  br i1 %cmp1105, label %if.then1106, label %if.end1115

if.then1106:                                      ; preds = %sw.bb1104
  %sub1107 = add nsw i32 %481, -1
  %idxprom1108 = zext i32 %sub1107 to i64
  %arrayidx1109 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1108
  %482 = load i8, ptr %arrayidx1109, align 1, !tbaa !17
  %cmp1111 = icmp eq i8 %482, 10
  %conv1112 = zext i1 %cmp1111 to i32
  %483 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %484 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1113 = getelementptr inbounds ptr, ptr %483, i64 %484
  %485 = load ptr, ptr %arrayidx1113, align 8, !tbaa !5
  %yy_at_bol1114 = getelementptr inbounds %struct.yy_buffer_state, ptr %485, i64 0, i32 7
  store i32 %conv1112, ptr %yy_at_bol1114, align 8, !tbaa !18
  br label %if.end1115

if.end1115:                                       ; preds = %if.then1106, %sw.bb1104
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1116 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call1116, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1117:                                        ; preds = %do_action
  %486 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1118 = icmp sgt i32 %486, 0
  br i1 %cmp1118, label %if.then1119, label %if.end1128

if.then1119:                                      ; preds = %sw.bb1117
  %sub1120 = add nsw i32 %486, -1
  %idxprom1121 = zext i32 %sub1120 to i64
  %arrayidx1122 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1121
  %487 = load i8, ptr %arrayidx1122, align 1, !tbaa !17
  %cmp1124 = icmp eq i8 %487, 10
  %conv1125 = zext i1 %cmp1124 to i32
  %488 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %489 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1126 = getelementptr inbounds ptr, ptr %488, i64 %489
  %490 = load ptr, ptr %arrayidx1126, align 8, !tbaa !5
  %yy_at_bol1127 = getelementptr inbounds %struct.yy_buffer_state, ptr %490, i64 0, i32 7
  store i32 %conv1125, ptr %yy_at_bol1127, align 8, !tbaa !18
  br label %if.end1128

if.end1128:                                       ; preds = %if.then1119, %sw.bb1117
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1129 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call1129, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1130:                                        ; preds = %do_action
  %491 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1131 = icmp sgt i32 %491, 0
  br i1 %cmp1131, label %if.then1132, label %if.end1141

if.then1132:                                      ; preds = %sw.bb1130
  %sub1133 = add nsw i32 %491, -1
  %idxprom1134 = zext i32 %sub1133 to i64
  %arrayidx1135 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1134
  %492 = load i8, ptr %arrayidx1135, align 1, !tbaa !17
  %cmp1137 = icmp eq i8 %492, 10
  %conv1138 = zext i1 %cmp1137 to i32
  %493 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %494 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1139 = getelementptr inbounds ptr, ptr %493, i64 %494
  %495 = load ptr, ptr %arrayidx1139, align 8, !tbaa !5
  %yy_at_bol1140 = getelementptr inbounds %struct.yy_buffer_state, ptr %495, i64 0, i32 7
  store i32 %conv1138, ptr %yy_at_bol1140, align 8, !tbaa !18
  br label %if.end1141

if.end1141:                                       ; preds = %if.then1132, %sw.bb1130
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1142 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call1142, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1143:                                        ; preds = %do_action
  %496 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1144 = icmp sgt i32 %496, 0
  br i1 %cmp1144, label %if.then1145, label %if.end1154

if.then1145:                                      ; preds = %sw.bb1143
  %sub1146 = add nsw i32 %496, -1
  %idxprom1147 = zext i32 %sub1146 to i64
  %arrayidx1148 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1147
  %497 = load i8, ptr %arrayidx1148, align 1, !tbaa !17
  %cmp1150 = icmp eq i8 %497, 10
  %conv1151 = zext i1 %cmp1150 to i32
  %498 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %499 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1152 = getelementptr inbounds ptr, ptr %498, i64 %499
  %500 = load ptr, ptr %arrayidx1152, align 8, !tbaa !5
  %yy_at_bol1153 = getelementptr inbounds %struct.yy_buffer_state, ptr %500, i64 0, i32 7
  store i32 %conv1151, ptr %yy_at_bol1153, align 8, !tbaa !18
  br label %if.end1154

if.end1154:                                       ; preds = %if.then1145, %sw.bb1143
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call1155 = tail call noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef nonnull @yytext, i32 noundef -1)
  store ptr %call1155, ptr @yylval, align 8, !tbaa !17
  br label %cleanup1377

sw.bb1156:                                        ; preds = %do_action
  %501 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1157 = icmp sgt i32 %501, 0
  br i1 %cmp1157, label %if.then1158, label %if.end1167

if.then1158:                                      ; preds = %sw.bb1156
  %sub1159 = add nsw i32 %501, -1
  %idxprom1160 = zext i32 %sub1159 to i64
  %arrayidx1161 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1160
  %502 = load i8, ptr %arrayidx1161, align 1, !tbaa !17
  %cmp1163 = icmp eq i8 %502, 10
  %conv1164 = zext i1 %cmp1163 to i32
  %503 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %504 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1165 = getelementptr inbounds ptr, ptr %503, i64 %504
  %505 = load ptr, ptr %arrayidx1165, align 8, !tbaa !5
  %yy_at_bol1166 = getelementptr inbounds %struct.yy_buffer_state, ptr %505, i64 0, i32 7
  store i32 %conv1164, ptr %yy_at_bol1166, align 8, !tbaa !18
  br label %if.end1167

if.end1167:                                       ; preds = %if.then1158, %sw.bb1156
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %506 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv1168 = sext i8 %506 to i32
  br label %cleanup1377

sw.bb1169:                                        ; preds = %do_action
  %507 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1170 = icmp sgt i32 %507, 0
  br i1 %cmp1170, label %if.then1171, label %if.end1180

if.then1171:                                      ; preds = %sw.bb1169
  %sub1172 = add nsw i32 %507, -1
  %idxprom1173 = zext i32 %sub1172 to i64
  %arrayidx1174 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1173
  %508 = load i8, ptr %arrayidx1174, align 1, !tbaa !17
  %cmp1176 = icmp eq i8 %508, 10
  %conv1177 = zext i1 %cmp1176 to i32
  %509 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %510 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1178 = getelementptr inbounds ptr, ptr %509, i64 %510
  %511 = load ptr, ptr %arrayidx1178, align 8, !tbaa !5
  %yy_at_bol1179 = getelementptr inbounds %struct.yy_buffer_state, ptr %511, i64 0, i32 7
  store i32 %conv1177, ptr %yy_at_bol1179, align 8, !tbaa !18
  br label %if.end1180

if.end1180:                                       ; preds = %if.then1171, %sw.bb1169
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  br label %while.cond.backedge

sw.bb1181:                                        ; preds = %do_action
  %512 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1182 = icmp sgt i32 %512, 0
  br i1 %cmp1182, label %if.then1183, label %if.end1192

if.then1183:                                      ; preds = %sw.bb1181
  %sub1184 = add nsw i32 %512, -1
  %idxprom1185 = zext i32 %sub1184 to i64
  %arrayidx1186 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1185
  %513 = load i8, ptr %arrayidx1186, align 1, !tbaa !17
  %cmp1188 = icmp eq i8 %513, 10
  %conv1189 = zext i1 %cmp1188 to i32
  %514 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %515 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1190 = getelementptr inbounds ptr, ptr %514, i64 %515
  %516 = load ptr, ptr %arrayidx1190, align 8, !tbaa !5
  %yy_at_bol1191 = getelementptr inbounds %struct.yy_buffer_state, ptr %516, i64 0, i32 7
  store i32 %conv1189, ptr %yy_at_bol1191, align 8, !tbaa !18
  br label %if.end1192

if.end1192:                                       ; preds = %if.then1183, %sw.bb1181
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  br label %while.cond.backedge

sw.bb1193:                                        ; preds = %do_action
  %517 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1194 = icmp sgt i32 %517, 0
  br i1 %cmp1194, label %if.then1195, label %if.end1204

if.then1195:                                      ; preds = %sw.bb1193
  %sub1196 = add nsw i32 %517, -1
  %idxprom1197 = zext i32 %sub1196 to i64
  %arrayidx1198 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1197
  %518 = load i8, ptr %arrayidx1198, align 1, !tbaa !17
  %cmp1200 = icmp eq i8 %518, 10
  %conv1201 = zext i1 %cmp1200 to i32
  %519 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %520 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1202 = getelementptr inbounds ptr, ptr %519, i64 %520
  %521 = load ptr, ptr %arrayidx1202, align 8, !tbaa !5
  %yy_at_bol1203 = getelementptr inbounds %struct.yy_buffer_state, ptr %521, i64 0, i32 7
  store i32 %conv1201, ptr %yy_at_bol1203, align 8, !tbaa !18
  br label %if.end1204

if.end1204:                                       ; preds = %if.then1195, %sw.bb1193
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %call.i.i1522 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), ptr noundef nonnull @.str) #33
  %cmp.i.i.not = icmp eq i32 %call.i.i1522, 0
  br i1 %cmp.i.i.not, label %if.else1213, label %land.lhs.true1206

land.lhs.true1206:                                ; preds = %if.end1204
  %call.i.i1523 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), ptr noundef nonnull @.str.17) #33
  %cmp.i.i1524.not = icmp eq i32 %call.i.i1523, 0
  br i1 %cmp.i.i1524.not, label %if.else1213, label %if.then1208

if.then1208:                                      ; preds = %land.lhs.true1206
  %522 = load ptr, ptr @pg_filename, align 8, !tbaa !5
  %523 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %call1209 = tail call noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef %522, i32 noundef %523)
  %524 = load ptr, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), align 8, !tbaa !33
  %call1211 = tail call noundef ptr @_ZN2kc9Problem2SEPKcS1_(ptr noundef nonnull @.str.18, ptr noundef %524)
  %call1212 = tail call noundef ptr @_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %call1209, ptr noundef %call1211)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %call1212)
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else1355, %if.then1208, %if.else1213, %if.end1324, %if.end1299, %if.end1287, %if.end1275, %if.end1263, %if.end1251, %if.end1239, %if.end1227, %if.end1192, %if.end1180, %if.end630, %if.end352, %if.end326, %if.end282, %if.end269, %if.end244, %if.end207, %if.end123
  br label %while.cond, !llvm.loop !36

if.else1213:                                      ; preds = %land.lhs.true1206, %if.end1204
  %call1214 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 14), ptr noundef nonnull @.str.17)
  br label %while.cond.backedge

sw.bb1216:                                        ; preds = %do_action
  %525 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1217 = icmp sgt i32 %525, 0
  br i1 %cmp1217, label %if.then1218, label %if.end1227

if.then1218:                                      ; preds = %sw.bb1216
  %sub1219 = add nsw i32 %525, -1
  %idxprom1220 = zext i32 %sub1219 to i64
  %arrayidx1221 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1220
  %526 = load i8, ptr %arrayidx1221, align 1, !tbaa !17
  %cmp1223 = icmp eq i8 %526, 10
  %conv1224 = zext i1 %cmp1223 to i32
  %527 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %528 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1225 = getelementptr inbounds ptr, ptr %527, i64 %528
  %529 = load ptr, ptr %arrayidx1225, align 8, !tbaa !5
  %yy_at_bol1226 = getelementptr inbounds %struct.yy_buffer_state, ptr %529, i64 0, i32 7
  store i32 %conv1224, ptr %yy_at_bol1226, align 8, !tbaa !18
  br label %if.end1227

if.end1227:                                       ; preds = %if.then1218, %sw.bb1216
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 4), align 2, !tbaa !37
  br label %while.cond.backedge

sw.bb1228:                                        ; preds = %do_action
  %530 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1229 = icmp sgt i32 %530, 0
  br i1 %cmp1229, label %if.then1230, label %if.end1239

if.then1230:                                      ; preds = %sw.bb1228
  %sub1231 = add nsw i32 %530, -1
  %idxprom1232 = zext i32 %sub1231 to i64
  %arrayidx1233 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1232
  %531 = load i8, ptr %arrayidx1233, align 1, !tbaa !17
  %cmp1235 = icmp eq i8 %531, 10
  %conv1236 = zext i1 %cmp1235 to i32
  %532 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %533 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1237 = getelementptr inbounds ptr, ptr %532, i64 %533
  %534 = load ptr, ptr %arrayidx1237, align 8, !tbaa !5
  %yy_at_bol1238 = getelementptr inbounds %struct.yy_buffer_state, ptr %534, i64 0, i32 7
  store i32 %conv1236, ptr %yy_at_bol1238, align 8, !tbaa !18
  br label %if.end1239

if.end1239:                                       ; preds = %if.then1230, %sw.bb1228
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 5), align 1, !tbaa !40
  br label %while.cond.backedge

sw.bb1240:                                        ; preds = %do_action
  %535 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1241 = icmp sgt i32 %535, 0
  br i1 %cmp1241, label %if.then1242, label %if.end1251

if.then1242:                                      ; preds = %sw.bb1240
  %sub1243 = add nsw i32 %535, -1
  %idxprom1244 = zext i32 %sub1243 to i64
  %arrayidx1245 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1244
  %536 = load i8, ptr %arrayidx1245, align 1, !tbaa !17
  %cmp1247 = icmp eq i8 %536, 10
  %conv1248 = zext i1 %cmp1247 to i32
  %537 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %538 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1249 = getelementptr inbounds ptr, ptr %537, i64 %538
  %539 = load ptr, ptr %arrayidx1249, align 8, !tbaa !5
  %yy_at_bol1250 = getelementptr inbounds %struct.yy_buffer_state, ptr %539, i64 0, i32 7
  store i32 %conv1248, ptr %yy_at_bol1250, align 8, !tbaa !18
  br label %if.end1251

if.end1251:                                       ; preds = %if.then1242, %sw.bb1240
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 6), align 4, !tbaa !41
  br label %while.cond.backedge

sw.bb1252:                                        ; preds = %do_action
  %540 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1253 = icmp sgt i32 %540, 0
  br i1 %cmp1253, label %if.then1254, label %if.end1263

if.then1254:                                      ; preds = %sw.bb1252
  %sub1255 = add nsw i32 %540, -1
  %idxprom1256 = zext i32 %sub1255 to i64
  %arrayidx1257 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1256
  %541 = load i8, ptr %arrayidx1257, align 1, !tbaa !17
  %cmp1259 = icmp eq i8 %541, 10
  %conv1260 = zext i1 %cmp1259 to i32
  %542 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %543 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1261 = getelementptr inbounds ptr, ptr %542, i64 %543
  %544 = load ptr, ptr %arrayidx1261, align 8, !tbaa !5
  %yy_at_bol1262 = getelementptr inbounds %struct.yy_buffer_state, ptr %544, i64 0, i32 7
  store i32 %conv1260, ptr %yy_at_bol1262, align 8, !tbaa !18
  br label %if.end1263

if.end1263:                                       ; preds = %if.then1254, %sw.bb1252
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 7), align 1, !tbaa !42
  br label %while.cond.backedge

sw.bb1264:                                        ; preds = %do_action
  %545 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1265 = icmp sgt i32 %545, 0
  br i1 %cmp1265, label %if.then1266, label %if.end1275

if.then1266:                                      ; preds = %sw.bb1264
  %sub1267 = add nsw i32 %545, -1
  %idxprom1268 = zext i32 %sub1267 to i64
  %arrayidx1269 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1268
  %546 = load i8, ptr %arrayidx1269, align 1, !tbaa !17
  %cmp1271 = icmp eq i8 %546, 10
  %conv1272 = zext i1 %cmp1271 to i32
  %547 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %548 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1273 = getelementptr inbounds ptr, ptr %547, i64 %548
  %549 = load ptr, ptr %arrayidx1273, align 8, !tbaa !5
  %yy_at_bol1274 = getelementptr inbounds %struct.yy_buffer_state, ptr %549, i64 0, i32 7
  store i32 %conv1272, ptr %yy_at_bol1274, align 8, !tbaa !18
  br label %if.end1275

if.end1275:                                       ; preds = %if.then1266, %sw.bb1264
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 8), align 2, !tbaa !43
  br label %while.cond.backedge

sw.bb1276:                                        ; preds = %do_action
  %550 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1277 = icmp sgt i32 %550, 0
  br i1 %cmp1277, label %if.then1278, label %if.end1287

if.then1278:                                      ; preds = %sw.bb1276
  %sub1279 = add nsw i32 %550, -1
  %idxprom1280 = zext i32 %sub1279 to i64
  %arrayidx1281 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1280
  %551 = load i8, ptr %arrayidx1281, align 1, !tbaa !17
  %cmp1283 = icmp eq i8 %551, 10
  %conv1284 = zext i1 %cmp1283 to i32
  %552 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %553 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1285 = getelementptr inbounds ptr, ptr %552, i64 %553
  %554 = load ptr, ptr %arrayidx1285, align 8, !tbaa !5
  %yy_at_bol1286 = getelementptr inbounds %struct.yy_buffer_state, ptr %554, i64 0, i32 7
  store i32 %conv1284, ptr %yy_at_bol1286, align 8, !tbaa !18
  br label %if.end1287

if.end1287:                                       ; preds = %if.then1278, %sw.bb1276
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 10), align 8, !tbaa !44
  br label %while.cond.backedge

sw.bb1288:                                        ; preds = %do_action
  %555 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1289 = icmp sgt i32 %555, 0
  br i1 %cmp1289, label %if.then1290, label %if.end1299

if.then1290:                                      ; preds = %sw.bb1288
  %sub1291 = add nsw i32 %555, -1
  %idxprom1292 = zext i32 %sub1291 to i64
  %arrayidx1293 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1292
  %556 = load i8, ptr %arrayidx1293, align 1, !tbaa !17
  %cmp1295 = icmp eq i8 %556, 10
  %conv1296 = zext i1 %cmp1295 to i32
  %557 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %558 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1297 = getelementptr inbounds ptr, ptr %557, i64 %558
  %559 = load ptr, ptr %arrayidx1297, align 8, !tbaa !5
  %yy_at_bol1298 = getelementptr inbounds %struct.yy_buffer_state, ptr %559, i64 0, i32 7
  store i32 %conv1296, ptr %yy_at_bol1298, align 8, !tbaa !18
  br label %if.end1299

if.end1299:                                       ; preds = %if.then1290, %sw.bb1288
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 10), align 8, !tbaa !44
  store i8 1, ptr getelementptr inbounds (%struct.cmdline_options, ptr @g_options, i64 0, i32 11), align 1, !tbaa !45
  br label %while.cond.backedge

sw.bb1300:                                        ; preds = %do_action
  %560 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1301 = icmp sgt i32 %560, 0
  br i1 %cmp1301, label %if.then1302, label %if.end1311

if.then1302:                                      ; preds = %sw.bb1300
  %sub1303 = add nsw i32 %560, -1
  %idxprom1304 = zext i32 %sub1303 to i64
  %arrayidx1305 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1304
  %561 = load i8, ptr %arrayidx1305, align 1, !tbaa !17
  %cmp1307 = icmp eq i8 %561, 10
  %conv1308 = zext i1 %cmp1307 to i32
  %562 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %563 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1309 = getelementptr inbounds ptr, ptr %562, i64 %563
  %564 = load ptr, ptr %arrayidx1309, align 8, !tbaa !5
  %yy_at_bol1310 = getelementptr inbounds %struct.yy_buffer_state, ptr %564, i64 0, i32 7
  store i32 %conv1308, ptr %yy_at_bol1310, align 8, !tbaa !18
  br label %if.end1311

if.end1311:                                       ; preds = %if.then1302, %sw.bb1300
  tail call fastcc void @_ZN12_GLOBAL__N_15countEb()
  %565 = load i8, ptr @yytext, align 16, !tbaa !17
  %conv1312 = sext i8 %565 to i32
  br label %cleanup1377

sw.bb1313:                                        ; preds = %do_action
  %566 = load i32, ptr @yyleng, align 4, !tbaa !9
  %cmp1314 = icmp sgt i32 %566, 0
  br i1 %cmp1314, label %if.then1315, label %if.end1324

if.then1315:                                      ; preds = %sw.bb1313
  %sub1316 = add nsw i32 %566, -1
  %idxprom1317 = zext i32 %sub1316 to i64
  %arrayidx1318 = getelementptr inbounds [8192 x i8], ptr @yytext, i64 0, i64 %idxprom1317
  %567 = load i8, ptr %arrayidx1318, align 1, !tbaa !17
  %cmp1320 = icmp eq i8 %567, 10
  %conv1321 = zext i1 %cmp1320 to i32
  %568 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %569 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1322 = getelementptr inbounds ptr, ptr %568, i64 %569
  %570 = load ptr, ptr %arrayidx1322, align 8, !tbaa !5
  %yy_at_bol1323 = getelementptr inbounds %struct.yy_buffer_state, ptr %570, i64 0, i32 7
  store i32 %conv1321, ptr %yy_at_bol1323, align 8, !tbaa !18
  br label %if.end1324

if.end1324:                                       ; preds = %if.then1315, %sw.bb1313
  %conv1325 = sext i32 %566 to i64
  %571 = load ptr, ptr @yyout, align 8, !tbaa !5
  %call1326 = tail call i64 @fwrite(ptr noundef nonnull @yytext, i64 noundef %conv1325, i64 noundef 1, ptr noundef %571)
  br label %while.cond.backedge

sw.bb1328:                                        ; preds = %do_action
  %572 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  store i8 %572, ptr %yy_cp.4, align 1, !tbaa !17
  %573 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %574 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1335 = getelementptr inbounds ptr, ptr %573, i64 %574
  %575 = load ptr, ptr %arrayidx1335, align 8, !tbaa !5
  %yy_buffer_status = getelementptr inbounds %struct.yy_buffer_state, ptr %575, i64 0, i32 11
  %576 = load i32, ptr %yy_buffer_status, align 8, !tbaa !46
  %cmp1336 = icmp eq i32 %576, 0
  br i1 %cmp1336, label %if.then1337, label %sw.bb1328.if.end1342_crit_edge

sw.bb1328.if.end1342_crit_edge:                   ; preds = %sw.bb1328
  %.pre1725 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  br label %if.end1342

if.then1337:                                      ; preds = %sw.bb1328
  %yy_n_chars = getelementptr inbounds %struct.yy_buffer_state, ptr %575, i64 0, i32 4
  %577 = load i32, ptr %yy_n_chars, align 4, !tbaa !13
  store i32 %577, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %578 = load ptr, ptr @yyin, align 8, !tbaa !5
  store ptr %578, ptr %575, align 8, !tbaa !16
  %579 = load ptr, ptr %arrayidx1335, align 8, !tbaa !5
  %yy_buffer_status1341 = getelementptr inbounds %struct.yy_buffer_state, ptr %579, i64 0, i32 11
  store i32 1, ptr %yy_buffer_status1341, align 8, !tbaa !46
  br label %if.end1342

if.end1342:                                       ; preds = %sw.bb1328.if.end1342_crit_edge, %if.then1337
  %580 = phi i32 [ %577, %if.then1337 ], [ %.pre1725, %sw.bb1328.if.end1342_crit_edge ]
  %581 = phi ptr [ %579, %if.then1337 ], [ %575, %sw.bb1328.if.end1342_crit_edge ]
  %582 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %yy_ch_buf = getelementptr inbounds %struct.yy_buffer_state, ptr %581, i64 0, i32 1
  %583 = load ptr, ptr %yy_ch_buf, align 8, !tbaa !47
  %idxprom1344 = sext i32 %580 to i64
  %arrayidx1345 = getelementptr inbounds i8, ptr %583, i64 %idxprom1344
  %cmp1346.not = icmp ugt ptr %582, %arrayidx1345
  br i1 %cmp1346.not, label %if.else1355, label %if.then1347

if.then1347:                                      ; preds = %if.end1342
  %sub.ptr.lhs.cast1329.le = ptrtoint ptr %yy_cp.4 to i64
  %sub.ptr.rhs.cast1330.le = ptrtoint ptr %77 to i64
  %sub.ptr.sub1331.le1769 = sub i64 %sub.ptr.lhs.cast1329.le, %sub.ptr.rhs.cast1330.le
  %conv1332.le = trunc i64 %sub.ptr.sub1331.le1769 to i32
  %584 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %sub1333.le1765 = shl i64 %sub.ptr.sub1331.le1769, 32
  %sext = add i64 %sub1333.le1765, -4294967296
  %idx.ext = ashr exact i64 %sext, 32
  %add.ptr = getelementptr inbounds i8, ptr %584, i64 %idx.ext
  store ptr %add.ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %585 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %yy_at_bol.i = getelementptr inbounds %struct.yy_buffer_state, ptr %581, i64 0, i32 7
  %586 = load i32, ptr %yy_at_bol.i, align 8, !tbaa !18
  %add.i = add nsw i32 %586, %585
  %587 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %incdec.ptr.i = getelementptr inbounds i32, ptr %587, i64 1
  store ptr %incdec.ptr.i, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %add.i, ptr %587, align 4, !tbaa !9
  %cmp55.i = icmp sgt i32 %conv1332.le, 1
  br i1 %cmp55.i, label %for.body.i1528, label %_ZL21yy_get_previous_statev.exit

for.body.i1528:                                   ; preds = %if.then1347, %while.end.i
  %yy_cp.058.i = phi ptr [ %incdec.ptr29.i, %while.end.i ], [ %584, %if.then1347 ]
  %yy_current_state.057.i = phi i32 [ %conv27.i, %while.end.i ], [ %add.i, %if.then1347 ]
  %incdec.ptr285456.i = phi ptr [ %incdec.ptr28.i, %while.end.i ], [ %incdec.ptr.i, %if.then1347 ]
  %588 = load i8, ptr %yy_cp.058.i, align 1, !tbaa !17
  %tobool.not.i1527 = icmp eq i8 %588, 0
  br i1 %tobool.not.i1527, label %cond.end.i, label %cond.true.i

cond.true.i:                                      ; preds = %for.body.i1528
  %idxprom.i = zext i8 %588 to i64
  %arrayidx1.i = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %idxprom.i
  %589 = load i32, ptr %arrayidx1.i, align 4, !tbaa !9
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %for.body.i1528
  %cond.i = phi i32 [ %589, %cond.true.i ], [ 1, %for.body.i1528 ]
  %idxprom343.i = sext i32 %yy_current_state.057.i to i64
  %arrayidx444.i = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom343.i
  %590 = load i16, ptr %arrayidx444.i, align 2, !tbaa !19
  %conv545.i = sext i16 %590 to i32
  %conv646.i = and i32 %cond.i, 255
  %add747.i = add nsw i32 %conv646.i, %conv545.i
  %idxprom848.i = sext i32 %add747.i to i64
  %arrayidx949.i = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom848.i
  %591 = load i16, ptr %arrayidx949.i, align 2, !tbaa !19
  %conv1050.i = sext i16 %591 to i32
  %cmp11.not51.i = icmp eq i32 %yy_current_state.057.i, %conv1050.i
  br i1 %cmp11.not51.i, label %while.end.i, label %while.body.preheader.i

while.body.preheader.i:                           ; preds = %cond.end.i
  %conv2.i = trunc i32 %cond.i to i8
  br label %while.body.i

while.body.i:                                     ; preds = %if.end.i1530, %while.body.preheader.i
  %idxprom353.i = phi i64 [ %idxprom3.i, %if.end.i1530 ], [ %idxprom343.i, %while.body.preheader.i ]
  %yy_c.052.i = phi i8 [ %yy_c.1.i, %if.end.i1530 ], [ %conv2.i, %while.body.preheader.i ]
  %arrayidx13.i = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %idxprom353.i
  %592 = load i16, ptr %arrayidx13.i, align 2, !tbaa !19
  %cmp15.i = icmp sgt i16 %592, 437
  br i1 %cmp15.i, label %if.then.i1529, label %if.end.i1530

if.then.i1529:                                    ; preds = %while.body.i
  %idxprom17.i = zext i8 %yy_c.052.i to i64
  %arrayidx18.i = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %idxprom17.i
  %593 = load i32, ptr %arrayidx18.i, align 4, !tbaa !9
  %conv19.i = trunc i32 %593 to i8
  br label %if.end.i1530

if.end.i1530:                                     ; preds = %if.then.i1529, %while.body.i
  %yy_c.1.i = phi i8 [ %conv19.i, %if.then.i1529 ], [ %yy_c.052.i, %while.body.i ]
  %idxprom3.i = sext i16 %592 to i64
  %arrayidx4.i = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom3.i
  %594 = load i16, ptr %arrayidx4.i, align 2, !tbaa !19
  %conv5.i = sext i16 %594 to i32
  %conv6.i = zext i8 %yy_c.1.i to i32
  %add7.i = add nsw i32 %conv5.i, %conv6.i
  %idxprom8.i = sext i32 %add7.i to i64
  %arrayidx9.i = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom8.i
  %595 = load i16, ptr %arrayidx9.i, align 2, !tbaa !19
  %cmp11.not.i = icmp eq i16 %592, %595
  br i1 %cmp11.not.i, label %while.end.i, label %while.body.i, !llvm.loop !48

while.end.i:                                      ; preds = %if.end.i1530, %cond.end.i
  %add7.lcssa.i = phi i32 [ %add747.i, %cond.end.i ], [ %add7.i, %if.end.i1530 ]
  %idxprom25.i = zext i32 %add7.lcssa.i to i64
  %arrayidx26.i = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %idxprom25.i
  %596 = load i16, ptr %arrayidx26.i, align 2, !tbaa !19
  %conv27.i = sext i16 %596 to i32
  %incdec.ptr28.i = getelementptr inbounds i32, ptr %incdec.ptr285456.i, i64 1
  store i32 %conv27.i, ptr %incdec.ptr285456.i, align 4, !tbaa !9
  %incdec.ptr29.i = getelementptr inbounds i8, ptr %yy_cp.058.i, i64 1
  %exitcond.not.i1531 = icmp eq ptr %incdec.ptr29.i, %add.ptr
  br i1 %exitcond.not.i1531, label %for.cond.for.end_crit_edge.i, label %for.body.i1528, !llvm.loop !49

for.cond.for.end_crit_edge.i:                     ; preds = %while.end.i
  store ptr %incdec.ptr28.i, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %_ZL21yy_get_previous_statev.exit

_ZL21yy_get_previous_statev.exit:                 ; preds = %if.then1347, %for.cond.for.end_crit_edge.i
  %597 = phi ptr [ %incdec.ptr28.i, %for.cond.for.end_crit_edge.i ], [ %incdec.ptr.i, %if.then1347 ]
  %yy_current_state.0.lcssa.i = phi i32 [ %conv27.i, %for.cond.for.end_crit_edge.i ], [ %add.i, %if.then1347 ]
  %idxprom36.i = sext i32 %yy_current_state.0.lcssa.i to i64
  %arrayidx37.i = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom36.i
  %598 = load i16, ptr %arrayidx37.i, align 2, !tbaa !19
  %conv38.i = sext i16 %598 to i32
  %add39.i = add nsw i32 %conv38.i, 1
  %idxprom240.i = sext i32 %add39.i to i64
  %arrayidx341.i = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom240.i
  %599 = load i16, ptr %arrayidx341.i, align 2, !tbaa !19
  %conv442.i = sext i16 %599 to i32
  %cmp.not43.i = icmp eq i32 %yy_current_state.0.lcssa.i, %conv442.i
  br i1 %cmp.not43.i, label %while.end.i1538, label %while.body.i1537

while.body.i1537:                                 ; preds = %_ZL21yy_get_previous_statev.exit, %while.body.i1537
  %idxprom44.i = phi i64 [ %idxprom.i1532, %while.body.i1537 ], [ %idxprom36.i, %_ZL21yy_get_previous_statev.exit ]
  %arrayidx6.i = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %idxprom44.i
  %600 = load i16, ptr %arrayidx6.i, align 2, !tbaa !19
  %idxprom.i1532 = sext i16 %600 to i64
  %arrayidx.i1533 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom.i1532
  %601 = load i16, ptr %arrayidx.i1533, align 2, !tbaa !19
  %conv.i1534 = sext i16 %601 to i32
  %add.i1535 = add nsw i32 %conv.i1534, 1
  %idxprom2.i = sext i32 %add.i1535 to i64
  %arrayidx3.i = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom2.i
  %602 = load i16, ptr %arrayidx3.i, align 2, !tbaa !19
  %cmp.not.i1536 = icmp eq i16 %600, %602
  br i1 %cmp.not.i1536, label %while.end.i1538, label %while.body.i1537, !llvm.loop !50

while.end.i1538:                                  ; preds = %while.body.i1537, %_ZL21yy_get_previous_statev.exit
  %add.lcssa.i = phi i32 [ %add39.i, %_ZL21yy_get_previous_statev.exit ], [ %add.i1535, %while.body.i1537 ]
  %idxprom18.i = zext i32 %add.lcssa.i to i64
  %arrayidx19.i = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %idxprom18.i
  %603 = load i16, ptr %arrayidx19.i, align 2, !tbaa !19
  %cmp21.i = icmp eq i16 %603, 437
  br i1 %cmp21.i, label %yy_find_action.loopexit, label %_ZL16yy_try_NUL_transi.exit

_ZL16yy_try_NUL_transi.exit:                      ; preds = %while.end.i1538
  %conv20.i = sext i16 %603 to i32
  %incdec.ptr.i1539 = getelementptr inbounds i32, ptr %597, i64 1
  store ptr %incdec.ptr.i1539, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %conv20.i, ptr %597, align 4, !tbaa !9
  %tobool1351.not = icmp eq i32 %add.lcssa.i, 0
  br i1 %tobool1351.not, label %yy_find_action.loopexit, label %if.then1352

if.then1352:                                      ; preds = %_ZL16yy_try_NUL_transi.exit
  %incdec.ptr1353 = getelementptr inbounds i8, ptr %add.ptr, i64 1
  store ptr %incdec.ptr1353, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  br label %yy_match.loopexit

if.else1355:                                      ; preds = %if.end1342
  %call1356 = tail call fastcc noundef i32 @_ZL18yy_get_next_bufferv(), !range !51
  switch i32 %call1356, label %while.cond.backedge [
    i32 1, label %cleanup1375
    i32 0, label %sw.bb1362
    i32 2, label %sw.bb1367
  ], !llvm.loop !36

sw.bb1362:                                        ; preds = %if.else1355
  %sub.ptr.lhs.cast1329.le1775 = ptrtoint ptr %yy_cp.4 to i64
  %sub.ptr.rhs.cast1330.le1773 = ptrtoint ptr %77 to i64
  %sub.ptr.sub1331.le = sub i64 %sub.ptr.lhs.cast1329.le1775, %sub.ptr.rhs.cast1330.le1773
  %conv1332.le1767 = trunc i64 %sub.ptr.sub1331.le to i32
  %604 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %sub1333.le = shl i64 %sub.ptr.sub1331.le, 32
  %sext1776 = add i64 %sub1333.le, -4294967296
  %idx.ext1363 = ashr exact i64 %sext1776, 32
  %add.ptr1364 = getelementptr inbounds i8, ptr %604, i64 %idx.ext1363
  store ptr %add.ptr1364, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %605 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %606 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %607 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx.i1541 = getelementptr inbounds ptr, ptr %606, i64 %607
  %608 = load ptr, ptr %arrayidx.i1541, align 8, !tbaa !5
  %yy_at_bol.i1542 = getelementptr inbounds %struct.yy_buffer_state, ptr %608, i64 0, i32 7
  %609 = load i32, ptr %yy_at_bol.i1542, align 8, !tbaa !18
  %add.i1543 = add nsw i32 %609, %605
  %610 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %incdec.ptr.i1544 = getelementptr inbounds i32, ptr %610, i64 1
  store ptr %incdec.ptr.i1544, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %add.i1543, ptr %610, align 4, !tbaa !9
  %cmp55.i1545 = icmp sgt i32 %conv1332.le1767, 1
  br i1 %cmp55.i1545, label %for.body.i1552, label %yy_match.loopexit

for.body.i1552:                                   ; preds = %sw.bb1362, %while.end.i1595
  %yy_cp.058.i1548 = phi ptr [ %incdec.ptr29.i1593, %while.end.i1595 ], [ %604, %sw.bb1362 ]
  %yy_current_state.057.i1549 = phi i32 [ %conv27.i1591, %while.end.i1595 ], [ %add.i1543, %sw.bb1362 ]
  %incdec.ptr285456.i1550 = phi ptr [ %incdec.ptr28.i1592, %while.end.i1595 ], [ %incdec.ptr.i1544, %sw.bb1362 ]
  %611 = load i8, ptr %yy_cp.058.i1548, align 1, !tbaa !17
  %tobool.not.i1551 = icmp eq i8 %611, 0
  br i1 %tobool.not.i1551, label %cond.end.i1566, label %cond.true.i1555

cond.true.i1555:                                  ; preds = %for.body.i1552
  %idxprom.i1553 = zext i8 %611 to i64
  %arrayidx1.i1554 = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %idxprom.i1553
  %612 = load i32, ptr %arrayidx1.i1554, align 4, !tbaa !9
  br label %cond.end.i1566

cond.end.i1566:                                   ; preds = %cond.true.i1555, %for.body.i1552
  %cond.i1556 = phi i32 [ %612, %cond.true.i1555 ], [ 1, %for.body.i1552 ]
  %idxprom343.i1557 = sext i32 %yy_current_state.057.i1549 to i64
  %arrayidx444.i1558 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom343.i1557
  %613 = load i16, ptr %arrayidx444.i1558, align 2, !tbaa !19
  %conv545.i1559 = sext i16 %613 to i32
  %conv646.i1560 = and i32 %cond.i1556, 255
  %add747.i1561 = add nsw i32 %conv646.i1560, %conv545.i1559
  %idxprom848.i1562 = sext i32 %add747.i1561 to i64
  %arrayidx949.i1563 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom848.i1562
  %614 = load i16, ptr %arrayidx949.i1563, align 2, !tbaa !19
  %conv1050.i1564 = sext i16 %614 to i32
  %cmp11.not51.i1565 = icmp eq i32 %yy_current_state.057.i1549, %conv1050.i1564
  br i1 %cmp11.not51.i1565, label %while.end.i1595, label %while.body.preheader.i1568

while.body.preheader.i1568:                       ; preds = %cond.end.i1566
  %conv2.i1567 = trunc i32 %cond.i1556 to i8
  br label %while.body.i1573

while.body.i1573:                                 ; preds = %if.end.i1587, %while.body.preheader.i1568
  %idxprom353.i1569 = phi i64 [ %idxprom3.i1579, %if.end.i1587 ], [ %idxprom343.i1557, %while.body.preheader.i1568 ]
  %yy_c.052.i1570 = phi i8 [ %yy_c.1.i1578, %if.end.i1587 ], [ %conv2.i1567, %while.body.preheader.i1568 ]
  %arrayidx13.i1571 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %idxprom353.i1569
  %615 = load i16, ptr %arrayidx13.i1571, align 2, !tbaa !19
  %cmp15.i1572 = icmp sgt i16 %615, 437
  br i1 %cmp15.i1572, label %if.then.i1577, label %if.end.i1587

if.then.i1577:                                    ; preds = %while.body.i1573
  %idxprom17.i1574 = zext i8 %yy_c.052.i1570 to i64
  %arrayidx18.i1575 = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %idxprom17.i1574
  %616 = load i32, ptr %arrayidx18.i1575, align 4, !tbaa !9
  %conv19.i1576 = trunc i32 %616 to i8
  br label %if.end.i1587

if.end.i1587:                                     ; preds = %if.then.i1577, %while.body.i1573
  %yy_c.1.i1578 = phi i8 [ %conv19.i1576, %if.then.i1577 ], [ %yy_c.052.i1570, %while.body.i1573 ]
  %idxprom3.i1579 = sext i16 %615 to i64
  %arrayidx4.i1580 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom3.i1579
  %617 = load i16, ptr %arrayidx4.i1580, align 2, !tbaa !19
  %conv5.i1581 = sext i16 %617 to i32
  %conv6.i1582 = zext i8 %yy_c.1.i1578 to i32
  %add7.i1583 = add nsw i32 %conv5.i1581, %conv6.i1582
  %idxprom8.i1584 = sext i32 %add7.i1583 to i64
  %arrayidx9.i1585 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom8.i1584
  %618 = load i16, ptr %arrayidx9.i1585, align 2, !tbaa !19
  %cmp11.not.i1586 = icmp eq i16 %615, %618
  br i1 %cmp11.not.i1586, label %while.end.i1595, label %while.body.i1573, !llvm.loop !48

while.end.i1595:                                  ; preds = %if.end.i1587, %cond.end.i1566
  %add7.lcssa.i1588 = phi i32 [ %add747.i1561, %cond.end.i1566 ], [ %add7.i1583, %if.end.i1587 ]
  %idxprom25.i1589 = zext i32 %add7.lcssa.i1588 to i64
  %arrayidx26.i1590 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %idxprom25.i1589
  %619 = load i16, ptr %arrayidx26.i1590, align 2, !tbaa !19
  %conv27.i1591 = sext i16 %619 to i32
  %incdec.ptr28.i1592 = getelementptr inbounds i32, ptr %incdec.ptr285456.i1550, i64 1
  store i32 %conv27.i1591, ptr %incdec.ptr285456.i1550, align 4, !tbaa !9
  %incdec.ptr29.i1593 = getelementptr inbounds i8, ptr %yy_cp.058.i1548, i64 1
  %exitcond.not.i1594 = icmp eq ptr %incdec.ptr29.i1593, %add.ptr1364
  br i1 %exitcond.not.i1594, label %for.cond.for.end_crit_edge.i1596, label %for.body.i1552, !llvm.loop !49

for.cond.for.end_crit_edge.i1596:                 ; preds = %while.end.i1595
  store ptr %incdec.ptr28.i1592, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %yy_match.loopexit

sw.bb1367:                                        ; preds = %if.else1355
  %620 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %621 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx1368 = getelementptr inbounds ptr, ptr %620, i64 %621
  %622 = load ptr, ptr %arrayidx1368, align 8, !tbaa !5
  %yy_ch_buf1369 = getelementptr inbounds %struct.yy_buffer_state, ptr %622, i64 0, i32 1
  %623 = load ptr, ptr %yy_ch_buf1369, align 8, !tbaa !47
  %624 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %idxprom1370 = sext i32 %624 to i64
  %arrayidx1371 = getelementptr inbounds i8, ptr %623, i64 %idxprom1370
  store ptr %arrayidx1371, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %625 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %yy_at_bol.i1600 = getelementptr inbounds %struct.yy_buffer_state, ptr %622, i64 0, i32 7
  %626 = load i32, ptr %yy_at_bol.i1600, align 8, !tbaa !18
  %add.i1601 = add nsw i32 %626, %625
  %627 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  %incdec.ptr.i1602 = getelementptr inbounds i32, ptr %627, i64 1
  store ptr %incdec.ptr.i1602, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  store i32 %add.i1601, ptr %627, align 4, !tbaa !9
  %628 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %cmp55.i1603 = icmp ult ptr %628, %arrayidx1371
  br i1 %cmp55.i1603, label %for.body.preheader.i1605, label %yy_find_action.loopexit

for.body.preheader.i1605:                         ; preds = %sw.bb1367
  %629 = ptrtoint ptr %arrayidx1371 to i64
  %630 = ptrtoint ptr %628 to i64
  %631 = sub i64 %629, %630
  %scevgep.i1604 = getelementptr i8, ptr %628, i64 %631
  br label %for.body.i1610

for.body.i1610:                                   ; preds = %while.end.i1653, %for.body.preheader.i1605
  %yy_cp.058.i1606 = phi ptr [ %incdec.ptr29.i1651, %while.end.i1653 ], [ %628, %for.body.preheader.i1605 ]
  %yy_current_state.057.i1607 = phi i32 [ %conv27.i1649, %while.end.i1653 ], [ %add.i1601, %for.body.preheader.i1605 ]
  %incdec.ptr285456.i1608 = phi ptr [ %incdec.ptr28.i1650, %while.end.i1653 ], [ %incdec.ptr.i1602, %for.body.preheader.i1605 ]
  %632 = load i8, ptr %yy_cp.058.i1606, align 1, !tbaa !17
  %tobool.not.i1609 = icmp eq i8 %632, 0
  br i1 %tobool.not.i1609, label %cond.end.i1624, label %cond.true.i1613

cond.true.i1613:                                  ; preds = %for.body.i1610
  %idxprom.i1611 = zext i8 %632 to i64
  %arrayidx1.i1612 = getelementptr inbounds [256 x i32], ptr @_ZL5yy_ec, i64 0, i64 %idxprom.i1611
  %633 = load i32, ptr %arrayidx1.i1612, align 4, !tbaa !9
  br label %cond.end.i1624

cond.end.i1624:                                   ; preds = %cond.true.i1613, %for.body.i1610
  %cond.i1614 = phi i32 [ %633, %cond.true.i1613 ], [ 1, %for.body.i1610 ]
  %idxprom343.i1615 = sext i32 %yy_current_state.057.i1607 to i64
  %arrayidx444.i1616 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom343.i1615
  %634 = load i16, ptr %arrayidx444.i1616, align 2, !tbaa !19
  %conv545.i1617 = sext i16 %634 to i32
  %conv646.i1618 = and i32 %cond.i1614, 255
  %add747.i1619 = add nsw i32 %conv646.i1618, %conv545.i1617
  %idxprom848.i1620 = sext i32 %add747.i1619 to i64
  %arrayidx949.i1621 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom848.i1620
  %635 = load i16, ptr %arrayidx949.i1621, align 2, !tbaa !19
  %conv1050.i1622 = sext i16 %635 to i32
  %cmp11.not51.i1623 = icmp eq i32 %yy_current_state.057.i1607, %conv1050.i1622
  br i1 %cmp11.not51.i1623, label %while.end.i1653, label %while.body.preheader.i1626

while.body.preheader.i1626:                       ; preds = %cond.end.i1624
  %conv2.i1625 = trunc i32 %cond.i1614 to i8
  br label %while.body.i1631

while.body.i1631:                                 ; preds = %if.end.i1645, %while.body.preheader.i1626
  %idxprom353.i1627 = phi i64 [ %idxprom3.i1637, %if.end.i1645 ], [ %idxprom343.i1615, %while.body.preheader.i1626 ]
  %yy_c.052.i1628 = phi i8 [ %yy_c.1.i1636, %if.end.i1645 ], [ %conv2.i1625, %while.body.preheader.i1626 ]
  %arrayidx13.i1629 = getelementptr inbounds [453 x i16], ptr @_ZL6yy_def, i64 0, i64 %idxprom353.i1627
  %636 = load i16, ptr %arrayidx13.i1629, align 2, !tbaa !19
  %cmp15.i1630 = icmp sgt i16 %636, 437
  br i1 %cmp15.i1630, label %if.then.i1635, label %if.end.i1645

if.then.i1635:                                    ; preds = %while.body.i1631
  %idxprom17.i1632 = zext i8 %yy_c.052.i1628 to i64
  %arrayidx18.i1633 = getelementptr inbounds [72 x i32], ptr @_ZL7yy_meta, i64 0, i64 %idxprom17.i1632
  %637 = load i32, ptr %arrayidx18.i1633, align 4, !tbaa !9
  %conv19.i1634 = trunc i32 %637 to i8
  br label %if.end.i1645

if.end.i1645:                                     ; preds = %if.then.i1635, %while.body.i1631
  %yy_c.1.i1636 = phi i8 [ %conv19.i1634, %if.then.i1635 ], [ %yy_c.052.i1628, %while.body.i1631 ]
  %idxprom3.i1637 = sext i16 %636 to i64
  %arrayidx4.i1638 = getelementptr inbounds [453 x i16], ptr @_ZL7yy_base, i64 0, i64 %idxprom3.i1637
  %638 = load i16, ptr %arrayidx4.i1638, align 2, !tbaa !19
  %conv5.i1639 = sext i16 %638 to i32
  %conv6.i1640 = zext i8 %yy_c.1.i1636 to i32
  %add7.i1641 = add nsw i32 %conv5.i1639, %conv6.i1640
  %idxprom8.i1642 = sext i32 %add7.i1641 to i64
  %arrayidx9.i1643 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_chk, i64 0, i64 %idxprom8.i1642
  %639 = load i16, ptr %arrayidx9.i1643, align 2, !tbaa !19
  %cmp11.not.i1644 = icmp eq i16 %636, %639
  br i1 %cmp11.not.i1644, label %while.end.i1653, label %while.body.i1631, !llvm.loop !48

while.end.i1653:                                  ; preds = %if.end.i1645, %cond.end.i1624
  %add7.lcssa.i1646 = phi i32 [ %add747.i1619, %cond.end.i1624 ], [ %add7.i1641, %if.end.i1645 ]
  %idxprom25.i1647 = zext i32 %add7.lcssa.i1646 to i64
  %arrayidx26.i1648 = getelementptr inbounds [922 x i16], ptr @_ZL6yy_nxt, i64 0, i64 %idxprom25.i1647
  %640 = load i16, ptr %arrayidx26.i1648, align 2, !tbaa !19
  %conv27.i1649 = sext i16 %640 to i32
  %incdec.ptr28.i1650 = getelementptr inbounds i32, ptr %incdec.ptr285456.i1608, i64 1
  store i32 %conv27.i1649, ptr %incdec.ptr285456.i1608, align 4, !tbaa !9
  %incdec.ptr29.i1651 = getelementptr inbounds i8, ptr %yy_cp.058.i1606, i64 1
  %exitcond.not.i1652 = icmp eq ptr %incdec.ptr29.i1651, %scevgep.i1604
  br i1 %exitcond.not.i1652, label %for.cond.for.end_crit_edge.i1654, label %for.body.i1610, !llvm.loop !49

for.cond.for.end_crit_edge.i1654:                 ; preds = %while.end.i1653
  store ptr %incdec.ptr28.i1650, ptr @_ZL12yy_state_ptr, align 8, !tbaa !5
  br label %yy_find_action.loopexit

cleanup1375:                                      ; preds = %if.else1355
  %641 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  store ptr %641, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %642 = load i32, ptr @_ZL8yy_start, align 4, !tbaa !9
  %sub1359 = add nsw i32 %642, -1
  %div = sdiv i32 %sub1359, 2
  %add1361 = add nuw nsw i32 %div, 95
  br label %do_action

sw.default:                                       ; preds = %do_action
  tail call fastcc void @_ZL14yy_fatal_errorPKc(ptr noundef nonnull @.str.19)
  unreachable

cleanup1377:                                      ; preds = %do_action, %do_action, %do_action, %do_action, %do_action, %do_action, %do_action, %do_action, %do_action, %do_action, %if.end1046, %if.else1085, %if.else1081, %if.end1077, %if.end1311, %if.end1167, %if.end1154, %if.end1141, %if.end1128, %if.end1115, %if.end1102, %if.else1089, %if.end1065, %if.end1051, %if.end1033, %if.end1020, %if.end1007, %if.end994, %if.end981, %if.end968, %if.end955, %if.end942, %if.end929, %if.end916, %if.end903, %if.else888, %if.then886, %if.end869, %if.else855, %if.then853, %if.end836, %if.end823, %if.end810, %if.end797, %if.end784, %if.end771, %if.end758, %if.end745, %if.end732, %if.end720, %if.end708, %if.end694, %if.end681, %if.end668, %if.end655, %if.end642, %if.end618, %if.end606, %if.end594, %if.end582, %if.end570, %if.end558, %if.end546, %if.end534, %if.end522, %if.end510, %if.end498, %if.end486, %if.end474, %if.end462, %if.end450, %if.end438, %if.end426, %if.end414, %if.end400, %if.end388, %if.end376, %if.end364, %if.end339, %if.end312, %if.end298, %if.end256, %if.end231, %if.end219, %if.end195, %if.end183, %if.end171, %if.end159, %if.end147, %if.end135
  %retval.0 = phi i32 [ %conv1312, %if.end1311 ], [ %conv1168, %if.end1167 ], [ 262, %if.end1154 ], [ 262, %if.end1141 ], [ 262, %if.end1128 ], [ 262, %if.end1115 ], [ 262, %if.end1102 ], [ 262, %if.else1089 ], [ 274, %if.end1065 ], [ 264, %if.end1051 ], [ 262, %if.end1033 ], [ 262, %if.end1020 ], [ 262, %if.end1007 ], [ 262, %if.end994 ], [ 262, %if.end981 ], [ 263, %if.end968 ], [ 263, %if.end955 ], [ %conv943, %if.end942 ], [ 263, %if.end929 ], [ %conv917, %if.end916 ], [ 263, %if.end903 ], [ %conv887, %if.then886 ], [ %conv891, %if.else888 ], [ %conv872, %if.end869 ], [ %conv854, %if.then853 ], [ %conv857, %if.else855 ], [ %conv839, %if.end836 ], [ %conv824, %if.end823 ], [ %conv811, %if.end810 ], [ %conv798, %if.end797 ], [ %conv785, %if.end784 ], [ 263, %if.end771 ], [ 263, %if.end758 ], [ %conv746, %if.end745 ], [ 263, %if.end732 ], [ 277, %if.end720 ], [ 276, %if.end708 ], [ 264, %if.end694 ], [ 263, %if.end681 ], [ 258, %if.end668 ], [ 258, %if.end655 ], [ 259, %if.end642 ], [ 293, %if.end618 ], [ 292, %if.end606 ], [ 299, %if.end594 ], [ 298, %if.end582 ], [ 297, %if.end570 ], [ 296, %if.end558 ], [ 295, %if.end546 ], [ 294, %if.end534 ], [ 291, %if.end522 ], [ 290, %if.end510 ], [ 289, %if.end498 ], [ 288, %if.end486 ], [ 287, %if.end474 ], [ 286, %if.end462 ], [ 285, %if.end450 ], [ 284, %if.end438 ], [ 271, %if.end426 ], [ 268, %if.end414 ], [ 260, %if.end400 ], [ 275, %if.end388 ], [ 270, %if.end376 ], [ 269, %if.end364 ], [ 261, %if.end339 ], [ 261, %if.end312 ], [ 265, %if.end298 ], [ 267, %if.end256 ], [ 258, %if.end231 ], [ 266, %if.end219 ], [ 283, %if.end195 ], [ 282, %if.end183 ], [ 279, %if.end171 ], [ 278, %if.end159 ], [ 281, %if.end147 ], [ 280, %if.end135 ], [ 273, %if.end1077 ], [ 274, %if.else1081 ], [ 272, %if.else1085 ], [ 36, %if.end1046 ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ], [ 0, %do_action ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable
define dso_local noalias noundef ptr @_Z7yyallocj(i32 noundef %size) local_unnamed_addr #3 {
entry:
  %conv = zext i32 %size to i64
  %call = tail call noalias ptr @malloc(i64 noundef %conv) #29
  ret ptr %call
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z16yy_create_bufferP8_IO_FILEi(ptr noundef %file, i32 noundef %size) local_unnamed_addr #4 {
entry:
  %call.i = tail call noalias dereferenceable_or_null(64) ptr @malloc(i64 noundef 64) #29
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i14 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.20) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.end:                                           ; preds = %entry
  %yy_buf_size = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 3
  store i32 %size, ptr %yy_buf_size, align 8, !tbaa !52
  %add = add i32 %size, 2
  %conv.i = zext i32 %add to i64
  %call.i15 = tail call noalias ptr @malloc(i64 noundef %conv.i) #29
  %yy_ch_buf = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 1
  store ptr %call.i15, ptr %yy_ch_buf, align 8, !tbaa !47
  %tobool4.not = icmp eq ptr %call.i15, null
  br i1 %tobool4.not, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %1 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i16 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.20) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.end6:                                          ; preds = %if.end
  %yy_is_our_buffer = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 5
  store i32 1, ptr %yy_is_our_buffer, align 8, !tbaa !53
  %call.i18 = tail call ptr @__errno_location() #34
  %2 = load i32, ptr %call.i18, align 4, !tbaa !9
  %yy_n_chars.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 4
  store i32 0, ptr %yy_n_chars.i.i, align 4, !tbaa !13
  store i8 0, ptr %call.i15, align 1, !tbaa !17
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %call.i15, i64 1
  store i8 0, ptr %arrayidx2.i.i, align 1, !tbaa !17
  %yy_buf_pos.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 2
  store ptr %call.i15, ptr %yy_buf_pos.i.i, align 8, !tbaa !15
  %yy_at_bol.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 7
  store i32 1, ptr %yy_at_bol.i.i, align 8, !tbaa !18
  %yy_buffer_status.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 11
  store i32 0, ptr %yy_buffer_status.i.i, align 8, !tbaa !46
  %3 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool5.not.i.i = icmp eq ptr %3, null
  br i1 %tobool5.not.i.i, label %_Z15yy_flush_bufferP15yy_buffer_state.exit.i.thread, label %cond.end.i.i

cond.end.i.i:                                     ; preds = %if.end6
  %4 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx6.i.i = getelementptr inbounds ptr, ptr %3, i64 %4
  %5 = load ptr, ptr %arrayidx6.i.i, align 8, !tbaa !5
  %cmp.i.i = icmp eq ptr %5, %call.i
  br i1 %cmp.i.i, label %_Z15yy_flush_bufferP15yy_buffer_state.exit.thread.i, label %cond.true.i

_Z15yy_flush_bufferP15yy_buffer_state.exit.i.thread: ; preds = %if.end6
  store ptr %file, ptr %call.i, align 8, !tbaa !16
  %yy_fill_buffer.i21 = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 10
  store i32 1, ptr %yy_fill_buffer.i21, align 4, !tbaa !54
  br label %cond.end.i

_Z15yy_flush_bufferP15yy_buffer_state.exit.thread.i: ; preds = %cond.end.i.i
  store i32 0, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  store ptr %call.i15, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %call.i15, ptr @yytext_ptr, align 8, !tbaa !5
  %6 = load ptr, ptr %arrayidx6.i.i, align 8, !tbaa !5
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  store ptr %7, ptr @yyin, align 8, !tbaa !5
  %8 = load i8, ptr %call.i15, align 1, !tbaa !17
  store i8 %8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %cond.true.i

cond.true.i:                                      ; preds = %cond.end.i.i, %_Z15yy_flush_bufferP15yy_buffer_state.exit.thread.i
  store ptr %file, ptr %call.i, align 8
  %9 = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 10
  store i32 1, ptr %9, align 4
  %10 = load ptr, ptr %arrayidx6.i.i, align 8, !tbaa !5
  br label %cond.end.i

cond.end.i:                                       ; preds = %_Z15yy_flush_bufferP15yy_buffer_state.exit.i.thread, %cond.true.i
  %cond.i = phi ptr [ %10, %cond.true.i ], [ null, %_Z15yy_flush_bufferP15yy_buffer_state.exit.i.thread ]
  %cmp.not.i = icmp eq ptr %cond.i, %call.i
  br i1 %cmp.not.i, label %_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE.exit, label %if.then.i

if.then.i:                                        ; preds = %cond.end.i
  %yy_bs_lineno.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 8
  store i32 1, ptr %yy_bs_lineno.i, align 4, !tbaa !55
  %yy_bs_column.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 9
  store i32 0, ptr %yy_bs_column.i, align 8, !tbaa !56
  br label %_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE.exit

_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE.exit: ; preds = %cond.end.i, %if.then.i
  %yy_is_interactive.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 6
  store i32 0, ptr %yy_is_interactive.i, align 4, !tbaa !57
  store i32 %2, ptr %call.i18, align 4, !tbaa !9
  ret ptr %call.i
}

; Function Attrs: mustprogress noreturn nounwind uwtable
define internal fastcc void @_ZL14yy_fatal_errorPKc(ptr noundef %msg) unnamed_addr #5 {
entry:
  %0 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef nonnull @.str.28, ptr noundef %msg) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal fastcc void @_ZN12_GLOBAL__N_15countEb() unnamed_addr #6 {
entry:
  %pg_column.promoted = load i32, ptr @pg_column, align 4, !tbaa !9
  %pg_charpos.promoted = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %pg_lineno.promoted = load i32, ptr @pg_lineno, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %inc21 = phi i32 [ %pg_lineno.promoted, %entry ], [ %inc20, %for.inc ]
  %inc1018 = phi i32 [ %pg_charpos.promoted, %entry ], [ %inc1.sink, %for.inc ]
  %inc916 = phi i32 [ %pg_column.promoted, %entry ], [ %inc917, %for.inc ]
  %s.0 = phi ptr [ @yytext, %entry ], [ %incdec.ptr, %for.inc ]
  %0 = load i8, ptr %s.0, align 1, !tbaa !17
  switch i8 %0, label %if.else8 [
    i8 0, label %for.end
    i8 10, label %if.then
    i8 9, label %if.then4
  ]

if.then:                                          ; preds = %for.cond
  store i32 0, ptr @pg_column, align 4, !tbaa !9
  %inc = add nsw i32 %inc21, 1
  store i32 %inc, ptr @pg_lineno, align 4, !tbaa !9
  %inc1 = add nsw i32 %inc1018, 1
  br label %for.inc

if.then4:                                         ; preds = %for.cond
  %rem = srem i32 %inc916, 8
  %reass.sub = add i32 %inc916, 8
  %add = sub i32 %reass.sub, %rem
  store i32 %add, ptr @pg_column, align 4, !tbaa !9
  %rem5 = srem i32 %inc1018, 8
  %reass.sub15 = add i32 %inc1018, 8
  %add7 = sub i32 %reass.sub15, %rem5
  br label %for.inc

if.else8:                                         ; preds = %for.cond
  %inc9 = add nsw i32 %inc916, 1
  store i32 %inc9, ptr @pg_column, align 4, !tbaa !9
  %inc10 = add nsw i32 %inc1018, 1
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else8, %if.then4
  %inc1.sink = phi i32 [ %inc1, %if.then ], [ %inc10, %if.else8 ], [ %add7, %if.then4 ]
  %inc20 = phi i32 [ %inc, %if.then ], [ %inc21, %if.else8 ], [ %inc21, %if.then4 ]
  %inc917 = phi i32 [ 0, %if.then ], [ %inc9, %if.else8 ], [ %add, %if.then4 ]
  store i32 %inc1.sink, ptr @pg_charpos, align 4, !tbaa !9
  %incdec.ptr = getelementptr inbounds i8, ptr %s.0, i64 1
  br label %for.cond, !llvm.loop !58

for.end:                                          ; preds = %for.cond
  ret void
}

declare noundef ptr @_ZN2kc12mkcasestringEPKci(ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) local_unnamed_addr #2 align 2

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(ptr noundef nonnull align 8 dereferenceable(32), i8 noundef signext) local_unnamed_addr #2 align 2

declare void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef, ptr noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef, i32 noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) local_unnamed_addr #2 align 2

declare noundef ptr @_ZN2kc9mkintegerEi(i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @_ZN12_GLOBAL__N_111eat_commentEPN2kc20impl_casestring__StrE(ptr noundef %start_filename) unnamed_addr #2 {
entry:
  %0 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %if.end35, %entry
  %nest.0 = phi i32 [ 1, %entry ], [ %nest.1, %if.end35 ]
  %c2.0 = phi i32 [ 32, %entry ], [ %call, %if.end35 ]
  %call = tail call fastcc noundef i32 @_ZL7yyinputv(), !range !59
  %sext = shl i32 %call, 24
  switch i32 %sext, label %if.end20 [
    i32 167772160, label %if.then
    i32 150994944, label %if.then5
    i32 0, label %if.then12
  ]

if.then:                                          ; preds = %for.cond
  %1 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %inc = add nsw i32 %1, 1
  store i32 %inc, ptr @pg_lineno, align 4, !tbaa !9
  store i32 0, ptr @pg_column, align 4, !tbaa !9
  %2 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %inc2 = add nsw i32 %2, 1
  store i32 %inc2, ptr @pg_charpos, align 4, !tbaa !9
  br label %if.end35

if.then5:                                         ; preds = %for.cond
  %3 = load i32, ptr @pg_column, align 4, !tbaa !9
  %rem = srem i32 %3, 8
  %reass.sub = add i32 %3, 8
  %add = sub i32 %reass.sub, %rem
  store i32 %add, ptr @pg_column, align 4, !tbaa !9
  %4 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %rem6 = srem i32 %4, 8
  %reass.sub51 = add i32 %4, 8
  %add8 = sub i32 %reass.sub51, %rem6
  store i32 %add8, ptr @pg_charpos, align 4, !tbaa !9
  br label %if.end35

if.then12:                                        ; preds = %for.cond
  %call13 = tail call noundef ptr @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi(ptr noundef %start_filename, i32 noundef %0)
  %call14 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.31)
  %call15 = tail call noundef ptr @_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %call13, ptr noundef %call14)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %call15)
  br label %if.end35

if.end20:                                         ; preds = %for.cond
  %5 = load i32, ptr @pg_column, align 4, !tbaa !9
  %inc17 = add nsw i32 %5, 1
  store i32 %inc17, ptr @pg_column, align 4, !tbaa !9
  %6 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %inc18 = add nsw i32 %6, 1
  store i32 %inc18, ptr @pg_charpos, align 4, !tbaa !9
  %sext50 = shl i32 %c2.0, 24
  %cmp22 = icmp eq i32 %sext50, 788529152
  %cmp24 = icmp eq i32 %sext, 704643072
  %or.cond = and i1 %cmp22, %cmp24
  br i1 %or.cond, label %if.then25, label %if.else27

if.then25:                                        ; preds = %if.end20
  %inc26 = add nuw nsw i32 %nest.0, 1
  br label %if.end35

if.else27:                                        ; preds = %if.end20
  %cmp29 = icmp eq i32 %sext50, 704643072
  %cmp32 = icmp eq i32 %sext, 788529152
  %or.cond40 = and i1 %cmp29, %cmp32
  %dec = sext i1 %or.cond40 to i32
  %spec.select = add nsw i32 %nest.0, %dec
  br label %if.end35

if.end35:                                         ; preds = %if.else27, %if.then5, %if.then12, %if.then, %if.then25
  %nest.1 = phi i32 [ %inc26, %if.then25 ], [ %nest.0, %if.then ], [ %nest.0, %if.then12 ], [ %nest.0, %if.then5 ], [ %spec.select, %if.else27 ]
  %cmp36 = icmp slt i32 %nest.1, 1
  br i1 %cmp36, label %for.end, label %for.cond, !llvm.loop !60

for.end:                                          ; preds = %if.end35
  %7 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %sub39 = sub nsw i32 %7, %0
  ret i32 %sub39
}

; Function Attrs: mustprogress nounwind uwtable
define internal fastcc void @_ZN12_GLOBAL__N_116eat_line_commentEv() unnamed_addr #4 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %call = tail call fastcc noundef i32 @_ZL7yyinputv(), !range !59
  %cmp.not = icmp eq i32 %call, 10
  br i1 %cmp.not, label %while.end, label %while.cond, !llvm.loop !61

while.end:                                        ; preds = %while.cond
  %0 = load i32, ptr @pg_lineno, align 4, !tbaa !9
  %inc = add nsw i32 %0, 1
  store i32 %inc, ptr @pg_lineno, align 4, !tbaa !9
  store i32 0, ptr @pg_column, align 4, !tbaa !9
  %1 = load i32, ptr @pg_charpos, align 4, !tbaa !9
  %inc1 = add nsw i32 %1, 1
  store i32 %inc1, ptr @pg_charpos, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv() unnamed_addr #2 {
entry:
  %0 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  %cmp.not = icmp eq i32 %0, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call noundef ptr @_ZN2kc13PosNoFileLineEv()
  %call1 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.29)
  %call2 = tail call noundef ptr @_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %call, ptr noundef %call1)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %call2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  %cmp3.not = icmp eq i32 %1, 0
  br i1 %cmp3.not, label %if.end8, label %if.then4

if.then4:                                         ; preds = %if.end
  %call5 = tail call noundef ptr @_ZN2kc13PosNoFileLineEv()
  %call6 = tail call noundef ptr @_ZN2kc9Problem1SEPKc(ptr noundef nonnull @.str.30)
  %call7 = tail call noundef ptr @_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef %call5, ptr noundef %call6)
  tail call void @_ZN2kc8v_reportEPNS_10impl_errorE(ptr noundef %call7)
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end
  store i32 0, ptr @_ZN12_GLOBAL__N_119cinit_paren_nestingE, align 4, !tbaa !9
  store i32 0, ptr @_ZN12_GLOBAL__N_119cinit_array_nestingE, align 4, !tbaa !9
  ret void
}

declare noundef ptr @_ZN2kc9Problem2SEPKcS1_(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nounwind uwtable
define internal fastcc noundef i32 @_ZL18yy_get_next_bufferv() unnamed_addr #4 {
entry:
  %0 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %1 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %1
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %yy_ch_buf = getelementptr inbounds %struct.yy_buffer_state, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %yy_ch_buf, align 8, !tbaa !47
  %4 = ptrtoint ptr %3 to i64
  %5 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %6 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %7 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %add = add nsw i32 %7, 1
  %idxprom = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i8, ptr %3, i64 %idxprom
  %cmp = icmp ugt ptr %6, %arrayidx3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.25) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.end:                                           ; preds = %entry
  %yy_fill_buffer = getelementptr inbounds %struct.yy_buffer_state, ptr %2, i64 0, i32 10
  %9 = load i32, ptr %yy_fill_buffer, align 4, !tbaa !54
  %cmp5 = icmp eq i32 %9, 0
  %sub.ptr.lhs.cast = ptrtoint ptr %6 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  br i1 %cmp5, label %if.then6, label %if.end9

if.then6:                                         ; preds = %if.end
  %cmp7 = icmp eq i64 %sub.ptr.sub, 1
  %. = select i1 %cmp7, i32 1, i32 2
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %conv = trunc i64 %sub.ptr.sub to i32
  %sub13 = add i32 %conv, -1
  %cmp14142 = icmp sgt i32 %conv, 1
  br i1 %cmp14142, label %iter.check, label %for.end

iter.check:                                       ; preds = %if.end9
  %10 = add i64 %sub.ptr.lhs.cast, 4294967294
  %11 = sub i64 %10, %sub.ptr.rhs.cast
  %12 = and i64 %11, 4294967295
  %13 = add nuw nsw i64 %12, 1
  %min.iters.check = icmp ult i64 %12, 7
  %14 = sub i64 %4, %sub.ptr.rhs.cast
  %diff.check = icmp ult i64 %14, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %for.body.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check185 = icmp ult i64 %12, 31
  br i1 %min.iters.check185, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %13, -32
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %next.gep = getelementptr i8, ptr %5, i64 %index
  %next.gep187 = getelementptr i8, ptr %3, i64 %index
  %wide.load = load <16 x i8>, ptr %next.gep, align 1, !tbaa !17
  %15 = getelementptr i8, ptr %next.gep, i64 16
  %wide.load189 = load <16 x i8>, ptr %15, align 1, !tbaa !17
  store <16 x i8> %wide.load, ptr %next.gep187, align 1, !tbaa !17
  %16 = getelementptr i8, ptr %next.gep187, i64 16
  store <16 x i8> %wide.load189, ptr %16, align 1, !tbaa !17
  %index.next = add nuw i64 %index, 32
  %17 = icmp eq i64 %index.next, %n.vec
  br i1 %17, label %middle.block, label %vector.body, !llvm.loop !62

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %13, %n.vec
  br i1 %cmp.n, label %for.end.loopexit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end201 = getelementptr i8, ptr %3, i64 %n.vec
  %ind.end198 = getelementptr i8, ptr %5, i64 %n.vec
  %ind.end195 = trunc i64 %n.vec to i32
  %n.vec.remaining = and i64 %13, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %for.body.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec193 = and i64 %13, -8
  %ind.end194 = trunc i64 %n.vec193 to i32
  %ind.end197 = getelementptr i8, ptr %5, i64 %n.vec193
  %ind.end200 = getelementptr i8, ptr %3, i64 %n.vec193
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index204 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next208, %vec.epilog.vector.body ]
  %next.gep205 = getelementptr i8, ptr %5, i64 %index204
  %next.gep206 = getelementptr i8, ptr %3, i64 %index204
  %wide.load207 = load <8 x i8>, ptr %next.gep205, align 1, !tbaa !17
  store <8 x i8> %wide.load207, ptr %next.gep206, align 1, !tbaa !17
  %index.next208 = add nuw i64 %index204, 8
  %18 = icmp eq i64 %index.next208, %n.vec193
  br i1 %18, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !63

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n203 = icmp eq i64 %13, %n.vec193
  br i1 %cmp.n203, label %for.end.loopexit, label %for.body.preheader

for.body.preheader:                               ; preds = %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %i.0145.ph = phi i32 [ 0, %iter.check ], [ %ind.end195, %vec.epilog.iter.check ], [ %ind.end194, %vec.epilog.middle.block ]
  %source.0144.ph = phi ptr [ %5, %iter.check ], [ %ind.end198, %vec.epilog.iter.check ], [ %ind.end197, %vec.epilog.middle.block ]
  %dest.0143.ph = phi ptr [ %3, %iter.check ], [ %ind.end201, %vec.epilog.iter.check ], [ %ind.end200, %vec.epilog.middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.0145 = phi i32 [ %inc, %for.body ], [ %i.0145.ph, %for.body.preheader ]
  %source.0144 = phi ptr [ %incdec.ptr, %for.body ], [ %source.0144.ph, %for.body.preheader ]
  %dest.0143 = phi ptr [ %incdec.ptr15, %for.body ], [ %dest.0143.ph, %for.body.preheader ]
  %incdec.ptr = getelementptr inbounds i8, ptr %source.0144, i64 1
  %19 = load i8, ptr %source.0144, align 1, !tbaa !17
  %incdec.ptr15 = getelementptr inbounds i8, ptr %dest.0143, i64 1
  store i8 %19, ptr %dest.0143, align 1, !tbaa !17
  %inc = add nuw nsw i32 %i.0145, 1
  %exitcond.not = icmp eq i32 %inc, %sub13
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body, !llvm.loop !64

for.end.loopexit:                                 ; preds = %for.body, %vec.epilog.middle.block, %middle.block
  %.pre = load ptr, ptr %arrayidx, align 8, !tbaa !5
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.end9
  %20 = phi ptr [ %.pre, %for.end.loopexit ], [ %2, %if.end9 ]
  %yy_buffer_status = getelementptr inbounds %struct.yy_buffer_state, ptr %20, i64 0, i32 11
  %21 = load i32, ptr %yy_buffer_status, align 8, !tbaa !46
  %cmp17 = icmp eq i32 %21, 2
  br i1 %cmp17, label %if.end86.thread, label %if.else20

if.end86.thread:                                  ; preds = %for.end
  store i32 0, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  br label %if.then88.sink.split

if.else20:                                        ; preds = %for.end
  %yy_buf_size = getelementptr inbounds %struct.yy_buffer_state, ptr %20, i64 0, i32 3
  %22 = load i32, ptr %yy_buf_size, align 8, !tbaa !52
  %cmp25 = icmp eq i32 %22, %conv
  br i1 %cmp25, label %while.body, label %while.end

while.body:                                       ; preds = %if.else20
  %23 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i132 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %23, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.26) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

while.end:                                        ; preds = %if.else20
  %sub23 = sub i32 %22, %conv
  %24 = tail call i32 @llvm.umin.i32(i32 %sub23, i32 8192)
  %spec.store.select = zext i32 %24 to i64
  %yy_is_interactive = getelementptr inbounds %struct.yy_buffer_state, ptr %20, i64 0, i32 6
  %25 = load i32, ptr %yy_is_interactive, align 4, !tbaa !57
  %tobool.not = icmp eq i32 %25, 0
  br i1 %tobool.not, label %if.else62, label %for.cond31.preheader

for.cond31.preheader:                             ; preds = %while.end
  %cmp32146.not = icmp eq i32 %24, 0
  br i1 %cmp32146.not, label %if.end86.thread177, label %land.lhs.true.lr.ph

if.end86.thread177:                               ; preds = %for.cond31.preheader
  store i32 0, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %26 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %27 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx84180 = getelementptr inbounds ptr, ptr %26, i64 %27
  %28 = load ptr, ptr %arrayidx84180, align 8, !tbaa !5
  br label %if.then88.sink.split

land.lhs.true.lr.ph:                              ; preds = %for.cond31.preheader
  %idxprom39 = sext i32 %sub13 to i64
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %land.lhs.true.lr.ph, %for.body35
  %n.0147 = phi i64 [ 0, %land.lhs.true.lr.ph ], [ %inc43, %for.body35 ]
  %29 = load ptr, ptr @yyin, align 8, !tbaa !5
  %call = tail call i32 @getc(ptr noundef %29)
  switch i32 %call, label %for.body35 [
    i32 -1, label %for.end44
    i32 10, label %for.end44
  ]

for.body35:                                       ; preds = %land.lhs.true
  %conv36 = trunc i32 %call to i8
  %30 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %31 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx37 = getelementptr inbounds ptr, ptr %30, i64 %31
  %32 = load ptr, ptr %arrayidx37, align 8, !tbaa !5
  %yy_ch_buf38 = getelementptr inbounds %struct.yy_buffer_state, ptr %32, i64 0, i32 1
  %33 = load ptr, ptr %yy_ch_buf38, align 8, !tbaa !47
  %arrayidx40 = getelementptr inbounds i8, ptr %33, i64 %idxprom39
  %arrayidx41 = getelementptr inbounds i8, ptr %arrayidx40, i64 %n.0147
  store i8 %conv36, ptr %arrayidx41, align 1, !tbaa !17
  %inc43 = add nuw nsw i64 %n.0147, 1
  %exitcond160.not = icmp eq i64 %inc43, %spec.store.select
  br i1 %exitcond160.not, label %for.end44, label %land.lhs.true, !llvm.loop !65

for.end44:                                        ; preds = %for.body35, %land.lhs.true, %land.lhs.true
  %n.0.lcssa = phi i64 [ %spec.store.select, %for.body35 ], [ %n.0147, %land.lhs.true ], [ %n.0147, %land.lhs.true ]
  switch i32 %call, label %if.end86 [
    i32 10, label %if.end54.thread
    i32 -1, label %land.lhs.true56
  ]

if.end54.thread:                                  ; preds = %for.end44
  %34 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %35 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx48 = getelementptr inbounds ptr, ptr %34, i64 %35
  %36 = load ptr, ptr %arrayidx48, align 8, !tbaa !5
  %yy_ch_buf49 = getelementptr inbounds %struct.yy_buffer_state, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %yy_ch_buf49, align 8, !tbaa !47
  %idxprom50 = sext i32 %sub13 to i64
  %arrayidx51 = getelementptr inbounds i8, ptr %37, i64 %idxprom50
  %inc52 = add nuw i64 %n.0.lcssa, 1
  %arrayidx53 = getelementptr inbounds i8, ptr %arrayidx51, i64 %n.0.lcssa
  store i8 10, ptr %arrayidx53, align 1, !tbaa !17
  br label %if.end86

land.lhs.true56:                                  ; preds = %for.end44
  %38 = load ptr, ptr @yyin, align 8, !tbaa !5
  %call57 = tail call i32 @ferror(ptr noundef %38) #33
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %if.end86, label %if.then59

if.then59:                                        ; preds = %land.lhs.true56
  %39 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i134 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %39, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.27) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.else62:                                        ; preds = %while.end
  %call63 = tail call ptr @__errno_location() #34
  store i32 0, ptr %call63, align 4, !tbaa !9
  %idxprom67 = sext i32 %sub13 to i64
  %yy_ch_buf66155 = getelementptr inbounds %struct.yy_buffer_state, ptr %20, i64 0, i32 1
  %40 = load ptr, ptr %yy_ch_buf66155, align 8, !tbaa !47
  %arrayidx68156 = getelementptr inbounds i8, ptr %40, i64 %idxprom67
  %41 = load ptr, ptr @yyin, align 8, !tbaa !5
  %call69157 = tail call i64 @fread(ptr noundef %arrayidx68156, i64 noundef 1, i64 noundef %spec.store.select, ptr noundef %41)
  %conv70158 = trunc i64 %call69157 to i32
  store i32 %conv70158, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %cmp71159 = icmp eq i32 %conv70158, 0
  br i1 %cmp71159, label %land.rhs72, label %if.end86.thread167

land.rhs72:                                       ; preds = %if.else62, %if.end80
  %42 = load ptr, ptr @yyin, align 8, !tbaa !5
  %call73 = tail call i32 @ferror(ptr noundef %42) #33
  %tobool74.not = icmp eq i32 %call73, 0
  br i1 %tobool74.not, label %if.end86.thread172, label %while.body76

if.end86.thread172:                               ; preds = %land.rhs72
  %43 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %44 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx84174 = getelementptr inbounds ptr, ptr %43, i64 %44
  %45 = load ptr, ptr %arrayidx84174, align 8, !tbaa !5
  br label %if.then88.sink.split

while.body76:                                     ; preds = %land.rhs72
  %46 = load i32, ptr %call63, align 4, !tbaa !9
  %cmp78.not = icmp eq i32 %46, 4
  br i1 %cmp78.not, label %if.end80, label %if.then79

if.then79:                                        ; preds = %while.body76
  %47 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i136 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %47, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.27) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.end80:                                         ; preds = %while.body76
  store i32 0, ptr %call63, align 4, !tbaa !9
  tail call void @clearerr(ptr noundef %42) #33
  %48 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %49 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx65 = getelementptr inbounds ptr, ptr %48, i64 %49
  %50 = load ptr, ptr %arrayidx65, align 8, !tbaa !5
  %yy_ch_buf66 = getelementptr inbounds %struct.yy_buffer_state, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %yy_ch_buf66, align 8, !tbaa !47
  %arrayidx68 = getelementptr inbounds i8, ptr %51, i64 %idxprom67
  %52 = load ptr, ptr @yyin, align 8, !tbaa !5
  %call69 = tail call i64 @fread(ptr noundef %arrayidx68, i64 noundef 1, i64 noundef %spec.store.select, ptr noundef %52)
  %conv70 = trunc i64 %call69 to i32
  store i32 %conv70, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %cmp71 = icmp eq i32 %conv70, 0
  br i1 %cmp71, label %land.rhs72, label %if.end86.thread167, !llvm.loop !66

if.end86.thread167:                               ; preds = %if.end80, %if.else62
  %.pr.ph = phi i32 [ %conv70158, %if.else62 ], [ %conv70, %if.end80 ]
  %53 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %54 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx84169 = getelementptr inbounds ptr, ptr %53, i64 %54
  %55 = load ptr, ptr %arrayidx84169, align 8, !tbaa !5
  %yy_n_chars85170 = getelementptr inbounds %struct.yy_buffer_state, ptr %55, i64 0, i32 4
  store i32 %.pr.ph, ptr %yy_n_chars85170, align 4, !tbaa !13
  br label %if.end96

if.end86:                                         ; preds = %land.lhs.true56, %if.end54.thread, %for.end44
  %n.1140 = phi i64 [ %inc52, %if.end54.thread ], [ %n.0.lcssa, %land.lhs.true56 ], [ %n.0.lcssa, %for.end44 ]
  %conv61 = trunc i64 %n.1140 to i32
  store i32 %conv61, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %56 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %57 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx84 = getelementptr inbounds ptr, ptr %56, i64 %57
  %58 = load ptr, ptr %arrayidx84, align 8, !tbaa !5
  %yy_n_chars85 = getelementptr inbounds %struct.yy_buffer_state, ptr %58, i64 0, i32 4
  store i32 %conv61, ptr %yy_n_chars85, align 4, !tbaa !13
  %cmp87 = icmp eq i32 %conv61, 0
  br i1 %cmp87, label %if.then88, label %if.end96

if.then88.sink.split:                             ; preds = %if.end86.thread, %if.end86.thread172, %if.end86.thread177
  %.sink = phi ptr [ %28, %if.end86.thread177 ], [ %45, %if.end86.thread172 ], [ %20, %if.end86.thread ]
  %.ph183 = phi i64 [ %27, %if.end86.thread177 ], [ %44, %if.end86.thread172 ], [ %1, %if.end86.thread ]
  %.ph184 = phi ptr [ %26, %if.end86.thread177 ], [ %43, %if.end86.thread172 ], [ %0, %if.end86.thread ]
  %yy_n_chars85181 = getelementptr inbounds %struct.yy_buffer_state, ptr %.sink, i64 0, i32 4
  store i32 0, ptr %yy_n_chars85181, align 4, !tbaa !13
  br label %if.then88

if.then88:                                        ; preds = %if.then88.sink.split, %if.end86
  %59 = phi ptr [ %58, %if.end86 ], [ %.sink, %if.then88.sink.split ]
  %60 = phi i64 [ %57, %if.end86 ], [ %.ph183, %if.then88.sink.split ]
  %61 = phi ptr [ %56, %if.end86 ], [ %.ph184, %if.then88.sink.split ]
  %cmp89 = icmp eq i32 %sub13, 0
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.then88
  %62 = load ptr, ptr @yyin, align 8, !tbaa !5
  tail call void @_Z9yyrestartP8_IO_FILE(ptr noundef %62)
  %.pre161 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %.pre162 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %.pre163 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx98.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre162, i64 %.pre163
  %.pre164 = load ptr, ptr %arrayidx98.phi.trans.insert, align 8, !tbaa !5
  br label %if.end96

if.else91:                                        ; preds = %if.then88
  %yy_buffer_status93 = getelementptr inbounds %struct.yy_buffer_state, ptr %59, i64 0, i32 11
  store i32 2, ptr %yy_buffer_status93, align 8, !tbaa !46
  br label %if.end96

if.end96:                                         ; preds = %if.end86.thread167, %if.end86, %if.then90, %if.else91
  %63 = phi ptr [ %.pre164, %if.then90 ], [ %59, %if.else91 ], [ %58, %if.end86 ], [ %55, %if.end86.thread167 ]
  %64 = phi i64 [ %.pre163, %if.then90 ], [ %60, %if.else91 ], [ %57, %if.end86 ], [ %54, %if.end86.thread167 ]
  %65 = phi ptr [ %.pre162, %if.then90 ], [ %61, %if.else91 ], [ %56, %if.end86 ], [ %53, %if.end86.thread167 ]
  %66 = phi i32 [ %.pre161, %if.then90 ], [ 0, %if.else91 ], [ %conv61, %if.end86 ], [ %.pr.ph, %if.end86.thread167 ]
  %ret_val.0 = phi i32 [ 1, %if.then90 ], [ 2, %if.else91 ], [ 0, %if.end86 ], [ 0, %if.end86.thread167 ]
  %add97 = add nsw i32 %66, %sub13
  store i32 %add97, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %arrayidx98 = getelementptr inbounds ptr, ptr %65, i64 %64
  %yy_ch_buf99 = getelementptr inbounds %struct.yy_buffer_state, ptr %63, i64 0, i32 1
  %67 = load ptr, ptr %yy_ch_buf99, align 8, !tbaa !47
  %idxprom100 = sext i32 %add97 to i64
  %arrayidx101 = getelementptr inbounds i8, ptr %67, i64 %idxprom100
  store i8 0, ptr %arrayidx101, align 1, !tbaa !17
  %68 = load ptr, ptr %arrayidx98, align 8, !tbaa !5
  %yy_ch_buf103 = getelementptr inbounds %struct.yy_buffer_state, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %yy_ch_buf103, align 8, !tbaa !47
  %add104 = add i32 %66, %conv
  %idxprom105 = sext i32 %add104 to i64
  %arrayidx106 = getelementptr inbounds i8, ptr %69, i64 %idxprom105
  store i8 0, ptr %arrayidx106, align 1, !tbaa !17
  %70 = load ptr, ptr %arrayidx98, align 8, !tbaa !5
  %yy_ch_buf108 = getelementptr inbounds %struct.yy_buffer_state, ptr %70, i64 0, i32 1
  %71 = load ptr, ptr %yy_ch_buf108, align 8, !tbaa !47
  store ptr %71, ptr @yytext_ptr, align 8, !tbaa !5
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %if.end96
  %retval.0 = phi i32 [ %ret_val.0, %if.end96 ], [ %., %if.then6 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local void @_Z9yyrestartP8_IO_FILE(ptr noundef %input_file) local_unnamed_addr #4 {
entry:
  %0 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %cond = icmp eq ptr %0, null
  br i1 %cond, label %if.then.i, label %cond.true

cond.true:                                        ; preds = %entry
  %1 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %1
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %if.end.i, label %cond.end.i.i

if.then.i:                                        ; preds = %entry
  %call.i.i = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %call.i.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %call.i.i, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %if.end.thread

if.end.i:                                         ; preds = %cond.true
  %4 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %sub.i = add i64 %4, -1
  %cmp.not.i = icmp ult i64 %1, %sub.i
  br i1 %cmp.not.i, label %if.end.thread, label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i
  %conv7.i = shl i64 %4, 32
  %sext.i = add i64 %conv7.i, 34359738368
  %conv8.i = ashr exact i64 %sext.i, 32
  %5 = lshr exact i64 %sext.i, 29
  %conv.i.i = and i64 %5, 4294967295
  %call.i21.i = tail call ptr @realloc(ptr noundef nonnull %0, i64 noundef %conv.i.i) #30
  store ptr %call.i21.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %add.ptr.i = getelementptr inbounds ptr, ptr %call.i21.i, i64 %4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %add.ptr.i, i8 0, i64 64, i1 false)
  store i64 %conv8.i, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  br label %if.end.thread

if.end.thread:                                    ; preds = %if.then5.i, %if.end.i, %if.then.i
  %6 = load ptr, ptr @yyin, align 8, !tbaa !5
  %call = tail call noundef ptr @_Z16yy_create_bufferP8_IO_FILEi(ptr noundef %6, i32 noundef 16384)
  %7 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %8 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx2 = getelementptr inbounds ptr, ptr %7, i64 %8
  store ptr %call, ptr %arrayidx2, align 8, !tbaa !5
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.true, %if.end.thread
  %9 = phi ptr [ %call, %if.end.thread ], [ %2, %cond.true ]
  %10 = phi i64 [ %8, %if.end.thread ], [ %1, %cond.true ]
  %11 = phi ptr [ %7, %if.end.thread ], [ %0, %cond.true ]
  %arrayidx5 = getelementptr inbounds ptr, ptr %11, i64 %10
  %call.i = tail call ptr @__errno_location() #34
  %12 = load i32, ptr %call.i, align 4, !tbaa !9
  %yy_n_chars.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 4
  store i32 0, ptr %yy_n_chars.i.i, align 4, !tbaa !13
  %yy_ch_buf.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 1
  %13 = load ptr, ptr %yy_ch_buf.i.i, align 8, !tbaa !47
  store i8 0, ptr %13, align 1, !tbaa !17
  %14 = load ptr, ptr %yy_ch_buf.i.i, align 8, !tbaa !47
  %arrayidx2.i.i = getelementptr inbounds i8, ptr %14, i64 1
  store i8 0, ptr %arrayidx2.i.i, align 1, !tbaa !17
  %15 = load ptr, ptr %yy_ch_buf.i.i, align 8, !tbaa !47
  %yy_buf_pos.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 2
  store ptr %15, ptr %yy_buf_pos.i.i, align 8, !tbaa !15
  %yy_at_bol.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 7
  store i32 1, ptr %yy_at_bol.i.i, align 8, !tbaa !18
  %yy_buffer_status.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 11
  store i32 0, ptr %yy_buffer_status.i.i, align 8, !tbaa !46
  %16 = load ptr, ptr %arrayidx5, align 8, !tbaa !5
  %cmp.i.i = icmp eq ptr %16, %9
  br i1 %cmp.i.i, label %_Z15yy_flush_bufferP15yy_buffer_state.exit.thread.i, label %cond.end.i

_Z15yy_flush_bufferP15yy_buffer_state.exit.thread.i: ; preds = %cond.end.i.i
  %17 = load ptr, ptr %arrayidx5, align 8, !tbaa !5
  %yy_n_chars.i.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 4
  %18 = load i32, ptr %yy_n_chars.i.i.i, align 4, !tbaa !13
  store i32 %18, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %yy_buf_pos.i.i.i = getelementptr inbounds %struct.yy_buffer_state, ptr %17, i64 0, i32 2
  %19 = load ptr, ptr %yy_buf_pos.i.i.i, align 8, !tbaa !15
  store ptr %19, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %19, ptr @yytext_ptr, align 8, !tbaa !5
  %20 = load ptr, ptr %arrayidx5, align 8, !tbaa !5
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  store ptr %21, ptr @yyin, align 8, !tbaa !5
  %22 = load i8, ptr %19, align 1, !tbaa !17
  store i8 %22, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.end.i.i, %_Z15yy_flush_bufferP15yy_buffer_state.exit.thread.i
  store ptr %input_file, ptr %9, align 8, !tbaa !16
  %yy_fill_buffer8.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 10
  store i32 1, ptr %yy_fill_buffer8.i, align 4, !tbaa !54
  %23 = load ptr, ptr %arrayidx5, align 8, !tbaa !5
  %cmp.not.i11 = icmp eq ptr %23, %9
  br i1 %cmp.not.i11, label %_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE.exit, label %if.then.i12

if.then.i12:                                      ; preds = %cond.end.i
  %yy_bs_lineno.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 8
  store i32 1, ptr %yy_bs_lineno.i, align 4, !tbaa !55
  %yy_bs_column.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 9
  store i32 0, ptr %yy_bs_column.i, align 8, !tbaa !56
  br label %_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE.exit

_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE.exit: ; preds = %cond.end.i, %if.then.i12
  %yy_is_interactive.i = getelementptr inbounds %struct.yy_buffer_state, ptr %9, i64 0, i32 6
  store i32 0, ptr %yy_is_interactive.i, align 4, !tbaa !57
  store i32 %12, ptr %call.i, align 4, !tbaa !9
  %24 = load ptr, ptr %arrayidx5, align 8, !tbaa !5
  %yy_n_chars.i = getelementptr inbounds %struct.yy_buffer_state, ptr %24, i64 0, i32 4
  %25 = load i32, ptr %yy_n_chars.i, align 4, !tbaa !13
  store i32 %25, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %yy_buf_pos.i = getelementptr inbounds %struct.yy_buffer_state, ptr %24, i64 0, i32 2
  %26 = load ptr, ptr %yy_buf_pos.i, align 8, !tbaa !15
  store ptr %26, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %26, ptr @yytext_ptr, align 8, !tbaa !5
  %27 = load ptr, ptr %arrayidx5, align 8, !tbaa !5
  %28 = load ptr, ptr %27, align 8, !tbaa !16
  store ptr %28, ptr @yyin, align 8, !tbaa !5
  %29 = load i8, ptr %26, align 1, !tbaa !17
  store i8 %29, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z19yy_switch_to_bufferP15yy_buffer_state(ptr noundef %new_buffer) local_unnamed_addr #9 {
entry:
  %0 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool.not.i = icmp eq ptr %0, null
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i.i = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %call.i.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %call.i.i, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %cond.end

if.end.i:                                         ; preds = %entry
  %1 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %2 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %sub.i = add i64 %2, -1
  %cmp.not.i = icmp ult i64 %1, %sub.i
  br i1 %cmp.not.i, label %cond.end, label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i
  %conv7.i = shl i64 %2, 32
  %sext.i = add i64 %conv7.i, 34359738368
  %conv8.i = ashr exact i64 %sext.i, 32
  %3 = lshr exact i64 %sext.i, 29
  %conv.i.i = and i64 %3, 4294967295
  %call.i21.i = tail call ptr @realloc(ptr noundef nonnull %0, i64 noundef %conv.i.i) #30
  store ptr %call.i21.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %add.ptr.i = getelementptr inbounds ptr, ptr %call.i21.i, i64 %2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %add.ptr.i, i8 0, i64 64, i1 false)
  store i64 %conv8.i, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  br label %cond.end

cond.end:                                         ; preds = %if.then.i, %if.then5.i, %if.end.i
  %4 = phi i64 [ %1, %if.then5.i ], [ 0, %if.then.i ], [ %1, %if.end.i ]
  %5 = phi ptr [ %call.i21.i, %if.then5.i ], [ %call.i.i, %if.then.i ], [ %0, %if.end.i ]
  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %4
  %6 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %cmp = icmp eq ptr %6, %new_buffer
  br i1 %cmp, label %return, label %cond.true2

cond.true2:                                       ; preds = %cond.end
  %arrayidx3 = getelementptr inbounds ptr, ptr %5, i64 %4
  %7 = load ptr, ptr %arrayidx3, align 8, !tbaa !5
  %8 = icmp eq ptr %7, null
  br i1 %8, label %if.end11, label %if.then8

if.then8:                                         ; preds = %cond.true2
  %9 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %10 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store i8 %9, ptr %10, align 1, !tbaa !17
  %11 = load ptr, ptr %arrayidx3, align 8, !tbaa !5
  %yy_buf_pos = getelementptr inbounds %struct.yy_buffer_state, ptr %11, i64 0, i32 2
  store ptr %10, ptr %yy_buf_pos, align 8, !tbaa !15
  %12 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %13 = load ptr, ptr %arrayidx3, align 8, !tbaa !5
  %yy_n_chars = getelementptr inbounds %struct.yy_buffer_state, ptr %13, i64 0, i32 4
  store i32 %12, ptr %yy_n_chars, align 4, !tbaa !13
  br label %if.end11

if.end11:                                         ; preds = %if.then8, %cond.true2
  %arrayidx12 = getelementptr inbounds ptr, ptr %5, i64 %4
  store ptr %new_buffer, ptr %arrayidx12, align 8, !tbaa !5
  %yy_n_chars.i = getelementptr inbounds %struct.yy_buffer_state, ptr %new_buffer, i64 0, i32 4
  %14 = load i32, ptr %yy_n_chars.i, align 4, !tbaa !13
  store i32 %14, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %yy_buf_pos.i = getelementptr inbounds %struct.yy_buffer_state, ptr %new_buffer, i64 0, i32 2
  %15 = load ptr, ptr %yy_buf_pos.i, align 8, !tbaa !15
  store ptr %15, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %15, ptr @yytext_ptr, align 8, !tbaa !5
  %16 = load ptr, ptr %arrayidx12, align 8, !tbaa !5
  %17 = load ptr, ptr %16, align 8, !tbaa !16
  store ptr %17, ptr @yyin, align 8, !tbaa !5
  %18 = load i8, ptr %15, align 1, !tbaa !17
  store i8 %18, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %return

return:                                           ; preds = %cond.end, %if.end11
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z16yy_delete_bufferP15yy_buffer_state(ptr noundef %b) local_unnamed_addr #9 {
entry:
  %tobool.not = icmp eq ptr %b, null
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool1.not = icmp eq ptr %0, null
  br i1 %tobool1.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end
  %1 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %1
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi ptr [ %2, %cond.true ], [ null, %if.end ]
  %cmp = icmp eq ptr %cond, %b
  br i1 %cmp, label %if.then2, label %if.end4

if.then2:                                         ; preds = %cond.end
  %3 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx3 = getelementptr inbounds ptr, ptr %0, i64 %3
  store ptr null, ptr %arrayidx3, align 8, !tbaa !5
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %cond.end
  %yy_is_our_buffer = getelementptr inbounds %struct.yy_buffer_state, ptr %b, i64 0, i32 5
  %4 = load i32, ptr %yy_is_our_buffer, align 8, !tbaa !53
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  %yy_ch_buf = getelementptr inbounds %struct.yy_buffer_state, ptr %b, i64 0, i32 1
  %5 = load ptr, ptr %yy_ch_buf, align 8, !tbaa !47
  tail call void @free(ptr noundef %5) #33
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end4
  tail call void @free(ptr noundef nonnull %b) #33
  br label %return

return:                                           ; preds = %entry, %if.end7
  ret void
}

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @_Z6yyfreePv(ptr nocapture noundef %ptr) local_unnamed_addr #10 {
entry:
  tail call void @free(ptr noundef %ptr) #33
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_Z15yy_flush_bufferP15yy_buffer_state(ptr noundef %b) local_unnamed_addr #11 {
entry:
  %tobool.not = icmp eq ptr %b, null
  br i1 %tobool.not, label %if.end8, label %if.end

if.end:                                           ; preds = %entry
  %yy_n_chars = getelementptr inbounds %struct.yy_buffer_state, ptr %b, i64 0, i32 4
  store i32 0, ptr %yy_n_chars, align 4, !tbaa !13
  %yy_ch_buf = getelementptr inbounds %struct.yy_buffer_state, ptr %b, i64 0, i32 1
  %0 = load ptr, ptr %yy_ch_buf, align 8, !tbaa !47
  store i8 0, ptr %0, align 1, !tbaa !17
  %1 = load ptr, ptr %yy_ch_buf, align 8, !tbaa !47
  %arrayidx2 = getelementptr inbounds i8, ptr %1, i64 1
  store i8 0, ptr %arrayidx2, align 1, !tbaa !17
  %2 = load ptr, ptr %yy_ch_buf, align 8, !tbaa !47
  %yy_buf_pos = getelementptr inbounds %struct.yy_buffer_state, ptr %b, i64 0, i32 2
  store ptr %2, ptr %yy_buf_pos, align 8, !tbaa !15
  %yy_at_bol = getelementptr inbounds %struct.yy_buffer_state, ptr %b, i64 0, i32 7
  store i32 1, ptr %yy_at_bol, align 8, !tbaa !18
  %yy_buffer_status = getelementptr inbounds %struct.yy_buffer_state, ptr %b, i64 0, i32 11
  store i32 0, ptr %yy_buffer_status, align 8, !tbaa !46
  %3 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool5.not = icmp eq ptr %3, null
  br i1 %tobool5.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end
  %4 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx6 = getelementptr inbounds ptr, ptr %3, i64 %4
  %5 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi ptr [ %5, %cond.true ], [ null, %if.end ]
  %cmp = icmp eq ptr %cond, %b
  br i1 %cmp, label %if.then7, label %if.end8

if.then7:                                         ; preds = %cond.end
  %6 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx.i = getelementptr inbounds ptr, ptr %3, i64 %6
  %7 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %yy_n_chars.i = getelementptr inbounds %struct.yy_buffer_state, ptr %7, i64 0, i32 4
  %8 = load i32, ptr %yy_n_chars.i, align 4, !tbaa !13
  store i32 %8, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %yy_buf_pos.i = getelementptr inbounds %struct.yy_buffer_state, ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %yy_buf_pos.i, align 8, !tbaa !15
  store ptr %9, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %9, ptr @yytext_ptr, align 8, !tbaa !5
  %10 = load ptr, ptr %arrayidx.i, align 8, !tbaa !5
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  store ptr %11, ptr @yyin, align 8, !tbaa !5
  %12 = load i8, ptr %9, align 1, !tbaa !17
  store i8 %12, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %if.end8

if.end8:                                          ; preds = %entry, %if.then7, %cond.end
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z19yypush_buffer_stateP15yy_buffer_state(ptr noundef %new_buffer) local_unnamed_addr #9 {
entry:
  %cmp = icmp eq ptr %new_buffer, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool.not.i = icmp eq ptr %0, null
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  %call.i.i = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #29
  store ptr %call.i.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  store i64 0, ptr %call.i.i, align 8
  store i64 1, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  store i64 0, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %cond.true

if.end.i:                                         ; preds = %if.end
  %1 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %2 = load i64, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  %sub.i = add i64 %2, -1
  %cmp.not.i = icmp ult i64 %1, %sub.i
  br i1 %cmp.not.i, label %cond.true, label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i
  %conv7.i = shl i64 %2, 32
  %sext.i = add i64 %conv7.i, 34359738368
  %conv8.i = ashr exact i64 %sext.i, 32
  %3 = lshr exact i64 %sext.i, 29
  %conv.i.i = and i64 %3, 4294967295
  %call.i21.i = tail call ptr @realloc(ptr noundef nonnull %0, i64 noundef %conv.i.i) #30
  store ptr %call.i21.i, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %add.ptr.i = getelementptr inbounds ptr, ptr %call.i21.i, i64 %2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %add.ptr.i, i8 0, i64 64, i1 false)
  store i64 %conv8.i, ptr @_ZL19yy_buffer_stack_max, align 8, !tbaa !11
  br label %cond.true

cond.true:                                        ; preds = %if.end.i, %if.then5.i, %if.then.i
  %4 = phi i64 [ %1, %if.then5.i ], [ 0, %if.then.i ], [ %1, %if.end.i ]
  %5 = phi ptr [ %call.i21.i, %if.then5.i ], [ %call.i.i, %if.then.i ], [ %0, %if.end.i ]
  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %4
  %6 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %7 = icmp eq ptr %6, null
  br i1 %7, label %if.end14, label %if.then13

if.then13:                                        ; preds = %cond.true
  %8 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %9 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store i8 %8, ptr %9, align 1, !tbaa !17
  %10 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %yy_buf_pos = getelementptr inbounds %struct.yy_buffer_state, ptr %10, i64 0, i32 2
  store ptr %9, ptr %yy_buf_pos, align 8, !tbaa !15
  %11 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %12 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %yy_n_chars = getelementptr inbounds %struct.yy_buffer_state, ptr %12, i64 0, i32 4
  store i32 %11, ptr %yy_n_chars, align 4, !tbaa !13
  %inc = add i64 %4, 1
  store i64 %inc, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %if.end14

if.end14:                                         ; preds = %cond.true, %if.then13
  %13 = phi i64 [ %inc, %if.then13 ], [ %4, %cond.true ]
  %arrayidx15 = getelementptr inbounds ptr, ptr %5, i64 %13
  store ptr %new_buffer, ptr %arrayidx15, align 8, !tbaa !5
  %yy_n_chars.i = getelementptr inbounds %struct.yy_buffer_state, ptr %new_buffer, i64 0, i32 4
  %14 = load i32, ptr %yy_n_chars.i, align 4, !tbaa !13
  store i32 %14, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %yy_buf_pos.i = getelementptr inbounds %struct.yy_buffer_state, ptr %new_buffer, i64 0, i32 2
  %15 = load ptr, ptr %yy_buf_pos.i, align 8, !tbaa !15
  store ptr %15, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %15, ptr @yytext_ptr, align 8, !tbaa !5
  %16 = load ptr, ptr %arrayidx15, align 8, !tbaa !5
  %17 = load ptr, ptr %16, align 8, !tbaa !16
  store ptr %17, ptr @yyin, align 8, !tbaa !5
  %18 = load i8, ptr %15, align 1, !tbaa !17
  store i8 %18, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %return

return:                                           ; preds = %entry, %if.end14
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_Z18yypop_buffer_statev() local_unnamed_addr #9 {
entry:
  %0 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end19, label %cond.true

cond.true:                                        ; preds = %entry
  %1 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %1
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %if.end19, label %if.end4.i

if.end4.i:                                        ; preds = %cond.true
  store ptr null, ptr %arrayidx, align 8, !tbaa !5
  %yy_is_our_buffer.i = getelementptr inbounds %struct.yy_buffer_state, ptr %2, i64 0, i32 5
  %4 = load i32, ptr %yy_is_our_buffer.i, align 8, !tbaa !53
  %tobool5.not.i = icmp eq i32 %4, 0
  br i1 %tobool5.not.i, label %_Z16yy_delete_bufferP15yy_buffer_state.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.end4.i
  %yy_ch_buf.i = getelementptr inbounds %struct.yy_buffer_state, ptr %2, i64 0, i32 1
  %5 = load ptr, ptr %yy_ch_buf.i, align 8, !tbaa !47
  tail call void @free(ptr noundef %5) #33
  br label %_Z16yy_delete_bufferP15yy_buffer_state.exit

_Z16yy_delete_bufferP15yy_buffer_state.exit:      ; preds = %if.end4.i, %if.then6.i
  tail call void @free(ptr noundef nonnull %2) #33
  store ptr null, ptr %arrayidx, align 8, !tbaa !5
  %cmp.not = icmp eq i64 %1, 0
  br i1 %cmp.not, label %if.end19, label %cond.true12

cond.true12:                                      ; preds = %_Z16yy_delete_bufferP15yy_buffer_state.exit
  %dec = add i64 %1, -1
  store i64 %dec, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx13.phi.trans.insert = getelementptr inbounds ptr, ptr %0, i64 %dec
  %.pre = load ptr, ptr %arrayidx13.phi.trans.insert, align 8, !tbaa !5
  %6 = icmp eq ptr %.pre, null
  br i1 %6, label %if.end19, label %if.then18

if.then18:                                        ; preds = %cond.true12
  %arrayidx13 = getelementptr inbounds ptr, ptr %0, i64 %dec
  %yy_n_chars.i = getelementptr inbounds %struct.yy_buffer_state, ptr %.pre, i64 0, i32 4
  %7 = load i32, ptr %yy_n_chars.i, align 4, !tbaa !13
  store i32 %7, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %yy_buf_pos.i = getelementptr inbounds %struct.yy_buffer_state, ptr %.pre, i64 0, i32 2
  %8 = load ptr, ptr %yy_buf_pos.i, align 8, !tbaa !15
  store ptr %8, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store ptr %8, ptr @yytext_ptr, align 8, !tbaa !5
  %9 = load ptr, ptr %arrayidx13, align 8, !tbaa !5
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  store ptr %10, ptr @yyin, align 8, !tbaa !5
  %11 = load i8, ptr %8, align 1, !tbaa !17
  store i8 %11, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  br label %if.end19

if.end19:                                         ; preds = %_Z16yy_delete_bufferP15yy_buffer_state.exit, %entry, %cond.true, %if.then18, %cond.true12
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z14yy_scan_bufferPcj(ptr noundef %base, i32 noundef %size) local_unnamed_addr #4 {
entry:
  %cmp = icmp ult i32 %size, 2
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %sub = add i32 %size, -2
  %idxprom = zext i32 %sub to i64
  %arrayidx = getelementptr inbounds i8, ptr %base, i64 %idxprom
  %0 = load i8, ptr %arrayidx, align 1, !tbaa !17
  %cmp1.not = icmp eq i8 %0, 0
  br i1 %cmp1.not, label %lor.lhs.false2, label %cleanup

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %sub3 = add i32 %size, -1
  %idxprom4 = zext i32 %sub3 to i64
  %arrayidx5 = getelementptr inbounds i8, ptr %base, i64 %idxprom4
  %1 = load i8, ptr %arrayidx5, align 1, !tbaa !17
  %cmp7.not = icmp eq i8 %1, 0
  br i1 %cmp7.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false2
  %call.i = tail call noalias dereferenceable_or_null(64) ptr @malloc(i64 noundef 64) #29
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %2 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i30 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.21) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.end9:                                          ; preds = %if.end
  %yy_buf_size = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 3
  store i32 %sub, ptr %yy_buf_size, align 8, !tbaa !52
  %yy_ch_buf = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 1
  store ptr %base, ptr %yy_ch_buf, align 8, !tbaa !47
  %yy_buf_pos = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 2
  store ptr %base, ptr %yy_buf_pos, align 8, !tbaa !15
  %yy_is_our_buffer = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 5
  store i32 0, ptr %yy_is_our_buffer, align 8, !tbaa !53
  store ptr null, ptr %call.i, align 8, !tbaa !16
  %yy_n_chars = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 4
  store i32 %sub, ptr %yy_n_chars, align 4, !tbaa !13
  %yy_is_interactive = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 6
  store i32 0, ptr %yy_is_interactive, align 4, !tbaa !57
  %yy_at_bol = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 7
  store i32 1, ptr %yy_at_bol, align 8, !tbaa !18
  %yy_fill_buffer = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 10
  store i32 0, ptr %yy_fill_buffer, align 4, !tbaa !54
  %yy_buffer_status = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i, i64 0, i32 11
  store i32 0, ptr %yy_buffer_status, align 8, !tbaa !46
  tail call void @_Z19yy_switch_to_bufferP15yy_buffer_state(ptr noundef nonnull %call.i)
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %lor.lhs.false2, %if.end9
  %retval.0 = phi ptr [ %call.i, %if.end9 ], [ null, %lor.lhs.false2 ], [ null, %lor.lhs.false ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z14yy_scan_stringPKc(ptr nocapture noundef readonly %yy_str) local_unnamed_addr #4 {
entry:
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %yy_str) #35
  %conv = trunc i64 %call to i32
  %call1 = tail call noundef ptr @_Z13yy_scan_bytesPKci(ptr noundef %yy_str, i32 noundef %conv)
  ret ptr %call1
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_Z13yy_scan_bytesPKci(ptr nocapture noundef readonly %bytes, i32 noundef %len) local_unnamed_addr #4 {
entry:
  %add = add nsw i32 %len, 2
  %conv.i = zext i32 %add to i64
  %call.i = tail call noalias ptr @malloc(i64 noundef %conv.i) #29
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp30 = icmp sgt i32 %len, 0
  br i1 %cmp30, label %for.end.thread, label %for.end

for.end.thread:                                   ; preds = %for.cond.preheader
  %0 = zext i32 %len to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %call.i, ptr align 1 %bytes, i64 %0, i1 false), !tbaa !17
  %add333 = add nuw i32 %len, 1
  %idxprom434 = sext i32 %add333 to i64
  %arrayidx535 = getelementptr inbounds i8, ptr %call.i, i64 %idxprom434
  store i8 0, ptr %arrayidx535, align 1, !tbaa !17
  %idxprom636 = zext i32 %len to i64
  %arrayidx737 = getelementptr inbounds i8, ptr %call.i, i64 %idxprom636
  store i8 0, ptr %arrayidx737, align 1, !tbaa !17
  br label %lor.lhs.false.i

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i25 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.22) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

for.end:                                          ; preds = %for.cond.preheader
  %add3 = add nsw i32 %len, 1
  %idxprom4 = sext i32 %add3 to i64
  %arrayidx5 = getelementptr inbounds i8, ptr %call.i, i64 %idxprom4
  store i8 0, ptr %arrayidx5, align 1, !tbaa !17
  %idxprom6 = sext i32 %len to i64
  %arrayidx7 = getelementptr inbounds i8, ptr %call.i, i64 %idxprom6
  store i8 0, ptr %arrayidx7, align 1, !tbaa !17
  %cmp.i = icmp ugt i32 %len, -3
  br i1 %cmp.i, label %if.then10, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.end.thread, %for.end
  %add339 = phi i32 [ %add333, %for.end.thread ], [ %add3, %for.end ]
  %idxprom.i = zext i32 %len to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %call.i, i64 %idxprom.i
  %2 = load i8, ptr %arrayidx.i, align 1, !tbaa !17
  %cmp1.not.i = icmp eq i8 %2, 0
  br i1 %cmp1.not.i, label %lor.lhs.false2.i, label %if.then10

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  %idxprom4.i = zext i32 %add339 to i64
  %arrayidx5.i = getelementptr inbounds i8, ptr %call.i, i64 %idxprom4.i
  %3 = load i8, ptr %arrayidx5.i, align 1, !tbaa !17
  %cmp7.not.i = icmp eq i8 %3, 0
  br i1 %cmp7.not.i, label %if.end.i, label %if.then10

if.end.i:                                         ; preds = %lor.lhs.false2.i
  %call.i.i = tail call noalias dereferenceable_or_null(64) ptr @malloc(i64 noundef 64) #29
  %tobool.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i, label %if.then8.i, label %if.end11

if.then8.i:                                       ; preds = %if.end.i
  %4 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i30.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.21) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.then10:                                        ; preds = %lor.lhs.false2.i, %lor.lhs.false.i, %for.end
  %5 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call.i26 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.23) #31
  tail call void @exit(i32 noundef 2) #32
  unreachable

if.end11:                                         ; preds = %if.end.i
  %yy_buf_size.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 3
  store i32 %len, ptr %yy_buf_size.i, align 8, !tbaa !52
  %yy_ch_buf.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 1
  store ptr %call.i, ptr %yy_ch_buf.i, align 8, !tbaa !47
  %yy_buf_pos.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 2
  store ptr %call.i, ptr %yy_buf_pos.i, align 8, !tbaa !15
  %yy_is_our_buffer.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 5
  store i32 0, ptr %yy_is_our_buffer.i, align 8, !tbaa !53
  store ptr null, ptr %call.i.i, align 8, !tbaa !16
  %yy_n_chars.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 4
  store i32 %len, ptr %yy_n_chars.i, align 4, !tbaa !13
  %yy_is_interactive.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 6
  store i32 0, ptr %yy_is_interactive.i, align 4, !tbaa !57
  %yy_at_bol.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 7
  store i32 1, ptr %yy_at_bol.i, align 8, !tbaa !18
  %yy_fill_buffer.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 10
  store i32 0, ptr %yy_fill_buffer.i, align 4, !tbaa !54
  %yy_buffer_status.i = getelementptr inbounds %struct.yy_buffer_state, ptr %call.i.i, i64 0, i32 11
  store i32 0, ptr %yy_buffer_status.i, align 8, !tbaa !46
  tail call void @_Z19yy_switch_to_bufferP15yy_buffer_state(ptr noundef nonnull %call.i.i)
  store i32 1, ptr %yy_is_our_buffer.i, align 8, !tbaa !53
  ret ptr %call.i.i
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z12yyget_linenov() local_unnamed_addr #13 {
entry:
  %0 = load i32, ptr @yylineno, align 4, !tbaa !9
  ret i32 %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef ptr @_Z8yyget_inv() local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr @yyin, align 8, !tbaa !5
  ret ptr %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef ptr @_Z9yyget_outv() local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr @yyout, align 8, !tbaa !5
  ret ptr %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z10yyget_lengv() local_unnamed_addr #13 {
entry:
  %0 = load i32, ptr @yyleng, align 4, !tbaa !9
  ret i32 %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @_Z10yyget_textv() local_unnamed_addr #14 {
entry:
  ret ptr @yytext
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z12yyset_linenoi(i32 noundef %line_number) local_unnamed_addr #15 {
entry:
  store i32 %line_number, ptr @yylineno, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z8yyset_inP8_IO_FILE(ptr noundef %in_str) local_unnamed_addr #15 {
entry:
  store ptr %in_str, ptr @yyin, align 8, !tbaa !5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z9yyset_outP8_IO_FILE(ptr noundef %out_str) local_unnamed_addr #15 {
entry:
  store ptr %out_str, ptr @yyout, align 8, !tbaa !5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z11yyget_debugv() local_unnamed_addr #13 {
entry:
  %0 = load i32, ptr @yy_flex_debug, align 4, !tbaa !9
  ret i32 %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z11yyset_debugi(i32 noundef %bdebug) local_unnamed_addr #15 {
entry:
  store i32 %bdebug, ptr @yy_flex_debug, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef i32 @_Z13yylex_destroyv() local_unnamed_addr #4 {
entry:
  %.pr = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %tobool.not15 = icmp eq ptr %.pr, null
  br i1 %tobool.not15, label %while.end, label %cond.end.preheader

cond.end.preheader:                               ; preds = %entry
  %.pre = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx.phi.trans.insert = getelementptr inbounds ptr, ptr %.pr, i64 %.pre
  %.pre17 = load ptr, ptr %arrayidx.phi.trans.insert, align 8, !tbaa !5
  %tobool1.not28 = icmp eq ptr %.pre17, null
  br i1 %tobool1.not28, label %while.end, label %if.end4.i

if.end4.i:                                        ; preds = %cond.end.preheader
  %arrayidx = getelementptr inbounds ptr, ptr %.pr, i64 %.pre
  store ptr null, ptr %arrayidx, align 8, !tbaa !5
  %yy_is_our_buffer.i = getelementptr inbounds %struct.yy_buffer_state, ptr %.pre17, i64 0, i32 5
  %0 = load i32, ptr %yy_is_our_buffer.i, align 8, !tbaa !53
  %tobool5.not.i = icmp eq i32 %0, 0
  br i1 %tobool5.not.i, label %_Z16yy_delete_bufferP15yy_buffer_state.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.end4.i
  %yy_ch_buf.i = getelementptr inbounds %struct.yy_buffer_state, ptr %.pre17, i64 0, i32 1
  %1 = load ptr, ptr %yy_ch_buf.i, align 8, !tbaa !47
  tail call void @free(ptr noundef %1) #33
  %.pre18.pre = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %.pre19.pre = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  br label %_Z16yy_delete_bufferP15yy_buffer_state.exit

_Z16yy_delete_bufferP15yy_buffer_state.exit:      ; preds = %if.end4.i, %if.then6.i
  %.pre19 = phi i64 [ %.pre19.pre, %if.then6.i ], [ %.pre, %if.end4.i ]
  %.pre18 = phi ptr [ %.pre18.pre, %if.then6.i ], [ %.pr, %if.end4.i ]
  tail call void @free(ptr noundef nonnull %.pre17) #33
  %arrayidx8 = getelementptr inbounds ptr, ptr %.pre18, i64 %.pre19
  store ptr null, ptr %arrayidx8, align 8, !tbaa !5
  br label %while.end

while.end:                                        ; preds = %cond.end.preheader, %_Z16yy_delete_bufferP15yy_buffer_state.exit, %entry
  %.lcssa = phi ptr [ null, %entry ], [ %.pre18, %_Z16yy_delete_bufferP15yy_buffer_state.exit ], [ %.pr, %cond.end.preheader ]
  tail call void @free(ptr noundef %.lcssa) #33
  store ptr null, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %2 = load ptr, ptr @_ZL12yy_state_buf, align 8, !tbaa !5
  tail call void @free(ptr noundef %2) #33
  ret i32 0
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local noalias noundef ptr @_Z9yyreallocPvj(ptr nocapture noundef %ptr, i32 noundef %size) local_unnamed_addr #10 {
entry:
  %conv = zext i32 %size to i64
  %call = tail call ptr @realloc(ptr noundef %ptr, i64 noundef %conv) #30
  ret ptr %call
}

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9do_NORMALv() local_unnamed_addr #2 {
entry:
  store i32 3, ptr @_ZL8yy_start, align 4, !tbaa !9
  tail call fastcc void @_ZN12_GLOBAL__N_115reset_nestcountEv()
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z8do_CEXPRv() local_unnamed_addr #15 {
entry:
  store i32 9, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z10do_CEXPRDQv() local_unnamed_addr #15 {
entry:
  store i32 11, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z10do_CEXPRSQv() local_unnamed_addr #15 {
entry:
  store i32 13, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @_Z4do_Cv() local_unnamed_addr #15 {
entry:
  store i32 15, ptr @_ZL8yy_start, align 4, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nofree nounwind memory(read)
declare noundef i32 @ferror(ptr nocapture noundef) local_unnamed_addr #20

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__errno_location() local_unnamed_addr #21

; Function Attrs: nofree nounwind
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @clearerr(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #22

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #23

declare noundef ptr @_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef, ptr noundef) local_unnamed_addr #7

declare noundef ptr @_ZN2kc13PosNoFileLineEv() local_unnamed_addr #7

; Function Attrs: mustprogress nounwind uwtable
define internal fastcc noundef i32 @_ZL7yyinputv() unnamed_addr #4 {
entry:
  %0 = load i8, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %1 = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  store i8 %0, ptr %1, align 1, !tbaa !17
  %cmp = icmp eq i8 %0, 0
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %3 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %3
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %yy_ch_buf = getelementptr inbounds %struct.yy_buffer_state, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %yy_ch_buf, align 8, !tbaa !47
  %6 = load i32, ptr @_ZL10yy_n_chars, align 4, !tbaa !9
  %idxprom = sext i32 %6 to i64
  %arrayidx1 = getelementptr inbounds i8, ptr %5, i64 %idxprom
  %cmp2 = icmp ult ptr %1, %arrayidx1
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  store i8 0, ptr %1, align 1, !tbaa !17
  br label %if.end7

if.else:                                          ; preds = %if.then
  %7 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %incdec.ptr = getelementptr inbounds i8, ptr %1, i64 1
  store ptr %incdec.ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %call = tail call fastcc noundef i32 @_ZL18yy_get_next_bufferv(), !range !51
  switch i32 %call, label %if.else.if.end7_crit_edge [
    i32 2, label %sw.bb
    i32 1, label %cleanup17
    i32 0, label %sw.bb6
  ]

if.else.if.end7_crit_edge:                        ; preds = %if.else
  %.pre = load ptr, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  br label %if.end7thread-pre-split

sw.bb:                                            ; preds = %if.else
  %8 = load ptr, ptr @yyin, align 8, !tbaa !5
  tail call void @_Z9yyrestartP8_IO_FILE(ptr noundef %8)
  br label %cleanup17

sw.bb6:                                           ; preds = %if.else
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %9 = load ptr, ptr @yytext_ptr, align 8, !tbaa !5
  %sext = shl i64 %sub.ptr.sub, 32
  %idx.ext = ashr exact i64 %sext, 32
  %add.ptr = getelementptr inbounds i8, ptr %9, i64 %idx.ext
  br label %if.end7thread-pre-split

if.end7thread-pre-split:                          ; preds = %sw.bb6, %if.else.if.end7_crit_edge
  %.ph = phi ptr [ %add.ptr, %sw.bb6 ], [ %.pre, %if.else.if.end7_crit_edge ]
  %.pr = load i8, ptr %.ph, align 1, !tbaa !17
  br label %if.end7

if.end7:                                          ; preds = %if.end7thread-pre-split, %if.then3, %entry
  %10 = phi i8 [ %.pr, %if.end7thread-pre-split ], [ 0, %if.then3 ], [ %0, %entry ]
  %11 = phi ptr [ %.ph, %if.end7thread-pre-split ], [ %1, %if.then3 ], [ %1, %entry ]
  %conv8 = zext i8 %10 to i32
  store i8 0, ptr %11, align 1, !tbaa !17
  %incdec.ptr9 = getelementptr inbounds i8, ptr %11, i64 1
  store ptr %incdec.ptr9, ptr @_ZL10yy_c_buf_p, align 8, !tbaa !5
  %12 = load i8, ptr %incdec.ptr9, align 1, !tbaa !17
  store i8 %12, ptr @_ZL12yy_hold_char, align 1, !tbaa !17
  %cmp10 = icmp eq i8 %10, 10
  %conv11 = zext i1 %cmp10 to i32
  %13 = load ptr, ptr @_ZL15yy_buffer_stack, align 8, !tbaa !5
  %14 = load i64, ptr @_ZL19yy_buffer_stack_top, align 8, !tbaa !11
  %arrayidx12 = getelementptr inbounds ptr, ptr %13, i64 %14
  %15 = load ptr, ptr %arrayidx12, align 8, !tbaa !5
  %yy_at_bol = getelementptr inbounds %struct.yy_buffer_state, ptr %15, i64 0, i32 7
  store i32 %conv11, ptr %yy_at_bol, align 8, !tbaa !18
  br i1 %cmp10, label %if.then15, label %cleanup17

if.then15:                                        ; preds = %if.end7
  %16 = load i32, ptr @yylineno, align 4, !tbaa !9
  %inc = add nsw i32 %16, 1
  store i32 %inc, ptr @yylineno, align 4, !tbaa !9
  br label %cleanup17

cleanup17:                                        ; preds = %if.end7, %if.then15, %if.else, %sw.bb
  %retval.1 = phi i32 [ -1, %sw.bb ], [ -1, %if.else ], [ 10, %if.then15 ], [ %conv8, %if.end7 ]
  ret i32 %retval.1
}

declare noundef ptr @_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #24

; Function Attrs: nounwind
declare noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef) local_unnamed_addr #25

; Function Attrs: nofree nounwind uwtable
define internal void @_GLOBAL__sub_I_kimwl.cc() #26 section ".text.startup" personality ptr @__gxx_personality_v0 {
entry:
  store ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 0, i32 2), ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, align 8, !tbaa !67
  store i64 0, ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 0, i32 1), align 8, !tbaa !68
  store i8 0, ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN12_GLOBAL__N_18cincludeB5cxx11E, i64 0, i32 2), align 8, !tbaa !17
  %0 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, ptr nonnull @_ZN12_GLOBAL__N_18cincludeB5cxx11E, ptr nonnull @__dso_handle) #33
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #27

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #28

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind }
attributes #2 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress noreturn nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nounwind willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nofree nounwind memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree nosync nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #23 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #25 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #28 = { nofree nounwind willreturn memory(argmem: read) }
attributes #29 = { nounwind allocsize(0) }
attributes #30 = { nounwind allocsize(1) }
attributes #31 = { cold }
attributes #32 = { noreturn nounwind }
attributes #33 = { nounwind }
attributes #34 = { nounwind willreturn memory(none) }
attributes #35 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !7, i64 0}
!11 = !{!12, !12, i64 0}
!12 = !{!"long", !7, i64 0}
!13 = !{!14, !10, i64 28}
!14 = !{!"_ZTS15yy_buffer_state", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !10, i64 48, !10, i64 52, !10, i64 56}
!15 = !{!14, !6, i64 16}
!16 = !{!14, !6, i64 0}
!17 = !{!7, !7, i64 0}
!18 = !{!14, !10, i64 40}
!19 = !{!20, !20, i64 0}
!20 = !{!"short", !7, i64 0}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.mustprogress"}
!23 = distinct !{!23, !22}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !22, !26, !27}
!26 = !{!"llvm.loop.isvectorized", i32 1}
!27 = !{!"llvm.loop.unroll.runtime.disable"}
!28 = distinct !{!28, !22, !26, !27}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.disable"}
!31 = distinct !{!31, !22, !26}
!32 = distinct !{!32, !22}
!33 = !{!34, !6, i64 0}
!34 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !35, i64 0, !12, i64 8, !7, i64 16}
!35 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!36 = distinct !{!36, !22}
!37 = !{!38, !39, i64 66}
!38 = !{!"_ZTS15cmdline_options", !34, i64 0, !34, i64 32, !39, i64 64, !39, i64 65, !39, i64 66, !39, i64 67, !39, i64 68, !39, i64 69, !39, i64 70, !39, i64 71, !39, i64 72, !39, i64 73, !7, i64 74, !34, i64 80, !39, i64 112, !39, i64 113, !39, i64 114, !39, i64 115, !34, i64 120, !34, i64 152, !34, i64 184, !34, i64 216, !34, i64 248, !34, i64 280, !34, i64 312, !39, i64 344, !39, i64 345, !39, i64 346}
!39 = !{!"bool", !7, i64 0}
!40 = !{!38, !39, i64 67}
!41 = !{!38, !39, i64 68}
!42 = !{!38, !39, i64 69}
!43 = !{!38, !39, i64 70}
!44 = !{!38, !39, i64 72}
!45 = !{!38, !39, i64 73}
!46 = !{!14, !10, i64 56}
!47 = !{!14, !6, i64 8}
!48 = distinct !{!48, !22}
!49 = distinct !{!49, !22}
!50 = distinct !{!50, !22}
!51 = !{i32 0, i32 3}
!52 = !{!14, !10, i64 24}
!53 = !{!14, !10, i64 32}
!54 = !{!14, !10, i64 52}
!55 = !{!14, !10, i64 44}
!56 = !{!14, !10, i64 48}
!57 = !{!14, !10, i64 36}
!58 = distinct !{!58, !22}
!59 = !{i32 -1, i32 256}
!60 = distinct !{!60, !22}
!61 = distinct !{!61, !22}
!62 = distinct !{!62, !22, !26, !27}
!63 = distinct !{!63, !22, !26, !27}
!64 = distinct !{!64, !22, !26}
!65 = distinct !{!65, !22}
!66 = distinct !{!66, !22}
!67 = !{!35, !6, i64 0}
!68 = !{!34, !12, i64 8}
